/******/ (function (modules) {
  // webpackBootstrap
  /******/ // The module cache
  /******/ var installedModules = {}; // The require function
  /******/
  /******/ /******/ function __webpack_require__(moduleId) {
    /******/
    /******/ // Check if module is in cache
    /******/ if (installedModules[moduleId]) {
      /******/ return installedModules[moduleId].exports;
      /******/
    } // Create a new module (and put it into the cache)
    /******/ /******/ var module = (installedModules[moduleId] = {
      /******/ i: moduleId,
      /******/ l: false,
      /******/ exports: {},
      /******/
    }); // Execute the module function
    /******/
    /******/ /******/ modules[moduleId].call(
      module.exports,
      module,
      module.exports,
      __webpack_require__
    ); // Flag the module as loaded
    /******/
    /******/ /******/ module.l = true; // Return the exports of the module
    /******/
    /******/ /******/ return module.exports;
    /******/
  } // expose the modules object (__webpack_modules__)
  /******/
  /******/
  /******/ /******/ __webpack_require__.m = modules; // expose the module cache
  /******/
  /******/ /******/ __webpack_require__.c = installedModules; // define getter function for harmony exports
  /******/
  /******/ /******/ __webpack_require__.d = function (exports, name, getter) {
    /******/ if (!__webpack_require__.o(exports, name)) {
      /******/ Object.defineProperty(exports, name, {
        enumerable: true,
        get: getter,
      });
      /******/
    }
    /******/
  }; // define __esModule on exports
  /******/
  /******/ /******/ __webpack_require__.r = function (exports) {
    /******/ if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {
      /******/ Object.defineProperty(exports, Symbol.toStringTag, {
        value: 'Module',
      });
      /******/
    }
    /******/ Object.defineProperty(exports, '__esModule', { value: true });
    /******/
  }; // create a fake namespace object // mode & 1: value is a module id, require it // mode & 2: merge all properties of value into the ns // mode & 4: return value when already ns object // mode & 8|1: behave like require
  /******/
  /******/ /******/ /******/ /******/ /******/ /******/ __webpack_require__.t = function (
    value,
    mode
  ) {
    /******/ if (mode & 1) value = __webpack_require__(value);
    /******/ if (mode & 8) return value;
    /******/ if (
      mode & 4 &&
      typeof value === 'object' &&
      value &&
      value.__esModule
    )
      return value;
    /******/ var ns = Object.create(null);
    /******/ __webpack_require__.r(ns);
    /******/ Object.defineProperty(ns, 'default', {
      enumerable: true,
      value: value,
    });
    /******/ if (mode & 2 && typeof value != 'string')
      for (var key in value)
        __webpack_require__.d(
          ns,
          key,
          function (key) {
            return value[key];
          }.bind(null, key)
        );
    /******/ return ns;
    /******/
  }; // getDefaultExport function for compatibility with non-harmony modules
  /******/
  /******/ /******/ __webpack_require__.n = function (module) {
    /******/ var getter =
      module && module.__esModule
        ? /******/ function getDefault() {
            return module['default'];
          }
        : /******/ function getModuleExports() {
            return module;
          };
    /******/ __webpack_require__.d(getter, 'a', getter);
    /******/ return getter;
    /******/
  }; // Object.prototype.hasOwnProperty.call
  /******/
  /******/ /******/ __webpack_require__.o = function (object, property) {
    return Object.prototype.hasOwnProperty.call(object, property);
  }; // __webpack_public_path__
  /******/
  /******/ /******/ __webpack_require__.p = '/dist'; // Load entry module and return exports
  /******/
  /******/
  /******/ /******/ return __webpack_require__((__webpack_require__.s = 0));
  /******/
})(
  /************************************************************************/
  /******/ {
    /***/ '../node_modules/@babel/runtime/helpers/arrayLikeToArray.js':
      /*!******************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/arrayLikeToArray.js ***!
  \******************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _arrayLikeToArray(arr, len) {
          if (len == null || len > arr.length) len = arr.length;

          for (var i = 0, arr2 = new Array(len); i < len; i++) {
            arr2[i] = arr[i];
          }

          return arr2;
        }

        module.exports = _arrayLikeToArray;

        /***/
      },

    /***/ '../node_modules/@babel/runtime/helpers/arrayWithHoles.js':
      /*!****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \****************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _arrayWithHoles(arr) {
          if (Array.isArray(arr)) return arr;
        }

        module.exports = _arrayWithHoles;

        /***/
      },

    /***/ '../node_modules/@babel/runtime/helpers/assertThisInitialized.js':
      /*!***********************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/assertThisInitialized.js ***!
  \***********************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _assertThisInitialized(self) {
          if (self === void 0) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }

          return self;
        }

        module.exports = _assertThisInitialized;

        /***/
      },

    /***/ '../node_modules/@babel/runtime/helpers/asyncToGenerator.js':
      /*!******************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \******************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function asyncGeneratorStep(
          gen,
          resolve,
          reject,
          _next,
          _throw,
          key,
          arg
        ) {
          try {
            var info = gen[key](arg);
            var value = info.value;
          } catch (error) {
            reject(error);
            return;
          }

          if (info.done) {
            resolve(value);
          } else {
            Promise.resolve(value).then(_next, _throw);
          }
        }

        function _asyncToGenerator(fn) {
          return function () {
            var self = this,
              args = arguments;
            return new Promise(function (resolve, reject) {
              var gen = fn.apply(self, args);

              function _next(value) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'next',
                  value
                );
              }

              function _throw(err) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'throw',
                  err
                );
              }

              _next(undefined);
            });
          };
        }

        module.exports = _asyncToGenerator;

        /***/
      },

    /***/ '../node_modules/@babel/runtime/helpers/classCallCheck.js':
      /*!****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \****************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        module.exports = _classCallCheck;

        /***/
      },

    /***/ '../node_modules/@babel/runtime/helpers/construct.js':
      /*!***********************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/construct.js ***!
  \***********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var setPrototypeOf = __webpack_require__(
          /*! ./setPrototypeOf */ '../node_modules/@babel/runtime/helpers/setPrototypeOf.js'
        );

        var isNativeReflectConstruct = __webpack_require__(
          /*! ./isNativeReflectConstruct */ '../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js'
        );

        function _construct(Parent, args, Class) {
          if (isNativeReflectConstruct()) {
            module.exports = _construct = Reflect.construct;
          } else {
            module.exports = _construct = function _construct(
              Parent,
              args,
              Class
            ) {
              var a = [null];
              a.push.apply(a, args);
              var Constructor = Function.bind.apply(Parent, a);
              var instance = new Constructor();
              if (Class) setPrototypeOf(instance, Class.prototype);
              return instance;
            };
          }

          return _construct.apply(null, arguments);
        }

        module.exports = _construct;

        /***/
      },

    /***/ '../node_modules/@babel/runtime/helpers/createClass.js':
      /*!*************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/createClass.js ***!
  \*************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          return Constructor;
        }

        module.exports = _createClass;

        /***/
      },

    /***/ '../node_modules/@babel/runtime/helpers/defineProperty.js':
      /*!****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \****************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _defineProperty(obj, key, value) {
          if (key in obj) {
            Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true,
            });
          } else {
            obj[key] = value;
          }

          return obj;
        }

        module.exports = _defineProperty;

        /***/
      },

    /***/ '../node_modules/@babel/runtime/helpers/get.js':
      /*!*****************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/get.js ***!
  \*****************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var superPropBase = __webpack_require__(
          /*! ./superPropBase */ '../node_modules/@babel/runtime/helpers/superPropBase.js'
        );

        function _get(target, property, receiver) {
          if (typeof Reflect !== 'undefined' && Reflect.get) {
            module.exports = _get = Reflect.get;
          } else {
            module.exports = _get = function _get(target, property, receiver) {
              var base = superPropBase(target, property);
              if (!base) return;
              var desc = Object.getOwnPropertyDescriptor(base, property);

              if (desc.get) {
                return desc.get.call(receiver);
              }

              return desc.value;
            };
          }

          return _get(target, property, receiver || target);
        }

        module.exports = _get;

        /***/
      },

    /***/ '../node_modules/@babel/runtime/helpers/getPrototypeOf.js':
      /*!****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/getPrototypeOf.js ***!
  \****************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _getPrototypeOf(o) {
          module.exports = _getPrototypeOf = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function _getPrototypeOf(o) {
                return o.__proto__ || Object.getPrototypeOf(o);
              };
          return _getPrototypeOf(o);
        }

        module.exports = _getPrototypeOf;

        /***/
      },

    /***/ '../node_modules/@babel/runtime/helpers/inherits.js':
      /*!**********************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/inherits.js ***!
  \**********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var setPrototypeOf = __webpack_require__(
          /*! ./setPrototypeOf */ '../node_modules/@babel/runtime/helpers/setPrototypeOf.js'
        );

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function'
            );
          }

          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass) setPrototypeOf(subClass, superClass);
        }

        module.exports = _inherits;

        /***/
      },

    /***/ '../node_modules/@babel/runtime/helpers/isNativeFunction.js':
      /*!******************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/isNativeFunction.js ***!
  \******************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _isNativeFunction(fn) {
          return Function.toString.call(fn).indexOf('[native code]') !== -1;
        }

        module.exports = _isNativeFunction;

        /***/
      },

    /***/ '../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js':
      /*!**************************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js ***!
  \**************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct)
            return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;

          try {
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            );
            return true;
          } catch (e) {
            return false;
          }
        }

        module.exports = _isNativeReflectConstruct;

        /***/
      },

    /***/ '../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js':
      /*!**********************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \**********************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _iterableToArrayLimit(arr, i) {
          if (
            typeof Symbol === 'undefined' ||
            !(Symbol.iterator in Object(arr))
          )
            return;
          var _arr = [];
          var _n = true;
          var _d = false;
          var _e = undefined;

          try {
            for (
              var _i = arr[Symbol.iterator](), _s;
              !(_n = (_s = _i.next()).done);
              _n = true
            ) {
              _arr.push(_s.value);

              if (i && _arr.length === i) break;
            }
          } catch (err) {
            _d = true;
            _e = err;
          } finally {
            try {
              if (!_n && _i['return'] != null) _i['return']();
            } finally {
              if (_d) throw _e;
            }
          }

          return _arr;
        }

        module.exports = _iterableToArrayLimit;

        /***/
      },

    /***/ '../node_modules/@babel/runtime/helpers/nonIterableRest.js':
      /*!*****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \*****************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _nonIterableRest() {
          throw new TypeError(
            'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
          );
        }

        module.exports = _nonIterableRest;

        /***/
      },

    /***/ '../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js':
      /*!***************************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js ***!
  \***************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var _typeof = __webpack_require__(
          /*! ../helpers/typeof */ '../node_modules/@babel/runtime/helpers/typeof.js'
        );

        var assertThisInitialized = __webpack_require__(
          /*! ./assertThisInitialized */ '../node_modules/@babel/runtime/helpers/assertThisInitialized.js'
        );

        function _possibleConstructorReturn(self, call) {
          if (
            call &&
            (_typeof(call) === 'object' || typeof call === 'function')
          ) {
            return call;
          }

          return assertThisInitialized(self);
        }

        module.exports = _possibleConstructorReturn;

        /***/
      },

    /***/ '../node_modules/@babel/runtime/helpers/setPrototypeOf.js':
      /*!****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
  \****************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _setPrototypeOf(o, p) {
          module.exports = _setPrototypeOf =
            Object.setPrototypeOf ||
            function _setPrototypeOf(o, p) {
              o.__proto__ = p;
              return o;
            };

          return _setPrototypeOf(o, p);
        }

        module.exports = _setPrototypeOf;

        /***/
      },

    /***/ '../node_modules/@babel/runtime/helpers/slicedToArray.js':
      /*!***************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \***************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var arrayWithHoles = __webpack_require__(
          /*! ./arrayWithHoles */ '../node_modules/@babel/runtime/helpers/arrayWithHoles.js'
        );

        var iterableToArrayLimit = __webpack_require__(
          /*! ./iterableToArrayLimit */ '../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js'
        );

        var unsupportedIterableToArray = __webpack_require__(
          /*! ./unsupportedIterableToArray */ '../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js'
        );

        var nonIterableRest = __webpack_require__(
          /*! ./nonIterableRest */ '../node_modules/@babel/runtime/helpers/nonIterableRest.js'
        );

        function _slicedToArray(arr, i) {
          return (
            arrayWithHoles(arr) ||
            iterableToArrayLimit(arr, i) ||
            unsupportedIterableToArray(arr, i) ||
            nonIterableRest()
          );
        }

        module.exports = _slicedToArray;

        /***/
      },

    /***/ '../node_modules/@babel/runtime/helpers/superPropBase.js':
      /*!***************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/superPropBase.js ***!
  \***************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var getPrototypeOf = __webpack_require__(
          /*! ./getPrototypeOf */ '../node_modules/@babel/runtime/helpers/getPrototypeOf.js'
        );

        function _superPropBase(object, property) {
          while (!Object.prototype.hasOwnProperty.call(object, property)) {
            object = getPrototypeOf(object);
            if (object === null) break;
          }

          return object;
        }

        module.exports = _superPropBase;

        /***/
      },

    /***/ '../node_modules/@babel/runtime/helpers/typeof.js':
      /*!********************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/typeof.js ***!
  \********************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _typeof(obj) {
          '@babel/helpers - typeof';

          if (
            typeof Symbol === 'function' &&
            typeof Symbol.iterator === 'symbol'
          ) {
            module.exports = _typeof = function _typeof(obj) {
              return typeof obj;
            };
          } else {
            module.exports = _typeof = function _typeof(obj) {
              return obj &&
                typeof Symbol === 'function' &&
                obj.constructor === Symbol &&
                obj !== Symbol.prototype
                ? 'symbol'
                : typeof obj;
            };
          }

          return _typeof(obj);
        }

        module.exports = _typeof;

        /***/
      },

    /***/ '../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js':
      /*!****************************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js ***!
  \****************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var arrayLikeToArray = __webpack_require__(
          /*! ./arrayLikeToArray */ '../node_modules/@babel/runtime/helpers/arrayLikeToArray.js'
        );

        function _unsupportedIterableToArray(o, minLen) {
          if (!o) return;
          if (typeof o === 'string') return arrayLikeToArray(o, minLen);
          var n = Object.prototype.toString.call(o).slice(8, -1);
          if (n === 'Object' && o.constructor) n = o.constructor.name;
          if (n === 'Map' || n === 'Set') return Array.from(o);
          if (
            n === 'Arguments' ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
          )
            return arrayLikeToArray(o, minLen);
        }

        module.exports = _unsupportedIterableToArray;

        /***/
      },

    /***/ '../node_modules/@babel/runtime/helpers/wrapNativeSuper.js':
      /*!*****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/wrapNativeSuper.js ***!
  \*****************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var getPrototypeOf = __webpack_require__(
          /*! ./getPrototypeOf */ '../node_modules/@babel/runtime/helpers/getPrototypeOf.js'
        );

        var setPrototypeOf = __webpack_require__(
          /*! ./setPrototypeOf */ '../node_modules/@babel/runtime/helpers/setPrototypeOf.js'
        );

        var isNativeFunction = __webpack_require__(
          /*! ./isNativeFunction */ '../node_modules/@babel/runtime/helpers/isNativeFunction.js'
        );

        var construct = __webpack_require__(
          /*! ./construct */ '../node_modules/@babel/runtime/helpers/construct.js'
        );

        function _wrapNativeSuper(Class) {
          var _cache = typeof Map === 'function' ? new Map() : undefined;

          module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {
            if (Class === null || !isNativeFunction(Class)) return Class;

            if (typeof Class !== 'function') {
              throw new TypeError(
                'Super expression must either be null or a function'
              );
            }

            if (typeof _cache !== 'undefined') {
              if (_cache.has(Class)) return _cache.get(Class);

              _cache.set(Class, Wrapper);
            }

            function Wrapper() {
              return construct(
                Class,
                arguments,
                getPrototypeOf(this).constructor
              );
            }

            Wrapper.prototype = Object.create(Class.prototype, {
              constructor: {
                value: Wrapper,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            });
            return setPrototypeOf(Wrapper, Class);
          };

          return _wrapNativeSuper(Class);
        }

        module.exports = _wrapNativeSuper;

        /***/
      },

    /***/ '../node_modules/@babel/runtime/regenerator/index.js':
      /*!***********************************************************!*\
  !*** ../node_modules/@babel/runtime/regenerator/index.js ***!
  \***********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! regenerator-runtime */ '../node_modules/regenerator-runtime/runtime.js'
        );

        /***/
      },

    /***/ '../node_modules/asn1.js/lib/asn1.js':
      /*!*******************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1.js ***!
  \*******************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var asn1 = exports;

        asn1.bignum = __webpack_require__(
          /*! bn.js */ '../node_modules/asn1.js/node_modules/bn.js/lib/bn.js'
        );

        asn1.define = __webpack_require__(
          /*! ./asn1/api */ '../node_modules/asn1.js/lib/asn1/api.js'
        ).define;
        asn1.base = __webpack_require__(
          /*! ./asn1/base */ '../node_modules/asn1.js/lib/asn1/base/index.js'
        );
        asn1.constants = __webpack_require__(
          /*! ./asn1/constants */ '../node_modules/asn1.js/lib/asn1/constants/index.js'
        );
        asn1.decoders = __webpack_require__(
          /*! ./asn1/decoders */ '../node_modules/asn1.js/lib/asn1/decoders/index.js'
        );
        asn1.encoders = __webpack_require__(
          /*! ./asn1/encoders */ '../node_modules/asn1.js/lib/asn1/encoders/index.js'
        );

        /***/
      },

    /***/ '../node_modules/asn1.js/lib/asn1/api.js':
      /*!***********************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/api.js ***!
  \***********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var asn1 = __webpack_require__(
          /*! ../asn1 */ '../node_modules/asn1.js/lib/asn1.js'
        );
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );

        var api = exports;

        api.define = function define(name, body) {
          return new Entity(name, body);
        };

        function Entity(name, body) {
          this.name = name;
          this.body = body;

          this.decoders = {};
          this.encoders = {};
        }

        Entity.prototype._createNamed = function createNamed(base) {
          var named;
          try {
            named = __webpack_require__(
              /*! vm */ '../node_modules/vm-browserify/index.js'
            ).runInThisContext(
              '(function ' +
                this.name +
                '(entity) {\n' +
                '  this._initNamed(entity);\n' +
                '})'
            );
          } catch (e) {
            named = function (entity) {
              this._initNamed(entity);
            };
          }
          inherits(named, base);
          named.prototype._initNamed = function initnamed(entity) {
            base.call(this, entity);
          };

          return new named(this);
        };

        Entity.prototype._getDecoder = function _getDecoder(enc) {
          enc = enc || 'der';
          // Lazily create decoder
          if (!this.decoders.hasOwnProperty(enc))
            this.decoders[enc] = this._createNamed(asn1.decoders[enc]);
          return this.decoders[enc];
        };

        Entity.prototype.decode = function decode(data, enc, options) {
          return this._getDecoder(enc).decode(data, options);
        };

        Entity.prototype._getEncoder = function _getEncoder(enc) {
          enc = enc || 'der';
          // Lazily create encoder
          if (!this.encoders.hasOwnProperty(enc))
            this.encoders[enc] = this._createNamed(asn1.encoders[enc]);
          return this.encoders[enc];
        };

        Entity.prototype.encode = function encode(
          data,
          enc,
          /* internal */ reporter
        ) {
          return this._getEncoder(enc).encode(data, reporter);
        };

        /***/
      },

    /***/ '../node_modules/asn1.js/lib/asn1/base/buffer.js':
      /*!*******************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/base/buffer.js ***!
  \*******************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );
        var Reporter = __webpack_require__(
          /*! ../base */ '../node_modules/asn1.js/lib/asn1/base/index.js'
        ).Reporter;
        var Buffer = __webpack_require__(
          /*! buffer */ '../node_modules/buffer/index.js'
        ).Buffer;

        function DecoderBuffer(base, options) {
          Reporter.call(this, options);
          if (!Buffer.isBuffer(base)) {
            this.error('Input not Buffer');
            return;
          }

          this.base = base;
          this.offset = 0;
          this.length = base.length;
        }
        inherits(DecoderBuffer, Reporter);
        exports.DecoderBuffer = DecoderBuffer;

        DecoderBuffer.prototype.save = function save() {
          return {
            offset: this.offset,
            reporter: Reporter.prototype.save.call(this),
          };
        };

        DecoderBuffer.prototype.restore = function restore(save) {
          // Return skipped data
          var res = new DecoderBuffer(this.base);
          res.offset = save.offset;
          res.length = this.offset;

          this.offset = save.offset;
          Reporter.prototype.restore.call(this, save.reporter);

          return res;
        };

        DecoderBuffer.prototype.isEmpty = function isEmpty() {
          return this.offset === this.length;
        };

        DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
          if (this.offset + 1 <= this.length)
            return this.base.readUInt8(this.offset++, true);
          else return this.error(fail || 'DecoderBuffer overrun');
        };

        DecoderBuffer.prototype.skip = function skip(bytes, fail) {
          if (!(this.offset + bytes <= this.length))
            return this.error(fail || 'DecoderBuffer overrun');

          var res = new DecoderBuffer(this.base);

          // Share reporter state
          res._reporterState = this._reporterState;

          res.offset = this.offset;
          res.length = this.offset + bytes;
          this.offset += bytes;
          return res;
        };

        DecoderBuffer.prototype.raw = function raw(save) {
          return this.base.slice(save ? save.offset : this.offset, this.length);
        };

        function EncoderBuffer(value, reporter) {
          if (Array.isArray(value)) {
            this.length = 0;
            this.value = value.map(function (item) {
              if (!(item instanceof EncoderBuffer))
                item = new EncoderBuffer(item, reporter);
              this.length += item.length;
              return item;
            }, this);
          } else if (typeof value === 'number') {
            if (!(0 <= value && value <= 0xff))
              return reporter.error('non-byte EncoderBuffer value');
            this.value = value;
            this.length = 1;
          } else if (typeof value === 'string') {
            this.value = value;
            this.length = Buffer.byteLength(value);
          } else if (Buffer.isBuffer(value)) {
            this.value = value;
            this.length = value.length;
          } else {
            return reporter.error('Unsupported type: ' + typeof value);
          }
        }
        exports.EncoderBuffer = EncoderBuffer;

        EncoderBuffer.prototype.join = function join(out, offset) {
          if (!out) out = new Buffer(this.length);
          if (!offset) offset = 0;

          if (this.length === 0) return out;

          if (Array.isArray(this.value)) {
            this.value.forEach(function (item) {
              item.join(out, offset);
              offset += item.length;
            });
          } else {
            if (typeof this.value === 'number') out[offset] = this.value;
            else if (typeof this.value === 'string')
              out.write(this.value, offset);
            else if (Buffer.isBuffer(this.value)) this.value.copy(out, offset);
            offset += this.length;
          }

          return out;
        };

        /***/
      },

    /***/ '../node_modules/asn1.js/lib/asn1/base/index.js':
      /*!******************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/base/index.js ***!
  \******************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var base = exports;

        base.Reporter = __webpack_require__(
          /*! ./reporter */ '../node_modules/asn1.js/lib/asn1/base/reporter.js'
        ).Reporter;
        base.DecoderBuffer = __webpack_require__(
          /*! ./buffer */ '../node_modules/asn1.js/lib/asn1/base/buffer.js'
        ).DecoderBuffer;
        base.EncoderBuffer = __webpack_require__(
          /*! ./buffer */ '../node_modules/asn1.js/lib/asn1/base/buffer.js'
        ).EncoderBuffer;
        base.Node = __webpack_require__(
          /*! ./node */ '../node_modules/asn1.js/lib/asn1/base/node.js'
        );

        /***/
      },

    /***/ '../node_modules/asn1.js/lib/asn1/base/node.js':
      /*!*****************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/base/node.js ***!
  \*****************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var Reporter = __webpack_require__(
          /*! ../base */ '../node_modules/asn1.js/lib/asn1/base/index.js'
        ).Reporter;
        var EncoderBuffer = __webpack_require__(
          /*! ../base */ '../node_modules/asn1.js/lib/asn1/base/index.js'
        ).EncoderBuffer;
        var DecoderBuffer = __webpack_require__(
          /*! ../base */ '../node_modules/asn1.js/lib/asn1/base/index.js'
        ).DecoderBuffer;
        var assert = __webpack_require__(
          /*! minimalistic-assert */ '../node_modules/minimalistic-assert/index.js'
        );

        // Supported tags
        var tags = [
          'seq',
          'seqof',
          'set',
          'setof',
          'objid',
          'bool',
          'gentime',
          'utctime',
          'null_',
          'enum',
          'int',
          'objDesc',
          'bitstr',
          'bmpstr',
          'charstr',
          'genstr',
          'graphstr',
          'ia5str',
          'iso646str',
          'numstr',
          'octstr',
          'printstr',
          't61str',
          'unistr',
          'utf8str',
          'videostr',
        ];

        // Public methods list
        var methods = [
          'key',
          'obj',
          'use',
          'optional',
          'explicit',
          'implicit',
          'def',
          'choice',
          'any',
          'contains',
        ].concat(tags);

        // Overrided methods list
        var overrided = [
          '_peekTag',
          '_decodeTag',
          '_use',
          '_decodeStr',
          '_decodeObjid',
          '_decodeTime',
          '_decodeNull',
          '_decodeInt',
          '_decodeBool',
          '_decodeList',

          '_encodeComposite',
          '_encodeStr',
          '_encodeObjid',
          '_encodeTime',
          '_encodeNull',
          '_encodeInt',
          '_encodeBool',
        ];

        function Node(enc, parent) {
          var state = {};
          this._baseState = state;

          state.enc = enc;

          state.parent = parent || null;
          state.children = null;

          // State
          state.tag = null;
          state.args = null;
          state.reverseArgs = null;
          state.choice = null;
          state.optional = false;
          state.any = false;
          state.obj = false;
          state.use = null;
          state.useDecoder = null;
          state.key = null;
          state['default'] = null;
          state.explicit = null;
          state.implicit = null;
          state.contains = null;

          // Should create new instance on each method
          if (!state.parent) {
            state.children = [];
            this._wrap();
          }
        }
        module.exports = Node;

        var stateProps = [
          'enc',
          'parent',
          'children',
          'tag',
          'args',
          'reverseArgs',
          'choice',
          'optional',
          'any',
          'obj',
          'use',
          'alteredUse',
          'key',
          'default',
          'explicit',
          'implicit',
          'contains',
        ];

        Node.prototype.clone = function clone() {
          var state = this._baseState;
          var cstate = {};
          stateProps.forEach(function (prop) {
            cstate[prop] = state[prop];
          });
          var res = new this.constructor(cstate.parent);
          res._baseState = cstate;
          return res;
        };

        Node.prototype._wrap = function wrap() {
          var state = this._baseState;
          methods.forEach(function (method) {
            this[method] = function _wrappedMethod() {
              var clone = new this.constructor(this);
              state.children.push(clone);
              return clone[method].apply(clone, arguments);
            };
          }, this);
        };

        Node.prototype._init = function init(body) {
          var state = this._baseState;

          assert(state.parent === null);
          body.call(this);

          // Filter children
          state.children = state.children.filter(function (child) {
            return child._baseState.parent === this;
          }, this);
          assert.equal(
            state.children.length,
            1,
            'Root node can have only one child'
          );
        };

        Node.prototype._useArgs = function useArgs(args) {
          var state = this._baseState;

          // Filter children and args
          var children = args.filter(function (arg) {
            return arg instanceof this.constructor;
          }, this);
          args = args.filter(function (arg) {
            return !(arg instanceof this.constructor);
          }, this);

          if (children.length !== 0) {
            assert(state.children === null);
            state.children = children;

            // Replace parent to maintain backward link
            children.forEach(function (child) {
              child._baseState.parent = this;
            }, this);
          }
          if (args.length !== 0) {
            assert(state.args === null);
            state.args = args;
            state.reverseArgs = args.map(function (arg) {
              if (typeof arg !== 'object' || arg.constructor !== Object)
                return arg;

              var res = {};
              Object.keys(arg).forEach(function (key) {
                if (key == (key | 0)) key |= 0;
                var value = arg[key];
                res[value] = key;
              });
              return res;
            });
          }
        };

        //
        // Overrided methods
        //

        overrided.forEach(function (method) {
          Node.prototype[method] = function _overrided() {
            var state = this._baseState;
            throw new Error(
              method + ' not implemented for encoding: ' + state.enc
            );
          };
        });

        //
        // Public methods
        //

        tags.forEach(function (tag) {
          Node.prototype[tag] = function _tagMethod() {
            var state = this._baseState;
            var args = Array.prototype.slice.call(arguments);

            assert(state.tag === null);
            state.tag = tag;

            this._useArgs(args);

            return this;
          };
        });

        Node.prototype.use = function use(item) {
          assert(item);
          var state = this._baseState;

          assert(state.use === null);
          state.use = item;

          return this;
        };

        Node.prototype.optional = function optional() {
          var state = this._baseState;

          state.optional = true;

          return this;
        };

        Node.prototype.def = function def(val) {
          var state = this._baseState;

          assert(state['default'] === null);
          state['default'] = val;
          state.optional = true;

          return this;
        };

        Node.prototype.explicit = function explicit(num) {
          var state = this._baseState;

          assert(state.explicit === null && state.implicit === null);
          state.explicit = num;

          return this;
        };

        Node.prototype.implicit = function implicit(num) {
          var state = this._baseState;

          assert(state.explicit === null && state.implicit === null);
          state.implicit = num;

          return this;
        };

        Node.prototype.obj = function obj() {
          var state = this._baseState;
          var args = Array.prototype.slice.call(arguments);

          state.obj = true;

          if (args.length !== 0) this._useArgs(args);

          return this;
        };

        Node.prototype.key = function key(newKey) {
          var state = this._baseState;

          assert(state.key === null);
          state.key = newKey;

          return this;
        };

        Node.prototype.any = function any() {
          var state = this._baseState;

          state.any = true;

          return this;
        };

        Node.prototype.choice = function choice(obj) {
          var state = this._baseState;

          assert(state.choice === null);
          state.choice = obj;
          this._useArgs(
            Object.keys(obj).map(function (key) {
              return obj[key];
            })
          );

          return this;
        };

        Node.prototype.contains = function contains(item) {
          var state = this._baseState;

          assert(state.use === null);
          state.contains = item;

          return this;
        };

        //
        // Decoding
        //

        Node.prototype._decode = function decode(input, options) {
          var state = this._baseState;

          // Decode root node
          if (state.parent === null)
            return input.wrapResult(state.children[0]._decode(input, options));

          var result = state['default'];
          var present = true;

          var prevKey = null;
          if (state.key !== null) prevKey = input.enterKey(state.key);

          // Check if tag is there
          if (state.optional) {
            var tag = null;
            if (state.explicit !== null) tag = state.explicit;
            else if (state.implicit !== null) tag = state.implicit;
            else if (state.tag !== null) tag = state.tag;

            if (tag === null && !state.any) {
              // Trial and Error
              var save = input.save();
              try {
                if (state.choice === null)
                  this._decodeGeneric(state.tag, input, options);
                else this._decodeChoice(input, options);
                present = true;
              } catch (e) {
                present = false;
              }
              input.restore(save);
            } else {
              present = this._peekTag(input, tag, state.any);

              if (input.isError(present)) return present;
            }
          }

          // Push object on stack
          var prevObj;
          if (state.obj && present) prevObj = input.enterObject();

          if (present) {
            // Unwrap explicit values
            if (state.explicit !== null) {
              var explicit = this._decodeTag(input, state.explicit);
              if (input.isError(explicit)) return explicit;
              input = explicit;
            }

            var start = input.offset;

            // Unwrap implicit and normal values
            if (state.use === null && state.choice === null) {
              if (state.any) var save = input.save();
              var body = this._decodeTag(
                input,
                state.implicit !== null ? state.implicit : state.tag,
                state.any
              );
              if (input.isError(body)) return body;

              if (state.any) result = input.raw(save);
              else input = body;
            }

            if (options && options.track && state.tag !== null)
              options.track(input.path(), start, input.length, 'tagged');

            if (options && options.track && state.tag !== null)
              options.track(
                input.path(),
                input.offset,
                input.length,
                'content'
              );

            // Select proper method for tag
            if (state.any) result = result;
            else if (state.choice === null)
              result = this._decodeGeneric(state.tag, input, options);
            else result = this._decodeChoice(input, options);

            if (input.isError(result)) return result;

            // Decode children
            if (
              !state.any &&
              state.choice === null &&
              state.children !== null
            ) {
              state.children.forEach(function decodeChildren(child) {
                // NOTE: We are ignoring errors here, to let parser continue with other
                // parts of encoded data
                child._decode(input, options);
              });
            }

            // Decode contained/encoded by schema, only in bit or octet strings
            if (
              state.contains &&
              (state.tag === 'octstr' || state.tag === 'bitstr')
            ) {
              var data = new DecoderBuffer(result);
              result = this._getUse(
                state.contains,
                input._reporterState.obj
              )._decode(data, options);
            }
          }

          // Pop object
          if (state.obj && present) result = input.leaveObject(prevObj);

          // Set key
          if (state.key !== null && (result !== null || present === true))
            input.leaveKey(prevKey, state.key, result);
          else if (prevKey !== null) input.exitKey(prevKey);

          return result;
        };

        Node.prototype._decodeGeneric = function decodeGeneric(
          tag,
          input,
          options
        ) {
          var state = this._baseState;

          if (tag === 'seq' || tag === 'set') return null;
          if (tag === 'seqof' || tag === 'setof')
            return this._decodeList(input, tag, state.args[0], options);
          else if (/str$/.test(tag))
            return this._decodeStr(input, tag, options);
          else if (tag === 'objid' && state.args)
            return this._decodeObjid(
              input,
              state.args[0],
              state.args[1],
              options
            );
          else if (tag === 'objid')
            return this._decodeObjid(input, null, null, options);
          else if (tag === 'gentime' || tag === 'utctime')
            return this._decodeTime(input, tag, options);
          else if (tag === 'null_') return this._decodeNull(input, options);
          else if (tag === 'bool') return this._decodeBool(input, options);
          else if (tag === 'objDesc')
            return this._decodeStr(input, tag, options);
          else if (tag === 'int' || tag === 'enum')
            return this._decodeInt(input, state.args && state.args[0], options);

          if (state.use !== null) {
            return this._getUse(state.use, input._reporterState.obj)._decode(
              input,
              options
            );
          } else {
            return input.error('unknown tag: ' + tag);
          }
        };

        Node.prototype._getUse = function _getUse(entity, obj) {
          var state = this._baseState;
          // Create altered use decoder if implicit is set
          state.useDecoder = this._use(entity, obj);
          assert(state.useDecoder._baseState.parent === null);
          state.useDecoder = state.useDecoder._baseState.children[0];
          if (state.implicit !== state.useDecoder._baseState.implicit) {
            state.useDecoder = state.useDecoder.clone();
            state.useDecoder._baseState.implicit = state.implicit;
          }
          return state.useDecoder;
        };

        Node.prototype._decodeChoice = function decodeChoice(input, options) {
          var state = this._baseState;
          var result = null;
          var match = false;

          Object.keys(state.choice).some(function (key) {
            var save = input.save();
            var node = state.choice[key];
            try {
              var value = node._decode(input, options);
              if (input.isError(value)) return false;

              result = { type: key, value: value };
              match = true;
            } catch (e) {
              input.restore(save);
              return false;
            }
            return true;
          }, this);

          if (!match) return input.error('Choice not matched');

          return result;
        };

        //
        // Encoding
        //

        Node.prototype._createEncoderBuffer = function createEncoderBuffer(
          data
        ) {
          return new EncoderBuffer(data, this.reporter);
        };

        Node.prototype._encode = function encode(data, reporter, parent) {
          var state = this._baseState;
          if (state['default'] !== null && state['default'] === data) return;

          var result = this._encodeValue(data, reporter, parent);
          if (result === undefined) return;

          if (this._skipDefault(result, reporter, parent)) return;

          return result;
        };

        Node.prototype._encodeValue = function encode(data, reporter, parent) {
          var state = this._baseState;

          // Decode root node
          if (state.parent === null)
            return state.children[0]._encode(data, reporter || new Reporter());

          var result = null;

          // Set reporter to share it with a child class
          this.reporter = reporter;

          // Check if data is there
          if (state.optional && data === undefined) {
            if (state['default'] !== null) data = state['default'];
            else return;
          }

          // Encode children first
          var content = null;
          var primitive = false;
          if (state.any) {
            // Anything that was given is translated to buffer
            result = this._createEncoderBuffer(data);
          } else if (state.choice) {
            result = this._encodeChoice(data, reporter);
          } else if (state.contains) {
            content = this._getUse(state.contains, parent)._encode(
              data,
              reporter
            );
            primitive = true;
          } else if (state.children) {
            content = state.children
              .map(function (child) {
                if (child._baseState.tag === 'null_')
                  return child._encode(null, reporter, data);

                if (child._baseState.key === null)
                  return reporter.error('Child should have a key');
                var prevKey = reporter.enterKey(child._baseState.key);

                if (typeof data !== 'object')
                  return reporter.error(
                    'Child expected, but input is not object'
                  );

                var res = child._encode(
                  data[child._baseState.key],
                  reporter,
                  data
                );
                reporter.leaveKey(prevKey);

                return res;
              }, this)
              .filter(function (child) {
                return child;
              });
            content = this._createEncoderBuffer(content);
          } else {
            if (state.tag === 'seqof' || state.tag === 'setof') {
              // TODO(indutny): this should be thrown on DSL level
              if (!(state.args && state.args.length === 1))
                return reporter.error('Too many args for : ' + state.tag);

              if (!Array.isArray(data))
                return reporter.error('seqof/setof, but data is not Array');

              var child = this.clone();
              child._baseState.implicit = null;
              content = this._createEncoderBuffer(
                data.map(function (item) {
                  var state = this._baseState;

                  return this._getUse(state.args[0], data)._encode(
                    item,
                    reporter
                  );
                }, child)
              );
            } else if (state.use !== null) {
              result = this._getUse(state.use, parent)._encode(data, reporter);
            } else {
              content = this._encodePrimitive(state.tag, data);
              primitive = true;
            }
          }

          // Encode data itself
          var result;
          if (!state.any && state.choice === null) {
            var tag = state.implicit !== null ? state.implicit : state.tag;
            var cls = state.implicit === null ? 'universal' : 'context';

            if (tag === null) {
              if (state.use === null)
                reporter.error('Tag could be omitted only for .use()');
            } else {
              if (state.use === null)
                result = this._encodeComposite(tag, primitive, cls, content);
            }
          }

          // Wrap in explicit
          if (state.explicit !== null)
            result = this._encodeComposite(
              state.explicit,
              false,
              'context',
              result
            );

          return result;
        };

        Node.prototype._encodeChoice = function encodeChoice(data, reporter) {
          var state = this._baseState;

          var node = state.choice[data.type];
          if (!node) {
            assert(
              false,
              data.type +
                ' not found in ' +
                JSON.stringify(Object.keys(state.choice))
            );
          }
          return node._encode(data.value, reporter);
        };

        Node.prototype._encodePrimitive = function encodePrimitive(tag, data) {
          var state = this._baseState;

          if (/str$/.test(tag)) return this._encodeStr(data, tag);
          else if (tag === 'objid' && state.args)
            return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
          else if (tag === 'objid') return this._encodeObjid(data, null, null);
          else if (tag === 'gentime' || tag === 'utctime')
            return this._encodeTime(data, tag);
          else if (tag === 'null_') return this._encodeNull();
          else if (tag === 'int' || tag === 'enum')
            return this._encodeInt(data, state.args && state.reverseArgs[0]);
          else if (tag === 'bool') return this._encodeBool(data);
          else if (tag === 'objDesc') return this._encodeStr(data, tag);
          else throw new Error('Unsupported tag: ' + tag);
        };

        Node.prototype._isNumstr = function isNumstr(str) {
          return /^[0-9 ]*$/.test(str);
        };

        Node.prototype._isPrintstr = function isPrintstr(str) {
          return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(str);
        };

        /***/
      },

    /***/ '../node_modules/asn1.js/lib/asn1/base/reporter.js':
      /*!*********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/base/reporter.js ***!
  \*********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );

        function Reporter(options) {
          this._reporterState = {
            obj: null,
            path: [],
            options: options || {},
            errors: [],
          };
        }
        exports.Reporter = Reporter;

        Reporter.prototype.isError = function isError(obj) {
          return obj instanceof ReporterError;
        };

        Reporter.prototype.save = function save() {
          var state = this._reporterState;

          return { obj: state.obj, pathLen: state.path.length };
        };

        Reporter.prototype.restore = function restore(data) {
          var state = this._reporterState;

          state.obj = data.obj;
          state.path = state.path.slice(0, data.pathLen);
        };

        Reporter.prototype.enterKey = function enterKey(key) {
          return this._reporterState.path.push(key);
        };

        Reporter.prototype.exitKey = function exitKey(index) {
          var state = this._reporterState;

          state.path = state.path.slice(0, index - 1);
        };

        Reporter.prototype.leaveKey = function leaveKey(index, key, value) {
          var state = this._reporterState;

          this.exitKey(index);
          if (state.obj !== null) state.obj[key] = value;
        };

        Reporter.prototype.path = function path() {
          return this._reporterState.path.join('/');
        };

        Reporter.prototype.enterObject = function enterObject() {
          var state = this._reporterState;

          var prev = state.obj;
          state.obj = {};
          return prev;
        };

        Reporter.prototype.leaveObject = function leaveObject(prev) {
          var state = this._reporterState;

          var now = state.obj;
          state.obj = prev;
          return now;
        };

        Reporter.prototype.error = function error(msg) {
          var err;
          var state = this._reporterState;

          var inherited = msg instanceof ReporterError;
          if (inherited) {
            err = msg;
          } else {
            err = new ReporterError(
              state.path
                .map(function (elem) {
                  return '[' + JSON.stringify(elem) + ']';
                })
                .join(''),
              msg.message || msg,
              msg.stack
            );
          }

          if (!state.options.partial) throw err;

          if (!inherited) state.errors.push(err);

          return err;
        };

        Reporter.prototype.wrapResult = function wrapResult(result) {
          var state = this._reporterState;
          if (!state.options.partial) return result;

          return {
            result: this.isError(result) ? null : result,
            errors: state.errors,
          };
        };

        function ReporterError(path, msg) {
          this.path = path;
          this.rethrow(msg);
        }
        inherits(ReporterError, Error);

        ReporterError.prototype.rethrow = function rethrow(msg) {
          this.message = msg + ' at: ' + (this.path || '(shallow)');
          if (Error.captureStackTrace)
            Error.captureStackTrace(this, ReporterError);

          if (!this.stack) {
            try {
              // IE only adds stack when thrown
              throw new Error(this.message);
            } catch (e) {
              this.stack = e.stack;
            }
          }
          return this;
        };

        /***/
      },

    /***/ '../node_modules/asn1.js/lib/asn1/constants/der.js':
      /*!*********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/constants/der.js ***!
  \*********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var constants = __webpack_require__(
          /*! ../constants */ '../node_modules/asn1.js/lib/asn1/constants/index.js'
        );

        exports.tagClass = {
          0: 'universal',
          1: 'application',
          2: 'context',
          3: 'private',
        };
        exports.tagClassByName = constants._reverse(exports.tagClass);

        exports.tag = {
          0x00: 'end',
          0x01: 'bool',
          0x02: 'int',
          0x03: 'bitstr',
          0x04: 'octstr',
          0x05: 'null_',
          0x06: 'objid',
          0x07: 'objDesc',
          0x08: 'external',
          0x09: 'real',
          0x0a: 'enum',
          0x0b: 'embed',
          0x0c: 'utf8str',
          0x0d: 'relativeOid',
          0x10: 'seq',
          0x11: 'set',
          0x12: 'numstr',
          0x13: 'printstr',
          0x14: 't61str',
          0x15: 'videostr',
          0x16: 'ia5str',
          0x17: 'utctime',
          0x18: 'gentime',
          0x19: 'graphstr',
          0x1a: 'iso646str',
          0x1b: 'genstr',
          0x1c: 'unistr',
          0x1d: 'charstr',
          0x1e: 'bmpstr',
        };
        exports.tagByName = constants._reverse(exports.tag);

        /***/
      },

    /***/ '../node_modules/asn1.js/lib/asn1/constants/index.js':
      /*!***********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/constants/index.js ***!
  \***********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var constants = exports;

        // Helper
        constants._reverse = function reverse(map) {
          var res = {};

          Object.keys(map).forEach(function (key) {
            // Convert key to integer if it is stringified
            if ((key | 0) == key) key = key | 0;

            var value = map[key];
            res[value] = key;
          });

          return res;
        };

        constants.der = __webpack_require__(
          /*! ./der */ '../node_modules/asn1.js/lib/asn1/constants/der.js'
        );

        /***/
      },

    /***/ '../node_modules/asn1.js/lib/asn1/decoders/der.js':
      /*!********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/decoders/der.js ***!
  \********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );

        var asn1 = __webpack_require__(
          /*! ../../asn1 */ '../node_modules/asn1.js/lib/asn1.js'
        );
        var base = asn1.base;
        var bignum = asn1.bignum;

        // Import DER constants
        var der = asn1.constants.der;

        function DERDecoder(entity) {
          this.enc = 'der';
          this.name = entity.name;
          this.entity = entity;

          // Construct base tree
          this.tree = new DERNode();
          this.tree._init(entity.body);
        }
        module.exports = DERDecoder;

        DERDecoder.prototype.decode = function decode(data, options) {
          if (!(data instanceof base.DecoderBuffer))
            data = new base.DecoderBuffer(data, options);

          return this.tree._decode(data, options);
        };

        // Tree methods

        function DERNode(parent) {
          base.Node.call(this, 'der', parent);
        }
        inherits(DERNode, base.Node);

        DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {
          if (buffer.isEmpty()) return false;

          var state = buffer.save();
          var decodedTag = derDecodeTag(
            buffer,
            'Failed to peek tag: "' + tag + '"'
          );
          if (buffer.isError(decodedTag)) return decodedTag;

          buffer.restore(state);

          return (
            decodedTag.tag === tag ||
            decodedTag.tagStr === tag ||
            decodedTag.tagStr + 'of' === tag ||
            any
          );
        };

        DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
          var decodedTag = derDecodeTag(
            buffer,
            'Failed to decode tag of "' + tag + '"'
          );
          if (buffer.isError(decodedTag)) return decodedTag;

          var len = derDecodeLen(
            buffer,
            decodedTag.primitive,
            'Failed to get length of "' + tag + '"'
          );

          // Failure
          if (buffer.isError(len)) return len;

          if (
            !any &&
            decodedTag.tag !== tag &&
            decodedTag.tagStr !== tag &&
            decodedTag.tagStr + 'of' !== tag
          ) {
            return buffer.error('Failed to match tag: "' + tag + '"');
          }

          if (decodedTag.primitive || len !== null)
            return buffer.skip(len, 'Failed to match body of: "' + tag + '"');

          // Indefinite length... find END tag
          var state = buffer.save();
          var res = this._skipUntilEnd(
            buffer,
            'Failed to skip indefinite length body: "' + this.tag + '"'
          );
          if (buffer.isError(res)) return res;

          len = buffer.offset - state.offset;
          buffer.restore(state);
          return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
        };

        DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
          while (true) {
            var tag = derDecodeTag(buffer, fail);
            if (buffer.isError(tag)) return tag;
            var len = derDecodeLen(buffer, tag.primitive, fail);
            if (buffer.isError(len)) return len;

            var res;
            if (tag.primitive || len !== null) res = buffer.skip(len);
            else res = this._skipUntilEnd(buffer, fail);

            // Failure
            if (buffer.isError(res)) return res;

            if (tag.tagStr === 'end') break;
          }
        };

        DERNode.prototype._decodeList = function decodeList(
          buffer,
          tag,
          decoder,
          options
        ) {
          var result = [];
          while (!buffer.isEmpty()) {
            var possibleEnd = this._peekTag(buffer, 'end');
            if (buffer.isError(possibleEnd)) return possibleEnd;

            var res = decoder.decode(buffer, 'der', options);
            if (buffer.isError(res) && possibleEnd) break;
            result.push(res);
          }
          return result;
        };

        DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
          if (tag === 'bitstr') {
            var unused = buffer.readUInt8();
            if (buffer.isError(unused)) return unused;
            return { unused: unused, data: buffer.raw() };
          } else if (tag === 'bmpstr') {
            var raw = buffer.raw();
            if (raw.length % 2 === 1)
              return buffer.error(
                'Decoding of string type: bmpstr length mismatch'
              );

            var str = '';
            for (var i = 0; i < raw.length / 2; i++) {
              str += String.fromCharCode(raw.readUInt16BE(i * 2));
            }
            return str;
          } else if (tag === 'numstr') {
            var numstr = buffer.raw().toString('ascii');
            if (!this._isNumstr(numstr)) {
              return buffer.error(
                'Decoding of string type: ' + 'numstr unsupported characters'
              );
            }
            return numstr;
          } else if (tag === 'octstr') {
            return buffer.raw();
          } else if (tag === 'objDesc') {
            return buffer.raw();
          } else if (tag === 'printstr') {
            var printstr = buffer.raw().toString('ascii');
            if (!this._isPrintstr(printstr)) {
              return buffer.error(
                'Decoding of string type: ' + 'printstr unsupported characters'
              );
            }
            return printstr;
          } else if (/str$/.test(tag)) {
            return buffer.raw().toString();
          } else {
            return buffer.error(
              'Decoding of string type: ' + tag + ' unsupported'
            );
          }
        };

        DERNode.prototype._decodeObjid = function decodeObjid(
          buffer,
          values,
          relative
        ) {
          var result;
          var identifiers = [];
          var ident = 0;
          while (!buffer.isEmpty()) {
            var subident = buffer.readUInt8();
            ident <<= 7;
            ident |= subident & 0x7f;
            if ((subident & 0x80) === 0) {
              identifiers.push(ident);
              ident = 0;
            }
          }
          if (subident & 0x80) identifiers.push(ident);

          var first = (identifiers[0] / 40) | 0;
          var second = identifiers[0] % 40;

          if (relative) result = identifiers;
          else result = [first, second].concat(identifiers.slice(1));

          if (values) {
            var tmp = values[result.join(' ')];
            if (tmp === undefined) tmp = values[result.join('.')];
            if (tmp !== undefined) result = tmp;
          }

          return result;
        };

        DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
          var str = buffer.raw().toString();
          if (tag === 'gentime') {
            var year = str.slice(0, 4) | 0;
            var mon = str.slice(4, 6) | 0;
            var day = str.slice(6, 8) | 0;
            var hour = str.slice(8, 10) | 0;
            var min = str.slice(10, 12) | 0;
            var sec = str.slice(12, 14) | 0;
          } else if (tag === 'utctime') {
            var year = str.slice(0, 2) | 0;
            var mon = str.slice(2, 4) | 0;
            var day = str.slice(4, 6) | 0;
            var hour = str.slice(6, 8) | 0;
            var min = str.slice(8, 10) | 0;
            var sec = str.slice(10, 12) | 0;
            if (year < 70) year = 2000 + year;
            else year = 1900 + year;
          } else {
            return buffer.error(
              'Decoding ' + tag + ' time is not supported yet'
            );
          }

          return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
        };

        DERNode.prototype._decodeNull = function decodeNull(buffer) {
          return null;
        };

        DERNode.prototype._decodeBool = function decodeBool(buffer) {
          var res = buffer.readUInt8();
          if (buffer.isError(res)) return res;
          else return res !== 0;
        };

        DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
          // Bigint, return as it is (assume big endian)
          var raw = buffer.raw();
          var res = new bignum(raw);

          if (values) res = values[res.toString(10)] || res;

          return res;
        };

        DERNode.prototype._use = function use(entity, obj) {
          if (typeof entity === 'function') entity = entity(obj);
          return entity._getDecoder('der').tree;
        };

        // Utility methods

        function derDecodeTag(buf, fail) {
          var tag = buf.readUInt8(fail);
          if (buf.isError(tag)) return tag;

          var cls = der.tagClass[tag >> 6];
          var primitive = (tag & 0x20) === 0;

          // Multi-octet tag - load
          if ((tag & 0x1f) === 0x1f) {
            var oct = tag;
            tag = 0;
            while ((oct & 0x80) === 0x80) {
              oct = buf.readUInt8(fail);
              if (buf.isError(oct)) return oct;

              tag <<= 7;
              tag |= oct & 0x7f;
            }
          } else {
            tag &= 0x1f;
          }
          var tagStr = der.tag[tag];

          return {
            cls: cls,
            primitive: primitive,
            tag: tag,
            tagStr: tagStr,
          };
        }

        function derDecodeLen(buf, primitive, fail) {
          var len = buf.readUInt8(fail);
          if (buf.isError(len)) return len;

          // Indefinite form
          if (!primitive && len === 0x80) return null;

          // Definite form
          if ((len & 0x80) === 0) {
            // Short form
            return len;
          }

          // Long form
          var num = len & 0x7f;
          if (num > 4) return buf.error('length octect is too long');

          len = 0;
          for (var i = 0; i < num; i++) {
            len <<= 8;
            var j = buf.readUInt8(fail);
            if (buf.isError(j)) return j;
            len |= j;
          }

          return len;
        }

        /***/
      },

    /***/ '../node_modules/asn1.js/lib/asn1/decoders/index.js':
      /*!**********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/decoders/index.js ***!
  \**********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var decoders = exports;

        decoders.der = __webpack_require__(
          /*! ./der */ '../node_modules/asn1.js/lib/asn1/decoders/der.js'
        );
        decoders.pem = __webpack_require__(
          /*! ./pem */ '../node_modules/asn1.js/lib/asn1/decoders/pem.js'
        );

        /***/
      },

    /***/ '../node_modules/asn1.js/lib/asn1/decoders/pem.js':
      /*!********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/decoders/pem.js ***!
  \********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );
        var Buffer = __webpack_require__(
          /*! buffer */ '../node_modules/buffer/index.js'
        ).Buffer;

        var DERDecoder = __webpack_require__(
          /*! ./der */ '../node_modules/asn1.js/lib/asn1/decoders/der.js'
        );

        function PEMDecoder(entity) {
          DERDecoder.call(this, entity);
          this.enc = 'pem';
        }
        inherits(PEMDecoder, DERDecoder);
        module.exports = PEMDecoder;

        PEMDecoder.prototype.decode = function decode(data, options) {
          var lines = data.toString().split(/[\r\n]+/g);

          var label = options.label.toUpperCase();

          var re = /^-----(BEGIN|END) ([^-]+)-----$/;
          var start = -1;
          var end = -1;
          for (var i = 0; i < lines.length; i++) {
            var match = lines[i].match(re);
            if (match === null) continue;

            if (match[2] !== label) continue;

            if (start === -1) {
              if (match[1] !== 'BEGIN') break;
              start = i;
            } else {
              if (match[1] !== 'END') break;
              end = i;
              break;
            }
          }
          if (start === -1 || end === -1)
            throw new Error('PEM section not found for: ' + label);

          var base64 = lines.slice(start + 1, end).join('');
          // Remove excessive symbols
          base64.replace(/[^a-z0-9\+\/=]+/gi, '');

          var input = new Buffer(base64, 'base64');
          return DERDecoder.prototype.decode.call(this, input, options);
        };

        /***/
      },

    /***/ '../node_modules/asn1.js/lib/asn1/encoders/der.js':
      /*!********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/encoders/der.js ***!
  \********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );
        var Buffer = __webpack_require__(
          /*! buffer */ '../node_modules/buffer/index.js'
        ).Buffer;

        var asn1 = __webpack_require__(
          /*! ../../asn1 */ '../node_modules/asn1.js/lib/asn1.js'
        );
        var base = asn1.base;

        // Import DER constants
        var der = asn1.constants.der;

        function DEREncoder(entity) {
          this.enc = 'der';
          this.name = entity.name;
          this.entity = entity;

          // Construct base tree
          this.tree = new DERNode();
          this.tree._init(entity.body);
        }
        module.exports = DEREncoder;

        DEREncoder.prototype.encode = function encode(data, reporter) {
          return this.tree._encode(data, reporter).join();
        };

        // Tree methods

        function DERNode(parent) {
          base.Node.call(this, 'der', parent);
        }
        inherits(DERNode, base.Node);

        DERNode.prototype._encodeComposite = function encodeComposite(
          tag,
          primitive,
          cls,
          content
        ) {
          var encodedTag = encodeTag(tag, primitive, cls, this.reporter);

          // Short form
          if (content.length < 0x80) {
            var header = new Buffer(2);
            header[0] = encodedTag;
            header[1] = content.length;
            return this._createEncoderBuffer([header, content]);
          }

          // Long form
          // Count octets required to store length
          var lenOctets = 1;
          for (var i = content.length; i >= 0x100; i >>= 8) lenOctets++;

          var header = new Buffer(1 + 1 + lenOctets);
          header[0] = encodedTag;
          header[1] = 0x80 | lenOctets;

          for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)
            header[i] = j & 0xff;

          return this._createEncoderBuffer([header, content]);
        };

        DERNode.prototype._encodeStr = function encodeStr(str, tag) {
          if (tag === 'bitstr') {
            return this._createEncoderBuffer([str.unused | 0, str.data]);
          } else if (tag === 'bmpstr') {
            var buf = new Buffer(str.length * 2);
            for (var i = 0; i < str.length; i++) {
              buf.writeUInt16BE(str.charCodeAt(i), i * 2);
            }
            return this._createEncoderBuffer(buf);
          } else if (tag === 'numstr') {
            if (!this._isNumstr(str)) {
              return this.reporter.error(
                'Encoding of string type: numstr supports ' +
                  'only digits and space'
              );
            }
            return this._createEncoderBuffer(str);
          } else if (tag === 'printstr') {
            if (!this._isPrintstr(str)) {
              return this.reporter.error(
                'Encoding of string type: printstr supports ' +
                  'only latin upper and lower case letters, ' +
                  'digits, space, apostrophe, left and rigth ' +
                  'parenthesis, plus sign, comma, hyphen, ' +
                  'dot, slash, colon, equal sign, ' +
                  'question mark'
              );
            }
            return this._createEncoderBuffer(str);
          } else if (/str$/.test(tag)) {
            return this._createEncoderBuffer(str);
          } else if (tag === 'objDesc') {
            return this._createEncoderBuffer(str);
          } else {
            return this.reporter.error(
              'Encoding of string type: ' + tag + ' unsupported'
            );
          }
        };

        DERNode.prototype._encodeObjid = function encodeObjid(
          id,
          values,
          relative
        ) {
          if (typeof id === 'string') {
            if (!values)
              return this.reporter.error(
                'string objid given, but no values map found'
              );
            if (!values.hasOwnProperty(id))
              return this.reporter.error('objid not found in values map');
            id = values[id].split(/[\s\.]+/g);
            for (var i = 0; i < id.length; i++) id[i] |= 0;
          } else if (Array.isArray(id)) {
            id = id.slice();
            for (var i = 0; i < id.length; i++) id[i] |= 0;
          }

          if (!Array.isArray(id)) {
            return this.reporter.error(
              'objid() should be either array or string, ' +
                'got: ' +
                JSON.stringify(id)
            );
          }

          if (!relative) {
            if (id[1] >= 40)
              return this.reporter.error('Second objid identifier OOB');
            id.splice(0, 2, id[0] * 40 + id[1]);
          }

          // Count number of octets
          var size = 0;
          for (var i = 0; i < id.length; i++) {
            var ident = id[i];
            for (size++; ident >= 0x80; ident >>= 7) size++;
          }

          var objid = new Buffer(size);
          var offset = objid.length - 1;
          for (var i = id.length - 1; i >= 0; i--) {
            var ident = id[i];
            objid[offset--] = ident & 0x7f;
            while ((ident >>= 7) > 0) objid[offset--] = 0x80 | (ident & 0x7f);
          }

          return this._createEncoderBuffer(objid);
        };

        function two(num) {
          if (num < 10) return '0' + num;
          else return num;
        }

        DERNode.prototype._encodeTime = function encodeTime(time, tag) {
          var str;
          var date = new Date(time);

          if (tag === 'gentime') {
            str = [
              two(date.getFullYear()),
              two(date.getUTCMonth() + 1),
              two(date.getUTCDate()),
              two(date.getUTCHours()),
              two(date.getUTCMinutes()),
              two(date.getUTCSeconds()),
              'Z',
            ].join('');
          } else if (tag === 'utctime') {
            str = [
              two(date.getFullYear() % 100),
              two(date.getUTCMonth() + 1),
              two(date.getUTCDate()),
              two(date.getUTCHours()),
              two(date.getUTCMinutes()),
              two(date.getUTCSeconds()),
              'Z',
            ].join('');
          } else {
            this.reporter.error(
              'Encoding ' + tag + ' time is not supported yet'
            );
          }

          return this._encodeStr(str, 'octstr');
        };

        DERNode.prototype._encodeNull = function encodeNull() {
          return this._createEncoderBuffer('');
        };

        DERNode.prototype._encodeInt = function encodeInt(num, values) {
          if (typeof num === 'string') {
            if (!values)
              return this.reporter.error(
                'String int or enum given, but no values map'
              );
            if (!values.hasOwnProperty(num)) {
              return this.reporter.error(
                "Values map doesn't contain: " + JSON.stringify(num)
              );
            }
            num = values[num];
          }

          // Bignum, assume big endian
          if (typeof num !== 'number' && !Buffer.isBuffer(num)) {
            var numArray = num.toArray();
            if (!num.sign && numArray[0] & 0x80) {
              numArray.unshift(0);
            }
            num = new Buffer(numArray);
          }

          if (Buffer.isBuffer(num)) {
            var size = num.length;
            if (num.length === 0) size++;

            var out = new Buffer(size);
            num.copy(out);
            if (num.length === 0) out[0] = 0;
            return this._createEncoderBuffer(out);
          }

          if (num < 0x80) return this._createEncoderBuffer(num);

          if (num < 0x100) return this._createEncoderBuffer([0, num]);

          var size = 1;
          for (var i = num; i >= 0x100; i >>= 8) size++;

          var out = new Array(size);
          for (var i = out.length - 1; i >= 0; i--) {
            out[i] = num & 0xff;
            num >>= 8;
          }
          if (out[0] & 0x80) {
            out.unshift(0);
          }

          return this._createEncoderBuffer(new Buffer(out));
        };

        DERNode.prototype._encodeBool = function encodeBool(value) {
          return this._createEncoderBuffer(value ? 0xff : 0);
        };

        DERNode.prototype._use = function use(entity, obj) {
          if (typeof entity === 'function') entity = entity(obj);
          return entity._getEncoder('der').tree;
        };

        DERNode.prototype._skipDefault = function skipDefault(
          dataBuffer,
          reporter,
          parent
        ) {
          var state = this._baseState;
          var i;
          if (state['default'] === null) return false;

          var data = dataBuffer.join();
          if (state.defaultBuffer === undefined)
            state.defaultBuffer = this._encodeValue(
              state['default'],
              reporter,
              parent
            ).join();

          if (data.length !== state.defaultBuffer.length) return false;

          for (i = 0; i < data.length; i++)
            if (data[i] !== state.defaultBuffer[i]) return false;

          return true;
        };

        // Utility methods

        function encodeTag(tag, primitive, cls, reporter) {
          var res;

          if (tag === 'seqof') tag = 'seq';
          else if (tag === 'setof') tag = 'set';

          if (der.tagByName.hasOwnProperty(tag)) res = der.tagByName[tag];
          else if (typeof tag === 'number' && (tag | 0) === tag) res = tag;
          else return reporter.error('Unknown tag: ' + tag);

          if (res >= 0x1f)
            return reporter.error('Multi-octet tag encoding unsupported');

          if (!primitive) res |= 0x20;

          res |= der.tagClassByName[cls || 'universal'] << 6;

          return res;
        }

        /***/
      },

    /***/ '../node_modules/asn1.js/lib/asn1/encoders/index.js':
      /*!**********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/encoders/index.js ***!
  \**********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var encoders = exports;

        encoders.der = __webpack_require__(
          /*! ./der */ '../node_modules/asn1.js/lib/asn1/encoders/der.js'
        );
        encoders.pem = __webpack_require__(
          /*! ./pem */ '../node_modules/asn1.js/lib/asn1/encoders/pem.js'
        );

        /***/
      },

    /***/ '../node_modules/asn1.js/lib/asn1/encoders/pem.js':
      /*!********************************************************!*\
  !*** ../node_modules/asn1.js/lib/asn1/encoders/pem.js ***!
  \********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );

        var DEREncoder = __webpack_require__(
          /*! ./der */ '../node_modules/asn1.js/lib/asn1/encoders/der.js'
        );

        function PEMEncoder(entity) {
          DEREncoder.call(this, entity);
          this.enc = 'pem';
        }
        inherits(PEMEncoder, DEREncoder);
        module.exports = PEMEncoder;

        PEMEncoder.prototype.encode = function encode(data, options) {
          var buf = DEREncoder.prototype.encode.call(this, data);

          var p = buf.toString('base64');
          var out = ['-----BEGIN ' + options.label + '-----'];
          for (var i = 0; i < p.length; i += 64) out.push(p.slice(i, i + 64));
          out.push('-----END ' + options.label + '-----');
          return out.join('\n');
        };

        /***/
      },

    /***/ '../node_modules/asn1.js/node_modules/bn.js/lib/bn.js':
      /*!************************************************************!*\
  !*** ../node_modules/asn1.js/node_modules/bn.js/lib/bn.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function (module) {
          (function (module, exports) {
            'use strict';

            // Utils
            function assert(val, msg) {
              if (!val) throw new Error(msg || 'Assertion failed');
            }

            // Could use `inherits` module, but don't want to move from single file
            // architecture yet.
            function inherits(ctor, superCtor) {
              ctor.super_ = superCtor;
              var TempCtor = function () {};
              TempCtor.prototype = superCtor.prototype;
              ctor.prototype = new TempCtor();
              ctor.prototype.constructor = ctor;
            }

            // BN

            function BN(number, base, endian) {
              if (BN.isBN(number)) {
                return number;
              }

              this.negative = 0;
              this.words = null;
              this.length = 0;

              // Reduction context
              this.red = null;

              if (number !== null) {
                if (base === 'le' || base === 'be') {
                  endian = base;
                  base = 10;
                }

                this._init(number || 0, base || 10, endian || 'be');
              }
            }
            if (typeof module === 'object') {
              module.exports = BN;
            } else {
              exports.BN = BN;
            }

            BN.BN = BN;
            BN.wordSize = 26;

            var Buffer;
            try {
              Buffer = __webpack_require__(/*! buffer */ 13).Buffer;
            } catch (e) {}

            BN.isBN = function isBN(num) {
              if (num instanceof BN) {
                return true;
              }

              return (
                num !== null &&
                typeof num === 'object' &&
                num.constructor.wordSize === BN.wordSize &&
                Array.isArray(num.words)
              );
            };

            BN.max = function max(left, right) {
              if (left.cmp(right) > 0) return left;
              return right;
            };

            BN.min = function min(left, right) {
              if (left.cmp(right) < 0) return left;
              return right;
            };

            BN.prototype._init = function init(number, base, endian) {
              if (typeof number === 'number') {
                return this._initNumber(number, base, endian);
              }

              if (typeof number === 'object') {
                return this._initArray(number, base, endian);
              }

              if (base === 'hex') {
                base = 16;
              }
              assert(base === (base | 0) && base >= 2 && base <= 36);

              number = number.toString().replace(/\s+/g, '');
              var start = 0;
              if (number[0] === '-') {
                start++;
              }

              if (base === 16) {
                this._parseHex(number, start);
              } else {
                this._parseBase(number, base, start);
              }

              if (number[0] === '-') {
                this.negative = 1;
              }

              this.strip();

              if (endian !== 'le') return;

              this._initArray(this.toArray(), base, endian);
            };

            BN.prototype._initNumber = function _initNumber(
              number,
              base,
              endian
            ) {
              if (number < 0) {
                this.negative = 1;
                number = -number;
              }
              if (number < 0x4000000) {
                this.words = [number & 0x3ffffff];
                this.length = 1;
              } else if (number < 0x10000000000000) {
                this.words = [
                  number & 0x3ffffff,
                  (number / 0x4000000) & 0x3ffffff,
                ];
                this.length = 2;
              } else {
                assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
                this.words = [
                  number & 0x3ffffff,
                  (number / 0x4000000) & 0x3ffffff,
                  1,
                ];
                this.length = 3;
              }

              if (endian !== 'le') return;

              // Reverse the bytes
              this._initArray(this.toArray(), base, endian);
            };

            BN.prototype._initArray = function _initArray(
              number,
              base,
              endian
            ) {
              // Perhaps a Uint8Array
              assert(typeof number.length === 'number');
              if (number.length <= 0) {
                this.words = [0];
                this.length = 1;
                return this;
              }

              this.length = Math.ceil(number.length / 3);
              this.words = new Array(this.length);
              for (var i = 0; i < this.length; i++) {
                this.words[i] = 0;
              }

              var j, w;
              var off = 0;
              if (endian === 'be') {
                for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
                  w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
                  this.words[j] |= (w << off) & 0x3ffffff;
                  this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
                  off += 24;
                  if (off >= 26) {
                    off -= 26;
                    j++;
                  }
                }
              } else if (endian === 'le') {
                for (i = 0, j = 0; i < number.length; i += 3) {
                  w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
                  this.words[j] |= (w << off) & 0x3ffffff;
                  this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
                  off += 24;
                  if (off >= 26) {
                    off -= 26;
                    j++;
                  }
                }
              }
              return this.strip();
            };

            function parseHex(str, start, end) {
              var r = 0;
              var len = Math.min(str.length, end);
              for (var i = start; i < len; i++) {
                var c = str.charCodeAt(i) - 48;

                r <<= 4;

                // 'a' - 'f'
                if (c >= 49 && c <= 54) {
                  r |= c - 49 + 0xa;

                  // 'A' - 'F'
                } else if (c >= 17 && c <= 22) {
                  r |= c - 17 + 0xa;

                  // '0' - '9'
                } else {
                  r |= c & 0xf;
                }
              }
              return r;
            }

            BN.prototype._parseHex = function _parseHex(number, start) {
              // Create possibly bigger array to ensure that it fits the number
              this.length = Math.ceil((number.length - start) / 6);
              this.words = new Array(this.length);
              for (var i = 0; i < this.length; i++) {
                this.words[i] = 0;
              }

              var j, w;
              // Scan 24-bit chunks and add them to the number
              var off = 0;
              for (i = number.length - 6, j = 0; i >= start; i -= 6) {
                w = parseHex(number, i, i + 6);
                this.words[j] |= (w << off) & 0x3ffffff;
                // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
                this.words[j + 1] |= (w >>> (26 - off)) & 0x3fffff;
                off += 24;
                if (off >= 26) {
                  off -= 26;
                  j++;
                }
              }
              if (i + 6 !== start) {
                w = parseHex(number, start, i + 6);
                this.words[j] |= (w << off) & 0x3ffffff;
                this.words[j + 1] |= (w >>> (26 - off)) & 0x3fffff;
              }
              this.strip();
            };

            function parseBase(str, start, end, mul) {
              var r = 0;
              var len = Math.min(str.length, end);
              for (var i = start; i < len; i++) {
                var c = str.charCodeAt(i) - 48;

                r *= mul;

                // 'a'
                if (c >= 49) {
                  r += c - 49 + 0xa;

                  // 'A'
                } else if (c >= 17) {
                  r += c - 17 + 0xa;

                  // '0' - '9'
                } else {
                  r += c;
                }
              }
              return r;
            }

            BN.prototype._parseBase = function _parseBase(number, base, start) {
              // Initialize as zero
              this.words = [0];
              this.length = 1;

              // Find length of limb in base
              for (
                var limbLen = 0, limbPow = 1;
                limbPow <= 0x3ffffff;
                limbPow *= base
              ) {
                limbLen++;
              }
              limbLen--;
              limbPow = (limbPow / base) | 0;

              var total = number.length - start;
              var mod = total % limbLen;
              var end = Math.min(total, total - mod) + start;

              var word = 0;
              for (var i = start; i < end; i += limbLen) {
                word = parseBase(number, i, i + limbLen, base);

                this.imuln(limbPow);
                if (this.words[0] + word < 0x4000000) {
                  this.words[0] += word;
                } else {
                  this._iaddn(word);
                }
              }

              if (mod !== 0) {
                var pow = 1;
                word = parseBase(number, i, number.length, base);

                for (i = 0; i < mod; i++) {
                  pow *= base;
                }

                this.imuln(pow);
                if (this.words[0] + word < 0x4000000) {
                  this.words[0] += word;
                } else {
                  this._iaddn(word);
                }
              }
            };

            BN.prototype.copy = function copy(dest) {
              dest.words = new Array(this.length);
              for (var i = 0; i < this.length; i++) {
                dest.words[i] = this.words[i];
              }
              dest.length = this.length;
              dest.negative = this.negative;
              dest.red = this.red;
            };

            BN.prototype.clone = function clone() {
              var r = new BN(null);
              this.copy(r);
              return r;
            };

            BN.prototype._expand = function _expand(size) {
              while (this.length < size) {
                this.words[this.length++] = 0;
              }
              return this;
            };

            // Remove leading `0` from `this`
            BN.prototype.strip = function strip() {
              while (this.length > 1 && this.words[this.length - 1] === 0) {
                this.length--;
              }
              return this._normSign();
            };

            BN.prototype._normSign = function _normSign() {
              // -0 = 0
              if (this.length === 1 && this.words[0] === 0) {
                this.negative = 0;
              }
              return this;
            };

            BN.prototype.inspect = function inspect() {
              return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
            };

            /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

            var zeros = [
              '',
              '0',
              '00',
              '000',
              '0000',
              '00000',
              '000000',
              '0000000',
              '00000000',
              '000000000',
              '0000000000',
              '00000000000',
              '000000000000',
              '0000000000000',
              '00000000000000',
              '000000000000000',
              '0000000000000000',
              '00000000000000000',
              '000000000000000000',
              '0000000000000000000',
              '00000000000000000000',
              '000000000000000000000',
              '0000000000000000000000',
              '00000000000000000000000',
              '000000000000000000000000',
              '0000000000000000000000000',
            ];

            var groupSizes = [
              0,
              0,
              25,
              16,
              12,
              11,
              10,
              9,
              8,
              8,
              7,
              7,
              7,
              7,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
            ];

            var groupBases = [
              0,
              0,
              33554432,
              43046721,
              16777216,
              48828125,
              60466176,
              40353607,
              16777216,
              43046721,
              10000000,
              19487171,
              35831808,
              62748517,
              7529536,
              11390625,
              16777216,
              24137569,
              34012224,
              47045881,
              64000000,
              4084101,
              5153632,
              6436343,
              7962624,
              9765625,
              11881376,
              14348907,
              17210368,
              20511149,
              24300000,
              28629151,
              33554432,
              39135393,
              45435424,
              52521875,
              60466176,
            ];

            BN.prototype.toString = function toString(base, padding) {
              base = base || 10;
              padding = padding | 0 || 1;

              var out;
              if (base === 16 || base === 'hex') {
                out = '';
                var off = 0;
                var carry = 0;
                for (var i = 0; i < this.length; i++) {
                  var w = this.words[i];
                  var word = (((w << off) | carry) & 0xffffff).toString(16);
                  carry = (w >>> (24 - off)) & 0xffffff;
                  if (carry !== 0 || i !== this.length - 1) {
                    out = zeros[6 - word.length] + word + out;
                  } else {
                    out = word + out;
                  }
                  off += 2;
                  if (off >= 26) {
                    off -= 26;
                    i--;
                  }
                }
                if (carry !== 0) {
                  out = carry.toString(16) + out;
                }
                while (out.length % padding !== 0) {
                  out = '0' + out;
                }
                if (this.negative !== 0) {
                  out = '-' + out;
                }
                return out;
              }

              if (base === (base | 0) && base >= 2 && base <= 36) {
                // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
                var groupSize = groupSizes[base];
                // var groupBase = Math.pow(base, groupSize);
                var groupBase = groupBases[base];
                out = '';
                var c = this.clone();
                c.negative = 0;
                while (!c.isZero()) {
                  var r = c.modn(groupBase).toString(base);
                  c = c.idivn(groupBase);

                  if (!c.isZero()) {
                    out = zeros[groupSize - r.length] + r + out;
                  } else {
                    out = r + out;
                  }
                }
                if (this.isZero()) {
                  out = '0' + out;
                }
                while (out.length % padding !== 0) {
                  out = '0' + out;
                }
                if (this.negative !== 0) {
                  out = '-' + out;
                }
                return out;
              }

              assert(false, 'Base should be between 2 and 36');
            };

            BN.prototype.toNumber = function toNumber() {
              var ret = this.words[0];
              if (this.length === 2) {
                ret += this.words[1] * 0x4000000;
              } else if (this.length === 3 && this.words[2] === 0x01) {
                // NOTE: at this stage it is known that the top bit is set
                ret += 0x10000000000000 + this.words[1] * 0x4000000;
              } else if (this.length > 2) {
                assert(false, 'Number can only safely store up to 53 bits');
              }
              return this.negative !== 0 ? -ret : ret;
            };

            BN.prototype.toJSON = function toJSON() {
              return this.toString(16);
            };

            BN.prototype.toBuffer = function toBuffer(endian, length) {
              assert(typeof Buffer !== 'undefined');
              return this.toArrayLike(Buffer, endian, length);
            };

            BN.prototype.toArray = function toArray(endian, length) {
              return this.toArrayLike(Array, endian, length);
            };

            BN.prototype.toArrayLike = function toArrayLike(
              ArrayType,
              endian,
              length
            ) {
              var byteLength = this.byteLength();
              var reqLength = length || Math.max(1, byteLength);
              assert(
                byteLength <= reqLength,
                'byte array longer than desired length'
              );
              assert(reqLength > 0, 'Requested array length <= 0');

              this.strip();
              var littleEndian = endian === 'le';
              var res = new ArrayType(reqLength);

              var b, i;
              var q = this.clone();
              if (!littleEndian) {
                // Assume big-endian
                for (i = 0; i < reqLength - byteLength; i++) {
                  res[i] = 0;
                }

                for (i = 0; !q.isZero(); i++) {
                  b = q.andln(0xff);
                  q.iushrn(8);

                  res[reqLength - i - 1] = b;
                }
              } else {
                for (i = 0; !q.isZero(); i++) {
                  b = q.andln(0xff);
                  q.iushrn(8);

                  res[i] = b;
                }

                for (; i < reqLength; i++) {
                  res[i] = 0;
                }
              }

              return res;
            };

            if (Math.clz32) {
              BN.prototype._countBits = function _countBits(w) {
                return 32 - Math.clz32(w);
              };
            } else {
              BN.prototype._countBits = function _countBits(w) {
                var t = w;
                var r = 0;
                if (t >= 0x1000) {
                  r += 13;
                  t >>>= 13;
                }
                if (t >= 0x40) {
                  r += 7;
                  t >>>= 7;
                }
                if (t >= 0x8) {
                  r += 4;
                  t >>>= 4;
                }
                if (t >= 0x02) {
                  r += 2;
                  t >>>= 2;
                }
                return r + t;
              };
            }

            BN.prototype._zeroBits = function _zeroBits(w) {
              // Short-cut
              if (w === 0) return 26;

              var t = w;
              var r = 0;
              if ((t & 0x1fff) === 0) {
                r += 13;
                t >>>= 13;
              }
              if ((t & 0x7f) === 0) {
                r += 7;
                t >>>= 7;
              }
              if ((t & 0xf) === 0) {
                r += 4;
                t >>>= 4;
              }
              if ((t & 0x3) === 0) {
                r += 2;
                t >>>= 2;
              }
              if ((t & 0x1) === 0) {
                r++;
              }
              return r;
            };

            // Return number of used bits in a BN
            BN.prototype.bitLength = function bitLength() {
              var w = this.words[this.length - 1];
              var hi = this._countBits(w);
              return (this.length - 1) * 26 + hi;
            };

            function toBitArray(num) {
              var w = new Array(num.bitLength());

              for (var bit = 0; bit < w.length; bit++) {
                var off = (bit / 26) | 0;
                var wbit = bit % 26;

                w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
              }

              return w;
            }

            // Number of trailing zero bits
            BN.prototype.zeroBits = function zeroBits() {
              if (this.isZero()) return 0;

              var r = 0;
              for (var i = 0; i < this.length; i++) {
                var b = this._zeroBits(this.words[i]);
                r += b;
                if (b !== 26) break;
              }
              return r;
            };

            BN.prototype.byteLength = function byteLength() {
              return Math.ceil(this.bitLength() / 8);
            };

            BN.prototype.toTwos = function toTwos(width) {
              if (this.negative !== 0) {
                return this.abs().inotn(width).iaddn(1);
              }
              return this.clone();
            };

            BN.prototype.fromTwos = function fromTwos(width) {
              if (this.testn(width - 1)) {
                return this.notn(width).iaddn(1).ineg();
              }
              return this.clone();
            };

            BN.prototype.isNeg = function isNeg() {
              return this.negative !== 0;
            };

            // Return negative clone of `this`
            BN.prototype.neg = function neg() {
              return this.clone().ineg();
            };

            BN.prototype.ineg = function ineg() {
              if (!this.isZero()) {
                this.negative ^= 1;
              }

              return this;
            };

            // Or `num` with `this` in-place
            BN.prototype.iuor = function iuor(num) {
              while (this.length < num.length) {
                this.words[this.length++] = 0;
              }

              for (var i = 0; i < num.length; i++) {
                this.words[i] = this.words[i] | num.words[i];
              }

              return this.strip();
            };

            BN.prototype.ior = function ior(num) {
              assert((this.negative | num.negative) === 0);
              return this.iuor(num);
            };

            // Or `num` with `this`
            BN.prototype.or = function or(num) {
              if (this.length > num.length) return this.clone().ior(num);
              return num.clone().ior(this);
            };

            BN.prototype.uor = function uor(num) {
              if (this.length > num.length) return this.clone().iuor(num);
              return num.clone().iuor(this);
            };

            // And `num` with `this` in-place
            BN.prototype.iuand = function iuand(num) {
              // b = min-length(num, this)
              var b;
              if (this.length > num.length) {
                b = num;
              } else {
                b = this;
              }

              for (var i = 0; i < b.length; i++) {
                this.words[i] = this.words[i] & num.words[i];
              }

              this.length = b.length;

              return this.strip();
            };

            BN.prototype.iand = function iand(num) {
              assert((this.negative | num.negative) === 0);
              return this.iuand(num);
            };

            // And `num` with `this`
            BN.prototype.and = function and(num) {
              if (this.length > num.length) return this.clone().iand(num);
              return num.clone().iand(this);
            };

            BN.prototype.uand = function uand(num) {
              if (this.length > num.length) return this.clone().iuand(num);
              return num.clone().iuand(this);
            };

            // Xor `num` with `this` in-place
            BN.prototype.iuxor = function iuxor(num) {
              // a.length > b.length
              var a;
              var b;
              if (this.length > num.length) {
                a = this;
                b = num;
              } else {
                a = num;
                b = this;
              }

              for (var i = 0; i < b.length; i++) {
                this.words[i] = a.words[i] ^ b.words[i];
              }

              if (this !== a) {
                for (; i < a.length; i++) {
                  this.words[i] = a.words[i];
                }
              }

              this.length = a.length;

              return this.strip();
            };

            BN.prototype.ixor = function ixor(num) {
              assert((this.negative | num.negative) === 0);
              return this.iuxor(num);
            };

            // Xor `num` with `this`
            BN.prototype.xor = function xor(num) {
              if (this.length > num.length) return this.clone().ixor(num);
              return num.clone().ixor(this);
            };

            BN.prototype.uxor = function uxor(num) {
              if (this.length > num.length) return this.clone().iuxor(num);
              return num.clone().iuxor(this);
            };

            // Not ``this`` with ``width`` bitwidth
            BN.prototype.inotn = function inotn(width) {
              assert(typeof width === 'number' && width >= 0);

              var bytesNeeded = Math.ceil(width / 26) | 0;
              var bitsLeft = width % 26;

              // Extend the buffer with leading zeroes
              this._expand(bytesNeeded);

              if (bitsLeft > 0) {
                bytesNeeded--;
              }

              // Handle complete words
              for (var i = 0; i < bytesNeeded; i++) {
                this.words[i] = ~this.words[i] & 0x3ffffff;
              }

              // Handle the residue
              if (bitsLeft > 0) {
                this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
              }

              // And remove leading zeroes
              return this.strip();
            };

            BN.prototype.notn = function notn(width) {
              return this.clone().inotn(width);
            };

            // Set `bit` of `this`
            BN.prototype.setn = function setn(bit, val) {
              assert(typeof bit === 'number' && bit >= 0);

              var off = (bit / 26) | 0;
              var wbit = bit % 26;

              this._expand(off + 1);

              if (val) {
                this.words[off] = this.words[off] | (1 << wbit);
              } else {
                this.words[off] = this.words[off] & ~(1 << wbit);
              }

              return this.strip();
            };

            // Add `num` to `this` in-place
            BN.prototype.iadd = function iadd(num) {
              var r;

              // negative + positive
              if (this.negative !== 0 && num.negative === 0) {
                this.negative = 0;
                r = this.isub(num);
                this.negative ^= 1;
                return this._normSign();

                // positive + negative
              } else if (this.negative === 0 && num.negative !== 0) {
                num.negative = 0;
                r = this.isub(num);
                num.negative = 1;
                return r._normSign();
              }

              // a.length > b.length
              var a, b;
              if (this.length > num.length) {
                a = this;
                b = num;
              } else {
                a = num;
                b = this;
              }

              var carry = 0;
              for (var i = 0; i < b.length; i++) {
                r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
                this.words[i] = r & 0x3ffffff;
                carry = r >>> 26;
              }
              for (; carry !== 0 && i < a.length; i++) {
                r = (a.words[i] | 0) + carry;
                this.words[i] = r & 0x3ffffff;
                carry = r >>> 26;
              }

              this.length = a.length;
              if (carry !== 0) {
                this.words[this.length] = carry;
                this.length++;
                // Copy the rest of the words
              } else if (a !== this) {
                for (; i < a.length; i++) {
                  this.words[i] = a.words[i];
                }
              }

              return this;
            };

            // Add `num` to `this`
            BN.prototype.add = function add(num) {
              var res;
              if (num.negative !== 0 && this.negative === 0) {
                num.negative = 0;
                res = this.sub(num);
                num.negative ^= 1;
                return res;
              } else if (num.negative === 0 && this.negative !== 0) {
                this.negative = 0;
                res = num.sub(this);
                this.negative = 1;
                return res;
              }

              if (this.length > num.length) return this.clone().iadd(num);

              return num.clone().iadd(this);
            };

            // Subtract `num` from `this` in-place
            BN.prototype.isub = function isub(num) {
              // this - (-num) = this + num
              if (num.negative !== 0) {
                num.negative = 0;
                var r = this.iadd(num);
                num.negative = 1;
                return r._normSign();

                // -this - num = -(this + num)
              } else if (this.negative !== 0) {
                this.negative = 0;
                this.iadd(num);
                this.negative = 1;
                return this._normSign();
              }

              // At this point both numbers are positive
              var cmp = this.cmp(num);

              // Optimization - zeroify
              if (cmp === 0) {
                this.negative = 0;
                this.length = 1;
                this.words[0] = 0;
                return this;
              }

              // a > b
              var a, b;
              if (cmp > 0) {
                a = this;
                b = num;
              } else {
                a = num;
                b = this;
              }

              var carry = 0;
              for (var i = 0; i < b.length; i++) {
                r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
                carry = r >> 26;
                this.words[i] = r & 0x3ffffff;
              }
              for (; carry !== 0 && i < a.length; i++) {
                r = (a.words[i] | 0) + carry;
                carry = r >> 26;
                this.words[i] = r & 0x3ffffff;
              }

              // Copy rest of the words
              if (carry === 0 && i < a.length && a !== this) {
                for (; i < a.length; i++) {
                  this.words[i] = a.words[i];
                }
              }

              this.length = Math.max(this.length, i);

              if (a !== this) {
                this.negative = 1;
              }

              return this.strip();
            };

            // Subtract `num` from `this`
            BN.prototype.sub = function sub(num) {
              return this.clone().isub(num);
            };

            function smallMulTo(self, num, out) {
              out.negative = num.negative ^ self.negative;
              var len = (self.length + num.length) | 0;
              out.length = len;
              len = (len - 1) | 0;

              // Peel one iteration (compiler can't do it, because of code complexity)
              var a = self.words[0] | 0;
              var b = num.words[0] | 0;
              var r = a * b;

              var lo = r & 0x3ffffff;
              var carry = (r / 0x4000000) | 0;
              out.words[0] = lo;

              for (var k = 1; k < len; k++) {
                // Sum all words with the same `i + j = k` and accumulate `ncarry`,
                // note that ncarry could be >= 0x3ffffff
                var ncarry = carry >>> 26;
                var rword = carry & 0x3ffffff;
                var maxJ = Math.min(k, num.length - 1);
                for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                  var i = (k - j) | 0;
                  a = self.words[i] | 0;
                  b = num.words[j] | 0;
                  r = a * b + rword;
                  ncarry += (r / 0x4000000) | 0;
                  rword = r & 0x3ffffff;
                }
                out.words[k] = rword | 0;
                carry = ncarry | 0;
              }
              if (carry !== 0) {
                out.words[k] = carry | 0;
              } else {
                out.length--;
              }

              return out.strip();
            }

            // TODO(indutny): it may be reasonable to omit it for users who don't need
            // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
            // multiplication (like elliptic secp256k1).
            var comb10MulTo = function comb10MulTo(self, num, out) {
              var a = self.words;
              var b = num.words;
              var o = out.words;
              var c = 0;
              var lo;
              var mid;
              var hi;
              var a0 = a[0] | 0;
              var al0 = a0 & 0x1fff;
              var ah0 = a0 >>> 13;
              var a1 = a[1] | 0;
              var al1 = a1 & 0x1fff;
              var ah1 = a1 >>> 13;
              var a2 = a[2] | 0;
              var al2 = a2 & 0x1fff;
              var ah2 = a2 >>> 13;
              var a3 = a[3] | 0;
              var al3 = a3 & 0x1fff;
              var ah3 = a3 >>> 13;
              var a4 = a[4] | 0;
              var al4 = a4 & 0x1fff;
              var ah4 = a4 >>> 13;
              var a5 = a[5] | 0;
              var al5 = a5 & 0x1fff;
              var ah5 = a5 >>> 13;
              var a6 = a[6] | 0;
              var al6 = a6 & 0x1fff;
              var ah6 = a6 >>> 13;
              var a7 = a[7] | 0;
              var al7 = a7 & 0x1fff;
              var ah7 = a7 >>> 13;
              var a8 = a[8] | 0;
              var al8 = a8 & 0x1fff;
              var ah8 = a8 >>> 13;
              var a9 = a[9] | 0;
              var al9 = a9 & 0x1fff;
              var ah9 = a9 >>> 13;
              var b0 = b[0] | 0;
              var bl0 = b0 & 0x1fff;
              var bh0 = b0 >>> 13;
              var b1 = b[1] | 0;
              var bl1 = b1 & 0x1fff;
              var bh1 = b1 >>> 13;
              var b2 = b[2] | 0;
              var bl2 = b2 & 0x1fff;
              var bh2 = b2 >>> 13;
              var b3 = b[3] | 0;
              var bl3 = b3 & 0x1fff;
              var bh3 = b3 >>> 13;
              var b4 = b[4] | 0;
              var bl4 = b4 & 0x1fff;
              var bh4 = b4 >>> 13;
              var b5 = b[5] | 0;
              var bl5 = b5 & 0x1fff;
              var bh5 = b5 >>> 13;
              var b6 = b[6] | 0;
              var bl6 = b6 & 0x1fff;
              var bh6 = b6 >>> 13;
              var b7 = b[7] | 0;
              var bl7 = b7 & 0x1fff;
              var bh7 = b7 >>> 13;
              var b8 = b[8] | 0;
              var bl8 = b8 & 0x1fff;
              var bh8 = b8 >>> 13;
              var b9 = b[9] | 0;
              var bl9 = b9 & 0x1fff;
              var bh9 = b9 >>> 13;

              out.negative = self.negative ^ num.negative;
              out.length = 19;
              /* k = 0 */
              lo = Math.imul(al0, bl0);
              mid = Math.imul(al0, bh0);
              mid = (mid + Math.imul(ah0, bl0)) | 0;
              hi = Math.imul(ah0, bh0);
              var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
              w0 &= 0x3ffffff;
              /* k = 1 */
              lo = Math.imul(al1, bl0);
              mid = Math.imul(al1, bh0);
              mid = (mid + Math.imul(ah1, bl0)) | 0;
              hi = Math.imul(ah1, bh0);
              lo = (lo + Math.imul(al0, bl1)) | 0;
              mid = (mid + Math.imul(al0, bh1)) | 0;
              mid = (mid + Math.imul(ah0, bl1)) | 0;
              hi = (hi + Math.imul(ah0, bh1)) | 0;
              var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
              w1 &= 0x3ffffff;
              /* k = 2 */
              lo = Math.imul(al2, bl0);
              mid = Math.imul(al2, bh0);
              mid = (mid + Math.imul(ah2, bl0)) | 0;
              hi = Math.imul(ah2, bh0);
              lo = (lo + Math.imul(al1, bl1)) | 0;
              mid = (mid + Math.imul(al1, bh1)) | 0;
              mid = (mid + Math.imul(ah1, bl1)) | 0;
              hi = (hi + Math.imul(ah1, bh1)) | 0;
              lo = (lo + Math.imul(al0, bl2)) | 0;
              mid = (mid + Math.imul(al0, bh2)) | 0;
              mid = (mid + Math.imul(ah0, bl2)) | 0;
              hi = (hi + Math.imul(ah0, bh2)) | 0;
              var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
              w2 &= 0x3ffffff;
              /* k = 3 */
              lo = Math.imul(al3, bl0);
              mid = Math.imul(al3, bh0);
              mid = (mid + Math.imul(ah3, bl0)) | 0;
              hi = Math.imul(ah3, bh0);
              lo = (lo + Math.imul(al2, bl1)) | 0;
              mid = (mid + Math.imul(al2, bh1)) | 0;
              mid = (mid + Math.imul(ah2, bl1)) | 0;
              hi = (hi + Math.imul(ah2, bh1)) | 0;
              lo = (lo + Math.imul(al1, bl2)) | 0;
              mid = (mid + Math.imul(al1, bh2)) | 0;
              mid = (mid + Math.imul(ah1, bl2)) | 0;
              hi = (hi + Math.imul(ah1, bh2)) | 0;
              lo = (lo + Math.imul(al0, bl3)) | 0;
              mid = (mid + Math.imul(al0, bh3)) | 0;
              mid = (mid + Math.imul(ah0, bl3)) | 0;
              hi = (hi + Math.imul(ah0, bh3)) | 0;
              var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
              w3 &= 0x3ffffff;
              /* k = 4 */
              lo = Math.imul(al4, bl0);
              mid = Math.imul(al4, bh0);
              mid = (mid + Math.imul(ah4, bl0)) | 0;
              hi = Math.imul(ah4, bh0);
              lo = (lo + Math.imul(al3, bl1)) | 0;
              mid = (mid + Math.imul(al3, bh1)) | 0;
              mid = (mid + Math.imul(ah3, bl1)) | 0;
              hi = (hi + Math.imul(ah3, bh1)) | 0;
              lo = (lo + Math.imul(al2, bl2)) | 0;
              mid = (mid + Math.imul(al2, bh2)) | 0;
              mid = (mid + Math.imul(ah2, bl2)) | 0;
              hi = (hi + Math.imul(ah2, bh2)) | 0;
              lo = (lo + Math.imul(al1, bl3)) | 0;
              mid = (mid + Math.imul(al1, bh3)) | 0;
              mid = (mid + Math.imul(ah1, bl3)) | 0;
              hi = (hi + Math.imul(ah1, bh3)) | 0;
              lo = (lo + Math.imul(al0, bl4)) | 0;
              mid = (mid + Math.imul(al0, bh4)) | 0;
              mid = (mid + Math.imul(ah0, bl4)) | 0;
              hi = (hi + Math.imul(ah0, bh4)) | 0;
              var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
              w4 &= 0x3ffffff;
              /* k = 5 */
              lo = Math.imul(al5, bl0);
              mid = Math.imul(al5, bh0);
              mid = (mid + Math.imul(ah5, bl0)) | 0;
              hi = Math.imul(ah5, bh0);
              lo = (lo + Math.imul(al4, bl1)) | 0;
              mid = (mid + Math.imul(al4, bh1)) | 0;
              mid = (mid + Math.imul(ah4, bl1)) | 0;
              hi = (hi + Math.imul(ah4, bh1)) | 0;
              lo = (lo + Math.imul(al3, bl2)) | 0;
              mid = (mid + Math.imul(al3, bh2)) | 0;
              mid = (mid + Math.imul(ah3, bl2)) | 0;
              hi = (hi + Math.imul(ah3, bh2)) | 0;
              lo = (lo + Math.imul(al2, bl3)) | 0;
              mid = (mid + Math.imul(al2, bh3)) | 0;
              mid = (mid + Math.imul(ah2, bl3)) | 0;
              hi = (hi + Math.imul(ah2, bh3)) | 0;
              lo = (lo + Math.imul(al1, bl4)) | 0;
              mid = (mid + Math.imul(al1, bh4)) | 0;
              mid = (mid + Math.imul(ah1, bl4)) | 0;
              hi = (hi + Math.imul(ah1, bh4)) | 0;
              lo = (lo + Math.imul(al0, bl5)) | 0;
              mid = (mid + Math.imul(al0, bh5)) | 0;
              mid = (mid + Math.imul(ah0, bl5)) | 0;
              hi = (hi + Math.imul(ah0, bh5)) | 0;
              var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
              w5 &= 0x3ffffff;
              /* k = 6 */
              lo = Math.imul(al6, bl0);
              mid = Math.imul(al6, bh0);
              mid = (mid + Math.imul(ah6, bl0)) | 0;
              hi = Math.imul(ah6, bh0);
              lo = (lo + Math.imul(al5, bl1)) | 0;
              mid = (mid + Math.imul(al5, bh1)) | 0;
              mid = (mid + Math.imul(ah5, bl1)) | 0;
              hi = (hi + Math.imul(ah5, bh1)) | 0;
              lo = (lo + Math.imul(al4, bl2)) | 0;
              mid = (mid + Math.imul(al4, bh2)) | 0;
              mid = (mid + Math.imul(ah4, bl2)) | 0;
              hi = (hi + Math.imul(ah4, bh2)) | 0;
              lo = (lo + Math.imul(al3, bl3)) | 0;
              mid = (mid + Math.imul(al3, bh3)) | 0;
              mid = (mid + Math.imul(ah3, bl3)) | 0;
              hi = (hi + Math.imul(ah3, bh3)) | 0;
              lo = (lo + Math.imul(al2, bl4)) | 0;
              mid = (mid + Math.imul(al2, bh4)) | 0;
              mid = (mid + Math.imul(ah2, bl4)) | 0;
              hi = (hi + Math.imul(ah2, bh4)) | 0;
              lo = (lo + Math.imul(al1, bl5)) | 0;
              mid = (mid + Math.imul(al1, bh5)) | 0;
              mid = (mid + Math.imul(ah1, bl5)) | 0;
              hi = (hi + Math.imul(ah1, bh5)) | 0;
              lo = (lo + Math.imul(al0, bl6)) | 0;
              mid = (mid + Math.imul(al0, bh6)) | 0;
              mid = (mid + Math.imul(ah0, bl6)) | 0;
              hi = (hi + Math.imul(ah0, bh6)) | 0;
              var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
              w6 &= 0x3ffffff;
              /* k = 7 */
              lo = Math.imul(al7, bl0);
              mid = Math.imul(al7, bh0);
              mid = (mid + Math.imul(ah7, bl0)) | 0;
              hi = Math.imul(ah7, bh0);
              lo = (lo + Math.imul(al6, bl1)) | 0;
              mid = (mid + Math.imul(al6, bh1)) | 0;
              mid = (mid + Math.imul(ah6, bl1)) | 0;
              hi = (hi + Math.imul(ah6, bh1)) | 0;
              lo = (lo + Math.imul(al5, bl2)) | 0;
              mid = (mid + Math.imul(al5, bh2)) | 0;
              mid = (mid + Math.imul(ah5, bl2)) | 0;
              hi = (hi + Math.imul(ah5, bh2)) | 0;
              lo = (lo + Math.imul(al4, bl3)) | 0;
              mid = (mid + Math.imul(al4, bh3)) | 0;
              mid = (mid + Math.imul(ah4, bl3)) | 0;
              hi = (hi + Math.imul(ah4, bh3)) | 0;
              lo = (lo + Math.imul(al3, bl4)) | 0;
              mid = (mid + Math.imul(al3, bh4)) | 0;
              mid = (mid + Math.imul(ah3, bl4)) | 0;
              hi = (hi + Math.imul(ah3, bh4)) | 0;
              lo = (lo + Math.imul(al2, bl5)) | 0;
              mid = (mid + Math.imul(al2, bh5)) | 0;
              mid = (mid + Math.imul(ah2, bl5)) | 0;
              hi = (hi + Math.imul(ah2, bh5)) | 0;
              lo = (lo + Math.imul(al1, bl6)) | 0;
              mid = (mid + Math.imul(al1, bh6)) | 0;
              mid = (mid + Math.imul(ah1, bl6)) | 0;
              hi = (hi + Math.imul(ah1, bh6)) | 0;
              lo = (lo + Math.imul(al0, bl7)) | 0;
              mid = (mid + Math.imul(al0, bh7)) | 0;
              mid = (mid + Math.imul(ah0, bl7)) | 0;
              hi = (hi + Math.imul(ah0, bh7)) | 0;
              var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
              w7 &= 0x3ffffff;
              /* k = 8 */
              lo = Math.imul(al8, bl0);
              mid = Math.imul(al8, bh0);
              mid = (mid + Math.imul(ah8, bl0)) | 0;
              hi = Math.imul(ah8, bh0);
              lo = (lo + Math.imul(al7, bl1)) | 0;
              mid = (mid + Math.imul(al7, bh1)) | 0;
              mid = (mid + Math.imul(ah7, bl1)) | 0;
              hi = (hi + Math.imul(ah7, bh1)) | 0;
              lo = (lo + Math.imul(al6, bl2)) | 0;
              mid = (mid + Math.imul(al6, bh2)) | 0;
              mid = (mid + Math.imul(ah6, bl2)) | 0;
              hi = (hi + Math.imul(ah6, bh2)) | 0;
              lo = (lo + Math.imul(al5, bl3)) | 0;
              mid = (mid + Math.imul(al5, bh3)) | 0;
              mid = (mid + Math.imul(ah5, bl3)) | 0;
              hi = (hi + Math.imul(ah5, bh3)) | 0;
              lo = (lo + Math.imul(al4, bl4)) | 0;
              mid = (mid + Math.imul(al4, bh4)) | 0;
              mid = (mid + Math.imul(ah4, bl4)) | 0;
              hi = (hi + Math.imul(ah4, bh4)) | 0;
              lo = (lo + Math.imul(al3, bl5)) | 0;
              mid = (mid + Math.imul(al3, bh5)) | 0;
              mid = (mid + Math.imul(ah3, bl5)) | 0;
              hi = (hi + Math.imul(ah3, bh5)) | 0;
              lo = (lo + Math.imul(al2, bl6)) | 0;
              mid = (mid + Math.imul(al2, bh6)) | 0;
              mid = (mid + Math.imul(ah2, bl6)) | 0;
              hi = (hi + Math.imul(ah2, bh6)) | 0;
              lo = (lo + Math.imul(al1, bl7)) | 0;
              mid = (mid + Math.imul(al1, bh7)) | 0;
              mid = (mid + Math.imul(ah1, bl7)) | 0;
              hi = (hi + Math.imul(ah1, bh7)) | 0;
              lo = (lo + Math.imul(al0, bl8)) | 0;
              mid = (mid + Math.imul(al0, bh8)) | 0;
              mid = (mid + Math.imul(ah0, bl8)) | 0;
              hi = (hi + Math.imul(ah0, bh8)) | 0;
              var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
              w8 &= 0x3ffffff;
              /* k = 9 */
              lo = Math.imul(al9, bl0);
              mid = Math.imul(al9, bh0);
              mid = (mid + Math.imul(ah9, bl0)) | 0;
              hi = Math.imul(ah9, bh0);
              lo = (lo + Math.imul(al8, bl1)) | 0;
              mid = (mid + Math.imul(al8, bh1)) | 0;
              mid = (mid + Math.imul(ah8, bl1)) | 0;
              hi = (hi + Math.imul(ah8, bh1)) | 0;
              lo = (lo + Math.imul(al7, bl2)) | 0;
              mid = (mid + Math.imul(al7, bh2)) | 0;
              mid = (mid + Math.imul(ah7, bl2)) | 0;
              hi = (hi + Math.imul(ah7, bh2)) | 0;
              lo = (lo + Math.imul(al6, bl3)) | 0;
              mid = (mid + Math.imul(al6, bh3)) | 0;
              mid = (mid + Math.imul(ah6, bl3)) | 0;
              hi = (hi + Math.imul(ah6, bh3)) | 0;
              lo = (lo + Math.imul(al5, bl4)) | 0;
              mid = (mid + Math.imul(al5, bh4)) | 0;
              mid = (mid + Math.imul(ah5, bl4)) | 0;
              hi = (hi + Math.imul(ah5, bh4)) | 0;
              lo = (lo + Math.imul(al4, bl5)) | 0;
              mid = (mid + Math.imul(al4, bh5)) | 0;
              mid = (mid + Math.imul(ah4, bl5)) | 0;
              hi = (hi + Math.imul(ah4, bh5)) | 0;
              lo = (lo + Math.imul(al3, bl6)) | 0;
              mid = (mid + Math.imul(al3, bh6)) | 0;
              mid = (mid + Math.imul(ah3, bl6)) | 0;
              hi = (hi + Math.imul(ah3, bh6)) | 0;
              lo = (lo + Math.imul(al2, bl7)) | 0;
              mid = (mid + Math.imul(al2, bh7)) | 0;
              mid = (mid + Math.imul(ah2, bl7)) | 0;
              hi = (hi + Math.imul(ah2, bh7)) | 0;
              lo = (lo + Math.imul(al1, bl8)) | 0;
              mid = (mid + Math.imul(al1, bh8)) | 0;
              mid = (mid + Math.imul(ah1, bl8)) | 0;
              hi = (hi + Math.imul(ah1, bh8)) | 0;
              lo = (lo + Math.imul(al0, bl9)) | 0;
              mid = (mid + Math.imul(al0, bh9)) | 0;
              mid = (mid + Math.imul(ah0, bl9)) | 0;
              hi = (hi + Math.imul(ah0, bh9)) | 0;
              var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
              w9 &= 0x3ffffff;
              /* k = 10 */
              lo = Math.imul(al9, bl1);
              mid = Math.imul(al9, bh1);
              mid = (mid + Math.imul(ah9, bl1)) | 0;
              hi = Math.imul(ah9, bh1);
              lo = (lo + Math.imul(al8, bl2)) | 0;
              mid = (mid + Math.imul(al8, bh2)) | 0;
              mid = (mid + Math.imul(ah8, bl2)) | 0;
              hi = (hi + Math.imul(ah8, bh2)) | 0;
              lo = (lo + Math.imul(al7, bl3)) | 0;
              mid = (mid + Math.imul(al7, bh3)) | 0;
              mid = (mid + Math.imul(ah7, bl3)) | 0;
              hi = (hi + Math.imul(ah7, bh3)) | 0;
              lo = (lo + Math.imul(al6, bl4)) | 0;
              mid = (mid + Math.imul(al6, bh4)) | 0;
              mid = (mid + Math.imul(ah6, bl4)) | 0;
              hi = (hi + Math.imul(ah6, bh4)) | 0;
              lo = (lo + Math.imul(al5, bl5)) | 0;
              mid = (mid + Math.imul(al5, bh5)) | 0;
              mid = (mid + Math.imul(ah5, bl5)) | 0;
              hi = (hi + Math.imul(ah5, bh5)) | 0;
              lo = (lo + Math.imul(al4, bl6)) | 0;
              mid = (mid + Math.imul(al4, bh6)) | 0;
              mid = (mid + Math.imul(ah4, bl6)) | 0;
              hi = (hi + Math.imul(ah4, bh6)) | 0;
              lo = (lo + Math.imul(al3, bl7)) | 0;
              mid = (mid + Math.imul(al3, bh7)) | 0;
              mid = (mid + Math.imul(ah3, bl7)) | 0;
              hi = (hi + Math.imul(ah3, bh7)) | 0;
              lo = (lo + Math.imul(al2, bl8)) | 0;
              mid = (mid + Math.imul(al2, bh8)) | 0;
              mid = (mid + Math.imul(ah2, bl8)) | 0;
              hi = (hi + Math.imul(ah2, bh8)) | 0;
              lo = (lo + Math.imul(al1, bl9)) | 0;
              mid = (mid + Math.imul(al1, bh9)) | 0;
              mid = (mid + Math.imul(ah1, bl9)) | 0;
              hi = (hi + Math.imul(ah1, bh9)) | 0;
              var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
              w10 &= 0x3ffffff;
              /* k = 11 */
              lo = Math.imul(al9, bl2);
              mid = Math.imul(al9, bh2);
              mid = (mid + Math.imul(ah9, bl2)) | 0;
              hi = Math.imul(ah9, bh2);
              lo = (lo + Math.imul(al8, bl3)) | 0;
              mid = (mid + Math.imul(al8, bh3)) | 0;
              mid = (mid + Math.imul(ah8, bl3)) | 0;
              hi = (hi + Math.imul(ah8, bh3)) | 0;
              lo = (lo + Math.imul(al7, bl4)) | 0;
              mid = (mid + Math.imul(al7, bh4)) | 0;
              mid = (mid + Math.imul(ah7, bl4)) | 0;
              hi = (hi + Math.imul(ah7, bh4)) | 0;
              lo = (lo + Math.imul(al6, bl5)) | 0;
              mid = (mid + Math.imul(al6, bh5)) | 0;
              mid = (mid + Math.imul(ah6, bl5)) | 0;
              hi = (hi + Math.imul(ah6, bh5)) | 0;
              lo = (lo + Math.imul(al5, bl6)) | 0;
              mid = (mid + Math.imul(al5, bh6)) | 0;
              mid = (mid + Math.imul(ah5, bl6)) | 0;
              hi = (hi + Math.imul(ah5, bh6)) | 0;
              lo = (lo + Math.imul(al4, bl7)) | 0;
              mid = (mid + Math.imul(al4, bh7)) | 0;
              mid = (mid + Math.imul(ah4, bl7)) | 0;
              hi = (hi + Math.imul(ah4, bh7)) | 0;
              lo = (lo + Math.imul(al3, bl8)) | 0;
              mid = (mid + Math.imul(al3, bh8)) | 0;
              mid = (mid + Math.imul(ah3, bl8)) | 0;
              hi = (hi + Math.imul(ah3, bh8)) | 0;
              lo = (lo + Math.imul(al2, bl9)) | 0;
              mid = (mid + Math.imul(al2, bh9)) | 0;
              mid = (mid + Math.imul(ah2, bl9)) | 0;
              hi = (hi + Math.imul(ah2, bh9)) | 0;
              var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
              w11 &= 0x3ffffff;
              /* k = 12 */
              lo = Math.imul(al9, bl3);
              mid = Math.imul(al9, bh3);
              mid = (mid + Math.imul(ah9, bl3)) | 0;
              hi = Math.imul(ah9, bh3);
              lo = (lo + Math.imul(al8, bl4)) | 0;
              mid = (mid + Math.imul(al8, bh4)) | 0;
              mid = (mid + Math.imul(ah8, bl4)) | 0;
              hi = (hi + Math.imul(ah8, bh4)) | 0;
              lo = (lo + Math.imul(al7, bl5)) | 0;
              mid = (mid + Math.imul(al7, bh5)) | 0;
              mid = (mid + Math.imul(ah7, bl5)) | 0;
              hi = (hi + Math.imul(ah7, bh5)) | 0;
              lo = (lo + Math.imul(al6, bl6)) | 0;
              mid = (mid + Math.imul(al6, bh6)) | 0;
              mid = (mid + Math.imul(ah6, bl6)) | 0;
              hi = (hi + Math.imul(ah6, bh6)) | 0;
              lo = (lo + Math.imul(al5, bl7)) | 0;
              mid = (mid + Math.imul(al5, bh7)) | 0;
              mid = (mid + Math.imul(ah5, bl7)) | 0;
              hi = (hi + Math.imul(ah5, bh7)) | 0;
              lo = (lo + Math.imul(al4, bl8)) | 0;
              mid = (mid + Math.imul(al4, bh8)) | 0;
              mid = (mid + Math.imul(ah4, bl8)) | 0;
              hi = (hi + Math.imul(ah4, bh8)) | 0;
              lo = (lo + Math.imul(al3, bl9)) | 0;
              mid = (mid + Math.imul(al3, bh9)) | 0;
              mid = (mid + Math.imul(ah3, bl9)) | 0;
              hi = (hi + Math.imul(ah3, bh9)) | 0;
              var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
              w12 &= 0x3ffffff;
              /* k = 13 */
              lo = Math.imul(al9, bl4);
              mid = Math.imul(al9, bh4);
              mid = (mid + Math.imul(ah9, bl4)) | 0;
              hi = Math.imul(ah9, bh4);
              lo = (lo + Math.imul(al8, bl5)) | 0;
              mid = (mid + Math.imul(al8, bh5)) | 0;
              mid = (mid + Math.imul(ah8, bl5)) | 0;
              hi = (hi + Math.imul(ah8, bh5)) | 0;
              lo = (lo + Math.imul(al7, bl6)) | 0;
              mid = (mid + Math.imul(al7, bh6)) | 0;
              mid = (mid + Math.imul(ah7, bl6)) | 0;
              hi = (hi + Math.imul(ah7, bh6)) | 0;
              lo = (lo + Math.imul(al6, bl7)) | 0;
              mid = (mid + Math.imul(al6, bh7)) | 0;
              mid = (mid + Math.imul(ah6, bl7)) | 0;
              hi = (hi + Math.imul(ah6, bh7)) | 0;
              lo = (lo + Math.imul(al5, bl8)) | 0;
              mid = (mid + Math.imul(al5, bh8)) | 0;
              mid = (mid + Math.imul(ah5, bl8)) | 0;
              hi = (hi + Math.imul(ah5, bh8)) | 0;
              lo = (lo + Math.imul(al4, bl9)) | 0;
              mid = (mid + Math.imul(al4, bh9)) | 0;
              mid = (mid + Math.imul(ah4, bl9)) | 0;
              hi = (hi + Math.imul(ah4, bh9)) | 0;
              var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
              w13 &= 0x3ffffff;
              /* k = 14 */
              lo = Math.imul(al9, bl5);
              mid = Math.imul(al9, bh5);
              mid = (mid + Math.imul(ah9, bl5)) | 0;
              hi = Math.imul(ah9, bh5);
              lo = (lo + Math.imul(al8, bl6)) | 0;
              mid = (mid + Math.imul(al8, bh6)) | 0;
              mid = (mid + Math.imul(ah8, bl6)) | 0;
              hi = (hi + Math.imul(ah8, bh6)) | 0;
              lo = (lo + Math.imul(al7, bl7)) | 0;
              mid = (mid + Math.imul(al7, bh7)) | 0;
              mid = (mid + Math.imul(ah7, bl7)) | 0;
              hi = (hi + Math.imul(ah7, bh7)) | 0;
              lo = (lo + Math.imul(al6, bl8)) | 0;
              mid = (mid + Math.imul(al6, bh8)) | 0;
              mid = (mid + Math.imul(ah6, bl8)) | 0;
              hi = (hi + Math.imul(ah6, bh8)) | 0;
              lo = (lo + Math.imul(al5, bl9)) | 0;
              mid = (mid + Math.imul(al5, bh9)) | 0;
              mid = (mid + Math.imul(ah5, bl9)) | 0;
              hi = (hi + Math.imul(ah5, bh9)) | 0;
              var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
              w14 &= 0x3ffffff;
              /* k = 15 */
              lo = Math.imul(al9, bl6);
              mid = Math.imul(al9, bh6);
              mid = (mid + Math.imul(ah9, bl6)) | 0;
              hi = Math.imul(ah9, bh6);
              lo = (lo + Math.imul(al8, bl7)) | 0;
              mid = (mid + Math.imul(al8, bh7)) | 0;
              mid = (mid + Math.imul(ah8, bl7)) | 0;
              hi = (hi + Math.imul(ah8, bh7)) | 0;
              lo = (lo + Math.imul(al7, bl8)) | 0;
              mid = (mid + Math.imul(al7, bh8)) | 0;
              mid = (mid + Math.imul(ah7, bl8)) | 0;
              hi = (hi + Math.imul(ah7, bh8)) | 0;
              lo = (lo + Math.imul(al6, bl9)) | 0;
              mid = (mid + Math.imul(al6, bh9)) | 0;
              mid = (mid + Math.imul(ah6, bl9)) | 0;
              hi = (hi + Math.imul(ah6, bh9)) | 0;
              var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
              w15 &= 0x3ffffff;
              /* k = 16 */
              lo = Math.imul(al9, bl7);
              mid = Math.imul(al9, bh7);
              mid = (mid + Math.imul(ah9, bl7)) | 0;
              hi = Math.imul(ah9, bh7);
              lo = (lo + Math.imul(al8, bl8)) | 0;
              mid = (mid + Math.imul(al8, bh8)) | 0;
              mid = (mid + Math.imul(ah8, bl8)) | 0;
              hi = (hi + Math.imul(ah8, bh8)) | 0;
              lo = (lo + Math.imul(al7, bl9)) | 0;
              mid = (mid + Math.imul(al7, bh9)) | 0;
              mid = (mid + Math.imul(ah7, bl9)) | 0;
              hi = (hi + Math.imul(ah7, bh9)) | 0;
              var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
              w16 &= 0x3ffffff;
              /* k = 17 */
              lo = Math.imul(al9, bl8);
              mid = Math.imul(al9, bh8);
              mid = (mid + Math.imul(ah9, bl8)) | 0;
              hi = Math.imul(ah9, bh8);
              lo = (lo + Math.imul(al8, bl9)) | 0;
              mid = (mid + Math.imul(al8, bh9)) | 0;
              mid = (mid + Math.imul(ah8, bl9)) | 0;
              hi = (hi + Math.imul(ah8, bh9)) | 0;
              var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
              w17 &= 0x3ffffff;
              /* k = 18 */
              lo = Math.imul(al9, bl9);
              mid = Math.imul(al9, bh9);
              mid = (mid + Math.imul(ah9, bl9)) | 0;
              hi = Math.imul(ah9, bh9);
              var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
              w18 &= 0x3ffffff;
              o[0] = w0;
              o[1] = w1;
              o[2] = w2;
              o[3] = w3;
              o[4] = w4;
              o[5] = w5;
              o[6] = w6;
              o[7] = w7;
              o[8] = w8;
              o[9] = w9;
              o[10] = w10;
              o[11] = w11;
              o[12] = w12;
              o[13] = w13;
              o[14] = w14;
              o[15] = w15;
              o[16] = w16;
              o[17] = w17;
              o[18] = w18;
              if (c !== 0) {
                o[19] = c;
                out.length++;
              }
              return out;
            };

            // Polyfill comb
            if (!Math.imul) {
              comb10MulTo = smallMulTo;
            }

            function bigMulTo(self, num, out) {
              out.negative = num.negative ^ self.negative;
              out.length = self.length + num.length;

              var carry = 0;
              var hncarry = 0;
              for (var k = 0; k < out.length - 1; k++) {
                // Sum all words with the same `i + j = k` and accumulate `ncarry`,
                // note that ncarry could be >= 0x3ffffff
                var ncarry = hncarry;
                hncarry = 0;
                var rword = carry & 0x3ffffff;
                var maxJ = Math.min(k, num.length - 1);
                for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                  var i = k - j;
                  var a = self.words[i] | 0;
                  var b = num.words[j] | 0;
                  var r = a * b;

                  var lo = r & 0x3ffffff;
                  ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
                  lo = (lo + rword) | 0;
                  rword = lo & 0x3ffffff;
                  ncarry = (ncarry + (lo >>> 26)) | 0;

                  hncarry += ncarry >>> 26;
                  ncarry &= 0x3ffffff;
                }
                out.words[k] = rword;
                carry = ncarry;
                ncarry = hncarry;
              }
              if (carry !== 0) {
                out.words[k] = carry;
              } else {
                out.length--;
              }

              return out.strip();
            }

            function jumboMulTo(self, num, out) {
              var fftm = new FFTM();
              return fftm.mulp(self, num, out);
            }

            BN.prototype.mulTo = function mulTo(num, out) {
              var res;
              var len = this.length + num.length;
              if (this.length === 10 && num.length === 10) {
                res = comb10MulTo(this, num, out);
              } else if (len < 63) {
                res = smallMulTo(this, num, out);
              } else if (len < 1024) {
                res = bigMulTo(this, num, out);
              } else {
                res = jumboMulTo(this, num, out);
              }

              return res;
            };

            // Cooley-Tukey algorithm for FFT
            // slightly revisited to rely on looping instead of recursion

            function FFTM(x, y) {
              this.x = x;
              this.y = y;
            }

            FFTM.prototype.makeRBT = function makeRBT(N) {
              var t = new Array(N);
              var l = BN.prototype._countBits(N) - 1;
              for (var i = 0; i < N; i++) {
                t[i] = this.revBin(i, l, N);
              }

              return t;
            };

            // Returns binary-reversed representation of `x`
            FFTM.prototype.revBin = function revBin(x, l, N) {
              if (x === 0 || x === N - 1) return x;

              var rb = 0;
              for (var i = 0; i < l; i++) {
                rb |= (x & 1) << (l - i - 1);
                x >>= 1;
              }

              return rb;
            };

            // Performs "tweedling" phase, therefore 'emulating'
            // behaviour of the recursive algorithm
            FFTM.prototype.permute = function permute(
              rbt,
              rws,
              iws,
              rtws,
              itws,
              N
            ) {
              for (var i = 0; i < N; i++) {
                rtws[i] = rws[rbt[i]];
                itws[i] = iws[rbt[i]];
              }
            };

            FFTM.prototype.transform = function transform(
              rws,
              iws,
              rtws,
              itws,
              N,
              rbt
            ) {
              this.permute(rbt, rws, iws, rtws, itws, N);

              for (var s = 1; s < N; s <<= 1) {
                var l = s << 1;

                var rtwdf = Math.cos((2 * Math.PI) / l);
                var itwdf = Math.sin((2 * Math.PI) / l);

                for (var p = 0; p < N; p += l) {
                  var rtwdf_ = rtwdf;
                  var itwdf_ = itwdf;

                  for (var j = 0; j < s; j++) {
                    var re = rtws[p + j];
                    var ie = itws[p + j];

                    var ro = rtws[p + j + s];
                    var io = itws[p + j + s];

                    var rx = rtwdf_ * ro - itwdf_ * io;

                    io = rtwdf_ * io + itwdf_ * ro;
                    ro = rx;

                    rtws[p + j] = re + ro;
                    itws[p + j] = ie + io;

                    rtws[p + j + s] = re - ro;
                    itws[p + j + s] = ie - io;

                    /* jshint maxdepth : false */
                    if (j !== l) {
                      rx = rtwdf * rtwdf_ - itwdf * itwdf_;

                      itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                      rtwdf_ = rx;
                    }
                  }
                }
              }
            };

            FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
              var N = Math.max(m, n) | 1;
              var odd = N & 1;
              var i = 0;
              for (N = (N / 2) | 0; N; N = N >>> 1) {
                i++;
              }

              return 1 << (i + 1 + odd);
            };

            FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
              if (N <= 1) return;

              for (var i = 0; i < N / 2; i++) {
                var t = rws[i];

                rws[i] = rws[N - i - 1];
                rws[N - i - 1] = t;

                t = iws[i];

                iws[i] = -iws[N - i - 1];
                iws[N - i - 1] = -t;
              }
            };

            FFTM.prototype.normalize13b = function normalize13b(ws, N) {
              var carry = 0;
              for (var i = 0; i < N / 2; i++) {
                var w =
                  Math.round(ws[2 * i + 1] / N) * 0x2000 +
                  Math.round(ws[2 * i] / N) +
                  carry;

                ws[i] = w & 0x3ffffff;

                if (w < 0x4000000) {
                  carry = 0;
                } else {
                  carry = (w / 0x4000000) | 0;
                }
              }

              return ws;
            };

            FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
              var carry = 0;
              for (var i = 0; i < len; i++) {
                carry = carry + (ws[i] | 0);

                rws[2 * i] = carry & 0x1fff;
                carry = carry >>> 13;
                rws[2 * i + 1] = carry & 0x1fff;
                carry = carry >>> 13;
              }

              // Pad with zeroes
              for (i = 2 * len; i < N; ++i) {
                rws[i] = 0;
              }

              assert(carry === 0);
              assert((carry & ~0x1fff) === 0);
            };

            FFTM.prototype.stub = function stub(N) {
              var ph = new Array(N);
              for (var i = 0; i < N; i++) {
                ph[i] = 0;
              }

              return ph;
            };

            FFTM.prototype.mulp = function mulp(x, y, out) {
              var N = 2 * this.guessLen13b(x.length, y.length);

              var rbt = this.makeRBT(N);

              var _ = this.stub(N);

              var rws = new Array(N);
              var rwst = new Array(N);
              var iwst = new Array(N);

              var nrws = new Array(N);
              var nrwst = new Array(N);
              var niwst = new Array(N);

              var rmws = out.words;
              rmws.length = N;

              this.convert13b(x.words, x.length, rws, N);
              this.convert13b(y.words, y.length, nrws, N);

              this.transform(rws, _, rwst, iwst, N, rbt);
              this.transform(nrws, _, nrwst, niwst, N, rbt);

              for (var i = 0; i < N; i++) {
                var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
                iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
                rwst[i] = rx;
              }

              this.conjugate(rwst, iwst, N);
              this.transform(rwst, iwst, rmws, _, N, rbt);
              this.conjugate(rmws, _, N);
              this.normalize13b(rmws, N);

              out.negative = x.negative ^ y.negative;
              out.length = x.length + y.length;
              return out.strip();
            };

            // Multiply `this` by `num`
            BN.prototype.mul = function mul(num) {
              var out = new BN(null);
              out.words = new Array(this.length + num.length);
              return this.mulTo(num, out);
            };

            // Multiply employing FFT
            BN.prototype.mulf = function mulf(num) {
              var out = new BN(null);
              out.words = new Array(this.length + num.length);
              return jumboMulTo(this, num, out);
            };

            // In-place Multiplication
            BN.prototype.imul = function imul(num) {
              return this.clone().mulTo(num, this);
            };

            BN.prototype.imuln = function imuln(num) {
              assert(typeof num === 'number');
              assert(num < 0x4000000);

              // Carry
              var carry = 0;
              for (var i = 0; i < this.length; i++) {
                var w = (this.words[i] | 0) * num;
                var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
                carry >>= 26;
                carry += (w / 0x4000000) | 0;
                // NOTE: lo is 27bit maximum
                carry += lo >>> 26;
                this.words[i] = lo & 0x3ffffff;
              }

              if (carry !== 0) {
                this.words[i] = carry;
                this.length++;
              }

              return this;
            };

            BN.prototype.muln = function muln(num) {
              return this.clone().imuln(num);
            };

            // `this` * `this`
            BN.prototype.sqr = function sqr() {
              return this.mul(this);
            };

            // `this` * `this` in-place
            BN.prototype.isqr = function isqr() {
              return this.imul(this.clone());
            };

            // Math.pow(`this`, `num`)
            BN.prototype.pow = function pow(num) {
              var w = toBitArray(num);
              if (w.length === 0) return new BN(1);

              // Skip leading zeroes
              var res = this;
              for (var i = 0; i < w.length; i++, res = res.sqr()) {
                if (w[i] !== 0) break;
              }

              if (++i < w.length) {
                for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
                  if (w[i] === 0) continue;

                  res = res.mul(q);
                }
              }

              return res;
            };

            // Shift-left in-place
            BN.prototype.iushln = function iushln(bits) {
              assert(typeof bits === 'number' && bits >= 0);
              var r = bits % 26;
              var s = (bits - r) / 26;
              var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
              var i;

              if (r !== 0) {
                var carry = 0;

                for (i = 0; i < this.length; i++) {
                  var newCarry = this.words[i] & carryMask;
                  var c = ((this.words[i] | 0) - newCarry) << r;
                  this.words[i] = c | carry;
                  carry = newCarry >>> (26 - r);
                }

                if (carry) {
                  this.words[i] = carry;
                  this.length++;
                }
              }

              if (s !== 0) {
                for (i = this.length - 1; i >= 0; i--) {
                  this.words[i + s] = this.words[i];
                }

                for (i = 0; i < s; i++) {
                  this.words[i] = 0;
                }

                this.length += s;
              }

              return this.strip();
            };

            BN.prototype.ishln = function ishln(bits) {
              // TODO(indutny): implement me
              assert(this.negative === 0);
              return this.iushln(bits);
            };

            // Shift-right in-place
            // NOTE: `hint` is a lowest bit before trailing zeroes
            // NOTE: if `extended` is present - it will be filled with destroyed bits
            BN.prototype.iushrn = function iushrn(bits, hint, extended) {
              assert(typeof bits === 'number' && bits >= 0);
              var h;
              if (hint) {
                h = (hint - (hint % 26)) / 26;
              } else {
                h = 0;
              }

              var r = bits % 26;
              var s = Math.min((bits - r) / 26, this.length);
              var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
              var maskedWords = extended;

              h -= s;
              h = Math.max(0, h);

              // Extended mode, copy masked part
              if (maskedWords) {
                for (var i = 0; i < s; i++) {
                  maskedWords.words[i] = this.words[i];
                }
                maskedWords.length = s;
              }

              if (s === 0) {
                // No-op, we should not move anything at all
              } else if (this.length > s) {
                this.length -= s;
                for (i = 0; i < this.length; i++) {
                  this.words[i] = this.words[i + s];
                }
              } else {
                this.words[0] = 0;
                this.length = 1;
              }

              var carry = 0;
              for (
                i = this.length - 1;
                i >= 0 && (carry !== 0 || i >= h);
                i--
              ) {
                var word = this.words[i] | 0;
                this.words[i] = (carry << (26 - r)) | (word >>> r);
                carry = word & mask;
              }

              // Push carried bits as a mask
              if (maskedWords && carry !== 0) {
                maskedWords.words[maskedWords.length++] = carry;
              }

              if (this.length === 0) {
                this.words[0] = 0;
                this.length = 1;
              }

              return this.strip();
            };

            BN.prototype.ishrn = function ishrn(bits, hint, extended) {
              // TODO(indutny): implement me
              assert(this.negative === 0);
              return this.iushrn(bits, hint, extended);
            };

            // Shift-left
            BN.prototype.shln = function shln(bits) {
              return this.clone().ishln(bits);
            };

            BN.prototype.ushln = function ushln(bits) {
              return this.clone().iushln(bits);
            };

            // Shift-right
            BN.prototype.shrn = function shrn(bits) {
              return this.clone().ishrn(bits);
            };

            BN.prototype.ushrn = function ushrn(bits) {
              return this.clone().iushrn(bits);
            };

            // Test if n bit is set
            BN.prototype.testn = function testn(bit) {
              assert(typeof bit === 'number' && bit >= 0);
              var r = bit % 26;
              var s = (bit - r) / 26;
              var q = 1 << r;

              // Fast case: bit is much higher than all existing words
              if (this.length <= s) return false;

              // Check bit and return
              var w = this.words[s];

              return !!(w & q);
            };

            // Return only lowers bits of number (in-place)
            BN.prototype.imaskn = function imaskn(bits) {
              assert(typeof bits === 'number' && bits >= 0);
              var r = bits % 26;
              var s = (bits - r) / 26;

              assert(
                this.negative === 0,
                'imaskn works only with positive numbers'
              );

              if (this.length <= s) {
                return this;
              }

              if (r !== 0) {
                s++;
              }
              this.length = Math.min(s, this.length);

              if (r !== 0) {
                var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
                this.words[this.length - 1] &= mask;
              }

              return this.strip();
            };

            // Return only lowers bits of number
            BN.prototype.maskn = function maskn(bits) {
              return this.clone().imaskn(bits);
            };

            // Add plain number `num` to `this`
            BN.prototype.iaddn = function iaddn(num) {
              assert(typeof num === 'number');
              assert(num < 0x4000000);
              if (num < 0) return this.isubn(-num);

              // Possible sign change
              if (this.negative !== 0) {
                if (this.length === 1 && (this.words[0] | 0) < num) {
                  this.words[0] = num - (this.words[0] | 0);
                  this.negative = 0;
                  return this;
                }

                this.negative = 0;
                this.isubn(num);
                this.negative = 1;
                return this;
              }

              // Add without checks
              return this._iaddn(num);
            };

            BN.prototype._iaddn = function _iaddn(num) {
              this.words[0] += num;

              // Carry
              for (
                var i = 0;
                i < this.length && this.words[i] >= 0x4000000;
                i++
              ) {
                this.words[i] -= 0x4000000;
                if (i === this.length - 1) {
                  this.words[i + 1] = 1;
                } else {
                  this.words[i + 1]++;
                }
              }
              this.length = Math.max(this.length, i + 1);

              return this;
            };

            // Subtract plain number `num` from `this`
            BN.prototype.isubn = function isubn(num) {
              assert(typeof num === 'number');
              assert(num < 0x4000000);
              if (num < 0) return this.iaddn(-num);

              if (this.negative !== 0) {
                this.negative = 0;
                this.iaddn(num);
                this.negative = 1;
                return this;
              }

              this.words[0] -= num;

              if (this.length === 1 && this.words[0] < 0) {
                this.words[0] = -this.words[0];
                this.negative = 1;
              } else {
                // Carry
                for (var i = 0; i < this.length && this.words[i] < 0; i++) {
                  this.words[i] += 0x4000000;
                  this.words[i + 1] -= 1;
                }
              }

              return this.strip();
            };

            BN.prototype.addn = function addn(num) {
              return this.clone().iaddn(num);
            };

            BN.prototype.subn = function subn(num) {
              return this.clone().isubn(num);
            };

            BN.prototype.iabs = function iabs() {
              this.negative = 0;

              return this;
            };

            BN.prototype.abs = function abs() {
              return this.clone().iabs();
            };

            BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
              var len = num.length + shift;
              var i;

              this._expand(len);

              var w;
              var carry = 0;
              for (i = 0; i < num.length; i++) {
                w = (this.words[i + shift] | 0) + carry;
                var right = (num.words[i] | 0) * mul;
                w -= right & 0x3ffffff;
                carry = (w >> 26) - ((right / 0x4000000) | 0);
                this.words[i + shift] = w & 0x3ffffff;
              }
              for (; i < this.length - shift; i++) {
                w = (this.words[i + shift] | 0) + carry;
                carry = w >> 26;
                this.words[i + shift] = w & 0x3ffffff;
              }

              if (carry === 0) return this.strip();

              // Subtraction overflow
              assert(carry === -1);
              carry = 0;
              for (i = 0; i < this.length; i++) {
                w = -(this.words[i] | 0) + carry;
                carry = w >> 26;
                this.words[i] = w & 0x3ffffff;
              }
              this.negative = 1;

              return this.strip();
            };

            BN.prototype._wordDiv = function _wordDiv(num, mode) {
              var shift = this.length - num.length;

              var a = this.clone();
              var b = num;

              // Normalize
              var bhi = b.words[b.length - 1] | 0;
              var bhiBits = this._countBits(bhi);
              shift = 26 - bhiBits;
              if (shift !== 0) {
                b = b.ushln(shift);
                a.iushln(shift);
                bhi = b.words[b.length - 1] | 0;
              }

              // Initialize quotient
              var m = a.length - b.length;
              var q;

              if (mode !== 'mod') {
                q = new BN(null);
                q.length = m + 1;
                q.words = new Array(q.length);
                for (var i = 0; i < q.length; i++) {
                  q.words[i] = 0;
                }
              }

              var diff = a.clone()._ishlnsubmul(b, 1, m);
              if (diff.negative === 0) {
                a = diff;
                if (q) {
                  q.words[m] = 1;
                }
              }

              for (var j = m - 1; j >= 0; j--) {
                var qj =
                  (a.words[b.length + j] | 0) * 0x4000000 +
                  (a.words[b.length + j - 1] | 0);

                // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
                // (0x7ffffff)
                qj = Math.min((qj / bhi) | 0, 0x3ffffff);

                a._ishlnsubmul(b, qj, j);
                while (a.negative !== 0) {
                  qj--;
                  a.negative = 0;
                  a._ishlnsubmul(b, 1, j);
                  if (!a.isZero()) {
                    a.negative ^= 1;
                  }
                }
                if (q) {
                  q.words[j] = qj;
                }
              }
              if (q) {
                q.strip();
              }
              a.strip();

              // Denormalize
              if (mode !== 'div' && shift !== 0) {
                a.iushrn(shift);
              }

              return {
                div: q || null,
                mod: a,
              };
            };

            // NOTE: 1) `mode` can be set to `mod` to request mod only,
            //       to `div` to request div only, or be absent to
            //       request both div & mod
            //       2) `positive` is true if unsigned mod is requested
            BN.prototype.divmod = function divmod(num, mode, positive) {
              assert(!num.isZero());

              if (this.isZero()) {
                return {
                  div: new BN(0),
                  mod: new BN(0),
                };
              }

              var div, mod, res;
              if (this.negative !== 0 && num.negative === 0) {
                res = this.neg().divmod(num, mode);

                if (mode !== 'mod') {
                  div = res.div.neg();
                }

                if (mode !== 'div') {
                  mod = res.mod.neg();
                  if (positive && mod.negative !== 0) {
                    mod.iadd(num);
                  }
                }

                return {
                  div: div,
                  mod: mod,
                };
              }

              if (this.negative === 0 && num.negative !== 0) {
                res = this.divmod(num.neg(), mode);

                if (mode !== 'mod') {
                  div = res.div.neg();
                }

                return {
                  div: div,
                  mod: res.mod,
                };
              }

              if ((this.negative & num.negative) !== 0) {
                res = this.neg().divmod(num.neg(), mode);

                if (mode !== 'div') {
                  mod = res.mod.neg();
                  if (positive && mod.negative !== 0) {
                    mod.isub(num);
                  }
                }

                return {
                  div: res.div,
                  mod: mod,
                };
              }

              // Both numbers are positive at this point

              // Strip both numbers to approximate shift value
              if (num.length > this.length || this.cmp(num) < 0) {
                return {
                  div: new BN(0),
                  mod: this,
                };
              }

              // Very short reduction
              if (num.length === 1) {
                if (mode === 'div') {
                  return {
                    div: this.divn(num.words[0]),
                    mod: null,
                  };
                }

                if (mode === 'mod') {
                  return {
                    div: null,
                    mod: new BN(this.modn(num.words[0])),
                  };
                }

                return {
                  div: this.divn(num.words[0]),
                  mod: new BN(this.modn(num.words[0])),
                };
              }

              return this._wordDiv(num, mode);
            };

            // Find `this` / `num`
            BN.prototype.div = function div(num) {
              return this.divmod(num, 'div', false).div;
            };

            // Find `this` % `num`
            BN.prototype.mod = function mod(num) {
              return this.divmod(num, 'mod', false).mod;
            };

            BN.prototype.umod = function umod(num) {
              return this.divmod(num, 'mod', true).mod;
            };

            // Find Round(`this` / `num`)
            BN.prototype.divRound = function divRound(num) {
              var dm = this.divmod(num);

              // Fast case - exact division
              if (dm.mod.isZero()) return dm.div;

              var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

              var half = num.ushrn(1);
              var r2 = num.andln(1);
              var cmp = mod.cmp(half);

              // Round down
              if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;

              // Round up
              return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
            };

            BN.prototype.modn = function modn(num) {
              assert(num <= 0x3ffffff);
              var p = (1 << 26) % num;

              var acc = 0;
              for (var i = this.length - 1; i >= 0; i--) {
                acc = (p * acc + (this.words[i] | 0)) % num;
              }

              return acc;
            };

            // In-place division by number
            BN.prototype.idivn = function idivn(num) {
              assert(num <= 0x3ffffff);

              var carry = 0;
              for (var i = this.length - 1; i >= 0; i--) {
                var w = (this.words[i] | 0) + carry * 0x4000000;
                this.words[i] = (w / num) | 0;
                carry = w % num;
              }

              return this.strip();
            };

            BN.prototype.divn = function divn(num) {
              return this.clone().idivn(num);
            };

            BN.prototype.egcd = function egcd(p) {
              assert(p.negative === 0);
              assert(!p.isZero());

              var x = this;
              var y = p.clone();

              if (x.negative !== 0) {
                x = x.umod(p);
              } else {
                x = x.clone();
              }

              // A * x + B * y = x
              var A = new BN(1);
              var B = new BN(0);

              // C * x + D * y = y
              var C = new BN(0);
              var D = new BN(1);

              var g = 0;

              while (x.isEven() && y.isEven()) {
                x.iushrn(1);
                y.iushrn(1);
                ++g;
              }

              var yp = y.clone();
              var xp = x.clone();

              while (!x.isZero()) {
                for (
                  var i = 0, im = 1;
                  (x.words[0] & im) === 0 && i < 26;
                  ++i, im <<= 1
                );
                if (i > 0) {
                  x.iushrn(i);
                  while (i-- > 0) {
                    if (A.isOdd() || B.isOdd()) {
                      A.iadd(yp);
                      B.isub(xp);
                    }

                    A.iushrn(1);
                    B.iushrn(1);
                  }
                }

                for (
                  var j = 0, jm = 1;
                  (y.words[0] & jm) === 0 && j < 26;
                  ++j, jm <<= 1
                );
                if (j > 0) {
                  y.iushrn(j);
                  while (j-- > 0) {
                    if (C.isOdd() || D.isOdd()) {
                      C.iadd(yp);
                      D.isub(xp);
                    }

                    C.iushrn(1);
                    D.iushrn(1);
                  }
                }

                if (x.cmp(y) >= 0) {
                  x.isub(y);
                  A.isub(C);
                  B.isub(D);
                } else {
                  y.isub(x);
                  C.isub(A);
                  D.isub(B);
                }
              }

              return {
                a: C,
                b: D,
                gcd: y.iushln(g),
              };
            };

            // This is reduced incarnation of the binary EEA
            // above, designated to invert members of the
            // _prime_ fields F(p) at a maximal speed
            BN.prototype._invmp = function _invmp(p) {
              assert(p.negative === 0);
              assert(!p.isZero());

              var a = this;
              var b = p.clone();

              if (a.negative !== 0) {
                a = a.umod(p);
              } else {
                a = a.clone();
              }

              var x1 = new BN(1);
              var x2 = new BN(0);

              var delta = b.clone();

              while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
                for (
                  var i = 0, im = 1;
                  (a.words[0] & im) === 0 && i < 26;
                  ++i, im <<= 1
                );
                if (i > 0) {
                  a.iushrn(i);
                  while (i-- > 0) {
                    if (x1.isOdd()) {
                      x1.iadd(delta);
                    }

                    x1.iushrn(1);
                  }
                }

                for (
                  var j = 0, jm = 1;
                  (b.words[0] & jm) === 0 && j < 26;
                  ++j, jm <<= 1
                );
                if (j > 0) {
                  b.iushrn(j);
                  while (j-- > 0) {
                    if (x2.isOdd()) {
                      x2.iadd(delta);
                    }

                    x2.iushrn(1);
                  }
                }

                if (a.cmp(b) >= 0) {
                  a.isub(b);
                  x1.isub(x2);
                } else {
                  b.isub(a);
                  x2.isub(x1);
                }
              }

              var res;
              if (a.cmpn(1) === 0) {
                res = x1;
              } else {
                res = x2;
              }

              if (res.cmpn(0) < 0) {
                res.iadd(p);
              }

              return res;
            };

            BN.prototype.gcd = function gcd(num) {
              if (this.isZero()) return num.abs();
              if (num.isZero()) return this.abs();

              var a = this.clone();
              var b = num.clone();
              a.negative = 0;
              b.negative = 0;

              // Remove common factor of two
              for (var shift = 0; a.isEven() && b.isEven(); shift++) {
                a.iushrn(1);
                b.iushrn(1);
              }

              do {
                while (a.isEven()) {
                  a.iushrn(1);
                }
                while (b.isEven()) {
                  b.iushrn(1);
                }

                var r = a.cmp(b);
                if (r < 0) {
                  // Swap `a` and `b` to make `a` always bigger than `b`
                  var t = a;
                  a = b;
                  b = t;
                } else if (r === 0 || b.cmpn(1) === 0) {
                  break;
                }

                a.isub(b);
              } while (true);

              return b.iushln(shift);
            };

            // Invert number in the field F(num)
            BN.prototype.invm = function invm(num) {
              return this.egcd(num).a.umod(num);
            };

            BN.prototype.isEven = function isEven() {
              return (this.words[0] & 1) === 0;
            };

            BN.prototype.isOdd = function isOdd() {
              return (this.words[0] & 1) === 1;
            };

            // And first word and num
            BN.prototype.andln = function andln(num) {
              return this.words[0] & num;
            };

            // Increment at the bit position in-line
            BN.prototype.bincn = function bincn(bit) {
              assert(typeof bit === 'number');
              var r = bit % 26;
              var s = (bit - r) / 26;
              var q = 1 << r;

              // Fast case: bit is much higher than all existing words
              if (this.length <= s) {
                this._expand(s + 1);
                this.words[s] |= q;
                return this;
              }

              // Add bit and propagate, if needed
              var carry = q;
              for (var i = s; carry !== 0 && i < this.length; i++) {
                var w = this.words[i] | 0;
                w += carry;
                carry = w >>> 26;
                w &= 0x3ffffff;
                this.words[i] = w;
              }
              if (carry !== 0) {
                this.words[i] = carry;
                this.length++;
              }
              return this;
            };

            BN.prototype.isZero = function isZero() {
              return this.length === 1 && this.words[0] === 0;
            };

            BN.prototype.cmpn = function cmpn(num) {
              var negative = num < 0;

              if (this.negative !== 0 && !negative) return -1;
              if (this.negative === 0 && negative) return 1;

              this.strip();

              var res;
              if (this.length > 1) {
                res = 1;
              } else {
                if (negative) {
                  num = -num;
                }

                assert(num <= 0x3ffffff, 'Number is too big');

                var w = this.words[0] | 0;
                res = w === num ? 0 : w < num ? -1 : 1;
              }
              if (this.negative !== 0) return -res | 0;
              return res;
            };

            // Compare two numbers and return:
            // 1 - if `this` > `num`
            // 0 - if `this` == `num`
            // -1 - if `this` < `num`
            BN.prototype.cmp = function cmp(num) {
              if (this.negative !== 0 && num.negative === 0) return -1;
              if (this.negative === 0 && num.negative !== 0) return 1;

              var res = this.ucmp(num);
              if (this.negative !== 0) return -res | 0;
              return res;
            };

            // Unsigned comparison
            BN.prototype.ucmp = function ucmp(num) {
              // At this point both numbers have the same sign
              if (this.length > num.length) return 1;
              if (this.length < num.length) return -1;

              var res = 0;
              for (var i = this.length - 1; i >= 0; i--) {
                var a = this.words[i] | 0;
                var b = num.words[i] | 0;

                if (a === b) continue;
                if (a < b) {
                  res = -1;
                } else if (a > b) {
                  res = 1;
                }
                break;
              }
              return res;
            };

            BN.prototype.gtn = function gtn(num) {
              return this.cmpn(num) === 1;
            };

            BN.prototype.gt = function gt(num) {
              return this.cmp(num) === 1;
            };

            BN.prototype.gten = function gten(num) {
              return this.cmpn(num) >= 0;
            };

            BN.prototype.gte = function gte(num) {
              return this.cmp(num) >= 0;
            };

            BN.prototype.ltn = function ltn(num) {
              return this.cmpn(num) === -1;
            };

            BN.prototype.lt = function lt(num) {
              return this.cmp(num) === -1;
            };

            BN.prototype.lten = function lten(num) {
              return this.cmpn(num) <= 0;
            };

            BN.prototype.lte = function lte(num) {
              return this.cmp(num) <= 0;
            };

            BN.prototype.eqn = function eqn(num) {
              return this.cmpn(num) === 0;
            };

            BN.prototype.eq = function eq(num) {
              return this.cmp(num) === 0;
            };

            //
            // A reduce context, could be using montgomery or something better, depending
            // on the `m` itself.
            //
            BN.red = function red(num) {
              return new Red(num);
            };

            BN.prototype.toRed = function toRed(ctx) {
              assert(!this.red, 'Already a number in reduction context');
              assert(this.negative === 0, 'red works only with positives');
              return ctx.convertTo(this)._forceRed(ctx);
            };

            BN.prototype.fromRed = function fromRed() {
              assert(
                this.red,
                'fromRed works only with numbers in reduction context'
              );
              return this.red.convertFrom(this);
            };

            BN.prototype._forceRed = function _forceRed(ctx) {
              this.red = ctx;
              return this;
            };

            BN.prototype.forceRed = function forceRed(ctx) {
              assert(!this.red, 'Already a number in reduction context');
              return this._forceRed(ctx);
            };

            BN.prototype.redAdd = function redAdd(num) {
              assert(this.red, 'redAdd works only with red numbers');
              return this.red.add(this, num);
            };

            BN.prototype.redIAdd = function redIAdd(num) {
              assert(this.red, 'redIAdd works only with red numbers');
              return this.red.iadd(this, num);
            };

            BN.prototype.redSub = function redSub(num) {
              assert(this.red, 'redSub works only with red numbers');
              return this.red.sub(this, num);
            };

            BN.prototype.redISub = function redISub(num) {
              assert(this.red, 'redISub works only with red numbers');
              return this.red.isub(this, num);
            };

            BN.prototype.redShl = function redShl(num) {
              assert(this.red, 'redShl works only with red numbers');
              return this.red.shl(this, num);
            };

            BN.prototype.redMul = function redMul(num) {
              assert(this.red, 'redMul works only with red numbers');
              this.red._verify2(this, num);
              return this.red.mul(this, num);
            };

            BN.prototype.redIMul = function redIMul(num) {
              assert(this.red, 'redMul works only with red numbers');
              this.red._verify2(this, num);
              return this.red.imul(this, num);
            };

            BN.prototype.redSqr = function redSqr() {
              assert(this.red, 'redSqr works only with red numbers');
              this.red._verify1(this);
              return this.red.sqr(this);
            };

            BN.prototype.redISqr = function redISqr() {
              assert(this.red, 'redISqr works only with red numbers');
              this.red._verify1(this);
              return this.red.isqr(this);
            };

            // Square root over p
            BN.prototype.redSqrt = function redSqrt() {
              assert(this.red, 'redSqrt works only with red numbers');
              this.red._verify1(this);
              return this.red.sqrt(this);
            };

            BN.prototype.redInvm = function redInvm() {
              assert(this.red, 'redInvm works only with red numbers');
              this.red._verify1(this);
              return this.red.invm(this);
            };

            // Return negative clone of `this` % `red modulo`
            BN.prototype.redNeg = function redNeg() {
              assert(this.red, 'redNeg works only with red numbers');
              this.red._verify1(this);
              return this.red.neg(this);
            };

            BN.prototype.redPow = function redPow(num) {
              assert(this.red && !num.red, 'redPow(normalNum)');
              this.red._verify1(this);
              return this.red.pow(this, num);
            };

            // Prime numbers with efficient reduction
            var primes = {
              k256: null,
              p224: null,
              p192: null,
              p25519: null,
            };

            // Pseudo-Mersenne prime
            function MPrime(name, p) {
              // P = 2 ^ N - K
              this.name = name;
              this.p = new BN(p, 16);
              this.n = this.p.bitLength();
              this.k = new BN(1).iushln(this.n).isub(this.p);

              this.tmp = this._tmp();
            }

            MPrime.prototype._tmp = function _tmp() {
              var tmp = new BN(null);
              tmp.words = new Array(Math.ceil(this.n / 13));
              return tmp;
            };

            MPrime.prototype.ireduce = function ireduce(num) {
              // Assumes that `num` is less than `P^2`
              // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
              var r = num;
              var rlen;

              do {
                this.split(r, this.tmp);
                r = this.imulK(r);
                r = r.iadd(this.tmp);
                rlen = r.bitLength();
              } while (rlen > this.n);

              var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
              if (cmp === 0) {
                r.words[0] = 0;
                r.length = 1;
              } else if (cmp > 0) {
                r.isub(this.p);
              } else {
                if (r.strip !== undefined) {
                  // r is BN v4 instance
                  r.strip();
                } else {
                  // r is BN v5 instance
                  r._strip();
                }
              }

              return r;
            };

            MPrime.prototype.split = function split(input, out) {
              input.iushrn(this.n, 0, out);
            };

            MPrime.prototype.imulK = function imulK(num) {
              return num.imul(this.k);
            };

            function K256() {
              MPrime.call(
                this,
                'k256',
                'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f'
              );
            }
            inherits(K256, MPrime);

            K256.prototype.split = function split(input, output) {
              // 256 = 9 * 26 + 22
              var mask = 0x3fffff;

              var outLen = Math.min(input.length, 9);
              for (var i = 0; i < outLen; i++) {
                output.words[i] = input.words[i];
              }
              output.length = outLen;

              if (input.length <= 9) {
                input.words[0] = 0;
                input.length = 1;
                return;
              }

              // Shift by 9 limbs
              var prev = input.words[9];
              output.words[output.length++] = prev & mask;

              for (i = 10; i < input.length; i++) {
                var next = input.words[i] | 0;
                input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
                prev = next;
              }
              prev >>>= 22;
              input.words[i - 10] = prev;
              if (prev === 0 && input.length > 10) {
                input.length -= 10;
              } else {
                input.length -= 9;
              }
            };

            K256.prototype.imulK = function imulK(num) {
              // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
              num.words[num.length] = 0;
              num.words[num.length + 1] = 0;
              num.length += 2;

              // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
              var lo = 0;
              for (var i = 0; i < num.length; i++) {
                var w = num.words[i] | 0;
                lo += w * 0x3d1;
                num.words[i] = lo & 0x3ffffff;
                lo = w * 0x40 + ((lo / 0x4000000) | 0);
              }

              // Fast length reduction
              if (num.words[num.length - 1] === 0) {
                num.length--;
                if (num.words[num.length - 1] === 0) {
                  num.length--;
                }
              }
              return num;
            };

            function P224() {
              MPrime.call(
                this,
                'p224',
                'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001'
              );
            }
            inherits(P224, MPrime);

            function P192() {
              MPrime.call(
                this,
                'p192',
                'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff'
              );
            }
            inherits(P192, MPrime);

            function P25519() {
              // 2 ^ 255 - 19
              MPrime.call(
                this,
                '25519',
                '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed'
              );
            }
            inherits(P25519, MPrime);

            P25519.prototype.imulK = function imulK(num) {
              // K = 0x13
              var carry = 0;
              for (var i = 0; i < num.length; i++) {
                var hi = (num.words[i] | 0) * 0x13 + carry;
                var lo = hi & 0x3ffffff;
                hi >>>= 26;

                num.words[i] = lo;
                carry = hi;
              }
              if (carry !== 0) {
                num.words[num.length++] = carry;
              }
              return num;
            };

            // Exported mostly for testing purposes, use plain name instead
            BN._prime = function prime(name) {
              // Cached version of prime
              if (primes[name]) return primes[name];

              var prime;
              if (name === 'k256') {
                prime = new K256();
              } else if (name === 'p224') {
                prime = new P224();
              } else if (name === 'p192') {
                prime = new P192();
              } else if (name === 'p25519') {
                prime = new P25519();
              } else {
                throw new Error('Unknown prime ' + name);
              }
              primes[name] = prime;

              return prime;
            };

            //
            // Base reduction engine
            //
            function Red(m) {
              if (typeof m === 'string') {
                var prime = BN._prime(m);
                this.m = prime.p;
                this.prime = prime;
              } else {
                assert(m.gtn(1), 'modulus must be greater than 1');
                this.m = m;
                this.prime = null;
              }
            }

            Red.prototype._verify1 = function _verify1(a) {
              assert(a.negative === 0, 'red works only with positives');
              assert(a.red, 'red works only with red numbers');
            };

            Red.prototype._verify2 = function _verify2(a, b) {
              assert(
                (a.negative | b.negative) === 0,
                'red works only with positives'
              );
              assert(
                a.red && a.red === b.red,
                'red works only with red numbers'
              );
            };

            Red.prototype.imod = function imod(a) {
              if (this.prime) return this.prime.ireduce(a)._forceRed(this);
              return a.umod(this.m)._forceRed(this);
            };

            Red.prototype.neg = function neg(a) {
              if (a.isZero()) {
                return a.clone();
              }

              return this.m.sub(a)._forceRed(this);
            };

            Red.prototype.add = function add(a, b) {
              this._verify2(a, b);

              var res = a.add(b);
              if (res.cmp(this.m) >= 0) {
                res.isub(this.m);
              }
              return res._forceRed(this);
            };

            Red.prototype.iadd = function iadd(a, b) {
              this._verify2(a, b);

              var res = a.iadd(b);
              if (res.cmp(this.m) >= 0) {
                res.isub(this.m);
              }
              return res;
            };

            Red.prototype.sub = function sub(a, b) {
              this._verify2(a, b);

              var res = a.sub(b);
              if (res.cmpn(0) < 0) {
                res.iadd(this.m);
              }
              return res._forceRed(this);
            };

            Red.prototype.isub = function isub(a, b) {
              this._verify2(a, b);

              var res = a.isub(b);
              if (res.cmpn(0) < 0) {
                res.iadd(this.m);
              }
              return res;
            };

            Red.prototype.shl = function shl(a, num) {
              this._verify1(a);
              return this.imod(a.ushln(num));
            };

            Red.prototype.imul = function imul(a, b) {
              this._verify2(a, b);
              return this.imod(a.imul(b));
            };

            Red.prototype.mul = function mul(a, b) {
              this._verify2(a, b);
              return this.imod(a.mul(b));
            };

            Red.prototype.isqr = function isqr(a) {
              return this.imul(a, a.clone());
            };

            Red.prototype.sqr = function sqr(a) {
              return this.mul(a, a);
            };

            Red.prototype.sqrt = function sqrt(a) {
              if (a.isZero()) return a.clone();

              var mod3 = this.m.andln(3);
              assert(mod3 % 2 === 1);

              // Fast case
              if (mod3 === 3) {
                var pow = this.m.add(new BN(1)).iushrn(2);
                return this.pow(a, pow);
              }

              // Tonelli-Shanks algorithm (Totally unoptimized and slow)
              //
              // Find Q and S, that Q * 2 ^ S = (P - 1)
              var q = this.m.subn(1);
              var s = 0;
              while (!q.isZero() && q.andln(1) === 0) {
                s++;
                q.iushrn(1);
              }
              assert(!q.isZero());

              var one = new BN(1).toRed(this);
              var nOne = one.redNeg();

              // Find quadratic non-residue
              // NOTE: Max is such because of generalized Riemann hypothesis.
              var lpow = this.m.subn(1).iushrn(1);
              var z = this.m.bitLength();
              z = new BN(2 * z * z).toRed(this);

              while (this.pow(z, lpow).cmp(nOne) !== 0) {
                z.redIAdd(nOne);
              }

              var c = this.pow(z, q);
              var r = this.pow(a, q.addn(1).iushrn(1));
              var t = this.pow(a, q);
              var m = s;
              while (t.cmp(one) !== 0) {
                var tmp = t;
                for (var i = 0; tmp.cmp(one) !== 0; i++) {
                  tmp = tmp.redSqr();
                }
                assert(i < m);
                var b = this.pow(c, new BN(1).iushln(m - i - 1));

                r = r.redMul(b);
                c = b.redSqr();
                t = t.redMul(c);
                m = i;
              }

              return r;
            };

            Red.prototype.invm = function invm(a) {
              var inv = a._invmp(this.m);
              if (inv.negative !== 0) {
                inv.negative = 0;
                return this.imod(inv).redNeg();
              } else {
                return this.imod(inv);
              }
            };

            Red.prototype.pow = function pow(a, num) {
              if (num.isZero()) return new BN(1).toRed(this);
              if (num.cmpn(1) === 0) return a.clone();

              var windowSize = 4;
              var wnd = new Array(1 << windowSize);
              wnd[0] = new BN(1).toRed(this);
              wnd[1] = a;
              for (var i = 2; i < wnd.length; i++) {
                wnd[i] = this.mul(wnd[i - 1], a);
              }

              var res = wnd[0];
              var current = 0;
              var currentLen = 0;
              var start = num.bitLength() % 26;
              if (start === 0) {
                start = 26;
              }

              for (i = num.length - 1; i >= 0; i--) {
                var word = num.words[i];
                for (var j = start - 1; j >= 0; j--) {
                  var bit = (word >> j) & 1;
                  if (res !== wnd[0]) {
                    res = this.sqr(res);
                  }

                  if (bit === 0 && current === 0) {
                    currentLen = 0;
                    continue;
                  }

                  current <<= 1;
                  current |= bit;
                  currentLen++;
                  if (currentLen !== windowSize && (i !== 0 || j !== 0))
                    continue;

                  res = this.mul(res, wnd[current]);
                  currentLen = 0;
                  current = 0;
                }
                start = 26;
              }

              return res;
            };

            Red.prototype.convertTo = function convertTo(num) {
              var r = num.umod(this.m);

              return r === num ? r.clone() : r;
            };

            Red.prototype.convertFrom = function convertFrom(num) {
              var res = num.clone();
              res.red = null;
              return res;
            };

            //
            // Montgomery method engine
            //

            BN.mont = function mont(num) {
              return new Mont(num);
            };

            function Mont(m) {
              Red.call(this, m);

              this.shift = this.m.bitLength();
              if (this.shift % 26 !== 0) {
                this.shift += 26 - (this.shift % 26);
              }

              this.r = new BN(1).iushln(this.shift);
              this.r2 = this.imod(this.r.sqr());
              this.rinv = this.r._invmp(this.m);

              this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
              this.minv = this.minv.umod(this.r);
              this.minv = this.r.sub(this.minv);
            }
            inherits(Mont, Red);

            Mont.prototype.convertTo = function convertTo(num) {
              return this.imod(num.ushln(this.shift));
            };

            Mont.prototype.convertFrom = function convertFrom(num) {
              var r = this.imod(num.mul(this.rinv));
              r.red = null;
              return r;
            };

            Mont.prototype.imul = function imul(a, b) {
              if (a.isZero() || b.isZero()) {
                a.words[0] = 0;
                a.length = 1;
                return a;
              }

              var t = a.imul(b);
              var c = t
                .maskn(this.shift)
                .mul(this.minv)
                .imaskn(this.shift)
                .mul(this.m);
              var u = t.isub(c).iushrn(this.shift);
              var res = u;

              if (u.cmp(this.m) >= 0) {
                res = u.isub(this.m);
              } else if (u.cmpn(0) < 0) {
                res = u.iadd(this.m);
              }

              return res._forceRed(this);
            };

            Mont.prototype.mul = function mul(a, b) {
              if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

              var t = a.mul(b);
              var c = t
                .maskn(this.shift)
                .mul(this.minv)
                .imaskn(this.shift)
                .mul(this.m);
              var u = t.isub(c).iushrn(this.shift);
              var res = u;
              if (u.cmp(this.m) >= 0) {
                res = u.isub(this.m);
              } else if (u.cmpn(0) < 0) {
                res = u.iadd(this.m);
              }

              return res._forceRed(this);
            };

            Mont.prototype.invm = function invm(a) {
              // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
              var res = this.imod(a._invmp(this.m).mul(this.r2));
              return res._forceRed(this);
            };
          })(false || module, this);

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/module.js */ '../node_modules/webpack/buildin/module.js'
          )(module)
        ));

        /***/
      },

    /***/ '../node_modules/base64-js/index.js':
      /*!******************************************!*\
  !*** ../node_modules/base64-js/index.js ***!
  \******************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.byteLength = byteLength;
        exports.toByteArray = toByteArray;
        exports.fromByteArray = fromByteArray;

        var lookup = [];
        var revLookup = [];
        var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;

        var code =
          'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
        for (var i = 0, len = code.length; i < len; ++i) {
          lookup[i] = code[i];
          revLookup[code.charCodeAt(i)] = i;
        }

        // Support decoding URL-safe base64 strings, as Node.js does.
        // See: https://en.wikipedia.org/wiki/Base64#URL_applications
        revLookup['-'.charCodeAt(0)] = 62;
        revLookup['_'.charCodeAt(0)] = 63;

        function getLens(b64) {
          var len = b64.length;

          if (len % 4 > 0) {
            throw new Error('Invalid string. Length must be a multiple of 4');
          }

          // Trim off extra bytes after placeholder bytes are found
          // See: https://github.com/beatgammit/base64-js/issues/42
          var validLen = b64.indexOf('=');
          if (validLen === -1) validLen = len;

          var placeHoldersLen = validLen === len ? 0 : 4 - (validLen % 4);

          return [validLen, placeHoldersLen];
        }

        // base64 is 4/3 + up to two characters of the original data
        function byteLength(b64) {
          var lens = getLens(b64);
          var validLen = lens[0];
          var placeHoldersLen = lens[1];
          return ((validLen + placeHoldersLen) * 3) / 4 - placeHoldersLen;
        }

        function _byteLength(b64, validLen, placeHoldersLen) {
          return ((validLen + placeHoldersLen) * 3) / 4 - placeHoldersLen;
        }

        function toByteArray(b64) {
          var tmp;
          var lens = getLens(b64);
          var validLen = lens[0];
          var placeHoldersLen = lens[1];

          var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));

          var curByte = 0;

          // if there are placeholders, only get up to the last complete 4 chars
          var len = placeHoldersLen > 0 ? validLen - 4 : validLen;

          var i;
          for (i = 0; i < len; i += 4) {
            tmp =
              (revLookup[b64.charCodeAt(i)] << 18) |
              (revLookup[b64.charCodeAt(i + 1)] << 12) |
              (revLookup[b64.charCodeAt(i + 2)] << 6) |
              revLookup[b64.charCodeAt(i + 3)];
            arr[curByte++] = (tmp >> 16) & 0xff;
            arr[curByte++] = (tmp >> 8) & 0xff;
            arr[curByte++] = tmp & 0xff;
          }

          if (placeHoldersLen === 2) {
            tmp =
              (revLookup[b64.charCodeAt(i)] << 2) |
              (revLookup[b64.charCodeAt(i + 1)] >> 4);
            arr[curByte++] = tmp & 0xff;
          }

          if (placeHoldersLen === 1) {
            tmp =
              (revLookup[b64.charCodeAt(i)] << 10) |
              (revLookup[b64.charCodeAt(i + 1)] << 4) |
              (revLookup[b64.charCodeAt(i + 2)] >> 2);
            arr[curByte++] = (tmp >> 8) & 0xff;
            arr[curByte++] = tmp & 0xff;
          }

          return arr;
        }

        function tripletToBase64(num) {
          return (
            lookup[(num >> 18) & 0x3f] +
            lookup[(num >> 12) & 0x3f] +
            lookup[(num >> 6) & 0x3f] +
            lookup[num & 0x3f]
          );
        }

        function encodeChunk(uint8, start, end) {
          var tmp;
          var output = [];
          for (var i = start; i < end; i += 3) {
            tmp =
              ((uint8[i] << 16) & 0xff0000) +
              ((uint8[i + 1] << 8) & 0xff00) +
              (uint8[i + 2] & 0xff);
            output.push(tripletToBase64(tmp));
          }
          return output.join('');
        }

        function fromByteArray(uint8) {
          var tmp;
          var len = uint8.length;
          var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes
          var parts = [];
          var maxChunkLength = 16383; // must be multiple of 3

          // go through the array every three bytes, we'll deal with trailing stuff later
          for (
            var i = 0, len2 = len - extraBytes;
            i < len2;
            i += maxChunkLength
          ) {
            parts.push(
              encodeChunk(
                uint8,
                i,
                i + maxChunkLength > len2 ? len2 : i + maxChunkLength
              )
            );
          }

          // pad the end with zeros, but make sure to not forget the extra bytes
          if (extraBytes === 1) {
            tmp = uint8[len - 1];
            parts.push(lookup[tmp >> 2] + lookup[(tmp << 4) & 0x3f] + '==');
          } else if (extraBytes === 2) {
            tmp = (uint8[len - 2] << 8) + uint8[len - 1];
            parts.push(
              lookup[tmp >> 10] +
                lookup[(tmp >> 4) & 0x3f] +
                lookup[(tmp << 2) & 0x3f] +
                '='
            );
          }

          return parts.join('');
        }

        /***/
      },

    /***/ '../node_modules/bn.js/lib/bn.js':
      /*!***************************************!*\
  !*** ../node_modules/bn.js/lib/bn.js ***!
  \***************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function (module) {
          (function (module, exports) {
            'use strict';

            // Utils
            function assert(val, msg) {
              if (!val) throw new Error(msg || 'Assertion failed');
            }

            // Could use `inherits` module, but don't want to move from single file
            // architecture yet.
            function inherits(ctor, superCtor) {
              ctor.super_ = superCtor;
              var TempCtor = function () {};
              TempCtor.prototype = superCtor.prototype;
              ctor.prototype = new TempCtor();
              ctor.prototype.constructor = ctor;
            }

            // BN

            function BN(number, base, endian) {
              if (BN.isBN(number)) {
                return number;
              }

              this.negative = 0;
              this.words = null;
              this.length = 0;

              // Reduction context
              this.red = null;

              if (number !== null) {
                if (base === 'le' || base === 'be') {
                  endian = base;
                  base = 10;
                }

                this._init(number || 0, base || 10, endian || 'be');
              }
            }
            if (typeof module === 'object') {
              module.exports = BN;
            } else {
              exports.BN = BN;
            }

            BN.BN = BN;
            BN.wordSize = 26;

            var Buffer;
            try {
              Buffer = __webpack_require__(/*! buffer */ 12).Buffer;
            } catch (e) {}

            BN.isBN = function isBN(num) {
              if (num instanceof BN) {
                return true;
              }

              return (
                num !== null &&
                typeof num === 'object' &&
                num.constructor.wordSize === BN.wordSize &&
                Array.isArray(num.words)
              );
            };

            BN.max = function max(left, right) {
              if (left.cmp(right) > 0) return left;
              return right;
            };

            BN.min = function min(left, right) {
              if (left.cmp(right) < 0) return left;
              return right;
            };

            BN.prototype._init = function init(number, base, endian) {
              if (typeof number === 'number') {
                return this._initNumber(number, base, endian);
              }

              if (typeof number === 'object') {
                return this._initArray(number, base, endian);
              }

              if (base === 'hex') {
                base = 16;
              }
              assert(base === (base | 0) && base >= 2 && base <= 36);

              number = number.toString().replace(/\s+/g, '');
              var start = 0;
              if (number[0] === '-') {
                start++;
              }

              if (base === 16) {
                this._parseHex(number, start);
              } else {
                this._parseBase(number, base, start);
              }

              if (number[0] === '-') {
                this.negative = 1;
              }

              this._strip();

              if (endian !== 'le') return;

              this._initArray(this.toArray(), base, endian);
            };

            BN.prototype._initNumber = function _initNumber(
              number,
              base,
              endian
            ) {
              if (number < 0) {
                this.negative = 1;
                number = -number;
              }
              if (number < 0x4000000) {
                this.words = [number & 0x3ffffff];
                this.length = 1;
              } else if (number < 0x10000000000000) {
                this.words = [
                  number & 0x3ffffff,
                  (number / 0x4000000) & 0x3ffffff,
                ];
                this.length = 2;
              } else {
                assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
                this.words = [
                  number & 0x3ffffff,
                  (number / 0x4000000) & 0x3ffffff,
                  1,
                ];
                this.length = 3;
              }

              if (endian !== 'le') return;

              // Reverse the bytes
              this._initArray(this.toArray(), base, endian);
            };

            BN.prototype._initArray = function _initArray(
              number,
              base,
              endian
            ) {
              // Perhaps a Uint8Array
              assert(typeof number.length === 'number');
              if (number.length <= 0) {
                this.words = [0];
                this.length = 1;
                return this;
              }

              this.length = Math.ceil(number.length / 3);
              this.words = new Array(this.length);
              for (var i = 0; i < this.length; i++) {
                this.words[i] = 0;
              }

              var j, w;
              var off = 0;
              if (endian === 'be') {
                for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
                  w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
                  this.words[j] |= (w << off) & 0x3ffffff;
                  this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
                  off += 24;
                  if (off >= 26) {
                    off -= 26;
                    j++;
                  }
                }
              } else if (endian === 'le') {
                for (i = 0, j = 0; i < number.length; i += 3) {
                  w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
                  this.words[j] |= (w << off) & 0x3ffffff;
                  this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
                  off += 24;
                  if (off >= 26) {
                    off -= 26;
                    j++;
                  }
                }
              }
              return this._strip();
            };

            function parseHex(str, start, end) {
              var r = 0;
              var len = Math.min(str.length, end);
              var z = 0;
              for (var i = start; i < len; i++) {
                var c = str.charCodeAt(i) - 48;

                r <<= 4;

                var b;

                // 'a' - 'f'
                if (c >= 49 && c <= 54) {
                  b = c - 49 + 0xa;

                  // 'A' - 'F'
                } else if (c >= 17 && c <= 22) {
                  b = c - 17 + 0xa;

                  // '0' - '9'
                } else {
                  b = c;
                }

                r |= b;
                z |= b;
              }

              assert(!(z & 0xf0), 'Invalid character in ' + str);
              return r;
            }

            BN.prototype._parseHex = function _parseHex(number, start) {
              // Create possibly bigger array to ensure that it fits the number
              this.length = Math.ceil((number.length - start) / 6);
              this.words = new Array(this.length);
              for (var i = 0; i < this.length; i++) {
                this.words[i] = 0;
              }

              var j, w;
              // Scan 24-bit chunks and add them to the number
              var off = 0;
              for (i = number.length - 6, j = 0; i >= start; i -= 6) {
                w = parseHex(number, i, i + 6);
                this.words[j] |= (w << off) & 0x3ffffff;
                // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
                this.words[j + 1] |= (w >>> (26 - off)) & 0x3fffff;
                off += 24;
                if (off >= 26) {
                  off -= 26;
                  j++;
                }
              }
              if (i + 6 !== start) {
                w = parseHex(number, start, i + 6);
                this.words[j] |= (w << off) & 0x3ffffff;
                this.words[j + 1] |= (w >>> (26 - off)) & 0x3fffff;
              }
              this._strip();
            };

            function parseBase(str, start, end, mul) {
              var r = 0;
              var b = 0;
              var len = Math.min(str.length, end);
              for (var i = start; i < len; i++) {
                var c = str.charCodeAt(i) - 48;

                r *= mul;

                // 'a'
                if (c >= 49) {
                  b = c - 49 + 0xa;

                  // 'A'
                } else if (c >= 17) {
                  b = c - 17 + 0xa;

                  // '0' - '9'
                } else {
                  b = c;
                }
                assert(c >= 0 && b < mul, 'Invalid character');
                r += b;
              }
              return r;
            }

            BN.prototype._parseBase = function _parseBase(number, base, start) {
              // Initialize as zero
              this.words = [0];
              this.length = 1;

              // Find length of limb in base
              for (
                var limbLen = 0, limbPow = 1;
                limbPow <= 0x3ffffff;
                limbPow *= base
              ) {
                limbLen++;
              }
              limbLen--;
              limbPow = (limbPow / base) | 0;

              var total = number.length - start;
              var mod = total % limbLen;
              var end = Math.min(total, total - mod) + start;

              var word = 0;
              for (var i = start; i < end; i += limbLen) {
                word = parseBase(number, i, i + limbLen, base);

                this.imuln(limbPow);
                if (this.words[0] + word < 0x4000000) {
                  this.words[0] += word;
                } else {
                  this._iaddn(word);
                }
              }

              if (mod !== 0) {
                var pow = 1;
                word = parseBase(number, i, number.length, base);

                for (i = 0; i < mod; i++) {
                  pow *= base;
                }

                this.imuln(pow);
                if (this.words[0] + word < 0x4000000) {
                  this.words[0] += word;
                } else {
                  this._iaddn(word);
                }
              }
            };

            BN.prototype.copy = function copy(dest) {
              dest.words = new Array(this.length);
              for (var i = 0; i < this.length; i++) {
                dest.words[i] = this.words[i];
              }
              dest.length = this.length;
              dest.negative = this.negative;
              dest.red = this.red;
            };

            function move(dest, src) {
              dest.words = src.words;
              dest.length = src.length;
              dest.negative = src.negative;
              dest.red = src.red;
            }

            BN.prototype._move = function _move(dest) {
              move(dest, this);
            };

            BN.prototype.clone = function clone() {
              var r = new BN(null);
              this.copy(r);
              return r;
            };

            BN.prototype._expand = function _expand(size) {
              while (this.length < size) {
                this.words[this.length++] = 0;
              }
              return this;
            };

            // Remove leading `0` from `this`
            BN.prototype._strip = function strip() {
              while (this.length > 1 && this.words[this.length - 1] === 0) {
                this.length--;
              }
              return this._normSign();
            };

            BN.prototype._normSign = function _normSign() {
              // -0 = 0
              if (this.length === 1 && this.words[0] === 0) {
                this.negative = 0;
              }
              return this;
            };

            // Check Symbol.for because not everywhere where Symbol defined
            // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility
            if (
              typeof Symbol !== 'undefined' &&
              typeof Symbol.for === 'function'
            ) {
              BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;
            } else {
              BN.prototype.inspect = inspect;
            }

            function inspect() {
              return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
            }

            /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

            var zeros = [
              '',
              '0',
              '00',
              '000',
              '0000',
              '00000',
              '000000',
              '0000000',
              '00000000',
              '000000000',
              '0000000000',
              '00000000000',
              '000000000000',
              '0000000000000',
              '00000000000000',
              '000000000000000',
              '0000000000000000',
              '00000000000000000',
              '000000000000000000',
              '0000000000000000000',
              '00000000000000000000',
              '000000000000000000000',
              '0000000000000000000000',
              '00000000000000000000000',
              '000000000000000000000000',
              '0000000000000000000000000',
            ];

            var groupSizes = [
              0,
              0,
              25,
              16,
              12,
              11,
              10,
              9,
              8,
              8,
              7,
              7,
              7,
              7,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
            ];

            var groupBases = [
              0,
              0,
              33554432,
              43046721,
              16777216,
              48828125,
              60466176,
              40353607,
              16777216,
              43046721,
              10000000,
              19487171,
              35831808,
              62748517,
              7529536,
              11390625,
              16777216,
              24137569,
              34012224,
              47045881,
              64000000,
              4084101,
              5153632,
              6436343,
              7962624,
              9765625,
              11881376,
              14348907,
              17210368,
              20511149,
              24300000,
              28629151,
              33554432,
              39135393,
              45435424,
              52521875,
              60466176,
            ];

            BN.prototype.toString = function toString(base, padding) {
              base = base || 10;
              padding = padding | 0 || 1;

              var out;
              if (base === 16 || base === 'hex') {
                out = '';
                var off = 0;
                var carry = 0;
                for (var i = 0; i < this.length; i++) {
                  var w = this.words[i];
                  var word = (((w << off) | carry) & 0xffffff).toString(16);
                  carry = (w >>> (24 - off)) & 0xffffff;
                  if (carry !== 0 || i !== this.length - 1) {
                    out = zeros[6 - word.length] + word + out;
                  } else {
                    out = word + out;
                  }
                  off += 2;
                  if (off >= 26) {
                    off -= 26;
                    i--;
                  }
                }
                if (carry !== 0) {
                  out = carry.toString(16) + out;
                }
                while (out.length % padding !== 0) {
                  out = '0' + out;
                }
                if (this.negative !== 0) {
                  out = '-' + out;
                }
                return out;
              }

              if (base === (base | 0) && base >= 2 && base <= 36) {
                // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
                var groupSize = groupSizes[base];
                // var groupBase = Math.pow(base, groupSize);
                var groupBase = groupBases[base];
                out = '';
                var c = this.clone();
                c.negative = 0;
                while (!c.isZero()) {
                  var r = c.modrn(groupBase).toString(base);
                  c = c.idivn(groupBase);

                  if (!c.isZero()) {
                    out = zeros[groupSize - r.length] + r + out;
                  } else {
                    out = r + out;
                  }
                }
                if (this.isZero()) {
                  out = '0' + out;
                }
                while (out.length % padding !== 0) {
                  out = '0' + out;
                }
                if (this.negative !== 0) {
                  out = '-' + out;
                }
                return out;
              }

              assert(false, 'Base should be between 2 and 36');
            };

            BN.prototype.toNumber = function toNumber() {
              var ret = this.words[0];
              if (this.length === 2) {
                ret += this.words[1] * 0x4000000;
              } else if (this.length === 3 && this.words[2] === 0x01) {
                // NOTE: at this stage it is known that the top bit is set
                ret += 0x10000000000000 + this.words[1] * 0x4000000;
              } else if (this.length > 2) {
                assert(false, 'Number can only safely store up to 53 bits');
              }
              return this.negative !== 0 ? -ret : ret;
            };

            BN.prototype.toJSON = function toJSON() {
              return this.toString(16, 2);
            };

            if (Buffer) {
              BN.prototype.toBuffer = function toBuffer(endian, length) {
                return this.toArrayLike(Buffer, endian, length);
              };
            }

            BN.prototype.toArray = function toArray(endian, length) {
              return this.toArrayLike(Array, endian, length);
            };

            var allocate = function allocate(ArrayType, size) {
              if (ArrayType.allocUnsafe) {
                return ArrayType.allocUnsafe(size);
              }
              return new ArrayType(size);
            };

            BN.prototype.toArrayLike = function toArrayLike(
              ArrayType,
              endian,
              length
            ) {
              this._strip();

              var byteLength = this.byteLength();
              var reqLength = length || Math.max(1, byteLength);
              assert(
                byteLength <= reqLength,
                'byte array longer than desired length'
              );
              assert(reqLength > 0, 'Requested array length <= 0');

              var res = allocate(ArrayType, reqLength);
              var postfix = endian === 'le' ? 'LE' : 'BE';
              this['_toArrayLike' + postfix](res, byteLength);
              return res;
            };

            BN.prototype._toArrayLikeLE = function _toArrayLikeLE(
              res,
              byteLength
            ) {
              var position = 0;
              var carry = 0;

              for (var i = 0, shift = 0; i < this.length; i++) {
                var word = (this.words[i] << shift) | carry;

                res[position++] = word & 0xff;
                if (position < res.length) {
                  res[position++] = (word >> 8) & 0xff;
                }
                if (position < res.length) {
                  res[position++] = (word >> 16) & 0xff;
                }

                if (shift === 6) {
                  if (position < res.length) {
                    res[position++] = (word >> 24) & 0xff;
                  }
                  carry = 0;
                  shift = 0;
                } else {
                  carry = word >>> 24;
                  shift += 2;
                }
              }

              if (position < res.length) {
                res[position++] = carry;

                while (position < res.length) {
                  res[position++] = 0;
                }
              }
            };

            BN.prototype._toArrayLikeBE = function _toArrayLikeBE(
              res,
              byteLength
            ) {
              var position = res.length - 1;
              var carry = 0;

              for (var i = 0, shift = 0; i < this.length; i++) {
                var word = (this.words[i] << shift) | carry;

                res[position--] = word & 0xff;
                if (position >= 0) {
                  res[position--] = (word >> 8) & 0xff;
                }
                if (position >= 0) {
                  res[position--] = (word >> 16) & 0xff;
                }

                if (shift === 6) {
                  if (position >= 0) {
                    res[position--] = (word >> 24) & 0xff;
                  }
                  carry = 0;
                  shift = 0;
                } else {
                  carry = word >>> 24;
                  shift += 2;
                }
              }

              if (position >= 0) {
                res[position--] = carry;

                while (position >= 0) {
                  res[position--] = 0;
                }
              }
            };

            if (Math.clz32) {
              BN.prototype._countBits = function _countBits(w) {
                return 32 - Math.clz32(w);
              };
            } else {
              BN.prototype._countBits = function _countBits(w) {
                var t = w;
                var r = 0;
                if (t >= 0x1000) {
                  r += 13;
                  t >>>= 13;
                }
                if (t >= 0x40) {
                  r += 7;
                  t >>>= 7;
                }
                if (t >= 0x8) {
                  r += 4;
                  t >>>= 4;
                }
                if (t >= 0x02) {
                  r += 2;
                  t >>>= 2;
                }
                return r + t;
              };
            }

            BN.prototype._zeroBits = function _zeroBits(w) {
              // Short-cut
              if (w === 0) return 26;

              var t = w;
              var r = 0;
              if ((t & 0x1fff) === 0) {
                r += 13;
                t >>>= 13;
              }
              if ((t & 0x7f) === 0) {
                r += 7;
                t >>>= 7;
              }
              if ((t & 0xf) === 0) {
                r += 4;
                t >>>= 4;
              }
              if ((t & 0x3) === 0) {
                r += 2;
                t >>>= 2;
              }
              if ((t & 0x1) === 0) {
                r++;
              }
              return r;
            };

            // Return number of used bits in a BN
            BN.prototype.bitLength = function bitLength() {
              var w = this.words[this.length - 1];
              var hi = this._countBits(w);
              return (this.length - 1) * 26 + hi;
            };

            function toBitArray(num) {
              var w = new Array(num.bitLength());

              for (var bit = 0; bit < w.length; bit++) {
                var off = (bit / 26) | 0;
                var wbit = bit % 26;

                w[bit] = (num.words[off] >>> wbit) & 0x01;
              }

              return w;
            }

            // Number of trailing zero bits
            BN.prototype.zeroBits = function zeroBits() {
              if (this.isZero()) return 0;

              var r = 0;
              for (var i = 0; i < this.length; i++) {
                var b = this._zeroBits(this.words[i]);
                r += b;
                if (b !== 26) break;
              }
              return r;
            };

            BN.prototype.byteLength = function byteLength() {
              return Math.ceil(this.bitLength() / 8);
            };

            BN.prototype.toTwos = function toTwos(width) {
              if (this.negative !== 0) {
                return this.abs().inotn(width).iaddn(1);
              }
              return this.clone();
            };

            BN.prototype.fromTwos = function fromTwos(width) {
              if (this.testn(width - 1)) {
                return this.notn(width).iaddn(1).ineg();
              }
              return this.clone();
            };

            BN.prototype.isNeg = function isNeg() {
              return this.negative !== 0;
            };

            // Return negative clone of `this`
            BN.prototype.neg = function neg() {
              return this.clone().ineg();
            };

            BN.prototype.ineg = function ineg() {
              if (!this.isZero()) {
                this.negative ^= 1;
              }

              return this;
            };

            // Or `num` with `this` in-place
            BN.prototype.iuor = function iuor(num) {
              while (this.length < num.length) {
                this.words[this.length++] = 0;
              }

              for (var i = 0; i < num.length; i++) {
                this.words[i] = this.words[i] | num.words[i];
              }

              return this._strip();
            };

            BN.prototype.ior = function ior(num) {
              assert((this.negative | num.negative) === 0);
              return this.iuor(num);
            };

            // Or `num` with `this`
            BN.prototype.or = function or(num) {
              if (this.length > num.length) return this.clone().ior(num);
              return num.clone().ior(this);
            };

            BN.prototype.uor = function uor(num) {
              if (this.length > num.length) return this.clone().iuor(num);
              return num.clone().iuor(this);
            };

            // And `num` with `this` in-place
            BN.prototype.iuand = function iuand(num) {
              // b = min-length(num, this)
              var b;
              if (this.length > num.length) {
                b = num;
              } else {
                b = this;
              }

              for (var i = 0; i < b.length; i++) {
                this.words[i] = this.words[i] & num.words[i];
              }

              this.length = b.length;

              return this._strip();
            };

            BN.prototype.iand = function iand(num) {
              assert((this.negative | num.negative) === 0);
              return this.iuand(num);
            };

            // And `num` with `this`
            BN.prototype.and = function and(num) {
              if (this.length > num.length) return this.clone().iand(num);
              return num.clone().iand(this);
            };

            BN.prototype.uand = function uand(num) {
              if (this.length > num.length) return this.clone().iuand(num);
              return num.clone().iuand(this);
            };

            // Xor `num` with `this` in-place
            BN.prototype.iuxor = function iuxor(num) {
              // a.length > b.length
              var a;
              var b;
              if (this.length > num.length) {
                a = this;
                b = num;
              } else {
                a = num;
                b = this;
              }

              for (var i = 0; i < b.length; i++) {
                this.words[i] = a.words[i] ^ b.words[i];
              }

              if (this !== a) {
                for (; i < a.length; i++) {
                  this.words[i] = a.words[i];
                }
              }

              this.length = a.length;

              return this._strip();
            };

            BN.prototype.ixor = function ixor(num) {
              assert((this.negative | num.negative) === 0);
              return this.iuxor(num);
            };

            // Xor `num` with `this`
            BN.prototype.xor = function xor(num) {
              if (this.length > num.length) return this.clone().ixor(num);
              return num.clone().ixor(this);
            };

            BN.prototype.uxor = function uxor(num) {
              if (this.length > num.length) return this.clone().iuxor(num);
              return num.clone().iuxor(this);
            };

            // Not ``this`` with ``width`` bitwidth
            BN.prototype.inotn = function inotn(width) {
              assert(typeof width === 'number' && width >= 0);

              var bytesNeeded = Math.ceil(width / 26) | 0;
              var bitsLeft = width % 26;

              // Extend the buffer with leading zeroes
              this._expand(bytesNeeded);

              if (bitsLeft > 0) {
                bytesNeeded--;
              }

              // Handle complete words
              for (var i = 0; i < bytesNeeded; i++) {
                this.words[i] = ~this.words[i] & 0x3ffffff;
              }

              // Handle the residue
              if (bitsLeft > 0) {
                this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
              }

              // And remove leading zeroes
              return this._strip();
            };

            BN.prototype.notn = function notn(width) {
              return this.clone().inotn(width);
            };

            // Set `bit` of `this`
            BN.prototype.setn = function setn(bit, val) {
              assert(typeof bit === 'number' && bit >= 0);

              var off = (bit / 26) | 0;
              var wbit = bit % 26;

              this._expand(off + 1);

              if (val) {
                this.words[off] = this.words[off] | (1 << wbit);
              } else {
                this.words[off] = this.words[off] & ~(1 << wbit);
              }

              return this._strip();
            };

            // Add `num` to `this` in-place
            BN.prototype.iadd = function iadd(num) {
              var r;

              // negative + positive
              if (this.negative !== 0 && num.negative === 0) {
                this.negative = 0;
                r = this.isub(num);
                this.negative ^= 1;
                return this._normSign();

                // positive + negative
              } else if (this.negative === 0 && num.negative !== 0) {
                num.negative = 0;
                r = this.isub(num);
                num.negative = 1;
                return r._normSign();
              }

              // a.length > b.length
              var a, b;
              if (this.length > num.length) {
                a = this;
                b = num;
              } else {
                a = num;
                b = this;
              }

              var carry = 0;
              for (var i = 0; i < b.length; i++) {
                r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
                this.words[i] = r & 0x3ffffff;
                carry = r >>> 26;
              }
              for (; carry !== 0 && i < a.length; i++) {
                r = (a.words[i] | 0) + carry;
                this.words[i] = r & 0x3ffffff;
                carry = r >>> 26;
              }

              this.length = a.length;
              if (carry !== 0) {
                this.words[this.length] = carry;
                this.length++;
                // Copy the rest of the words
              } else if (a !== this) {
                for (; i < a.length; i++) {
                  this.words[i] = a.words[i];
                }
              }

              return this;
            };

            // Add `num` to `this`
            BN.prototype.add = function add(num) {
              var res;
              if (num.negative !== 0 && this.negative === 0) {
                num.negative = 0;
                res = this.sub(num);
                num.negative ^= 1;
                return res;
              } else if (num.negative === 0 && this.negative !== 0) {
                this.negative = 0;
                res = num.sub(this);
                this.negative = 1;
                return res;
              }

              if (this.length > num.length) return this.clone().iadd(num);

              return num.clone().iadd(this);
            };

            // Subtract `num` from `this` in-place
            BN.prototype.isub = function isub(num) {
              // this - (-num) = this + num
              if (num.negative !== 0) {
                num.negative = 0;
                var r = this.iadd(num);
                num.negative = 1;
                return r._normSign();

                // -this - num = -(this + num)
              } else if (this.negative !== 0) {
                this.negative = 0;
                this.iadd(num);
                this.negative = 1;
                return this._normSign();
              }

              // At this point both numbers are positive
              var cmp = this.cmp(num);

              // Optimization - zeroify
              if (cmp === 0) {
                this.negative = 0;
                this.length = 1;
                this.words[0] = 0;
                return this;
              }

              // a > b
              var a, b;
              if (cmp > 0) {
                a = this;
                b = num;
              } else {
                a = num;
                b = this;
              }

              var carry = 0;
              for (var i = 0; i < b.length; i++) {
                r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
                carry = r >> 26;
                this.words[i] = r & 0x3ffffff;
              }
              for (; carry !== 0 && i < a.length; i++) {
                r = (a.words[i] | 0) + carry;
                carry = r >> 26;
                this.words[i] = r & 0x3ffffff;
              }

              // Copy rest of the words
              if (carry === 0 && i < a.length && a !== this) {
                for (; i < a.length; i++) {
                  this.words[i] = a.words[i];
                }
              }

              this.length = Math.max(this.length, i);

              if (a !== this) {
                this.negative = 1;
              }

              return this._strip();
            };

            // Subtract `num` from `this`
            BN.prototype.sub = function sub(num) {
              return this.clone().isub(num);
            };

            function smallMulTo(self, num, out) {
              out.negative = num.negative ^ self.negative;
              var len = (self.length + num.length) | 0;
              out.length = len;
              len = (len - 1) | 0;

              // Peel one iteration (compiler can't do it, because of code complexity)
              var a = self.words[0] | 0;
              var b = num.words[0] | 0;
              var r = a * b;

              var lo = r & 0x3ffffff;
              var carry = (r / 0x4000000) | 0;
              out.words[0] = lo;

              for (var k = 1; k < len; k++) {
                // Sum all words with the same `i + j = k` and accumulate `ncarry`,
                // note that ncarry could be >= 0x3ffffff
                var ncarry = carry >>> 26;
                var rword = carry & 0x3ffffff;
                var maxJ = Math.min(k, num.length - 1);
                for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                  var i = (k - j) | 0;
                  a = self.words[i] | 0;
                  b = num.words[j] | 0;
                  r = a * b + rword;
                  ncarry += (r / 0x4000000) | 0;
                  rword = r & 0x3ffffff;
                }
                out.words[k] = rword | 0;
                carry = ncarry | 0;
              }
              if (carry !== 0) {
                out.words[k] = carry | 0;
              } else {
                out.length--;
              }

              return out._strip();
            }

            // TODO(indutny): it may be reasonable to omit it for users who don't need
            // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
            // multiplication (like elliptic secp256k1).
            var comb10MulTo = function comb10MulTo(self, num, out) {
              var a = self.words;
              var b = num.words;
              var o = out.words;
              var c = 0;
              var lo;
              var mid;
              var hi;
              var a0 = a[0] | 0;
              var al0 = a0 & 0x1fff;
              var ah0 = a0 >>> 13;
              var a1 = a[1] | 0;
              var al1 = a1 & 0x1fff;
              var ah1 = a1 >>> 13;
              var a2 = a[2] | 0;
              var al2 = a2 & 0x1fff;
              var ah2 = a2 >>> 13;
              var a3 = a[3] | 0;
              var al3 = a3 & 0x1fff;
              var ah3 = a3 >>> 13;
              var a4 = a[4] | 0;
              var al4 = a4 & 0x1fff;
              var ah4 = a4 >>> 13;
              var a5 = a[5] | 0;
              var al5 = a5 & 0x1fff;
              var ah5 = a5 >>> 13;
              var a6 = a[6] | 0;
              var al6 = a6 & 0x1fff;
              var ah6 = a6 >>> 13;
              var a7 = a[7] | 0;
              var al7 = a7 & 0x1fff;
              var ah7 = a7 >>> 13;
              var a8 = a[8] | 0;
              var al8 = a8 & 0x1fff;
              var ah8 = a8 >>> 13;
              var a9 = a[9] | 0;
              var al9 = a9 & 0x1fff;
              var ah9 = a9 >>> 13;
              var b0 = b[0] | 0;
              var bl0 = b0 & 0x1fff;
              var bh0 = b0 >>> 13;
              var b1 = b[1] | 0;
              var bl1 = b1 & 0x1fff;
              var bh1 = b1 >>> 13;
              var b2 = b[2] | 0;
              var bl2 = b2 & 0x1fff;
              var bh2 = b2 >>> 13;
              var b3 = b[3] | 0;
              var bl3 = b3 & 0x1fff;
              var bh3 = b3 >>> 13;
              var b4 = b[4] | 0;
              var bl4 = b4 & 0x1fff;
              var bh4 = b4 >>> 13;
              var b5 = b[5] | 0;
              var bl5 = b5 & 0x1fff;
              var bh5 = b5 >>> 13;
              var b6 = b[6] | 0;
              var bl6 = b6 & 0x1fff;
              var bh6 = b6 >>> 13;
              var b7 = b[7] | 0;
              var bl7 = b7 & 0x1fff;
              var bh7 = b7 >>> 13;
              var b8 = b[8] | 0;
              var bl8 = b8 & 0x1fff;
              var bh8 = b8 >>> 13;
              var b9 = b[9] | 0;
              var bl9 = b9 & 0x1fff;
              var bh9 = b9 >>> 13;

              out.negative = self.negative ^ num.negative;
              out.length = 19;
              /* k = 0 */
              lo = Math.imul(al0, bl0);
              mid = Math.imul(al0, bh0);
              mid = (mid + Math.imul(ah0, bl0)) | 0;
              hi = Math.imul(ah0, bh0);
              var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
              w0 &= 0x3ffffff;
              /* k = 1 */
              lo = Math.imul(al1, bl0);
              mid = Math.imul(al1, bh0);
              mid = (mid + Math.imul(ah1, bl0)) | 0;
              hi = Math.imul(ah1, bh0);
              lo = (lo + Math.imul(al0, bl1)) | 0;
              mid = (mid + Math.imul(al0, bh1)) | 0;
              mid = (mid + Math.imul(ah0, bl1)) | 0;
              hi = (hi + Math.imul(ah0, bh1)) | 0;
              var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
              w1 &= 0x3ffffff;
              /* k = 2 */
              lo = Math.imul(al2, bl0);
              mid = Math.imul(al2, bh0);
              mid = (mid + Math.imul(ah2, bl0)) | 0;
              hi = Math.imul(ah2, bh0);
              lo = (lo + Math.imul(al1, bl1)) | 0;
              mid = (mid + Math.imul(al1, bh1)) | 0;
              mid = (mid + Math.imul(ah1, bl1)) | 0;
              hi = (hi + Math.imul(ah1, bh1)) | 0;
              lo = (lo + Math.imul(al0, bl2)) | 0;
              mid = (mid + Math.imul(al0, bh2)) | 0;
              mid = (mid + Math.imul(ah0, bl2)) | 0;
              hi = (hi + Math.imul(ah0, bh2)) | 0;
              var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
              w2 &= 0x3ffffff;
              /* k = 3 */
              lo = Math.imul(al3, bl0);
              mid = Math.imul(al3, bh0);
              mid = (mid + Math.imul(ah3, bl0)) | 0;
              hi = Math.imul(ah3, bh0);
              lo = (lo + Math.imul(al2, bl1)) | 0;
              mid = (mid + Math.imul(al2, bh1)) | 0;
              mid = (mid + Math.imul(ah2, bl1)) | 0;
              hi = (hi + Math.imul(ah2, bh1)) | 0;
              lo = (lo + Math.imul(al1, bl2)) | 0;
              mid = (mid + Math.imul(al1, bh2)) | 0;
              mid = (mid + Math.imul(ah1, bl2)) | 0;
              hi = (hi + Math.imul(ah1, bh2)) | 0;
              lo = (lo + Math.imul(al0, bl3)) | 0;
              mid = (mid + Math.imul(al0, bh3)) | 0;
              mid = (mid + Math.imul(ah0, bl3)) | 0;
              hi = (hi + Math.imul(ah0, bh3)) | 0;
              var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
              w3 &= 0x3ffffff;
              /* k = 4 */
              lo = Math.imul(al4, bl0);
              mid = Math.imul(al4, bh0);
              mid = (mid + Math.imul(ah4, bl0)) | 0;
              hi = Math.imul(ah4, bh0);
              lo = (lo + Math.imul(al3, bl1)) | 0;
              mid = (mid + Math.imul(al3, bh1)) | 0;
              mid = (mid + Math.imul(ah3, bl1)) | 0;
              hi = (hi + Math.imul(ah3, bh1)) | 0;
              lo = (lo + Math.imul(al2, bl2)) | 0;
              mid = (mid + Math.imul(al2, bh2)) | 0;
              mid = (mid + Math.imul(ah2, bl2)) | 0;
              hi = (hi + Math.imul(ah2, bh2)) | 0;
              lo = (lo + Math.imul(al1, bl3)) | 0;
              mid = (mid + Math.imul(al1, bh3)) | 0;
              mid = (mid + Math.imul(ah1, bl3)) | 0;
              hi = (hi + Math.imul(ah1, bh3)) | 0;
              lo = (lo + Math.imul(al0, bl4)) | 0;
              mid = (mid + Math.imul(al0, bh4)) | 0;
              mid = (mid + Math.imul(ah0, bl4)) | 0;
              hi = (hi + Math.imul(ah0, bh4)) | 0;
              var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
              w4 &= 0x3ffffff;
              /* k = 5 */
              lo = Math.imul(al5, bl0);
              mid = Math.imul(al5, bh0);
              mid = (mid + Math.imul(ah5, bl0)) | 0;
              hi = Math.imul(ah5, bh0);
              lo = (lo + Math.imul(al4, bl1)) | 0;
              mid = (mid + Math.imul(al4, bh1)) | 0;
              mid = (mid + Math.imul(ah4, bl1)) | 0;
              hi = (hi + Math.imul(ah4, bh1)) | 0;
              lo = (lo + Math.imul(al3, bl2)) | 0;
              mid = (mid + Math.imul(al3, bh2)) | 0;
              mid = (mid + Math.imul(ah3, bl2)) | 0;
              hi = (hi + Math.imul(ah3, bh2)) | 0;
              lo = (lo + Math.imul(al2, bl3)) | 0;
              mid = (mid + Math.imul(al2, bh3)) | 0;
              mid = (mid + Math.imul(ah2, bl3)) | 0;
              hi = (hi + Math.imul(ah2, bh3)) | 0;
              lo = (lo + Math.imul(al1, bl4)) | 0;
              mid = (mid + Math.imul(al1, bh4)) | 0;
              mid = (mid + Math.imul(ah1, bl4)) | 0;
              hi = (hi + Math.imul(ah1, bh4)) | 0;
              lo = (lo + Math.imul(al0, bl5)) | 0;
              mid = (mid + Math.imul(al0, bh5)) | 0;
              mid = (mid + Math.imul(ah0, bl5)) | 0;
              hi = (hi + Math.imul(ah0, bh5)) | 0;
              var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
              w5 &= 0x3ffffff;
              /* k = 6 */
              lo = Math.imul(al6, bl0);
              mid = Math.imul(al6, bh0);
              mid = (mid + Math.imul(ah6, bl0)) | 0;
              hi = Math.imul(ah6, bh0);
              lo = (lo + Math.imul(al5, bl1)) | 0;
              mid = (mid + Math.imul(al5, bh1)) | 0;
              mid = (mid + Math.imul(ah5, bl1)) | 0;
              hi = (hi + Math.imul(ah5, bh1)) | 0;
              lo = (lo + Math.imul(al4, bl2)) | 0;
              mid = (mid + Math.imul(al4, bh2)) | 0;
              mid = (mid + Math.imul(ah4, bl2)) | 0;
              hi = (hi + Math.imul(ah4, bh2)) | 0;
              lo = (lo + Math.imul(al3, bl3)) | 0;
              mid = (mid + Math.imul(al3, bh3)) | 0;
              mid = (mid + Math.imul(ah3, bl3)) | 0;
              hi = (hi + Math.imul(ah3, bh3)) | 0;
              lo = (lo + Math.imul(al2, bl4)) | 0;
              mid = (mid + Math.imul(al2, bh4)) | 0;
              mid = (mid + Math.imul(ah2, bl4)) | 0;
              hi = (hi + Math.imul(ah2, bh4)) | 0;
              lo = (lo + Math.imul(al1, bl5)) | 0;
              mid = (mid + Math.imul(al1, bh5)) | 0;
              mid = (mid + Math.imul(ah1, bl5)) | 0;
              hi = (hi + Math.imul(ah1, bh5)) | 0;
              lo = (lo + Math.imul(al0, bl6)) | 0;
              mid = (mid + Math.imul(al0, bh6)) | 0;
              mid = (mid + Math.imul(ah0, bl6)) | 0;
              hi = (hi + Math.imul(ah0, bh6)) | 0;
              var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
              w6 &= 0x3ffffff;
              /* k = 7 */
              lo = Math.imul(al7, bl0);
              mid = Math.imul(al7, bh0);
              mid = (mid + Math.imul(ah7, bl0)) | 0;
              hi = Math.imul(ah7, bh0);
              lo = (lo + Math.imul(al6, bl1)) | 0;
              mid = (mid + Math.imul(al6, bh1)) | 0;
              mid = (mid + Math.imul(ah6, bl1)) | 0;
              hi = (hi + Math.imul(ah6, bh1)) | 0;
              lo = (lo + Math.imul(al5, bl2)) | 0;
              mid = (mid + Math.imul(al5, bh2)) | 0;
              mid = (mid + Math.imul(ah5, bl2)) | 0;
              hi = (hi + Math.imul(ah5, bh2)) | 0;
              lo = (lo + Math.imul(al4, bl3)) | 0;
              mid = (mid + Math.imul(al4, bh3)) | 0;
              mid = (mid + Math.imul(ah4, bl3)) | 0;
              hi = (hi + Math.imul(ah4, bh3)) | 0;
              lo = (lo + Math.imul(al3, bl4)) | 0;
              mid = (mid + Math.imul(al3, bh4)) | 0;
              mid = (mid + Math.imul(ah3, bl4)) | 0;
              hi = (hi + Math.imul(ah3, bh4)) | 0;
              lo = (lo + Math.imul(al2, bl5)) | 0;
              mid = (mid + Math.imul(al2, bh5)) | 0;
              mid = (mid + Math.imul(ah2, bl5)) | 0;
              hi = (hi + Math.imul(ah2, bh5)) | 0;
              lo = (lo + Math.imul(al1, bl6)) | 0;
              mid = (mid + Math.imul(al1, bh6)) | 0;
              mid = (mid + Math.imul(ah1, bl6)) | 0;
              hi = (hi + Math.imul(ah1, bh6)) | 0;
              lo = (lo + Math.imul(al0, bl7)) | 0;
              mid = (mid + Math.imul(al0, bh7)) | 0;
              mid = (mid + Math.imul(ah0, bl7)) | 0;
              hi = (hi + Math.imul(ah0, bh7)) | 0;
              var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
              w7 &= 0x3ffffff;
              /* k = 8 */
              lo = Math.imul(al8, bl0);
              mid = Math.imul(al8, bh0);
              mid = (mid + Math.imul(ah8, bl0)) | 0;
              hi = Math.imul(ah8, bh0);
              lo = (lo + Math.imul(al7, bl1)) | 0;
              mid = (mid + Math.imul(al7, bh1)) | 0;
              mid = (mid + Math.imul(ah7, bl1)) | 0;
              hi = (hi + Math.imul(ah7, bh1)) | 0;
              lo = (lo + Math.imul(al6, bl2)) | 0;
              mid = (mid + Math.imul(al6, bh2)) | 0;
              mid = (mid + Math.imul(ah6, bl2)) | 0;
              hi = (hi + Math.imul(ah6, bh2)) | 0;
              lo = (lo + Math.imul(al5, bl3)) | 0;
              mid = (mid + Math.imul(al5, bh3)) | 0;
              mid = (mid + Math.imul(ah5, bl3)) | 0;
              hi = (hi + Math.imul(ah5, bh3)) | 0;
              lo = (lo + Math.imul(al4, bl4)) | 0;
              mid = (mid + Math.imul(al4, bh4)) | 0;
              mid = (mid + Math.imul(ah4, bl4)) | 0;
              hi = (hi + Math.imul(ah4, bh4)) | 0;
              lo = (lo + Math.imul(al3, bl5)) | 0;
              mid = (mid + Math.imul(al3, bh5)) | 0;
              mid = (mid + Math.imul(ah3, bl5)) | 0;
              hi = (hi + Math.imul(ah3, bh5)) | 0;
              lo = (lo + Math.imul(al2, bl6)) | 0;
              mid = (mid + Math.imul(al2, bh6)) | 0;
              mid = (mid + Math.imul(ah2, bl6)) | 0;
              hi = (hi + Math.imul(ah2, bh6)) | 0;
              lo = (lo + Math.imul(al1, bl7)) | 0;
              mid = (mid + Math.imul(al1, bh7)) | 0;
              mid = (mid + Math.imul(ah1, bl7)) | 0;
              hi = (hi + Math.imul(ah1, bh7)) | 0;
              lo = (lo + Math.imul(al0, bl8)) | 0;
              mid = (mid + Math.imul(al0, bh8)) | 0;
              mid = (mid + Math.imul(ah0, bl8)) | 0;
              hi = (hi + Math.imul(ah0, bh8)) | 0;
              var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
              w8 &= 0x3ffffff;
              /* k = 9 */
              lo = Math.imul(al9, bl0);
              mid = Math.imul(al9, bh0);
              mid = (mid + Math.imul(ah9, bl0)) | 0;
              hi = Math.imul(ah9, bh0);
              lo = (lo + Math.imul(al8, bl1)) | 0;
              mid = (mid + Math.imul(al8, bh1)) | 0;
              mid = (mid + Math.imul(ah8, bl1)) | 0;
              hi = (hi + Math.imul(ah8, bh1)) | 0;
              lo = (lo + Math.imul(al7, bl2)) | 0;
              mid = (mid + Math.imul(al7, bh2)) | 0;
              mid = (mid + Math.imul(ah7, bl2)) | 0;
              hi = (hi + Math.imul(ah7, bh2)) | 0;
              lo = (lo + Math.imul(al6, bl3)) | 0;
              mid = (mid + Math.imul(al6, bh3)) | 0;
              mid = (mid + Math.imul(ah6, bl3)) | 0;
              hi = (hi + Math.imul(ah6, bh3)) | 0;
              lo = (lo + Math.imul(al5, bl4)) | 0;
              mid = (mid + Math.imul(al5, bh4)) | 0;
              mid = (mid + Math.imul(ah5, bl4)) | 0;
              hi = (hi + Math.imul(ah5, bh4)) | 0;
              lo = (lo + Math.imul(al4, bl5)) | 0;
              mid = (mid + Math.imul(al4, bh5)) | 0;
              mid = (mid + Math.imul(ah4, bl5)) | 0;
              hi = (hi + Math.imul(ah4, bh5)) | 0;
              lo = (lo + Math.imul(al3, bl6)) | 0;
              mid = (mid + Math.imul(al3, bh6)) | 0;
              mid = (mid + Math.imul(ah3, bl6)) | 0;
              hi = (hi + Math.imul(ah3, bh6)) | 0;
              lo = (lo + Math.imul(al2, bl7)) | 0;
              mid = (mid + Math.imul(al2, bh7)) | 0;
              mid = (mid + Math.imul(ah2, bl7)) | 0;
              hi = (hi + Math.imul(ah2, bh7)) | 0;
              lo = (lo + Math.imul(al1, bl8)) | 0;
              mid = (mid + Math.imul(al1, bh8)) | 0;
              mid = (mid + Math.imul(ah1, bl8)) | 0;
              hi = (hi + Math.imul(ah1, bh8)) | 0;
              lo = (lo + Math.imul(al0, bl9)) | 0;
              mid = (mid + Math.imul(al0, bh9)) | 0;
              mid = (mid + Math.imul(ah0, bl9)) | 0;
              hi = (hi + Math.imul(ah0, bh9)) | 0;
              var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
              w9 &= 0x3ffffff;
              /* k = 10 */
              lo = Math.imul(al9, bl1);
              mid = Math.imul(al9, bh1);
              mid = (mid + Math.imul(ah9, bl1)) | 0;
              hi = Math.imul(ah9, bh1);
              lo = (lo + Math.imul(al8, bl2)) | 0;
              mid = (mid + Math.imul(al8, bh2)) | 0;
              mid = (mid + Math.imul(ah8, bl2)) | 0;
              hi = (hi + Math.imul(ah8, bh2)) | 0;
              lo = (lo + Math.imul(al7, bl3)) | 0;
              mid = (mid + Math.imul(al7, bh3)) | 0;
              mid = (mid + Math.imul(ah7, bl3)) | 0;
              hi = (hi + Math.imul(ah7, bh3)) | 0;
              lo = (lo + Math.imul(al6, bl4)) | 0;
              mid = (mid + Math.imul(al6, bh4)) | 0;
              mid = (mid + Math.imul(ah6, bl4)) | 0;
              hi = (hi + Math.imul(ah6, bh4)) | 0;
              lo = (lo + Math.imul(al5, bl5)) | 0;
              mid = (mid + Math.imul(al5, bh5)) | 0;
              mid = (mid + Math.imul(ah5, bl5)) | 0;
              hi = (hi + Math.imul(ah5, bh5)) | 0;
              lo = (lo + Math.imul(al4, bl6)) | 0;
              mid = (mid + Math.imul(al4, bh6)) | 0;
              mid = (mid + Math.imul(ah4, bl6)) | 0;
              hi = (hi + Math.imul(ah4, bh6)) | 0;
              lo = (lo + Math.imul(al3, bl7)) | 0;
              mid = (mid + Math.imul(al3, bh7)) | 0;
              mid = (mid + Math.imul(ah3, bl7)) | 0;
              hi = (hi + Math.imul(ah3, bh7)) | 0;
              lo = (lo + Math.imul(al2, bl8)) | 0;
              mid = (mid + Math.imul(al2, bh8)) | 0;
              mid = (mid + Math.imul(ah2, bl8)) | 0;
              hi = (hi + Math.imul(ah2, bh8)) | 0;
              lo = (lo + Math.imul(al1, bl9)) | 0;
              mid = (mid + Math.imul(al1, bh9)) | 0;
              mid = (mid + Math.imul(ah1, bl9)) | 0;
              hi = (hi + Math.imul(ah1, bh9)) | 0;
              var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
              w10 &= 0x3ffffff;
              /* k = 11 */
              lo = Math.imul(al9, bl2);
              mid = Math.imul(al9, bh2);
              mid = (mid + Math.imul(ah9, bl2)) | 0;
              hi = Math.imul(ah9, bh2);
              lo = (lo + Math.imul(al8, bl3)) | 0;
              mid = (mid + Math.imul(al8, bh3)) | 0;
              mid = (mid + Math.imul(ah8, bl3)) | 0;
              hi = (hi + Math.imul(ah8, bh3)) | 0;
              lo = (lo + Math.imul(al7, bl4)) | 0;
              mid = (mid + Math.imul(al7, bh4)) | 0;
              mid = (mid + Math.imul(ah7, bl4)) | 0;
              hi = (hi + Math.imul(ah7, bh4)) | 0;
              lo = (lo + Math.imul(al6, bl5)) | 0;
              mid = (mid + Math.imul(al6, bh5)) | 0;
              mid = (mid + Math.imul(ah6, bl5)) | 0;
              hi = (hi + Math.imul(ah6, bh5)) | 0;
              lo = (lo + Math.imul(al5, bl6)) | 0;
              mid = (mid + Math.imul(al5, bh6)) | 0;
              mid = (mid + Math.imul(ah5, bl6)) | 0;
              hi = (hi + Math.imul(ah5, bh6)) | 0;
              lo = (lo + Math.imul(al4, bl7)) | 0;
              mid = (mid + Math.imul(al4, bh7)) | 0;
              mid = (mid + Math.imul(ah4, bl7)) | 0;
              hi = (hi + Math.imul(ah4, bh7)) | 0;
              lo = (lo + Math.imul(al3, bl8)) | 0;
              mid = (mid + Math.imul(al3, bh8)) | 0;
              mid = (mid + Math.imul(ah3, bl8)) | 0;
              hi = (hi + Math.imul(ah3, bh8)) | 0;
              lo = (lo + Math.imul(al2, bl9)) | 0;
              mid = (mid + Math.imul(al2, bh9)) | 0;
              mid = (mid + Math.imul(ah2, bl9)) | 0;
              hi = (hi + Math.imul(ah2, bh9)) | 0;
              var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
              w11 &= 0x3ffffff;
              /* k = 12 */
              lo = Math.imul(al9, bl3);
              mid = Math.imul(al9, bh3);
              mid = (mid + Math.imul(ah9, bl3)) | 0;
              hi = Math.imul(ah9, bh3);
              lo = (lo + Math.imul(al8, bl4)) | 0;
              mid = (mid + Math.imul(al8, bh4)) | 0;
              mid = (mid + Math.imul(ah8, bl4)) | 0;
              hi = (hi + Math.imul(ah8, bh4)) | 0;
              lo = (lo + Math.imul(al7, bl5)) | 0;
              mid = (mid + Math.imul(al7, bh5)) | 0;
              mid = (mid + Math.imul(ah7, bl5)) | 0;
              hi = (hi + Math.imul(ah7, bh5)) | 0;
              lo = (lo + Math.imul(al6, bl6)) | 0;
              mid = (mid + Math.imul(al6, bh6)) | 0;
              mid = (mid + Math.imul(ah6, bl6)) | 0;
              hi = (hi + Math.imul(ah6, bh6)) | 0;
              lo = (lo + Math.imul(al5, bl7)) | 0;
              mid = (mid + Math.imul(al5, bh7)) | 0;
              mid = (mid + Math.imul(ah5, bl7)) | 0;
              hi = (hi + Math.imul(ah5, bh7)) | 0;
              lo = (lo + Math.imul(al4, bl8)) | 0;
              mid = (mid + Math.imul(al4, bh8)) | 0;
              mid = (mid + Math.imul(ah4, bl8)) | 0;
              hi = (hi + Math.imul(ah4, bh8)) | 0;
              lo = (lo + Math.imul(al3, bl9)) | 0;
              mid = (mid + Math.imul(al3, bh9)) | 0;
              mid = (mid + Math.imul(ah3, bl9)) | 0;
              hi = (hi + Math.imul(ah3, bh9)) | 0;
              var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
              w12 &= 0x3ffffff;
              /* k = 13 */
              lo = Math.imul(al9, bl4);
              mid = Math.imul(al9, bh4);
              mid = (mid + Math.imul(ah9, bl4)) | 0;
              hi = Math.imul(ah9, bh4);
              lo = (lo + Math.imul(al8, bl5)) | 0;
              mid = (mid + Math.imul(al8, bh5)) | 0;
              mid = (mid + Math.imul(ah8, bl5)) | 0;
              hi = (hi + Math.imul(ah8, bh5)) | 0;
              lo = (lo + Math.imul(al7, bl6)) | 0;
              mid = (mid + Math.imul(al7, bh6)) | 0;
              mid = (mid + Math.imul(ah7, bl6)) | 0;
              hi = (hi + Math.imul(ah7, bh6)) | 0;
              lo = (lo + Math.imul(al6, bl7)) | 0;
              mid = (mid + Math.imul(al6, bh7)) | 0;
              mid = (mid + Math.imul(ah6, bl7)) | 0;
              hi = (hi + Math.imul(ah6, bh7)) | 0;
              lo = (lo + Math.imul(al5, bl8)) | 0;
              mid = (mid + Math.imul(al5, bh8)) | 0;
              mid = (mid + Math.imul(ah5, bl8)) | 0;
              hi = (hi + Math.imul(ah5, bh8)) | 0;
              lo = (lo + Math.imul(al4, bl9)) | 0;
              mid = (mid + Math.imul(al4, bh9)) | 0;
              mid = (mid + Math.imul(ah4, bl9)) | 0;
              hi = (hi + Math.imul(ah4, bh9)) | 0;
              var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
              w13 &= 0x3ffffff;
              /* k = 14 */
              lo = Math.imul(al9, bl5);
              mid = Math.imul(al9, bh5);
              mid = (mid + Math.imul(ah9, bl5)) | 0;
              hi = Math.imul(ah9, bh5);
              lo = (lo + Math.imul(al8, bl6)) | 0;
              mid = (mid + Math.imul(al8, bh6)) | 0;
              mid = (mid + Math.imul(ah8, bl6)) | 0;
              hi = (hi + Math.imul(ah8, bh6)) | 0;
              lo = (lo + Math.imul(al7, bl7)) | 0;
              mid = (mid + Math.imul(al7, bh7)) | 0;
              mid = (mid + Math.imul(ah7, bl7)) | 0;
              hi = (hi + Math.imul(ah7, bh7)) | 0;
              lo = (lo + Math.imul(al6, bl8)) | 0;
              mid = (mid + Math.imul(al6, bh8)) | 0;
              mid = (mid + Math.imul(ah6, bl8)) | 0;
              hi = (hi + Math.imul(ah6, bh8)) | 0;
              lo = (lo + Math.imul(al5, bl9)) | 0;
              mid = (mid + Math.imul(al5, bh9)) | 0;
              mid = (mid + Math.imul(ah5, bl9)) | 0;
              hi = (hi + Math.imul(ah5, bh9)) | 0;
              var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
              w14 &= 0x3ffffff;
              /* k = 15 */
              lo = Math.imul(al9, bl6);
              mid = Math.imul(al9, bh6);
              mid = (mid + Math.imul(ah9, bl6)) | 0;
              hi = Math.imul(ah9, bh6);
              lo = (lo + Math.imul(al8, bl7)) | 0;
              mid = (mid + Math.imul(al8, bh7)) | 0;
              mid = (mid + Math.imul(ah8, bl7)) | 0;
              hi = (hi + Math.imul(ah8, bh7)) | 0;
              lo = (lo + Math.imul(al7, bl8)) | 0;
              mid = (mid + Math.imul(al7, bh8)) | 0;
              mid = (mid + Math.imul(ah7, bl8)) | 0;
              hi = (hi + Math.imul(ah7, bh8)) | 0;
              lo = (lo + Math.imul(al6, bl9)) | 0;
              mid = (mid + Math.imul(al6, bh9)) | 0;
              mid = (mid + Math.imul(ah6, bl9)) | 0;
              hi = (hi + Math.imul(ah6, bh9)) | 0;
              var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
              w15 &= 0x3ffffff;
              /* k = 16 */
              lo = Math.imul(al9, bl7);
              mid = Math.imul(al9, bh7);
              mid = (mid + Math.imul(ah9, bl7)) | 0;
              hi = Math.imul(ah9, bh7);
              lo = (lo + Math.imul(al8, bl8)) | 0;
              mid = (mid + Math.imul(al8, bh8)) | 0;
              mid = (mid + Math.imul(ah8, bl8)) | 0;
              hi = (hi + Math.imul(ah8, bh8)) | 0;
              lo = (lo + Math.imul(al7, bl9)) | 0;
              mid = (mid + Math.imul(al7, bh9)) | 0;
              mid = (mid + Math.imul(ah7, bl9)) | 0;
              hi = (hi + Math.imul(ah7, bh9)) | 0;
              var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
              w16 &= 0x3ffffff;
              /* k = 17 */
              lo = Math.imul(al9, bl8);
              mid = Math.imul(al9, bh8);
              mid = (mid + Math.imul(ah9, bl8)) | 0;
              hi = Math.imul(ah9, bh8);
              lo = (lo + Math.imul(al8, bl9)) | 0;
              mid = (mid + Math.imul(al8, bh9)) | 0;
              mid = (mid + Math.imul(ah8, bl9)) | 0;
              hi = (hi + Math.imul(ah8, bh9)) | 0;
              var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
              w17 &= 0x3ffffff;
              /* k = 18 */
              lo = Math.imul(al9, bl9);
              mid = Math.imul(al9, bh9);
              mid = (mid + Math.imul(ah9, bl9)) | 0;
              hi = Math.imul(ah9, bh9);
              var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
              w18 &= 0x3ffffff;
              o[0] = w0;
              o[1] = w1;
              o[2] = w2;
              o[3] = w3;
              o[4] = w4;
              o[5] = w5;
              o[6] = w6;
              o[7] = w7;
              o[8] = w8;
              o[9] = w9;
              o[10] = w10;
              o[11] = w11;
              o[12] = w12;
              o[13] = w13;
              o[14] = w14;
              o[15] = w15;
              o[16] = w16;
              o[17] = w17;
              o[18] = w18;
              if (c !== 0) {
                o[19] = c;
                out.length++;
              }
              return out;
            };

            // Polyfill comb
            if (!Math.imul) {
              comb10MulTo = smallMulTo;
            }

            function bigMulTo(self, num, out) {
              out.negative = num.negative ^ self.negative;
              out.length = self.length + num.length;

              var carry = 0;
              var hncarry = 0;
              for (var k = 0; k < out.length - 1; k++) {
                // Sum all words with the same `i + j = k` and accumulate `ncarry`,
                // note that ncarry could be >= 0x3ffffff
                var ncarry = hncarry;
                hncarry = 0;
                var rword = carry & 0x3ffffff;
                var maxJ = Math.min(k, num.length - 1);
                for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                  var i = k - j;
                  var a = self.words[i] | 0;
                  var b = num.words[j] | 0;
                  var r = a * b;

                  var lo = r & 0x3ffffff;
                  ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
                  lo = (lo + rword) | 0;
                  rword = lo & 0x3ffffff;
                  ncarry = (ncarry + (lo >>> 26)) | 0;

                  hncarry += ncarry >>> 26;
                  ncarry &= 0x3ffffff;
                }
                out.words[k] = rword;
                carry = ncarry;
                ncarry = hncarry;
              }
              if (carry !== 0) {
                out.words[k] = carry;
              } else {
                out.length--;
              }

              return out._strip();
            }

            function jumboMulTo(self, num, out) {
              // Temporary disable, see https://github.com/indutny/bn.js/issues/211
              // var fftm = new FFTM();
              // return fftm.mulp(self, num, out);
              return bigMulTo(self, num, out);
            }

            BN.prototype.mulTo = function mulTo(num, out) {
              var res;
              var len = this.length + num.length;
              if (this.length === 10 && num.length === 10) {
                res = comb10MulTo(this, num, out);
              } else if (len < 63) {
                res = smallMulTo(this, num, out);
              } else if (len < 1024) {
                res = bigMulTo(this, num, out);
              } else {
                res = jumboMulTo(this, num, out);
              }

              return res;
            };

            // Cooley-Tukey algorithm for FFT
            // slightly revisited to rely on looping instead of recursion

            function FFTM(x, y) {
              this.x = x;
              this.y = y;
            }

            FFTM.prototype.makeRBT = function makeRBT(N) {
              var t = new Array(N);
              var l = BN.prototype._countBits(N) - 1;
              for (var i = 0; i < N; i++) {
                t[i] = this.revBin(i, l, N);
              }

              return t;
            };

            // Returns binary-reversed representation of `x`
            FFTM.prototype.revBin = function revBin(x, l, N) {
              if (x === 0 || x === N - 1) return x;

              var rb = 0;
              for (var i = 0; i < l; i++) {
                rb |= (x & 1) << (l - i - 1);
                x >>= 1;
              }

              return rb;
            };

            // Performs "tweedling" phase, therefore 'emulating'
            // behaviour of the recursive algorithm
            FFTM.prototype.permute = function permute(
              rbt,
              rws,
              iws,
              rtws,
              itws,
              N
            ) {
              for (var i = 0; i < N; i++) {
                rtws[i] = rws[rbt[i]];
                itws[i] = iws[rbt[i]];
              }
            };

            FFTM.prototype.transform = function transform(
              rws,
              iws,
              rtws,
              itws,
              N,
              rbt
            ) {
              this.permute(rbt, rws, iws, rtws, itws, N);

              for (var s = 1; s < N; s <<= 1) {
                var l = s << 1;

                var rtwdf = Math.cos((2 * Math.PI) / l);
                var itwdf = Math.sin((2 * Math.PI) / l);

                for (var p = 0; p < N; p += l) {
                  var rtwdf_ = rtwdf;
                  var itwdf_ = itwdf;

                  for (var j = 0; j < s; j++) {
                    var re = rtws[p + j];
                    var ie = itws[p + j];

                    var ro = rtws[p + j + s];
                    var io = itws[p + j + s];

                    var rx = rtwdf_ * ro - itwdf_ * io;

                    io = rtwdf_ * io + itwdf_ * ro;
                    ro = rx;

                    rtws[p + j] = re + ro;
                    itws[p + j] = ie + io;

                    rtws[p + j + s] = re - ro;
                    itws[p + j + s] = ie - io;

                    /* jshint maxdepth : false */
                    if (j !== l) {
                      rx = rtwdf * rtwdf_ - itwdf * itwdf_;

                      itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                      rtwdf_ = rx;
                    }
                  }
                }
              }
            };

            FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
              var N = Math.max(m, n) | 1;
              var odd = N & 1;
              var i = 0;
              for (N = (N / 2) | 0; N; N = N >>> 1) {
                i++;
              }

              return 1 << (i + 1 + odd);
            };

            FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
              if (N <= 1) return;

              for (var i = 0; i < N / 2; i++) {
                var t = rws[i];

                rws[i] = rws[N - i - 1];
                rws[N - i - 1] = t;

                t = iws[i];

                iws[i] = -iws[N - i - 1];
                iws[N - i - 1] = -t;
              }
            };

            FFTM.prototype.normalize13b = function normalize13b(ws, N) {
              var carry = 0;
              for (var i = 0; i < N / 2; i++) {
                var w =
                  Math.round(ws[2 * i + 1] / N) * 0x2000 +
                  Math.round(ws[2 * i] / N) +
                  carry;

                ws[i] = w & 0x3ffffff;

                if (w < 0x4000000) {
                  carry = 0;
                } else {
                  carry = (w / 0x4000000) | 0;
                }
              }

              return ws;
            };

            FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
              var carry = 0;
              for (var i = 0; i < len; i++) {
                carry = carry + (ws[i] | 0);

                rws[2 * i] = carry & 0x1fff;
                carry = carry >>> 13;
                rws[2 * i + 1] = carry & 0x1fff;
                carry = carry >>> 13;
              }

              // Pad with zeroes
              for (i = 2 * len; i < N; ++i) {
                rws[i] = 0;
              }

              assert(carry === 0);
              assert((carry & ~0x1fff) === 0);
            };

            FFTM.prototype.stub = function stub(N) {
              var ph = new Array(N);
              for (var i = 0; i < N; i++) {
                ph[i] = 0;
              }

              return ph;
            };

            FFTM.prototype.mulp = function mulp(x, y, out) {
              var N = 2 * this.guessLen13b(x.length, y.length);

              var rbt = this.makeRBT(N);

              var _ = this.stub(N);

              var rws = new Array(N);
              var rwst = new Array(N);
              var iwst = new Array(N);

              var nrws = new Array(N);
              var nrwst = new Array(N);
              var niwst = new Array(N);

              var rmws = out.words;
              rmws.length = N;

              this.convert13b(x.words, x.length, rws, N);
              this.convert13b(y.words, y.length, nrws, N);

              this.transform(rws, _, rwst, iwst, N, rbt);
              this.transform(nrws, _, nrwst, niwst, N, rbt);

              for (var i = 0; i < N; i++) {
                var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
                iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
                rwst[i] = rx;
              }

              this.conjugate(rwst, iwst, N);
              this.transform(rwst, iwst, rmws, _, N, rbt);
              this.conjugate(rmws, _, N);
              this.normalize13b(rmws, N);

              out.negative = x.negative ^ y.negative;
              out.length = x.length + y.length;
              return out._strip();
            };

            // Multiply `this` by `num`
            BN.prototype.mul = function mul(num) {
              var out = new BN(null);
              out.words = new Array(this.length + num.length);
              return this.mulTo(num, out);
            };

            // Multiply employing FFT
            BN.prototype.mulf = function mulf(num) {
              var out = new BN(null);
              out.words = new Array(this.length + num.length);
              return jumboMulTo(this, num, out);
            };

            // In-place Multiplication
            BN.prototype.imul = function imul(num) {
              return this.clone().mulTo(num, this);
            };

            BN.prototype.imuln = function imuln(num) {
              var isNegNum = num < 0;
              if (isNegNum) num = -num;

              assert(typeof num === 'number');
              assert(num < 0x4000000);

              // Carry
              var carry = 0;
              for (var i = 0; i < this.length; i++) {
                var w = (this.words[i] | 0) * num;
                var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
                carry >>= 26;
                carry += (w / 0x4000000) | 0;
                // NOTE: lo is 27bit maximum
                carry += lo >>> 26;
                this.words[i] = lo & 0x3ffffff;
              }

              if (carry !== 0) {
                this.words[i] = carry;
                this.length++;
              }

              return isNegNum ? this.ineg() : this;
            };

            BN.prototype.muln = function muln(num) {
              return this.clone().imuln(num);
            };

            // `this` * `this`
            BN.prototype.sqr = function sqr() {
              return this.mul(this);
            };

            // `this` * `this` in-place
            BN.prototype.isqr = function isqr() {
              return this.imul(this.clone());
            };

            // Math.pow(`this`, `num`)
            BN.prototype.pow = function pow(num) {
              var w = toBitArray(num);
              if (w.length === 0) return new BN(1);

              // Skip leading zeroes
              var res = this;
              for (var i = 0; i < w.length; i++, res = res.sqr()) {
                if (w[i] !== 0) break;
              }

              if (++i < w.length) {
                for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
                  if (w[i] === 0) continue;

                  res = res.mul(q);
                }
              }

              return res;
            };

            // Shift-left in-place
            BN.prototype.iushln = function iushln(bits) {
              assert(typeof bits === 'number' && bits >= 0);
              var r = bits % 26;
              var s = (bits - r) / 26;
              var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
              var i;

              if (r !== 0) {
                var carry = 0;

                for (i = 0; i < this.length; i++) {
                  var newCarry = this.words[i] & carryMask;
                  var c = ((this.words[i] | 0) - newCarry) << r;
                  this.words[i] = c | carry;
                  carry = newCarry >>> (26 - r);
                }

                if (carry) {
                  this.words[i] = carry;
                  this.length++;
                }
              }

              if (s !== 0) {
                for (i = this.length - 1; i >= 0; i--) {
                  this.words[i + s] = this.words[i];
                }

                for (i = 0; i < s; i++) {
                  this.words[i] = 0;
                }

                this.length += s;
              }

              return this._strip();
            };

            BN.prototype.ishln = function ishln(bits) {
              // TODO(indutny): implement me
              assert(this.negative === 0);
              return this.iushln(bits);
            };

            // Shift-right in-place
            // NOTE: `hint` is a lowest bit before trailing zeroes
            // NOTE: if `extended` is present - it will be filled with destroyed bits
            BN.prototype.iushrn = function iushrn(bits, hint, extended) {
              assert(typeof bits === 'number' && bits >= 0);
              var h;
              if (hint) {
                h = (hint - (hint % 26)) / 26;
              } else {
                h = 0;
              }

              var r = bits % 26;
              var s = Math.min((bits - r) / 26, this.length);
              var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
              var maskedWords = extended;

              h -= s;
              h = Math.max(0, h);

              // Extended mode, copy masked part
              if (maskedWords) {
                for (var i = 0; i < s; i++) {
                  maskedWords.words[i] = this.words[i];
                }
                maskedWords.length = s;
              }

              if (s === 0) {
                // No-op, we should not move anything at all
              } else if (this.length > s) {
                this.length -= s;
                for (i = 0; i < this.length; i++) {
                  this.words[i] = this.words[i + s];
                }
              } else {
                this.words[0] = 0;
                this.length = 1;
              }

              var carry = 0;
              for (
                i = this.length - 1;
                i >= 0 && (carry !== 0 || i >= h);
                i--
              ) {
                var word = this.words[i] | 0;
                this.words[i] = (carry << (26 - r)) | (word >>> r);
                carry = word & mask;
              }

              // Push carried bits as a mask
              if (maskedWords && carry !== 0) {
                maskedWords.words[maskedWords.length++] = carry;
              }

              if (this.length === 0) {
                this.words[0] = 0;
                this.length = 1;
              }

              return this._strip();
            };

            BN.prototype.ishrn = function ishrn(bits, hint, extended) {
              // TODO(indutny): implement me
              assert(this.negative === 0);
              return this.iushrn(bits, hint, extended);
            };

            // Shift-left
            BN.prototype.shln = function shln(bits) {
              return this.clone().ishln(bits);
            };

            BN.prototype.ushln = function ushln(bits) {
              return this.clone().iushln(bits);
            };

            // Shift-right
            BN.prototype.shrn = function shrn(bits) {
              return this.clone().ishrn(bits);
            };

            BN.prototype.ushrn = function ushrn(bits) {
              return this.clone().iushrn(bits);
            };

            // Test if n bit is set
            BN.prototype.testn = function testn(bit) {
              assert(typeof bit === 'number' && bit >= 0);
              var r = bit % 26;
              var s = (bit - r) / 26;
              var q = 1 << r;

              // Fast case: bit is much higher than all existing words
              if (this.length <= s) return false;

              // Check bit and return
              var w = this.words[s];

              return !!(w & q);
            };

            // Return only lowers bits of number (in-place)
            BN.prototype.imaskn = function imaskn(bits) {
              assert(typeof bits === 'number' && bits >= 0);
              var r = bits % 26;
              var s = (bits - r) / 26;

              assert(
                this.negative === 0,
                'imaskn works only with positive numbers'
              );

              if (this.length <= s) {
                return this;
              }

              if (r !== 0) {
                s++;
              }
              this.length = Math.min(s, this.length);

              if (r !== 0) {
                var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
                this.words[this.length - 1] &= mask;
              }

              return this._strip();
            };

            // Return only lowers bits of number
            BN.prototype.maskn = function maskn(bits) {
              return this.clone().imaskn(bits);
            };

            // Add plain number `num` to `this`
            BN.prototype.iaddn = function iaddn(num) {
              assert(typeof num === 'number');
              assert(num < 0x4000000);
              if (num < 0) return this.isubn(-num);

              // Possible sign change
              if (this.negative !== 0) {
                if (this.length === 1 && (this.words[0] | 0) <= num) {
                  this.words[0] = num - (this.words[0] | 0);
                  this.negative = 0;
                  return this;
                }

                this.negative = 0;
                this.isubn(num);
                this.negative = 1;
                return this;
              }

              // Add without checks
              return this._iaddn(num);
            };

            BN.prototype._iaddn = function _iaddn(num) {
              this.words[0] += num;

              // Carry
              for (
                var i = 0;
                i < this.length && this.words[i] >= 0x4000000;
                i++
              ) {
                this.words[i] -= 0x4000000;
                if (i === this.length - 1) {
                  this.words[i + 1] = 1;
                } else {
                  this.words[i + 1]++;
                }
              }
              this.length = Math.max(this.length, i + 1);

              return this;
            };

            // Subtract plain number `num` from `this`
            BN.prototype.isubn = function isubn(num) {
              assert(typeof num === 'number');
              assert(num < 0x4000000);
              if (num < 0) return this.iaddn(-num);

              if (this.negative !== 0) {
                this.negative = 0;
                this.iaddn(num);
                this.negative = 1;
                return this;
              }

              this.words[0] -= num;

              if (this.length === 1 && this.words[0] < 0) {
                this.words[0] = -this.words[0];
                this.negative = 1;
              } else {
                // Carry
                for (var i = 0; i < this.length && this.words[i] < 0; i++) {
                  this.words[i] += 0x4000000;
                  this.words[i + 1] -= 1;
                }
              }

              return this._strip();
            };

            BN.prototype.addn = function addn(num) {
              return this.clone().iaddn(num);
            };

            BN.prototype.subn = function subn(num) {
              return this.clone().isubn(num);
            };

            BN.prototype.iabs = function iabs() {
              this.negative = 0;

              return this;
            };

            BN.prototype.abs = function abs() {
              return this.clone().iabs();
            };

            BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
              var len = num.length + shift;
              var i;

              this._expand(len);

              var w;
              var carry = 0;
              for (i = 0; i < num.length; i++) {
                w = (this.words[i + shift] | 0) + carry;
                var right = (num.words[i] | 0) * mul;
                w -= right & 0x3ffffff;
                carry = (w >> 26) - ((right / 0x4000000) | 0);
                this.words[i + shift] = w & 0x3ffffff;
              }
              for (; i < this.length - shift; i++) {
                w = (this.words[i + shift] | 0) + carry;
                carry = w >> 26;
                this.words[i + shift] = w & 0x3ffffff;
              }

              if (carry === 0) return this._strip();

              // Subtraction overflow
              assert(carry === -1);
              carry = 0;
              for (i = 0; i < this.length; i++) {
                w = -(this.words[i] | 0) + carry;
                carry = w >> 26;
                this.words[i] = w & 0x3ffffff;
              }
              this.negative = 1;

              return this._strip();
            };

            BN.prototype._wordDiv = function _wordDiv(num, mode) {
              var shift = this.length - num.length;

              var a = this.clone();
              var b = num;

              // Normalize
              var bhi = b.words[b.length - 1] | 0;
              var bhiBits = this._countBits(bhi);
              shift = 26 - bhiBits;
              if (shift !== 0) {
                b = b.ushln(shift);
                a.iushln(shift);
                bhi = b.words[b.length - 1] | 0;
              }

              // Initialize quotient
              var m = a.length - b.length;
              var q;

              if (mode !== 'mod') {
                q = new BN(null);
                q.length = m + 1;
                q.words = new Array(q.length);
                for (var i = 0; i < q.length; i++) {
                  q.words[i] = 0;
                }
              }

              var diff = a.clone()._ishlnsubmul(b, 1, m);
              if (diff.negative === 0) {
                a = diff;
                if (q) {
                  q.words[m] = 1;
                }
              }

              for (var j = m - 1; j >= 0; j--) {
                var qj =
                  (a.words[b.length + j] | 0) * 0x4000000 +
                  (a.words[b.length + j - 1] | 0);

                // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
                // (0x7ffffff)
                qj = Math.min((qj / bhi) | 0, 0x3ffffff);

                a._ishlnsubmul(b, qj, j);
                while (a.negative !== 0) {
                  qj--;
                  a.negative = 0;
                  a._ishlnsubmul(b, 1, j);
                  if (!a.isZero()) {
                    a.negative ^= 1;
                  }
                }
                if (q) {
                  q.words[j] = qj;
                }
              }
              if (q) {
                q._strip();
              }
              a._strip();

              // Denormalize
              if (mode !== 'div' && shift !== 0) {
                a.iushrn(shift);
              }

              return {
                div: q || null,
                mod: a,
              };
            };

            // NOTE: 1) `mode` can be set to `mod` to request mod only,
            //       to `div` to request div only, or be absent to
            //       request both div & mod
            //       2) `positive` is true if unsigned mod is requested
            BN.prototype.divmod = function divmod(num, mode, positive) {
              assert(!num.isZero());

              if (this.isZero()) {
                return {
                  div: new BN(0),
                  mod: new BN(0),
                };
              }

              var div, mod, res;
              if (this.negative !== 0 && num.negative === 0) {
                res = this.neg().divmod(num, mode);

                if (mode !== 'mod') {
                  div = res.div.neg();
                }

                if (mode !== 'div') {
                  mod = res.mod.neg();
                  if (positive && mod.negative !== 0) {
                    mod.iadd(num);
                  }
                }

                return {
                  div: div,
                  mod: mod,
                };
              }

              if (this.negative === 0 && num.negative !== 0) {
                res = this.divmod(num.neg(), mode);

                if (mode !== 'mod') {
                  div = res.div.neg();
                }

                return {
                  div: div,
                  mod: res.mod,
                };
              }

              if ((this.negative & num.negative) !== 0) {
                res = this.neg().divmod(num.neg(), mode);

                if (mode !== 'div') {
                  mod = res.mod.neg();
                  if (positive && mod.negative !== 0) {
                    mod.isub(num);
                  }
                }

                return {
                  div: res.div,
                  mod: mod,
                };
              }

              // Both numbers are positive at this point

              // Strip both numbers to approximate shift value
              if (num.length > this.length || this.cmp(num) < 0) {
                return {
                  div: new BN(0),
                  mod: this,
                };
              }

              // Very short reduction
              if (num.length === 1) {
                if (mode === 'div') {
                  return {
                    div: this.divn(num.words[0]),
                    mod: null,
                  };
                }

                if (mode === 'mod') {
                  return {
                    div: null,
                    mod: new BN(this.modrn(num.words[0])),
                  };
                }

                return {
                  div: this.divn(num.words[0]),
                  mod: new BN(this.modrn(num.words[0])),
                };
              }

              return this._wordDiv(num, mode);
            };

            // Find `this` / `num`
            BN.prototype.div = function div(num) {
              return this.divmod(num, 'div', false).div;
            };

            // Find `this` % `num`
            BN.prototype.mod = function mod(num) {
              return this.divmod(num, 'mod', false).mod;
            };

            BN.prototype.umod = function umod(num) {
              return this.divmod(num, 'mod', true).mod;
            };

            // Find Round(`this` / `num`)
            BN.prototype.divRound = function divRound(num) {
              var dm = this.divmod(num);

              // Fast case - exact division
              if (dm.mod.isZero()) return dm.div;

              var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

              var half = num.ushrn(1);
              var r2 = num.andln(1);
              var cmp = mod.cmp(half);

              // Round down
              if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;

              // Round up
              return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
            };

            BN.prototype.modrn = function modrn(num) {
              var isNegNum = num < 0;
              if (isNegNum) num = -num;

              assert(num <= 0x3ffffff);
              var p = (1 << 26) % num;

              var acc = 0;
              for (var i = this.length - 1; i >= 0; i--) {
                acc = (p * acc + (this.words[i] | 0)) % num;
              }

              return isNegNum ? -acc : acc;
            };

            // WARNING: DEPRECATED
            BN.prototype.modn = function modn(num) {
              return this.modrn(num);
            };

            // In-place division by number
            BN.prototype.idivn = function idivn(num) {
              var isNegNum = num < 0;
              if (isNegNum) num = -num;

              assert(num <= 0x3ffffff);

              var carry = 0;
              for (var i = this.length - 1; i >= 0; i--) {
                var w = (this.words[i] | 0) + carry * 0x4000000;
                this.words[i] = (w / num) | 0;
                carry = w % num;
              }

              this._strip();
              return isNegNum ? this.ineg() : this;
            };

            BN.prototype.divn = function divn(num) {
              return this.clone().idivn(num);
            };

            BN.prototype.egcd = function egcd(p) {
              assert(p.negative === 0);
              assert(!p.isZero());

              var x = this;
              var y = p.clone();

              if (x.negative !== 0) {
                x = x.umod(p);
              } else {
                x = x.clone();
              }

              // A * x + B * y = x
              var A = new BN(1);
              var B = new BN(0);

              // C * x + D * y = y
              var C = new BN(0);
              var D = new BN(1);

              var g = 0;

              while (x.isEven() && y.isEven()) {
                x.iushrn(1);
                y.iushrn(1);
                ++g;
              }

              var yp = y.clone();
              var xp = x.clone();

              while (!x.isZero()) {
                for (
                  var i = 0, im = 1;
                  (x.words[0] & im) === 0 && i < 26;
                  ++i, im <<= 1
                );
                if (i > 0) {
                  x.iushrn(i);
                  while (i-- > 0) {
                    if (A.isOdd() || B.isOdd()) {
                      A.iadd(yp);
                      B.isub(xp);
                    }

                    A.iushrn(1);
                    B.iushrn(1);
                  }
                }

                for (
                  var j = 0, jm = 1;
                  (y.words[0] & jm) === 0 && j < 26;
                  ++j, jm <<= 1
                );
                if (j > 0) {
                  y.iushrn(j);
                  while (j-- > 0) {
                    if (C.isOdd() || D.isOdd()) {
                      C.iadd(yp);
                      D.isub(xp);
                    }

                    C.iushrn(1);
                    D.iushrn(1);
                  }
                }

                if (x.cmp(y) >= 0) {
                  x.isub(y);
                  A.isub(C);
                  B.isub(D);
                } else {
                  y.isub(x);
                  C.isub(A);
                  D.isub(B);
                }
              }

              return {
                a: C,
                b: D,
                gcd: y.iushln(g),
              };
            };

            // This is reduced incarnation of the binary EEA
            // above, designated to invert members of the
            // _prime_ fields F(p) at a maximal speed
            BN.prototype._invmp = function _invmp(p) {
              assert(p.negative === 0);
              assert(!p.isZero());

              var a = this;
              var b = p.clone();

              if (a.negative !== 0) {
                a = a.umod(p);
              } else {
                a = a.clone();
              }

              var x1 = new BN(1);
              var x2 = new BN(0);

              var delta = b.clone();

              while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
                for (
                  var i = 0, im = 1;
                  (a.words[0] & im) === 0 && i < 26;
                  ++i, im <<= 1
                );
                if (i > 0) {
                  a.iushrn(i);
                  while (i-- > 0) {
                    if (x1.isOdd()) {
                      x1.iadd(delta);
                    }

                    x1.iushrn(1);
                  }
                }

                for (
                  var j = 0, jm = 1;
                  (b.words[0] & jm) === 0 && j < 26;
                  ++j, jm <<= 1
                );
                if (j > 0) {
                  b.iushrn(j);
                  while (j-- > 0) {
                    if (x2.isOdd()) {
                      x2.iadd(delta);
                    }

                    x2.iushrn(1);
                  }
                }

                if (a.cmp(b) >= 0) {
                  a.isub(b);
                  x1.isub(x2);
                } else {
                  b.isub(a);
                  x2.isub(x1);
                }
              }

              var res;
              if (a.cmpn(1) === 0) {
                res = x1;
              } else {
                res = x2;
              }

              if (res.cmpn(0) < 0) {
                res.iadd(p);
              }

              return res;
            };

            BN.prototype.gcd = function gcd(num) {
              if (this.isZero()) return num.abs();
              if (num.isZero()) return this.abs();

              var a = this.clone();
              var b = num.clone();
              a.negative = 0;
              b.negative = 0;

              // Remove common factor of two
              for (var shift = 0; a.isEven() && b.isEven(); shift++) {
                a.iushrn(1);
                b.iushrn(1);
              }

              do {
                while (a.isEven()) {
                  a.iushrn(1);
                }
                while (b.isEven()) {
                  b.iushrn(1);
                }

                var r = a.cmp(b);
                if (r < 0) {
                  // Swap `a` and `b` to make `a` always bigger than `b`
                  var t = a;
                  a = b;
                  b = t;
                } else if (r === 0 || b.cmpn(1) === 0) {
                  break;
                }

                a.isub(b);
              } while (true);

              return b.iushln(shift);
            };

            // Invert number in the field F(num)
            BN.prototype.invm = function invm(num) {
              return this.egcd(num).a.umod(num);
            };

            BN.prototype.isEven = function isEven() {
              return (this.words[0] & 1) === 0;
            };

            BN.prototype.isOdd = function isOdd() {
              return (this.words[0] & 1) === 1;
            };

            // And first word and num
            BN.prototype.andln = function andln(num) {
              return this.words[0] & num;
            };

            // Increment at the bit position in-line
            BN.prototype.bincn = function bincn(bit) {
              assert(typeof bit === 'number');
              var r = bit % 26;
              var s = (bit - r) / 26;
              var q = 1 << r;

              // Fast case: bit is much higher than all existing words
              if (this.length <= s) {
                this._expand(s + 1);
                this.words[s] |= q;
                return this;
              }

              // Add bit and propagate, if needed
              var carry = q;
              for (var i = s; carry !== 0 && i < this.length; i++) {
                var w = this.words[i] | 0;
                w += carry;
                carry = w >>> 26;
                w &= 0x3ffffff;
                this.words[i] = w;
              }
              if (carry !== 0) {
                this.words[i] = carry;
                this.length++;
              }
              return this;
            };

            BN.prototype.isZero = function isZero() {
              return this.length === 1 && this.words[0] === 0;
            };

            BN.prototype.cmpn = function cmpn(num) {
              var negative = num < 0;

              if (this.negative !== 0 && !negative) return -1;
              if (this.negative === 0 && negative) return 1;

              this._strip();

              var res;
              if (this.length > 1) {
                res = 1;
              } else {
                if (negative) {
                  num = -num;
                }

                assert(num <= 0x3ffffff, 'Number is too big');

                var w = this.words[0] | 0;
                res = w === num ? 0 : w < num ? -1 : 1;
              }
              if (this.negative !== 0) return -res | 0;
              return res;
            };

            // Compare two numbers and return:
            // 1 - if `this` > `num`
            // 0 - if `this` == `num`
            // -1 - if `this` < `num`
            BN.prototype.cmp = function cmp(num) {
              if (this.negative !== 0 && num.negative === 0) return -1;
              if (this.negative === 0 && num.negative !== 0) return 1;

              var res = this.ucmp(num);
              if (this.negative !== 0) return -res | 0;
              return res;
            };

            // Unsigned comparison
            BN.prototype.ucmp = function ucmp(num) {
              // At this point both numbers have the same sign
              if (this.length > num.length) return 1;
              if (this.length < num.length) return -1;

              var res = 0;
              for (var i = this.length - 1; i >= 0; i--) {
                var a = this.words[i] | 0;
                var b = num.words[i] | 0;

                if (a === b) continue;
                if (a < b) {
                  res = -1;
                } else if (a > b) {
                  res = 1;
                }
                break;
              }
              return res;
            };

            BN.prototype.gtn = function gtn(num) {
              return this.cmpn(num) === 1;
            };

            BN.prototype.gt = function gt(num) {
              return this.cmp(num) === 1;
            };

            BN.prototype.gten = function gten(num) {
              return this.cmpn(num) >= 0;
            };

            BN.prototype.gte = function gte(num) {
              return this.cmp(num) >= 0;
            };

            BN.prototype.ltn = function ltn(num) {
              return this.cmpn(num) === -1;
            };

            BN.prototype.lt = function lt(num) {
              return this.cmp(num) === -1;
            };

            BN.prototype.lten = function lten(num) {
              return this.cmpn(num) <= 0;
            };

            BN.prototype.lte = function lte(num) {
              return this.cmp(num) <= 0;
            };

            BN.prototype.eqn = function eqn(num) {
              return this.cmpn(num) === 0;
            };

            BN.prototype.eq = function eq(num) {
              return this.cmp(num) === 0;
            };

            //
            // A reduce context, could be using montgomery or something better, depending
            // on the `m` itself.
            //
            BN.red = function red(num) {
              return new Red(num);
            };

            BN.prototype.toRed = function toRed(ctx) {
              assert(!this.red, 'Already a number in reduction context');
              assert(this.negative === 0, 'red works only with positives');
              return ctx.convertTo(this)._forceRed(ctx);
            };

            BN.prototype.fromRed = function fromRed() {
              assert(
                this.red,
                'fromRed works only with numbers in reduction context'
              );
              return this.red.convertFrom(this);
            };

            BN.prototype._forceRed = function _forceRed(ctx) {
              this.red = ctx;
              return this;
            };

            BN.prototype.forceRed = function forceRed(ctx) {
              assert(!this.red, 'Already a number in reduction context');
              return this._forceRed(ctx);
            };

            BN.prototype.redAdd = function redAdd(num) {
              assert(this.red, 'redAdd works only with red numbers');
              return this.red.add(this, num);
            };

            BN.prototype.redIAdd = function redIAdd(num) {
              assert(this.red, 'redIAdd works only with red numbers');
              return this.red.iadd(this, num);
            };

            BN.prototype.redSub = function redSub(num) {
              assert(this.red, 'redSub works only with red numbers');
              return this.red.sub(this, num);
            };

            BN.prototype.redISub = function redISub(num) {
              assert(this.red, 'redISub works only with red numbers');
              return this.red.isub(this, num);
            };

            BN.prototype.redShl = function redShl(num) {
              assert(this.red, 'redShl works only with red numbers');
              return this.red.shl(this, num);
            };

            BN.prototype.redMul = function redMul(num) {
              assert(this.red, 'redMul works only with red numbers');
              this.red._verify2(this, num);
              return this.red.mul(this, num);
            };

            BN.prototype.redIMul = function redIMul(num) {
              assert(this.red, 'redMul works only with red numbers');
              this.red._verify2(this, num);
              return this.red.imul(this, num);
            };

            BN.prototype.redSqr = function redSqr() {
              assert(this.red, 'redSqr works only with red numbers');
              this.red._verify1(this);
              return this.red.sqr(this);
            };

            BN.prototype.redISqr = function redISqr() {
              assert(this.red, 'redISqr works only with red numbers');
              this.red._verify1(this);
              return this.red.isqr(this);
            };

            // Square root over p
            BN.prototype.redSqrt = function redSqrt() {
              assert(this.red, 'redSqrt works only with red numbers');
              this.red._verify1(this);
              return this.red.sqrt(this);
            };

            BN.prototype.redInvm = function redInvm() {
              assert(this.red, 'redInvm works only with red numbers');
              this.red._verify1(this);
              return this.red.invm(this);
            };

            // Return negative clone of `this` % `red modulo`
            BN.prototype.redNeg = function redNeg() {
              assert(this.red, 'redNeg works only with red numbers');
              this.red._verify1(this);
              return this.red.neg(this);
            };

            BN.prototype.redPow = function redPow(num) {
              assert(this.red && !num.red, 'redPow(normalNum)');
              this.red._verify1(this);
              return this.red.pow(this, num);
            };

            // Prime numbers with efficient reduction
            var primes = {
              k256: null,
              p224: null,
              p192: null,
              p25519: null,
            };

            // Pseudo-Mersenne prime
            function MPrime(name, p) {
              // P = 2 ^ N - K
              this.name = name;
              this.p = new BN(p, 16);
              this.n = this.p.bitLength();
              this.k = new BN(1).iushln(this.n).isub(this.p);

              this.tmp = this._tmp();
            }

            MPrime.prototype._tmp = function _tmp() {
              var tmp = new BN(null);
              tmp.words = new Array(Math.ceil(this.n / 13));
              return tmp;
            };

            MPrime.prototype.ireduce = function ireduce(num) {
              // Assumes that `num` is less than `P^2`
              // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
              var r = num;
              var rlen;

              do {
                this.split(r, this.tmp);
                r = this.imulK(r);
                r = r.iadd(this.tmp);
                rlen = r.bitLength();
              } while (rlen > this.n);

              var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
              if (cmp === 0) {
                r.words[0] = 0;
                r.length = 1;
              } else if (cmp > 0) {
                r.isub(this.p);
              } else {
                if (r.strip !== undefined) {
                  // r is a BN v4 instance
                  r.strip();
                } else {
                  // r is a BN v5 instance
                  r._strip();
                }
              }

              return r;
            };

            MPrime.prototype.split = function split(input, out) {
              input.iushrn(this.n, 0, out);
            };

            MPrime.prototype.imulK = function imulK(num) {
              return num.imul(this.k);
            };

            function K256() {
              MPrime.call(
                this,
                'k256',
                'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f'
              );
            }
            inherits(K256, MPrime);

            K256.prototype.split = function split(input, output) {
              // 256 = 9 * 26 + 22
              var mask = 0x3fffff;

              var outLen = Math.min(input.length, 9);
              for (var i = 0; i < outLen; i++) {
                output.words[i] = input.words[i];
              }
              output.length = outLen;

              if (input.length <= 9) {
                input.words[0] = 0;
                input.length = 1;
                return;
              }

              // Shift by 9 limbs
              var prev = input.words[9];
              output.words[output.length++] = prev & mask;

              for (i = 10; i < input.length; i++) {
                var next = input.words[i] | 0;
                input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
                prev = next;
              }
              prev >>>= 22;
              input.words[i - 10] = prev;
              if (prev === 0 && input.length > 10) {
                input.length -= 10;
              } else {
                input.length -= 9;
              }
            };

            K256.prototype.imulK = function imulK(num) {
              // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
              num.words[num.length] = 0;
              num.words[num.length + 1] = 0;
              num.length += 2;

              // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
              var lo = 0;
              for (var i = 0; i < num.length; i++) {
                var w = num.words[i] | 0;
                lo += w * 0x3d1;
                num.words[i] = lo & 0x3ffffff;
                lo = w * 0x40 + ((lo / 0x4000000) | 0);
              }

              // Fast length reduction
              if (num.words[num.length - 1] === 0) {
                num.length--;
                if (num.words[num.length - 1] === 0) {
                  num.length--;
                }
              }
              return num;
            };

            function P224() {
              MPrime.call(
                this,
                'p224',
                'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001'
              );
            }
            inherits(P224, MPrime);

            function P192() {
              MPrime.call(
                this,
                'p192',
                'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff'
              );
            }
            inherits(P192, MPrime);

            function P25519() {
              // 2 ^ 255 - 19
              MPrime.call(
                this,
                '25519',
                '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed'
              );
            }
            inherits(P25519, MPrime);

            P25519.prototype.imulK = function imulK(num) {
              // K = 0x13
              var carry = 0;
              for (var i = 0; i < num.length; i++) {
                var hi = (num.words[i] | 0) * 0x13 + carry;
                var lo = hi & 0x3ffffff;
                hi >>>= 26;

                num.words[i] = lo;
                carry = hi;
              }
              if (carry !== 0) {
                num.words[num.length++] = carry;
              }
              return num;
            };

            // Exported mostly for testing purposes, use plain name instead
            BN._prime = function prime(name) {
              // Cached version of prime
              if (primes[name]) return primes[name];

              var prime;
              if (name === 'k256') {
                prime = new K256();
              } else if (name === 'p224') {
                prime = new P224();
              } else if (name === 'p192') {
                prime = new P192();
              } else if (name === 'p25519') {
                prime = new P25519();
              } else {
                throw new Error('Unknown prime ' + name);
              }
              primes[name] = prime;

              return prime;
            };

            //
            // Base reduction engine
            //
            function Red(m) {
              if (typeof m === 'string') {
                var prime = BN._prime(m);
                this.m = prime.p;
                this.prime = prime;
              } else {
                assert(m.gtn(1), 'modulus must be greater than 1');
                this.m = m;
                this.prime = null;
              }
            }

            Red.prototype._verify1 = function _verify1(a) {
              assert(a.negative === 0, 'red works only with positives');
              assert(a.red, 'red works only with red numbers');
            };

            Red.prototype._verify2 = function _verify2(a, b) {
              assert(
                (a.negative | b.negative) === 0,
                'red works only with positives'
              );
              assert(
                a.red && a.red === b.red,
                'red works only with red numbers'
              );
            };

            Red.prototype.imod = function imod(a) {
              if (this.prime) return this.prime.ireduce(a)._forceRed(this);

              move(a, a.umod(this.m)._forceRed(this));
              return a;
            };

            Red.prototype.neg = function neg(a) {
              if (a.isZero()) {
                return a.clone();
              }

              return this.m.sub(a)._forceRed(this);
            };

            Red.prototype.add = function add(a, b) {
              this._verify2(a, b);

              var res = a.add(b);
              if (res.cmp(this.m) >= 0) {
                res.isub(this.m);
              }
              return res._forceRed(this);
            };

            Red.prototype.iadd = function iadd(a, b) {
              this._verify2(a, b);

              var res = a.iadd(b);
              if (res.cmp(this.m) >= 0) {
                res.isub(this.m);
              }
              return res;
            };

            Red.prototype.sub = function sub(a, b) {
              this._verify2(a, b);

              var res = a.sub(b);
              if (res.cmpn(0) < 0) {
                res.iadd(this.m);
              }
              return res._forceRed(this);
            };

            Red.prototype.isub = function isub(a, b) {
              this._verify2(a, b);

              var res = a.isub(b);
              if (res.cmpn(0) < 0) {
                res.iadd(this.m);
              }
              return res;
            };

            Red.prototype.shl = function shl(a, num) {
              this._verify1(a);
              return this.imod(a.ushln(num));
            };

            Red.prototype.imul = function imul(a, b) {
              this._verify2(a, b);
              return this.imod(a.imul(b));
            };

            Red.prototype.mul = function mul(a, b) {
              this._verify2(a, b);
              return this.imod(a.mul(b));
            };

            Red.prototype.isqr = function isqr(a) {
              return this.imul(a, a.clone());
            };

            Red.prototype.sqr = function sqr(a) {
              return this.mul(a, a);
            };

            Red.prototype.sqrt = function sqrt(a) {
              if (a.isZero()) return a.clone();

              var mod3 = this.m.andln(3);
              assert(mod3 % 2 === 1);

              // Fast case
              if (mod3 === 3) {
                var pow = this.m.add(new BN(1)).iushrn(2);
                return this.pow(a, pow);
              }

              // Tonelli-Shanks algorithm (Totally unoptimized and slow)
              //
              // Find Q and S, that Q * 2 ^ S = (P - 1)
              var q = this.m.subn(1);
              var s = 0;
              while (!q.isZero() && q.andln(1) === 0) {
                s++;
                q.iushrn(1);
              }
              assert(!q.isZero());

              var one = new BN(1).toRed(this);
              var nOne = one.redNeg();

              // Find quadratic non-residue
              // NOTE: Max is such because of generalized Riemann hypothesis.
              var lpow = this.m.subn(1).iushrn(1);
              var z = this.m.bitLength();
              z = new BN(2 * z * z).toRed(this);

              while (this.pow(z, lpow).cmp(nOne) !== 0) {
                z.redIAdd(nOne);
              }

              var c = this.pow(z, q);
              var r = this.pow(a, q.addn(1).iushrn(1));
              var t = this.pow(a, q);
              var m = s;
              while (t.cmp(one) !== 0) {
                var tmp = t;
                for (var i = 0; tmp.cmp(one) !== 0; i++) {
                  tmp = tmp.redSqr();
                }
                assert(i < m);
                var b = this.pow(c, new BN(1).iushln(m - i - 1));

                r = r.redMul(b);
                c = b.redSqr();
                t = t.redMul(c);
                m = i;
              }

              return r;
            };

            Red.prototype.invm = function invm(a) {
              var inv = a._invmp(this.m);
              if (inv.negative !== 0) {
                inv.negative = 0;
                return this.imod(inv).redNeg();
              } else {
                return this.imod(inv);
              }
            };

            Red.prototype.pow = function pow(a, num) {
              if (num.isZero()) return new BN(1).toRed(this);
              if (num.cmpn(1) === 0) return a.clone();

              var windowSize = 4;
              var wnd = new Array(1 << windowSize);
              wnd[0] = new BN(1).toRed(this);
              wnd[1] = a;
              for (var i = 2; i < wnd.length; i++) {
                wnd[i] = this.mul(wnd[i - 1], a);
              }

              var res = wnd[0];
              var current = 0;
              var currentLen = 0;
              var start = num.bitLength() % 26;
              if (start === 0) {
                start = 26;
              }

              for (i = num.length - 1; i >= 0; i--) {
                var word = num.words[i];
                for (var j = start - 1; j >= 0; j--) {
                  var bit = (word >> j) & 1;
                  if (res !== wnd[0]) {
                    res = this.sqr(res);
                  }

                  if (bit === 0 && current === 0) {
                    currentLen = 0;
                    continue;
                  }

                  current <<= 1;
                  current |= bit;
                  currentLen++;
                  if (currentLen !== windowSize && (i !== 0 || j !== 0))
                    continue;

                  res = this.mul(res, wnd[current]);
                  currentLen = 0;
                  current = 0;
                }
                start = 26;
              }

              return res;
            };

            Red.prototype.convertTo = function convertTo(num) {
              var r = num.umod(this.m);

              return r === num ? r.clone() : r;
            };

            Red.prototype.convertFrom = function convertFrom(num) {
              var res = num.clone();
              res.red = null;
              return res;
            };

            //
            // Montgomery method engine
            //

            BN.mont = function mont(num) {
              return new Mont(num);
            };

            function Mont(m) {
              Red.call(this, m);

              this.shift = this.m.bitLength();
              if (this.shift % 26 !== 0) {
                this.shift += 26 - (this.shift % 26);
              }

              this.r = new BN(1).iushln(this.shift);
              this.r2 = this.imod(this.r.sqr());
              this.rinv = this.r._invmp(this.m);

              this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
              this.minv = this.minv.umod(this.r);
              this.minv = this.r.sub(this.minv);
            }
            inherits(Mont, Red);

            Mont.prototype.convertTo = function convertTo(num) {
              return this.imod(num.ushln(this.shift));
            };

            Mont.prototype.convertFrom = function convertFrom(num) {
              var r = this.imod(num.mul(this.rinv));
              r.red = null;
              return r;
            };

            Mont.prototype.imul = function imul(a, b) {
              if (a.isZero() || b.isZero()) {
                a.words[0] = 0;
                a.length = 1;
                return a;
              }

              var t = a.imul(b);
              var c = t
                .maskn(this.shift)
                .mul(this.minv)
                .imaskn(this.shift)
                .mul(this.m);
              var u = t.isub(c).iushrn(this.shift);
              var res = u;

              if (u.cmp(this.m) >= 0) {
                res = u.isub(this.m);
              } else if (u.cmpn(0) < 0) {
                res = u.iadd(this.m);
              }

              return res._forceRed(this);
            };

            Mont.prototype.mul = function mul(a, b) {
              if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

              var t = a.mul(b);
              var c = t
                .maskn(this.shift)
                .mul(this.minv)
                .imaskn(this.shift)
                .mul(this.m);
              var u = t.isub(c).iushrn(this.shift);
              var res = u;
              if (u.cmp(this.m) >= 0) {
                res = u.isub(this.m);
              } else if (u.cmpn(0) < 0) {
                res = u.iadd(this.m);
              }

              return res._forceRed(this);
            };

            Mont.prototype.invm = function invm(a) {
              // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
              var res = this.imod(a._invmp(this.m).mul(this.r2));
              return res._forceRed(this);
            };
          })(false || module, this);

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../webpack/buildin/module.js */ '../node_modules/webpack/buildin/module.js'
          )(module)
        ));

        /***/
      },

    /***/ '../node_modules/brorand/index.js':
      /*!****************************************!*\
  !*** ../node_modules/brorand/index.js ***!
  \****************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var r;

        module.exports = function rand(len) {
          if (!r) r = new Rand(null);

          return r.generate(len);
        };

        function Rand(rand) {
          this.rand = rand;
        }
        module.exports.Rand = Rand;

        Rand.prototype.generate = function generate(len) {
          return this._rand(len);
        };

        // Emulate crypto API using randy
        Rand.prototype._rand = function _rand(n) {
          if (this.rand.getBytes) return this.rand.getBytes(n);

          var res = new Uint8Array(n);
          for (var i = 0; i < res.length; i++) res[i] = this.rand.getByte();
          return res;
        };

        if (typeof self === 'object') {
          if (self.crypto && self.crypto.getRandomValues) {
            // Modern browsers
            Rand.prototype._rand = function _rand(n) {
              var arr = new Uint8Array(n);
              self.crypto.getRandomValues(arr);
              return arr;
            };
          } else if (self.msCrypto && self.msCrypto.getRandomValues) {
            // IE
            Rand.prototype._rand = function _rand(n) {
              var arr = new Uint8Array(n);
              self.msCrypto.getRandomValues(arr);
              return arr;
            };

            // Safari's WebWorkers do not have `crypto`
          } else if (typeof window === 'object') {
            // Old junk
            Rand.prototype._rand = function () {
              throw new Error('Not implemented yet');
            };
          }
        } else {
          // Node.js or Web worker with no crypto support
          try {
            var crypto = __webpack_require__(/*! crypto */ 7);
            if (typeof crypto.randomBytes !== 'function')
              throw new Error('Not supported');

            Rand.prototype._rand = function _rand(n) {
              return crypto.randomBytes(n);
            };
          } catch (e) {}
        }

        /***/
      },

    /***/ '../node_modules/browserify-aes/aes.js':
      /*!*********************************************!*\
  !*** ../node_modules/browserify-aes/aes.js ***!
  \*********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        // based on the aes implimentation in triple sec
        // https://github.com/keybase/triplesec
        // which is in turn based on the one from crypto-js
        // https://code.google.com/p/crypto-js/

        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;

        function asUInt32Array(buf) {
          if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf);

          var len = (buf.length / 4) | 0;
          var out = new Array(len);

          for (var i = 0; i < len; i++) {
            out[i] = buf.readUInt32BE(i * 4);
          }

          return out;
        }

        function scrubVec(v) {
          for (var i = 0; i < v.length; v++) {
            v[i] = 0;
          }
        }

        function cryptBlock(M, keySchedule, SUB_MIX, SBOX, nRounds) {
          var SUB_MIX0 = SUB_MIX[0];
          var SUB_MIX1 = SUB_MIX[1];
          var SUB_MIX2 = SUB_MIX[2];
          var SUB_MIX3 = SUB_MIX[3];

          var s0 = M[0] ^ keySchedule[0];
          var s1 = M[1] ^ keySchedule[1];
          var s2 = M[2] ^ keySchedule[2];
          var s3 = M[3] ^ keySchedule[3];
          var t0, t1, t2, t3;
          var ksRow = 4;

          for (var round = 1; round < nRounds; round++) {
            t0 =
              SUB_MIX0[s0 >>> 24] ^
              SUB_MIX1[(s1 >>> 16) & 0xff] ^
              SUB_MIX2[(s2 >>> 8) & 0xff] ^
              SUB_MIX3[s3 & 0xff] ^
              keySchedule[ksRow++];
            t1 =
              SUB_MIX0[s1 >>> 24] ^
              SUB_MIX1[(s2 >>> 16) & 0xff] ^
              SUB_MIX2[(s3 >>> 8) & 0xff] ^
              SUB_MIX3[s0 & 0xff] ^
              keySchedule[ksRow++];
            t2 =
              SUB_MIX0[s2 >>> 24] ^
              SUB_MIX1[(s3 >>> 16) & 0xff] ^
              SUB_MIX2[(s0 >>> 8) & 0xff] ^
              SUB_MIX3[s1 & 0xff] ^
              keySchedule[ksRow++];
            t3 =
              SUB_MIX0[s3 >>> 24] ^
              SUB_MIX1[(s0 >>> 16) & 0xff] ^
              SUB_MIX2[(s1 >>> 8) & 0xff] ^
              SUB_MIX3[s2 & 0xff] ^
              keySchedule[ksRow++];
            s0 = t0;
            s1 = t1;
            s2 = t2;
            s3 = t3;
          }

          t0 =
            ((SBOX[s0 >>> 24] << 24) |
              (SBOX[(s1 >>> 16) & 0xff] << 16) |
              (SBOX[(s2 >>> 8) & 0xff] << 8) |
              SBOX[s3 & 0xff]) ^
            keySchedule[ksRow++];
          t1 =
            ((SBOX[s1 >>> 24] << 24) |
              (SBOX[(s2 >>> 16) & 0xff] << 16) |
              (SBOX[(s3 >>> 8) & 0xff] << 8) |
              SBOX[s0 & 0xff]) ^
            keySchedule[ksRow++];
          t2 =
            ((SBOX[s2 >>> 24] << 24) |
              (SBOX[(s3 >>> 16) & 0xff] << 16) |
              (SBOX[(s0 >>> 8) & 0xff] << 8) |
              SBOX[s1 & 0xff]) ^
            keySchedule[ksRow++];
          t3 =
            ((SBOX[s3 >>> 24] << 24) |
              (SBOX[(s0 >>> 16) & 0xff] << 16) |
              (SBOX[(s1 >>> 8) & 0xff] << 8) |
              SBOX[s2 & 0xff]) ^
            keySchedule[ksRow++];
          t0 = t0 >>> 0;
          t1 = t1 >>> 0;
          t2 = t2 >>> 0;
          t3 = t3 >>> 0;

          return [t0, t1, t2, t3];
        }

        // AES constants
        var RCON = [
          0x00,
          0x01,
          0x02,
          0x04,
          0x08,
          0x10,
          0x20,
          0x40,
          0x80,
          0x1b,
          0x36,
        ];
        var G = (function () {
          // Compute double table
          var d = new Array(256);
          for (var j = 0; j < 256; j++) {
            if (j < 128) {
              d[j] = j << 1;
            } else {
              d[j] = (j << 1) ^ 0x11b;
            }
          }

          var SBOX = [];
          var INV_SBOX = [];
          var SUB_MIX = [[], [], [], []];
          var INV_SUB_MIX = [[], [], [], []];

          // Walk GF(2^8)
          var x = 0;
          var xi = 0;
          for (var i = 0; i < 256; ++i) {
            // Compute sbox
            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);
            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;
            SBOX[x] = sx;
            INV_SBOX[sx] = x;

            // Compute multiplication
            var x2 = d[x];
            var x4 = d[x2];
            var x8 = d[x4];

            // Compute sub bytes, mix columns tables
            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);
            SUB_MIX[0][x] = (t << 24) | (t >>> 8);
            SUB_MIX[1][x] = (t << 16) | (t >>> 16);
            SUB_MIX[2][x] = (t << 8) | (t >>> 24);
            SUB_MIX[3][x] = t;

            // Compute inv sub bytes, inv mix columns tables
            t =
              (x8 * 0x1010101) ^
              (x4 * 0x10001) ^
              (x2 * 0x101) ^
              (x * 0x1010100);
            INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8);
            INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16);
            INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24);
            INV_SUB_MIX[3][sx] = t;

            if (x === 0) {
              x = xi = 1;
            } else {
              x = x2 ^ d[d[d[x8 ^ x2]]];
              xi ^= d[d[xi]];
            }
          }

          return {
            SBOX: SBOX,
            INV_SBOX: INV_SBOX,
            SUB_MIX: SUB_MIX,
            INV_SUB_MIX: INV_SUB_MIX,
          };
        })();

        function AES(key) {
          this._key = asUInt32Array(key);
          this._reset();
        }

        AES.blockSize = 4 * 4;
        AES.keySize = 256 / 8;
        AES.prototype.blockSize = AES.blockSize;
        AES.prototype.keySize = AES.keySize;
        AES.prototype._reset = function () {
          var keyWords = this._key;
          var keySize = keyWords.length;
          var nRounds = keySize + 6;
          var ksRows = (nRounds + 1) * 4;

          var keySchedule = [];
          for (var k = 0; k < keySize; k++) {
            keySchedule[k] = keyWords[k];
          }

          for (k = keySize; k < ksRows; k++) {
            var t = keySchedule[k - 1];

            if (k % keySize === 0) {
              t = (t << 8) | (t >>> 24);
              t =
                (G.SBOX[t >>> 24] << 24) |
                (G.SBOX[(t >>> 16) & 0xff] << 16) |
                (G.SBOX[(t >>> 8) & 0xff] << 8) |
                G.SBOX[t & 0xff];

              t ^= RCON[(k / keySize) | 0] << 24;
            } else if (keySize > 6 && k % keySize === 4) {
              t =
                (G.SBOX[t >>> 24] << 24) |
                (G.SBOX[(t >>> 16) & 0xff] << 16) |
                (G.SBOX[(t >>> 8) & 0xff] << 8) |
                G.SBOX[t & 0xff];
            }

            keySchedule[k] = keySchedule[k - keySize] ^ t;
          }

          var invKeySchedule = [];
          for (var ik = 0; ik < ksRows; ik++) {
            var ksR = ksRows - ik;
            var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)];

            if (ik < 4 || ksR <= 4) {
              invKeySchedule[ik] = tt;
            } else {
              invKeySchedule[ik] =
                G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^
                G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^
                G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^
                G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]];
            }
          }

          this._nRounds = nRounds;
          this._keySchedule = keySchedule;
          this._invKeySchedule = invKeySchedule;
        };

        AES.prototype.encryptBlockRaw = function (M) {
          M = asUInt32Array(M);
          return cryptBlock(
            M,
            this._keySchedule,
            G.SUB_MIX,
            G.SBOX,
            this._nRounds
          );
        };

        AES.prototype.encryptBlock = function (M) {
          var out = this.encryptBlockRaw(M);
          var buf = Buffer.allocUnsafe(16);
          buf.writeUInt32BE(out[0], 0);
          buf.writeUInt32BE(out[1], 4);
          buf.writeUInt32BE(out[2], 8);
          buf.writeUInt32BE(out[3], 12);
          return buf;
        };

        AES.prototype.decryptBlock = function (M) {
          M = asUInt32Array(M);

          // swap
          var m1 = M[1];
          M[1] = M[3];
          M[3] = m1;

          var out = cryptBlock(
            M,
            this._invKeySchedule,
            G.INV_SUB_MIX,
            G.INV_SBOX,
            this._nRounds
          );
          var buf = Buffer.allocUnsafe(16);
          buf.writeUInt32BE(out[0], 0);
          buf.writeUInt32BE(out[3], 4);
          buf.writeUInt32BE(out[2], 8);
          buf.writeUInt32BE(out[1], 12);
          return buf;
        };

        AES.prototype.scrub = function () {
          scrubVec(this._keySchedule);
          scrubVec(this._invKeySchedule);
          scrubVec(this._key);
        };

        module.exports.AES = AES;

        /***/
      },

    /***/ '../node_modules/browserify-aes/authCipher.js':
      /*!****************************************************!*\
  !*** ../node_modules/browserify-aes/authCipher.js ***!
  \****************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var aes = __webpack_require__(
          /*! ./aes */ '../node_modules/browserify-aes/aes.js'
        );
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;
        var Transform = __webpack_require__(
          /*! cipher-base */ '../node_modules/cipher-base/index.js'
        );
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );
        var GHASH = __webpack_require__(
          /*! ./ghash */ '../node_modules/browserify-aes/ghash.js'
        );
        var xor = __webpack_require__(
          /*! buffer-xor */ '../node_modules/buffer-xor/index.js'
        );
        var incr32 = __webpack_require__(
          /*! ./incr32 */ '../node_modules/browserify-aes/incr32.js'
        );

        function xorTest(a, b) {
          var out = 0;
          if (a.length !== b.length) out++;

          var len = Math.min(a.length, b.length);
          for (var i = 0; i < len; ++i) {
            out += a[i] ^ b[i];
          }

          return out;
        }

        function calcIv(self, iv, ck) {
          if (iv.length === 12) {
            self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])]);
            return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])]);
          }
          var ghash = new GHASH(ck);
          var len = iv.length;
          var toPad = len % 16;
          ghash.update(iv);
          if (toPad) {
            toPad = 16 - toPad;
            ghash.update(Buffer.alloc(toPad, 0));
          }
          ghash.update(Buffer.alloc(8, 0));
          var ivBits = len * 8;
          var tail = Buffer.alloc(8);
          tail.writeUIntBE(ivBits, 0, 8);
          ghash.update(tail);
          self._finID = ghash.state;
          var out = Buffer.from(self._finID);
          incr32(out);
          return out;
        }
        function StreamCipher(mode, key, iv, decrypt) {
          Transform.call(this);

          var h = Buffer.alloc(4, 0);

          this._cipher = new aes.AES(key);
          var ck = this._cipher.encryptBlock(h);
          this._ghash = new GHASH(ck);
          iv = calcIv(this, iv, ck);

          this._prev = Buffer.from(iv);
          this._cache = Buffer.allocUnsafe(0);
          this._secCache = Buffer.allocUnsafe(0);
          this._decrypt = decrypt;
          this._alen = 0;
          this._len = 0;
          this._mode = mode;

          this._authTag = null;
          this._called = false;
        }

        inherits(StreamCipher, Transform);

        StreamCipher.prototype._update = function (chunk) {
          if (!this._called && this._alen) {
            var rump = 16 - (this._alen % 16);
            if (rump < 16) {
              rump = Buffer.alloc(rump, 0);
              this._ghash.update(rump);
            }
          }

          this._called = true;
          var out = this._mode.encrypt(this, chunk);
          if (this._decrypt) {
            this._ghash.update(chunk);
          } else {
            this._ghash.update(out);
          }
          this._len += chunk.length;
          return out;
        };

        StreamCipher.prototype._final = function () {
          if (this._decrypt && !this._authTag)
            throw new Error('Unsupported state or unable to authenticate data');

          var tag = xor(
            this._ghash.final(this._alen * 8, this._len * 8),
            this._cipher.encryptBlock(this._finID)
          );
          if (this._decrypt && xorTest(tag, this._authTag))
            throw new Error('Unsupported state or unable to authenticate data');

          this._authTag = tag;
          this._cipher.scrub();
        };

        StreamCipher.prototype.getAuthTag = function getAuthTag() {
          if (this._decrypt || !Buffer.isBuffer(this._authTag))
            throw new Error('Attempting to get auth tag in unsupported state');

          return this._authTag;
        };

        StreamCipher.prototype.setAuthTag = function setAuthTag(tag) {
          if (!this._decrypt)
            throw new Error('Attempting to set auth tag in unsupported state');

          this._authTag = tag;
        };

        StreamCipher.prototype.setAAD = function setAAD(buf) {
          if (this._called)
            throw new Error('Attempting to set AAD in unsupported state');

          this._ghash.update(buf);
          this._alen += buf.length;
        };

        module.exports = StreamCipher;

        /***/
      },

    /***/ '../node_modules/browserify-aes/browser.js':
      /*!*************************************************!*\
  !*** ../node_modules/browserify-aes/browser.js ***!
  \*************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var ciphers = __webpack_require__(
          /*! ./encrypter */ '../node_modules/browserify-aes/encrypter.js'
        );
        var deciphers = __webpack_require__(
          /*! ./decrypter */ '../node_modules/browserify-aes/decrypter.js'
        );
        var modes = __webpack_require__(
          /*! ./modes/list.json */ '../node_modules/browserify-aes/modes/list.json'
        );

        function getCiphers() {
          return Object.keys(modes);
        }

        exports.createCipher = exports.Cipher = ciphers.createCipher;
        exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv;
        exports.createDecipher = exports.Decipher = deciphers.createDecipher;
        exports.createDecipheriv = exports.Decipheriv =
          deciphers.createDecipheriv;
        exports.listCiphers = exports.getCiphers = getCiphers;

        /***/
      },

    /***/ '../node_modules/browserify-aes/decrypter.js':
      /*!***************************************************!*\
  !*** ../node_modules/browserify-aes/decrypter.js ***!
  \***************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var AuthCipher = __webpack_require__(
          /*! ./authCipher */ '../node_modules/browserify-aes/authCipher.js'
        );
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;
        var MODES = __webpack_require__(
          /*! ./modes */ '../node_modules/browserify-aes/modes/index.js'
        );
        var StreamCipher = __webpack_require__(
          /*! ./streamCipher */ '../node_modules/browserify-aes/streamCipher.js'
        );
        var Transform = __webpack_require__(
          /*! cipher-base */ '../node_modules/cipher-base/index.js'
        );
        var aes = __webpack_require__(
          /*! ./aes */ '../node_modules/browserify-aes/aes.js'
        );
        var ebtk = __webpack_require__(
          /*! evp_bytestokey */ '../node_modules/evp_bytestokey/index.js'
        );
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );

        function Decipher(mode, key, iv) {
          Transform.call(this);

          this._cache = new Splitter();
          this._last = void 0;
          this._cipher = new aes.AES(key);
          this._prev = Buffer.from(iv);
          this._mode = mode;
          this._autopadding = true;
        }

        inherits(Decipher, Transform);

        Decipher.prototype._update = function (data) {
          this._cache.add(data);
          var chunk;
          var thing;
          var out = [];
          while ((chunk = this._cache.get(this._autopadding))) {
            thing = this._mode.decrypt(this, chunk);
            out.push(thing);
          }
          return Buffer.concat(out);
        };

        Decipher.prototype._final = function () {
          var chunk = this._cache.flush();
          if (this._autopadding) {
            return unpad(this._mode.decrypt(this, chunk));
          } else if (chunk) {
            throw new Error('data not multiple of block length');
          }
        };

        Decipher.prototype.setAutoPadding = function (setTo) {
          this._autopadding = !!setTo;
          return this;
        };

        function Splitter() {
          this.cache = Buffer.allocUnsafe(0);
        }

        Splitter.prototype.add = function (data) {
          this.cache = Buffer.concat([this.cache, data]);
        };

        Splitter.prototype.get = function (autoPadding) {
          var out;
          if (autoPadding) {
            if (this.cache.length > 16) {
              out = this.cache.slice(0, 16);
              this.cache = this.cache.slice(16);
              return out;
            }
          } else {
            if (this.cache.length >= 16) {
              out = this.cache.slice(0, 16);
              this.cache = this.cache.slice(16);
              return out;
            }
          }

          return null;
        };

        Splitter.prototype.flush = function () {
          if (this.cache.length) return this.cache;
        };

        function unpad(last) {
          var padded = last[15];
          if (padded < 1 || padded > 16) {
            throw new Error('unable to decrypt data');
          }
          var i = -1;
          while (++i < padded) {
            if (last[i + (16 - padded)] !== padded) {
              throw new Error('unable to decrypt data');
            }
          }
          if (padded === 16) return;

          return last.slice(0, 16 - padded);
        }

        function createDecipheriv(suite, password, iv) {
          var config = MODES[suite.toLowerCase()];
          if (!config) throw new TypeError('invalid suite type');

          if (typeof iv === 'string') iv = Buffer.from(iv);
          if (config.mode !== 'GCM' && iv.length !== config.iv)
            throw new TypeError('invalid iv length ' + iv.length);

          if (typeof password === 'string') password = Buffer.from(password);
          if (password.length !== config.key / 8)
            throw new TypeError('invalid key length ' + password.length);

          if (config.type === 'stream') {
            return new StreamCipher(config.module, password, iv, true);
          } else if (config.type === 'auth') {
            return new AuthCipher(config.module, password, iv, true);
          }

          return new Decipher(config.module, password, iv);
        }

        function createDecipher(suite, password) {
          var config = MODES[suite.toLowerCase()];
          if (!config) throw new TypeError('invalid suite type');

          var keys = ebtk(password, false, config.key, config.iv);
          return createDecipheriv(suite, keys.key, keys.iv);
        }

        exports.createDecipher = createDecipher;
        exports.createDecipheriv = createDecipheriv;

        /***/
      },

    /***/ '../node_modules/browserify-aes/encrypter.js':
      /*!***************************************************!*\
  !*** ../node_modules/browserify-aes/encrypter.js ***!
  \***************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var MODES = __webpack_require__(
          /*! ./modes */ '../node_modules/browserify-aes/modes/index.js'
        );
        var AuthCipher = __webpack_require__(
          /*! ./authCipher */ '../node_modules/browserify-aes/authCipher.js'
        );
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;
        var StreamCipher = __webpack_require__(
          /*! ./streamCipher */ '../node_modules/browserify-aes/streamCipher.js'
        );
        var Transform = __webpack_require__(
          /*! cipher-base */ '../node_modules/cipher-base/index.js'
        );
        var aes = __webpack_require__(
          /*! ./aes */ '../node_modules/browserify-aes/aes.js'
        );
        var ebtk = __webpack_require__(
          /*! evp_bytestokey */ '../node_modules/evp_bytestokey/index.js'
        );
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );

        function Cipher(mode, key, iv) {
          Transform.call(this);

          this._cache = new Splitter();
          this._cipher = new aes.AES(key);
          this._prev = Buffer.from(iv);
          this._mode = mode;
          this._autopadding = true;
        }

        inherits(Cipher, Transform);

        Cipher.prototype._update = function (data) {
          this._cache.add(data);
          var chunk;
          var thing;
          var out = [];

          while ((chunk = this._cache.get())) {
            thing = this._mode.encrypt(this, chunk);
            out.push(thing);
          }

          return Buffer.concat(out);
        };

        var PADDING = Buffer.alloc(16, 0x10);

        Cipher.prototype._final = function () {
          var chunk = this._cache.flush();
          if (this._autopadding) {
            chunk = this._mode.encrypt(this, chunk);
            this._cipher.scrub();
            return chunk;
          }

          if (!chunk.equals(PADDING)) {
            this._cipher.scrub();
            throw new Error('data not multiple of block length');
          }
        };

        Cipher.prototype.setAutoPadding = function (setTo) {
          this._autopadding = !!setTo;
          return this;
        };

        function Splitter() {
          this.cache = Buffer.allocUnsafe(0);
        }

        Splitter.prototype.add = function (data) {
          this.cache = Buffer.concat([this.cache, data]);
        };

        Splitter.prototype.get = function () {
          if (this.cache.length > 15) {
            var out = this.cache.slice(0, 16);
            this.cache = this.cache.slice(16);
            return out;
          }
          return null;
        };

        Splitter.prototype.flush = function () {
          var len = 16 - this.cache.length;
          var padBuff = Buffer.allocUnsafe(len);

          var i = -1;
          while (++i < len) {
            padBuff.writeUInt8(len, i);
          }

          return Buffer.concat([this.cache, padBuff]);
        };

        function createCipheriv(suite, password, iv) {
          var config = MODES[suite.toLowerCase()];
          if (!config) throw new TypeError('invalid suite type');

          if (typeof password === 'string') password = Buffer.from(password);
          if (password.length !== config.key / 8)
            throw new TypeError('invalid key length ' + password.length);

          if (typeof iv === 'string') iv = Buffer.from(iv);
          if (config.mode !== 'GCM' && iv.length !== config.iv)
            throw new TypeError('invalid iv length ' + iv.length);

          if (config.type === 'stream') {
            return new StreamCipher(config.module, password, iv);
          } else if (config.type === 'auth') {
            return new AuthCipher(config.module, password, iv);
          }

          return new Cipher(config.module, password, iv);
        }

        function createCipher(suite, password) {
          var config = MODES[suite.toLowerCase()];
          if (!config) throw new TypeError('invalid suite type');

          var keys = ebtk(password, false, config.key, config.iv);
          return createCipheriv(suite, keys.key, keys.iv);
        }

        exports.createCipheriv = createCipheriv;
        exports.createCipher = createCipher;

        /***/
      },

    /***/ '../node_modules/browserify-aes/ghash.js':
      /*!***********************************************!*\
  !*** ../node_modules/browserify-aes/ghash.js ***!
  \***********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;
        var ZEROES = Buffer.alloc(16, 0);

        function toArray(buf) {
          return [
            buf.readUInt32BE(0),
            buf.readUInt32BE(4),
            buf.readUInt32BE(8),
            buf.readUInt32BE(12),
          ];
        }

        function fromArray(out) {
          var buf = Buffer.allocUnsafe(16);
          buf.writeUInt32BE(out[0] >>> 0, 0);
          buf.writeUInt32BE(out[1] >>> 0, 4);
          buf.writeUInt32BE(out[2] >>> 0, 8);
          buf.writeUInt32BE(out[3] >>> 0, 12);
          return buf;
        }

        function GHASH(key) {
          this.h = key;
          this.state = Buffer.alloc(16, 0);
          this.cache = Buffer.allocUnsafe(0);
        }

        // from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
        // by Juho Vähä-Herttua
        GHASH.prototype.ghash = function (block) {
          var i = -1;
          while (++i < block.length) {
            this.state[i] ^= block[i];
          }
          this._multiply();
        };

        GHASH.prototype._multiply = function () {
          var Vi = toArray(this.h);
          var Zi = [0, 0, 0, 0];
          var j, xi, lsbVi;
          var i = -1;
          while (++i < 128) {
            xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0;
            if (xi) {
              // Z_i+1 = Z_i ^ V_i
              Zi[0] ^= Vi[0];
              Zi[1] ^= Vi[1];
              Zi[2] ^= Vi[2];
              Zi[3] ^= Vi[3];
            }

            // Store the value of LSB(V_i)
            lsbVi = (Vi[3] & 1) !== 0;

            // V_i+1 = V_i >> 1
            for (j = 3; j > 0; j--) {
              Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31);
            }
            Vi[0] = Vi[0] >>> 1;

            // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R
            if (lsbVi) {
              Vi[0] = Vi[0] ^ (0xe1 << 24);
            }
          }
          this.state = fromArray(Zi);
        };

        GHASH.prototype.update = function (buf) {
          this.cache = Buffer.concat([this.cache, buf]);
          var chunk;
          while (this.cache.length >= 16) {
            chunk = this.cache.slice(0, 16);
            this.cache = this.cache.slice(16);
            this.ghash(chunk);
          }
        };

        GHASH.prototype.final = function (abl, bl) {
          if (this.cache.length) {
            this.ghash(Buffer.concat([this.cache, ZEROES], 16));
          }

          this.ghash(fromArray([0, abl, 0, bl]));
          return this.state;
        };

        module.exports = GHASH;

        /***/
      },

    /***/ '../node_modules/browserify-aes/incr32.js':
      /*!************************************************!*\
  !*** ../node_modules/browserify-aes/incr32.js ***!
  \************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function incr32(iv) {
          var len = iv.length;
          var item;
          while (len--) {
            item = iv.readUInt8(len);
            if (item === 255) {
              iv.writeUInt8(0, len);
            } else {
              item++;
              iv.writeUInt8(item, len);
              break;
            }
          }
        }
        module.exports = incr32;

        /***/
      },

    /***/ '../node_modules/browserify-aes/modes/cbc.js':
      /*!***************************************************!*\
  !*** ../node_modules/browserify-aes/modes/cbc.js ***!
  \***************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var xor = __webpack_require__(
          /*! buffer-xor */ '../node_modules/buffer-xor/index.js'
        );

        exports.encrypt = function (self, block) {
          var data = xor(block, self._prev);

          self._prev = self._cipher.encryptBlock(data);
          return self._prev;
        };

        exports.decrypt = function (self, block) {
          var pad = self._prev;

          self._prev = block;
          var out = self._cipher.decryptBlock(block);

          return xor(out, pad);
        };

        /***/
      },

    /***/ '../node_modules/browserify-aes/modes/cfb.js':
      /*!***************************************************!*\
  !*** ../node_modules/browserify-aes/modes/cfb.js ***!
  \***************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;
        var xor = __webpack_require__(
          /*! buffer-xor */ '../node_modules/buffer-xor/index.js'
        );

        function encryptStart(self, data, decrypt) {
          var len = data.length;
          var out = xor(data, self._cache);
          self._cache = self._cache.slice(len);
          self._prev = Buffer.concat([self._prev, decrypt ? data : out]);
          return out;
        }

        exports.encrypt = function (self, data, decrypt) {
          var out = Buffer.allocUnsafe(0);
          var len;

          while (data.length) {
            if (self._cache.length === 0) {
              self._cache = self._cipher.encryptBlock(self._prev);
              self._prev = Buffer.allocUnsafe(0);
            }

            if (self._cache.length <= data.length) {
              len = self._cache.length;
              out = Buffer.concat([
                out,
                encryptStart(self, data.slice(0, len), decrypt),
              ]);
              data = data.slice(len);
            } else {
              out = Buffer.concat([out, encryptStart(self, data, decrypt)]);
              break;
            }
          }

          return out;
        };

        /***/
      },

    /***/ '../node_modules/browserify-aes/modes/cfb1.js':
      /*!****************************************************!*\
  !*** ../node_modules/browserify-aes/modes/cfb1.js ***!
  \****************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;

        function encryptByte(self, byteParam, decrypt) {
          var pad;
          var i = -1;
          var len = 8;
          var out = 0;
          var bit, value;
          while (++i < len) {
            pad = self._cipher.encryptBlock(self._prev);
            bit = byteParam & (1 << (7 - i)) ? 0x80 : 0;
            value = pad[0] ^ bit;
            out += (value & 0x80) >> i % 8;
            self._prev = shiftIn(self._prev, decrypt ? bit : value);
          }
          return out;
        }

        function shiftIn(buffer, value) {
          var len = buffer.length;
          var i = -1;
          var out = Buffer.allocUnsafe(buffer.length);
          buffer = Buffer.concat([buffer, Buffer.from([value])]);

          while (++i < len) {
            out[i] = (buffer[i] << 1) | (buffer[i + 1] >> 7);
          }

          return out;
        }

        exports.encrypt = function (self, chunk, decrypt) {
          var len = chunk.length;
          var out = Buffer.allocUnsafe(len);
          var i = -1;

          while (++i < len) {
            out[i] = encryptByte(self, chunk[i], decrypt);
          }

          return out;
        };

        /***/
      },

    /***/ '../node_modules/browserify-aes/modes/cfb8.js':
      /*!****************************************************!*\
  !*** ../node_modules/browserify-aes/modes/cfb8.js ***!
  \****************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;

        function encryptByte(self, byteParam, decrypt) {
          var pad = self._cipher.encryptBlock(self._prev);
          var out = pad[0] ^ byteParam;

          self._prev = Buffer.concat([
            self._prev.slice(1),
            Buffer.from([decrypt ? byteParam : out]),
          ]);

          return out;
        }

        exports.encrypt = function (self, chunk, decrypt) {
          var len = chunk.length;
          var out = Buffer.allocUnsafe(len);
          var i = -1;

          while (++i < len) {
            out[i] = encryptByte(self, chunk[i], decrypt);
          }

          return out;
        };

        /***/
      },

    /***/ '../node_modules/browserify-aes/modes/ctr.js':
      /*!***************************************************!*\
  !*** ../node_modules/browserify-aes/modes/ctr.js ***!
  \***************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var xor = __webpack_require__(
          /*! buffer-xor */ '../node_modules/buffer-xor/index.js'
        );
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;
        var incr32 = __webpack_require__(
          /*! ../incr32 */ '../node_modules/browserify-aes/incr32.js'
        );

        function getBlock(self) {
          var out = self._cipher.encryptBlockRaw(self._prev);
          incr32(self._prev);
          return out;
        }

        var blockSize = 16;
        exports.encrypt = function (self, chunk) {
          var chunkNum = Math.ceil(chunk.length / blockSize);
          var start = self._cache.length;
          self._cache = Buffer.concat([
            self._cache,
            Buffer.allocUnsafe(chunkNum * blockSize),
          ]);
          for (var i = 0; i < chunkNum; i++) {
            var out = getBlock(self);
            var offset = start + i * blockSize;
            self._cache.writeUInt32BE(out[0], offset + 0);
            self._cache.writeUInt32BE(out[1], offset + 4);
            self._cache.writeUInt32BE(out[2], offset + 8);
            self._cache.writeUInt32BE(out[3], offset + 12);
          }
          var pad = self._cache.slice(0, chunk.length);
          self._cache = self._cache.slice(chunk.length);
          return xor(chunk, pad);
        };

        /***/
      },

    /***/ '../node_modules/browserify-aes/modes/ecb.js':
      /*!***************************************************!*\
  !*** ../node_modules/browserify-aes/modes/ecb.js ***!
  \***************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        exports.encrypt = function (self, block) {
          return self._cipher.encryptBlock(block);
        };

        exports.decrypt = function (self, block) {
          return self._cipher.decryptBlock(block);
        };

        /***/
      },

    /***/ '../node_modules/browserify-aes/modes/index.js':
      /*!*****************************************************!*\
  !*** ../node_modules/browserify-aes/modes/index.js ***!
  \*****************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var modeModules = {
          ECB: __webpack_require__(
            /*! ./ecb */ '../node_modules/browserify-aes/modes/ecb.js'
          ),
          CBC: __webpack_require__(
            /*! ./cbc */ '../node_modules/browserify-aes/modes/cbc.js'
          ),
          CFB: __webpack_require__(
            /*! ./cfb */ '../node_modules/browserify-aes/modes/cfb.js'
          ),
          CFB8: __webpack_require__(
            /*! ./cfb8 */ '../node_modules/browserify-aes/modes/cfb8.js'
          ),
          CFB1: __webpack_require__(
            /*! ./cfb1 */ '../node_modules/browserify-aes/modes/cfb1.js'
          ),
          OFB: __webpack_require__(
            /*! ./ofb */ '../node_modules/browserify-aes/modes/ofb.js'
          ),
          CTR: __webpack_require__(
            /*! ./ctr */ '../node_modules/browserify-aes/modes/ctr.js'
          ),
          GCM: __webpack_require__(
            /*! ./ctr */ '../node_modules/browserify-aes/modes/ctr.js'
          ),
        };

        var modes = __webpack_require__(
          /*! ./list.json */ '../node_modules/browserify-aes/modes/list.json'
        );

        for (var key in modes) {
          modes[key].module = modeModules[modes[key].mode];
        }

        module.exports = modes;

        /***/
      },

    /***/ '../node_modules/browserify-aes/modes/list.json':
      /*!******************************************************!*\
  !*** ../node_modules/browserify-aes/modes/list.json ***!
  \******************************************************/
      /*! exports provided: aes-128-ecb, aes-192-ecb, aes-256-ecb, aes-128-cbc, aes-192-cbc, aes-256-cbc, aes128, aes192, aes256, aes-128-cfb, aes-192-cfb, aes-256-cfb, aes-128-cfb8, aes-192-cfb8, aes-256-cfb8, aes-128-cfb1, aes-192-cfb1, aes-256-cfb1, aes-128-ofb, aes-192-ofb, aes-256-ofb, aes-128-ctr, aes-192-ctr, aes-256-ctr, aes-128-gcm, aes-192-gcm, aes-256-gcm, default */
      /***/ function (module) {
        module.exports = JSON.parse(
          '{"aes-128-ecb":{"cipher":"AES","key":128,"iv":0,"mode":"ECB","type":"block"},"aes-192-ecb":{"cipher":"AES","key":192,"iv":0,"mode":"ECB","type":"block"},"aes-256-ecb":{"cipher":"AES","key":256,"iv":0,"mode":"ECB","type":"block"},"aes-128-cbc":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes-192-cbc":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes-256-cbc":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes128":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes192":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes256":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes-128-cfb":{"cipher":"AES","key":128,"iv":16,"mode":"CFB","type":"stream"},"aes-192-cfb":{"cipher":"AES","key":192,"iv":16,"mode":"CFB","type":"stream"},"aes-256-cfb":{"cipher":"AES","key":256,"iv":16,"mode":"CFB","type":"stream"},"aes-128-cfb8":{"cipher":"AES","key":128,"iv":16,"mode":"CFB8","type":"stream"},"aes-192-cfb8":{"cipher":"AES","key":192,"iv":16,"mode":"CFB8","type":"stream"},"aes-256-cfb8":{"cipher":"AES","key":256,"iv":16,"mode":"CFB8","type":"stream"},"aes-128-cfb1":{"cipher":"AES","key":128,"iv":16,"mode":"CFB1","type":"stream"},"aes-192-cfb1":{"cipher":"AES","key":192,"iv":16,"mode":"CFB1","type":"stream"},"aes-256-cfb1":{"cipher":"AES","key":256,"iv":16,"mode":"CFB1","type":"stream"},"aes-128-ofb":{"cipher":"AES","key":128,"iv":16,"mode":"OFB","type":"stream"},"aes-192-ofb":{"cipher":"AES","key":192,"iv":16,"mode":"OFB","type":"stream"},"aes-256-ofb":{"cipher":"AES","key":256,"iv":16,"mode":"OFB","type":"stream"},"aes-128-ctr":{"cipher":"AES","key":128,"iv":16,"mode":"CTR","type":"stream"},"aes-192-ctr":{"cipher":"AES","key":192,"iv":16,"mode":"CTR","type":"stream"},"aes-256-ctr":{"cipher":"AES","key":256,"iv":16,"mode":"CTR","type":"stream"},"aes-128-gcm":{"cipher":"AES","key":128,"iv":12,"mode":"GCM","type":"auth"},"aes-192-gcm":{"cipher":"AES","key":192,"iv":12,"mode":"GCM","type":"auth"},"aes-256-gcm":{"cipher":"AES","key":256,"iv":12,"mode":"GCM","type":"auth"}}'
        );

        /***/
      },

    /***/ '../node_modules/browserify-aes/modes/ofb.js':
      /*!***************************************************!*\
  !*** ../node_modules/browserify-aes/modes/ofb.js ***!
  \***************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function (Buffer) {
          var xor = __webpack_require__(
            /*! buffer-xor */ '../node_modules/buffer-xor/index.js'
          );

          function getBlock(self) {
            self._prev = self._cipher.encryptBlock(self._prev);
            return self._prev;
          }

          exports.encrypt = function (self, chunk) {
            while (self._cache.length < chunk.length) {
              self._cache = Buffer.concat([self._cache, getBlock(self)]);
            }

            var pad = self._cache.slice(0, chunk.length);
            self._cache = self._cache.slice(chunk.length);
            return xor(chunk, pad);
          };

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../buffer/index.js */ '../node_modules/buffer/index.js'
          ).Buffer
        ));

        /***/
      },

    /***/ '../node_modules/browserify-aes/streamCipher.js':
      /*!******************************************************!*\
  !*** ../node_modules/browserify-aes/streamCipher.js ***!
  \******************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var aes = __webpack_require__(
          /*! ./aes */ '../node_modules/browserify-aes/aes.js'
        );
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;
        var Transform = __webpack_require__(
          /*! cipher-base */ '../node_modules/cipher-base/index.js'
        );
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );

        function StreamCipher(mode, key, iv, decrypt) {
          Transform.call(this);

          this._cipher = new aes.AES(key);
          this._prev = Buffer.from(iv);
          this._cache = Buffer.allocUnsafe(0);
          this._secCache = Buffer.allocUnsafe(0);
          this._decrypt = decrypt;
          this._mode = mode;
        }

        inherits(StreamCipher, Transform);

        StreamCipher.prototype._update = function (chunk) {
          return this._mode.encrypt(this, chunk, this._decrypt);
        };

        StreamCipher.prototype._final = function () {
          this._cipher.scrub();
        };

        module.exports = StreamCipher;

        /***/
      },

    /***/ '../node_modules/browserify-cipher/browser.js':
      /*!****************************************************!*\
  !*** ../node_modules/browserify-cipher/browser.js ***!
  \****************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var DES = __webpack_require__(
          /*! browserify-des */ '../node_modules/browserify-des/index.js'
        );
        var aes = __webpack_require__(
          /*! browserify-aes/browser */ '../node_modules/browserify-aes/browser.js'
        );
        var aesModes = __webpack_require__(
          /*! browserify-aes/modes */ '../node_modules/browserify-aes/modes/index.js'
        );
        var desModes = __webpack_require__(
          /*! browserify-des/modes */ '../node_modules/browserify-des/modes.js'
        );
        var ebtk = __webpack_require__(
          /*! evp_bytestokey */ '../node_modules/evp_bytestokey/index.js'
        );

        function createCipher(suite, password) {
          suite = suite.toLowerCase();

          var keyLen, ivLen;
          if (aesModes[suite]) {
            keyLen = aesModes[suite].key;
            ivLen = aesModes[suite].iv;
          } else if (desModes[suite]) {
            keyLen = desModes[suite].key * 8;
            ivLen = desModes[suite].iv;
          } else {
            throw new TypeError('invalid suite type');
          }

          var keys = ebtk(password, false, keyLen, ivLen);
          return createCipheriv(suite, keys.key, keys.iv);
        }

        function createDecipher(suite, password) {
          suite = suite.toLowerCase();

          var keyLen, ivLen;
          if (aesModes[suite]) {
            keyLen = aesModes[suite].key;
            ivLen = aesModes[suite].iv;
          } else if (desModes[suite]) {
            keyLen = desModes[suite].key * 8;
            ivLen = desModes[suite].iv;
          } else {
            throw new TypeError('invalid suite type');
          }

          var keys = ebtk(password, false, keyLen, ivLen);
          return createDecipheriv(suite, keys.key, keys.iv);
        }

        function createCipheriv(suite, key, iv) {
          suite = suite.toLowerCase();
          if (aesModes[suite]) return aes.createCipheriv(suite, key, iv);
          if (desModes[suite])
            return new DES({ key: key, iv: iv, mode: suite });

          throw new TypeError('invalid suite type');
        }

        function createDecipheriv(suite, key, iv) {
          suite = suite.toLowerCase();
          if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv);
          if (desModes[suite])
            return new DES({ key: key, iv: iv, mode: suite, decrypt: true });

          throw new TypeError('invalid suite type');
        }

        function getCiphers() {
          return Object.keys(desModes).concat(aes.getCiphers());
        }

        exports.createCipher = exports.Cipher = createCipher;
        exports.createCipheriv = exports.Cipheriv = createCipheriv;
        exports.createDecipher = exports.Decipher = createDecipher;
        exports.createDecipheriv = exports.Decipheriv = createDecipheriv;
        exports.listCiphers = exports.getCiphers = getCiphers;

        /***/
      },

    /***/ '../node_modules/browserify-des/index.js':
      /*!***********************************************!*\
  !*** ../node_modules/browserify-des/index.js ***!
  \***********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var CipherBase = __webpack_require__(
          /*! cipher-base */ '../node_modules/cipher-base/index.js'
        );
        var des = __webpack_require__(
          /*! des.js */ '../node_modules/des.js/lib/des.js'
        );
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;

        var modes = {
          'des-ede3-cbc': des.CBC.instantiate(des.EDE),
          'des-ede3': des.EDE,
          'des-ede-cbc': des.CBC.instantiate(des.EDE),
          'des-ede': des.EDE,
          'des-cbc': des.CBC.instantiate(des.DES),
          'des-ecb': des.DES,
        };
        modes.des = modes['des-cbc'];
        modes.des3 = modes['des-ede3-cbc'];
        module.exports = DES;
        inherits(DES, CipherBase);
        function DES(opts) {
          CipherBase.call(this);
          var modeName = opts.mode.toLowerCase();
          var mode = modes[modeName];
          var type;
          if (opts.decrypt) {
            type = 'decrypt';
          } else {
            type = 'encrypt';
          }
          var key = opts.key;
          if (!Buffer.isBuffer(key)) {
            key = Buffer.from(key);
          }
          if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {
            key = Buffer.concat([key, key.slice(0, 8)]);
          }
          var iv = opts.iv;
          if (!Buffer.isBuffer(iv)) {
            iv = Buffer.from(iv);
          }
          this._des = mode.create({
            key: key,
            iv: iv,
            type: type,
          });
        }
        DES.prototype._update = function (data) {
          return Buffer.from(this._des.update(data));
        };
        DES.prototype._final = function () {
          return Buffer.from(this._des.final());
        };

        /***/
      },

    /***/ '../node_modules/browserify-des/modes.js':
      /*!***********************************************!*\
  !*** ../node_modules/browserify-des/modes.js ***!
  \***********************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        exports['des-ecb'] = {
          key: 8,
          iv: 0,
        };
        exports['des-cbc'] = exports.des = {
          key: 8,
          iv: 8,
        };
        exports['des-ede3-cbc'] = exports.des3 = {
          key: 24,
          iv: 8,
        };
        exports['des-ede3'] = {
          key: 24,
          iv: 0,
        };
        exports['des-ede-cbc'] = {
          key: 16,
          iv: 8,
        };
        exports['des-ede'] = {
          key: 16,
          iv: 0,
        };

        /***/
      },

    /***/ '../node_modules/browserify-rsa/index.js':
      /*!***********************************************!*\
  !*** ../node_modules/browserify-rsa/index.js ***!
  \***********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function (Buffer) {
          var bn = __webpack_require__(
            /*! bn.js */ '../node_modules/browserify-rsa/node_modules/bn.js/lib/bn.js'
          );
          var randomBytes = __webpack_require__(
            /*! randombytes */ '../node_modules/randombytes/browser.js'
          );
          module.exports = crt;
          function blind(priv) {
            var r = getr(priv);
            var blinder = r
              .toRed(bn.mont(priv.modulus))
              .redPow(new bn(priv.publicExponent))
              .fromRed();
            return {
              blinder: blinder,
              unblinder: r.invm(priv.modulus),
            };
          }
          function crt(msg, priv) {
            var blinds = blind(priv);
            var len = priv.modulus.byteLength();
            var mod = bn.mont(priv.modulus);
            var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);
            var c1 = blinded.toRed(bn.mont(priv.prime1));
            var c2 = blinded.toRed(bn.mont(priv.prime2));
            var qinv = priv.coefficient;
            var p = priv.prime1;
            var q = priv.prime2;
            var m1 = c1.redPow(priv.exponent1);
            var m2 = c2.redPow(priv.exponent2);
            m1 = m1.fromRed();
            m2 = m2.fromRed();
            var h = m1.isub(m2).imul(qinv).umod(p);
            h.imul(q);
            m2.iadd(h);
            return new Buffer(
              m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len)
            );
          }
          crt.getr = getr;
          function getr(priv) {
            var len = priv.modulus.byteLength();
            var r = new bn(randomBytes(len));
            while (
              r.cmp(priv.modulus) >= 0 ||
              !r.umod(priv.prime1) ||
              !r.umod(priv.prime2)
            ) {
              r = new bn(randomBytes(len));
            }
            return r;
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../buffer/index.js */ '../node_modules/buffer/index.js'
          ).Buffer
        ));

        /***/
      },

    /***/ '../node_modules/browserify-rsa/node_modules/bn.js/lib/bn.js':
      /*!*******************************************************************!*\
  !*** ../node_modules/browserify-rsa/node_modules/bn.js/lib/bn.js ***!
  \*******************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function (module) {
          (function (module, exports) {
            'use strict';

            // Utils
            function assert(val, msg) {
              if (!val) throw new Error(msg || 'Assertion failed');
            }

            // Could use `inherits` module, but don't want to move from single file
            // architecture yet.
            function inherits(ctor, superCtor) {
              ctor.super_ = superCtor;
              var TempCtor = function () {};
              TempCtor.prototype = superCtor.prototype;
              ctor.prototype = new TempCtor();
              ctor.prototype.constructor = ctor;
            }

            // BN

            function BN(number, base, endian) {
              if (BN.isBN(number)) {
                return number;
              }

              this.negative = 0;
              this.words = null;
              this.length = 0;

              // Reduction context
              this.red = null;

              if (number !== null) {
                if (base === 'le' || base === 'be') {
                  endian = base;
                  base = 10;
                }

                this._init(number || 0, base || 10, endian || 'be');
              }
            }
            if (typeof module === 'object') {
              module.exports = BN;
            } else {
              exports.BN = BN;
            }

            BN.BN = BN;
            BN.wordSize = 26;

            var Buffer;
            try {
              Buffer = __webpack_require__(/*! buffer */ 10).Buffer;
            } catch (e) {}

            BN.isBN = function isBN(num) {
              if (num instanceof BN) {
                return true;
              }

              return (
                num !== null &&
                typeof num === 'object' &&
                num.constructor.wordSize === BN.wordSize &&
                Array.isArray(num.words)
              );
            };

            BN.max = function max(left, right) {
              if (left.cmp(right) > 0) return left;
              return right;
            };

            BN.min = function min(left, right) {
              if (left.cmp(right) < 0) return left;
              return right;
            };

            BN.prototype._init = function init(number, base, endian) {
              if (typeof number === 'number') {
                return this._initNumber(number, base, endian);
              }

              if (typeof number === 'object') {
                return this._initArray(number, base, endian);
              }

              if (base === 'hex') {
                base = 16;
              }
              assert(base === (base | 0) && base >= 2 && base <= 36);

              number = number.toString().replace(/\s+/g, '');
              var start = 0;
              if (number[0] === '-') {
                start++;
              }

              if (base === 16) {
                this._parseHex(number, start);
              } else {
                this._parseBase(number, base, start);
              }

              if (number[0] === '-') {
                this.negative = 1;
              }

              this.strip();

              if (endian !== 'le') return;

              this._initArray(this.toArray(), base, endian);
            };

            BN.prototype._initNumber = function _initNumber(
              number,
              base,
              endian
            ) {
              if (number < 0) {
                this.negative = 1;
                number = -number;
              }
              if (number < 0x4000000) {
                this.words = [number & 0x3ffffff];
                this.length = 1;
              } else if (number < 0x10000000000000) {
                this.words = [
                  number & 0x3ffffff,
                  (number / 0x4000000) & 0x3ffffff,
                ];
                this.length = 2;
              } else {
                assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
                this.words = [
                  number & 0x3ffffff,
                  (number / 0x4000000) & 0x3ffffff,
                  1,
                ];
                this.length = 3;
              }

              if (endian !== 'le') return;

              // Reverse the bytes
              this._initArray(this.toArray(), base, endian);
            };

            BN.prototype._initArray = function _initArray(
              number,
              base,
              endian
            ) {
              // Perhaps a Uint8Array
              assert(typeof number.length === 'number');
              if (number.length <= 0) {
                this.words = [0];
                this.length = 1;
                return this;
              }

              this.length = Math.ceil(number.length / 3);
              this.words = new Array(this.length);
              for (var i = 0; i < this.length; i++) {
                this.words[i] = 0;
              }

              var j, w;
              var off = 0;
              if (endian === 'be') {
                for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
                  w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
                  this.words[j] |= (w << off) & 0x3ffffff;
                  this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
                  off += 24;
                  if (off >= 26) {
                    off -= 26;
                    j++;
                  }
                }
              } else if (endian === 'le') {
                for (i = 0, j = 0; i < number.length; i += 3) {
                  w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
                  this.words[j] |= (w << off) & 0x3ffffff;
                  this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
                  off += 24;
                  if (off >= 26) {
                    off -= 26;
                    j++;
                  }
                }
              }
              return this.strip();
            };

            function parseHex(str, start, end) {
              var r = 0;
              var len = Math.min(str.length, end);
              for (var i = start; i < len; i++) {
                var c = str.charCodeAt(i) - 48;

                r <<= 4;

                // 'a' - 'f'
                if (c >= 49 && c <= 54) {
                  r |= c - 49 + 0xa;

                  // 'A' - 'F'
                } else if (c >= 17 && c <= 22) {
                  r |= c - 17 + 0xa;

                  // '0' - '9'
                } else {
                  r |= c & 0xf;
                }
              }
              return r;
            }

            BN.prototype._parseHex = function _parseHex(number, start) {
              // Create possibly bigger array to ensure that it fits the number
              this.length = Math.ceil((number.length - start) / 6);
              this.words = new Array(this.length);
              for (var i = 0; i < this.length; i++) {
                this.words[i] = 0;
              }

              var j, w;
              // Scan 24-bit chunks and add them to the number
              var off = 0;
              for (i = number.length - 6, j = 0; i >= start; i -= 6) {
                w = parseHex(number, i, i + 6);
                this.words[j] |= (w << off) & 0x3ffffff;
                // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
                this.words[j + 1] |= (w >>> (26 - off)) & 0x3fffff;
                off += 24;
                if (off >= 26) {
                  off -= 26;
                  j++;
                }
              }
              if (i + 6 !== start) {
                w = parseHex(number, start, i + 6);
                this.words[j] |= (w << off) & 0x3ffffff;
                this.words[j + 1] |= (w >>> (26 - off)) & 0x3fffff;
              }
              this.strip();
            };

            function parseBase(str, start, end, mul) {
              var r = 0;
              var len = Math.min(str.length, end);
              for (var i = start; i < len; i++) {
                var c = str.charCodeAt(i) - 48;

                r *= mul;

                // 'a'
                if (c >= 49) {
                  r += c - 49 + 0xa;

                  // 'A'
                } else if (c >= 17) {
                  r += c - 17 + 0xa;

                  // '0' - '9'
                } else {
                  r += c;
                }
              }
              return r;
            }

            BN.prototype._parseBase = function _parseBase(number, base, start) {
              // Initialize as zero
              this.words = [0];
              this.length = 1;

              // Find length of limb in base
              for (
                var limbLen = 0, limbPow = 1;
                limbPow <= 0x3ffffff;
                limbPow *= base
              ) {
                limbLen++;
              }
              limbLen--;
              limbPow = (limbPow / base) | 0;

              var total = number.length - start;
              var mod = total % limbLen;
              var end = Math.min(total, total - mod) + start;

              var word = 0;
              for (var i = start; i < end; i += limbLen) {
                word = parseBase(number, i, i + limbLen, base);

                this.imuln(limbPow);
                if (this.words[0] + word < 0x4000000) {
                  this.words[0] += word;
                } else {
                  this._iaddn(word);
                }
              }

              if (mod !== 0) {
                var pow = 1;
                word = parseBase(number, i, number.length, base);

                for (i = 0; i < mod; i++) {
                  pow *= base;
                }

                this.imuln(pow);
                if (this.words[0] + word < 0x4000000) {
                  this.words[0] += word;
                } else {
                  this._iaddn(word);
                }
              }
            };

            BN.prototype.copy = function copy(dest) {
              dest.words = new Array(this.length);
              for (var i = 0; i < this.length; i++) {
                dest.words[i] = this.words[i];
              }
              dest.length = this.length;
              dest.negative = this.negative;
              dest.red = this.red;
            };

            BN.prototype.clone = function clone() {
              var r = new BN(null);
              this.copy(r);
              return r;
            };

            BN.prototype._expand = function _expand(size) {
              while (this.length < size) {
                this.words[this.length++] = 0;
              }
              return this;
            };

            // Remove leading `0` from `this`
            BN.prototype.strip = function strip() {
              while (this.length > 1 && this.words[this.length - 1] === 0) {
                this.length--;
              }
              return this._normSign();
            };

            BN.prototype._normSign = function _normSign() {
              // -0 = 0
              if (this.length === 1 && this.words[0] === 0) {
                this.negative = 0;
              }
              return this;
            };

            BN.prototype.inspect = function inspect() {
              return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
            };

            /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

            var zeros = [
              '',
              '0',
              '00',
              '000',
              '0000',
              '00000',
              '000000',
              '0000000',
              '00000000',
              '000000000',
              '0000000000',
              '00000000000',
              '000000000000',
              '0000000000000',
              '00000000000000',
              '000000000000000',
              '0000000000000000',
              '00000000000000000',
              '000000000000000000',
              '0000000000000000000',
              '00000000000000000000',
              '000000000000000000000',
              '0000000000000000000000',
              '00000000000000000000000',
              '000000000000000000000000',
              '0000000000000000000000000',
            ];

            var groupSizes = [
              0,
              0,
              25,
              16,
              12,
              11,
              10,
              9,
              8,
              8,
              7,
              7,
              7,
              7,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
            ];

            var groupBases = [
              0,
              0,
              33554432,
              43046721,
              16777216,
              48828125,
              60466176,
              40353607,
              16777216,
              43046721,
              10000000,
              19487171,
              35831808,
              62748517,
              7529536,
              11390625,
              16777216,
              24137569,
              34012224,
              47045881,
              64000000,
              4084101,
              5153632,
              6436343,
              7962624,
              9765625,
              11881376,
              14348907,
              17210368,
              20511149,
              24300000,
              28629151,
              33554432,
              39135393,
              45435424,
              52521875,
              60466176,
            ];

            BN.prototype.toString = function toString(base, padding) {
              base = base || 10;
              padding = padding | 0 || 1;

              var out;
              if (base === 16 || base === 'hex') {
                out = '';
                var off = 0;
                var carry = 0;
                for (var i = 0; i < this.length; i++) {
                  var w = this.words[i];
                  var word = (((w << off) | carry) & 0xffffff).toString(16);
                  carry = (w >>> (24 - off)) & 0xffffff;
                  if (carry !== 0 || i !== this.length - 1) {
                    out = zeros[6 - word.length] + word + out;
                  } else {
                    out = word + out;
                  }
                  off += 2;
                  if (off >= 26) {
                    off -= 26;
                    i--;
                  }
                }
                if (carry !== 0) {
                  out = carry.toString(16) + out;
                }
                while (out.length % padding !== 0) {
                  out = '0' + out;
                }
                if (this.negative !== 0) {
                  out = '-' + out;
                }
                return out;
              }

              if (base === (base | 0) && base >= 2 && base <= 36) {
                // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
                var groupSize = groupSizes[base];
                // var groupBase = Math.pow(base, groupSize);
                var groupBase = groupBases[base];
                out = '';
                var c = this.clone();
                c.negative = 0;
                while (!c.isZero()) {
                  var r = c.modn(groupBase).toString(base);
                  c = c.idivn(groupBase);

                  if (!c.isZero()) {
                    out = zeros[groupSize - r.length] + r + out;
                  } else {
                    out = r + out;
                  }
                }
                if (this.isZero()) {
                  out = '0' + out;
                }
                while (out.length % padding !== 0) {
                  out = '0' + out;
                }
                if (this.negative !== 0) {
                  out = '-' + out;
                }
                return out;
              }

              assert(false, 'Base should be between 2 and 36');
            };

            BN.prototype.toNumber = function toNumber() {
              var ret = this.words[0];
              if (this.length === 2) {
                ret += this.words[1] * 0x4000000;
              } else if (this.length === 3 && this.words[2] === 0x01) {
                // NOTE: at this stage it is known that the top bit is set
                ret += 0x10000000000000 + this.words[1] * 0x4000000;
              } else if (this.length > 2) {
                assert(false, 'Number can only safely store up to 53 bits');
              }
              return this.negative !== 0 ? -ret : ret;
            };

            BN.prototype.toJSON = function toJSON() {
              return this.toString(16);
            };

            BN.prototype.toBuffer = function toBuffer(endian, length) {
              assert(typeof Buffer !== 'undefined');
              return this.toArrayLike(Buffer, endian, length);
            };

            BN.prototype.toArray = function toArray(endian, length) {
              return this.toArrayLike(Array, endian, length);
            };

            BN.prototype.toArrayLike = function toArrayLike(
              ArrayType,
              endian,
              length
            ) {
              var byteLength = this.byteLength();
              var reqLength = length || Math.max(1, byteLength);
              assert(
                byteLength <= reqLength,
                'byte array longer than desired length'
              );
              assert(reqLength > 0, 'Requested array length <= 0');

              this.strip();
              var littleEndian = endian === 'le';
              var res = new ArrayType(reqLength);

              var b, i;
              var q = this.clone();
              if (!littleEndian) {
                // Assume big-endian
                for (i = 0; i < reqLength - byteLength; i++) {
                  res[i] = 0;
                }

                for (i = 0; !q.isZero(); i++) {
                  b = q.andln(0xff);
                  q.iushrn(8);

                  res[reqLength - i - 1] = b;
                }
              } else {
                for (i = 0; !q.isZero(); i++) {
                  b = q.andln(0xff);
                  q.iushrn(8);

                  res[i] = b;
                }

                for (; i < reqLength; i++) {
                  res[i] = 0;
                }
              }

              return res;
            };

            if (Math.clz32) {
              BN.prototype._countBits = function _countBits(w) {
                return 32 - Math.clz32(w);
              };
            } else {
              BN.prototype._countBits = function _countBits(w) {
                var t = w;
                var r = 0;
                if (t >= 0x1000) {
                  r += 13;
                  t >>>= 13;
                }
                if (t >= 0x40) {
                  r += 7;
                  t >>>= 7;
                }
                if (t >= 0x8) {
                  r += 4;
                  t >>>= 4;
                }
                if (t >= 0x02) {
                  r += 2;
                  t >>>= 2;
                }
                return r + t;
              };
            }

            BN.prototype._zeroBits = function _zeroBits(w) {
              // Short-cut
              if (w === 0) return 26;

              var t = w;
              var r = 0;
              if ((t & 0x1fff) === 0) {
                r += 13;
                t >>>= 13;
              }
              if ((t & 0x7f) === 0) {
                r += 7;
                t >>>= 7;
              }
              if ((t & 0xf) === 0) {
                r += 4;
                t >>>= 4;
              }
              if ((t & 0x3) === 0) {
                r += 2;
                t >>>= 2;
              }
              if ((t & 0x1) === 0) {
                r++;
              }
              return r;
            };

            // Return number of used bits in a BN
            BN.prototype.bitLength = function bitLength() {
              var w = this.words[this.length - 1];
              var hi = this._countBits(w);
              return (this.length - 1) * 26 + hi;
            };

            function toBitArray(num) {
              var w = new Array(num.bitLength());

              for (var bit = 0; bit < w.length; bit++) {
                var off = (bit / 26) | 0;
                var wbit = bit % 26;

                w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
              }

              return w;
            }

            // Number of trailing zero bits
            BN.prototype.zeroBits = function zeroBits() {
              if (this.isZero()) return 0;

              var r = 0;
              for (var i = 0; i < this.length; i++) {
                var b = this._zeroBits(this.words[i]);
                r += b;
                if (b !== 26) break;
              }
              return r;
            };

            BN.prototype.byteLength = function byteLength() {
              return Math.ceil(this.bitLength() / 8);
            };

            BN.prototype.toTwos = function toTwos(width) {
              if (this.negative !== 0) {
                return this.abs().inotn(width).iaddn(1);
              }
              return this.clone();
            };

            BN.prototype.fromTwos = function fromTwos(width) {
              if (this.testn(width - 1)) {
                return this.notn(width).iaddn(1).ineg();
              }
              return this.clone();
            };

            BN.prototype.isNeg = function isNeg() {
              return this.negative !== 0;
            };

            // Return negative clone of `this`
            BN.prototype.neg = function neg() {
              return this.clone().ineg();
            };

            BN.prototype.ineg = function ineg() {
              if (!this.isZero()) {
                this.negative ^= 1;
              }

              return this;
            };

            // Or `num` with `this` in-place
            BN.prototype.iuor = function iuor(num) {
              while (this.length < num.length) {
                this.words[this.length++] = 0;
              }

              for (var i = 0; i < num.length; i++) {
                this.words[i] = this.words[i] | num.words[i];
              }

              return this.strip();
            };

            BN.prototype.ior = function ior(num) {
              assert((this.negative | num.negative) === 0);
              return this.iuor(num);
            };

            // Or `num` with `this`
            BN.prototype.or = function or(num) {
              if (this.length > num.length) return this.clone().ior(num);
              return num.clone().ior(this);
            };

            BN.prototype.uor = function uor(num) {
              if (this.length > num.length) return this.clone().iuor(num);
              return num.clone().iuor(this);
            };

            // And `num` with `this` in-place
            BN.prototype.iuand = function iuand(num) {
              // b = min-length(num, this)
              var b;
              if (this.length > num.length) {
                b = num;
              } else {
                b = this;
              }

              for (var i = 0; i < b.length; i++) {
                this.words[i] = this.words[i] & num.words[i];
              }

              this.length = b.length;

              return this.strip();
            };

            BN.prototype.iand = function iand(num) {
              assert((this.negative | num.negative) === 0);
              return this.iuand(num);
            };

            // And `num` with `this`
            BN.prototype.and = function and(num) {
              if (this.length > num.length) return this.clone().iand(num);
              return num.clone().iand(this);
            };

            BN.prototype.uand = function uand(num) {
              if (this.length > num.length) return this.clone().iuand(num);
              return num.clone().iuand(this);
            };

            // Xor `num` with `this` in-place
            BN.prototype.iuxor = function iuxor(num) {
              // a.length > b.length
              var a;
              var b;
              if (this.length > num.length) {
                a = this;
                b = num;
              } else {
                a = num;
                b = this;
              }

              for (var i = 0; i < b.length; i++) {
                this.words[i] = a.words[i] ^ b.words[i];
              }

              if (this !== a) {
                for (; i < a.length; i++) {
                  this.words[i] = a.words[i];
                }
              }

              this.length = a.length;

              return this.strip();
            };

            BN.prototype.ixor = function ixor(num) {
              assert((this.negative | num.negative) === 0);
              return this.iuxor(num);
            };

            // Xor `num` with `this`
            BN.prototype.xor = function xor(num) {
              if (this.length > num.length) return this.clone().ixor(num);
              return num.clone().ixor(this);
            };

            BN.prototype.uxor = function uxor(num) {
              if (this.length > num.length) return this.clone().iuxor(num);
              return num.clone().iuxor(this);
            };

            // Not ``this`` with ``width`` bitwidth
            BN.prototype.inotn = function inotn(width) {
              assert(typeof width === 'number' && width >= 0);

              var bytesNeeded = Math.ceil(width / 26) | 0;
              var bitsLeft = width % 26;

              // Extend the buffer with leading zeroes
              this._expand(bytesNeeded);

              if (bitsLeft > 0) {
                bytesNeeded--;
              }

              // Handle complete words
              for (var i = 0; i < bytesNeeded; i++) {
                this.words[i] = ~this.words[i] & 0x3ffffff;
              }

              // Handle the residue
              if (bitsLeft > 0) {
                this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
              }

              // And remove leading zeroes
              return this.strip();
            };

            BN.prototype.notn = function notn(width) {
              return this.clone().inotn(width);
            };

            // Set `bit` of `this`
            BN.prototype.setn = function setn(bit, val) {
              assert(typeof bit === 'number' && bit >= 0);

              var off = (bit / 26) | 0;
              var wbit = bit % 26;

              this._expand(off + 1);

              if (val) {
                this.words[off] = this.words[off] | (1 << wbit);
              } else {
                this.words[off] = this.words[off] & ~(1 << wbit);
              }

              return this.strip();
            };

            // Add `num` to `this` in-place
            BN.prototype.iadd = function iadd(num) {
              var r;

              // negative + positive
              if (this.negative !== 0 && num.negative === 0) {
                this.negative = 0;
                r = this.isub(num);
                this.negative ^= 1;
                return this._normSign();

                // positive + negative
              } else if (this.negative === 0 && num.negative !== 0) {
                num.negative = 0;
                r = this.isub(num);
                num.negative = 1;
                return r._normSign();
              }

              // a.length > b.length
              var a, b;
              if (this.length > num.length) {
                a = this;
                b = num;
              } else {
                a = num;
                b = this;
              }

              var carry = 0;
              for (var i = 0; i < b.length; i++) {
                r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
                this.words[i] = r & 0x3ffffff;
                carry = r >>> 26;
              }
              for (; carry !== 0 && i < a.length; i++) {
                r = (a.words[i] | 0) + carry;
                this.words[i] = r & 0x3ffffff;
                carry = r >>> 26;
              }

              this.length = a.length;
              if (carry !== 0) {
                this.words[this.length] = carry;
                this.length++;
                // Copy the rest of the words
              } else if (a !== this) {
                for (; i < a.length; i++) {
                  this.words[i] = a.words[i];
                }
              }

              return this;
            };

            // Add `num` to `this`
            BN.prototype.add = function add(num) {
              var res;
              if (num.negative !== 0 && this.negative === 0) {
                num.negative = 0;
                res = this.sub(num);
                num.negative ^= 1;
                return res;
              } else if (num.negative === 0 && this.negative !== 0) {
                this.negative = 0;
                res = num.sub(this);
                this.negative = 1;
                return res;
              }

              if (this.length > num.length) return this.clone().iadd(num);

              return num.clone().iadd(this);
            };

            // Subtract `num` from `this` in-place
            BN.prototype.isub = function isub(num) {
              // this - (-num) = this + num
              if (num.negative !== 0) {
                num.negative = 0;
                var r = this.iadd(num);
                num.negative = 1;
                return r._normSign();

                // -this - num = -(this + num)
              } else if (this.negative !== 0) {
                this.negative = 0;
                this.iadd(num);
                this.negative = 1;
                return this._normSign();
              }

              // At this point both numbers are positive
              var cmp = this.cmp(num);

              // Optimization - zeroify
              if (cmp === 0) {
                this.negative = 0;
                this.length = 1;
                this.words[0] = 0;
                return this;
              }

              // a > b
              var a, b;
              if (cmp > 0) {
                a = this;
                b = num;
              } else {
                a = num;
                b = this;
              }

              var carry = 0;
              for (var i = 0; i < b.length; i++) {
                r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
                carry = r >> 26;
                this.words[i] = r & 0x3ffffff;
              }
              for (; carry !== 0 && i < a.length; i++) {
                r = (a.words[i] | 0) + carry;
                carry = r >> 26;
                this.words[i] = r & 0x3ffffff;
              }

              // Copy rest of the words
              if (carry === 0 && i < a.length && a !== this) {
                for (; i < a.length; i++) {
                  this.words[i] = a.words[i];
                }
              }

              this.length = Math.max(this.length, i);

              if (a !== this) {
                this.negative = 1;
              }

              return this.strip();
            };

            // Subtract `num` from `this`
            BN.prototype.sub = function sub(num) {
              return this.clone().isub(num);
            };

            function smallMulTo(self, num, out) {
              out.negative = num.negative ^ self.negative;
              var len = (self.length + num.length) | 0;
              out.length = len;
              len = (len - 1) | 0;

              // Peel one iteration (compiler can't do it, because of code complexity)
              var a = self.words[0] | 0;
              var b = num.words[0] | 0;
              var r = a * b;

              var lo = r & 0x3ffffff;
              var carry = (r / 0x4000000) | 0;
              out.words[0] = lo;

              for (var k = 1; k < len; k++) {
                // Sum all words with the same `i + j = k` and accumulate `ncarry`,
                // note that ncarry could be >= 0x3ffffff
                var ncarry = carry >>> 26;
                var rword = carry & 0x3ffffff;
                var maxJ = Math.min(k, num.length - 1);
                for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                  var i = (k - j) | 0;
                  a = self.words[i] | 0;
                  b = num.words[j] | 0;
                  r = a * b + rword;
                  ncarry += (r / 0x4000000) | 0;
                  rword = r & 0x3ffffff;
                }
                out.words[k] = rword | 0;
                carry = ncarry | 0;
              }
              if (carry !== 0) {
                out.words[k] = carry | 0;
              } else {
                out.length--;
              }

              return out.strip();
            }

            // TODO(indutny): it may be reasonable to omit it for users who don't need
            // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
            // multiplication (like elliptic secp256k1).
            var comb10MulTo = function comb10MulTo(self, num, out) {
              var a = self.words;
              var b = num.words;
              var o = out.words;
              var c = 0;
              var lo;
              var mid;
              var hi;
              var a0 = a[0] | 0;
              var al0 = a0 & 0x1fff;
              var ah0 = a0 >>> 13;
              var a1 = a[1] | 0;
              var al1 = a1 & 0x1fff;
              var ah1 = a1 >>> 13;
              var a2 = a[2] | 0;
              var al2 = a2 & 0x1fff;
              var ah2 = a2 >>> 13;
              var a3 = a[3] | 0;
              var al3 = a3 & 0x1fff;
              var ah3 = a3 >>> 13;
              var a4 = a[4] | 0;
              var al4 = a4 & 0x1fff;
              var ah4 = a4 >>> 13;
              var a5 = a[5] | 0;
              var al5 = a5 & 0x1fff;
              var ah5 = a5 >>> 13;
              var a6 = a[6] | 0;
              var al6 = a6 & 0x1fff;
              var ah6 = a6 >>> 13;
              var a7 = a[7] | 0;
              var al7 = a7 & 0x1fff;
              var ah7 = a7 >>> 13;
              var a8 = a[8] | 0;
              var al8 = a8 & 0x1fff;
              var ah8 = a8 >>> 13;
              var a9 = a[9] | 0;
              var al9 = a9 & 0x1fff;
              var ah9 = a9 >>> 13;
              var b0 = b[0] | 0;
              var bl0 = b0 & 0x1fff;
              var bh0 = b0 >>> 13;
              var b1 = b[1] | 0;
              var bl1 = b1 & 0x1fff;
              var bh1 = b1 >>> 13;
              var b2 = b[2] | 0;
              var bl2 = b2 & 0x1fff;
              var bh2 = b2 >>> 13;
              var b3 = b[3] | 0;
              var bl3 = b3 & 0x1fff;
              var bh3 = b3 >>> 13;
              var b4 = b[4] | 0;
              var bl4 = b4 & 0x1fff;
              var bh4 = b4 >>> 13;
              var b5 = b[5] | 0;
              var bl5 = b5 & 0x1fff;
              var bh5 = b5 >>> 13;
              var b6 = b[6] | 0;
              var bl6 = b6 & 0x1fff;
              var bh6 = b6 >>> 13;
              var b7 = b[7] | 0;
              var bl7 = b7 & 0x1fff;
              var bh7 = b7 >>> 13;
              var b8 = b[8] | 0;
              var bl8 = b8 & 0x1fff;
              var bh8 = b8 >>> 13;
              var b9 = b[9] | 0;
              var bl9 = b9 & 0x1fff;
              var bh9 = b9 >>> 13;

              out.negative = self.negative ^ num.negative;
              out.length = 19;
              /* k = 0 */
              lo = Math.imul(al0, bl0);
              mid = Math.imul(al0, bh0);
              mid = (mid + Math.imul(ah0, bl0)) | 0;
              hi = Math.imul(ah0, bh0);
              var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
              w0 &= 0x3ffffff;
              /* k = 1 */
              lo = Math.imul(al1, bl0);
              mid = Math.imul(al1, bh0);
              mid = (mid + Math.imul(ah1, bl0)) | 0;
              hi = Math.imul(ah1, bh0);
              lo = (lo + Math.imul(al0, bl1)) | 0;
              mid = (mid + Math.imul(al0, bh1)) | 0;
              mid = (mid + Math.imul(ah0, bl1)) | 0;
              hi = (hi + Math.imul(ah0, bh1)) | 0;
              var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
              w1 &= 0x3ffffff;
              /* k = 2 */
              lo = Math.imul(al2, bl0);
              mid = Math.imul(al2, bh0);
              mid = (mid + Math.imul(ah2, bl0)) | 0;
              hi = Math.imul(ah2, bh0);
              lo = (lo + Math.imul(al1, bl1)) | 0;
              mid = (mid + Math.imul(al1, bh1)) | 0;
              mid = (mid + Math.imul(ah1, bl1)) | 0;
              hi = (hi + Math.imul(ah1, bh1)) | 0;
              lo = (lo + Math.imul(al0, bl2)) | 0;
              mid = (mid + Math.imul(al0, bh2)) | 0;
              mid = (mid + Math.imul(ah0, bl2)) | 0;
              hi = (hi + Math.imul(ah0, bh2)) | 0;
              var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
              w2 &= 0x3ffffff;
              /* k = 3 */
              lo = Math.imul(al3, bl0);
              mid = Math.imul(al3, bh0);
              mid = (mid + Math.imul(ah3, bl0)) | 0;
              hi = Math.imul(ah3, bh0);
              lo = (lo + Math.imul(al2, bl1)) | 0;
              mid = (mid + Math.imul(al2, bh1)) | 0;
              mid = (mid + Math.imul(ah2, bl1)) | 0;
              hi = (hi + Math.imul(ah2, bh1)) | 0;
              lo = (lo + Math.imul(al1, bl2)) | 0;
              mid = (mid + Math.imul(al1, bh2)) | 0;
              mid = (mid + Math.imul(ah1, bl2)) | 0;
              hi = (hi + Math.imul(ah1, bh2)) | 0;
              lo = (lo + Math.imul(al0, bl3)) | 0;
              mid = (mid + Math.imul(al0, bh3)) | 0;
              mid = (mid + Math.imul(ah0, bl3)) | 0;
              hi = (hi + Math.imul(ah0, bh3)) | 0;
              var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
              w3 &= 0x3ffffff;
              /* k = 4 */
              lo = Math.imul(al4, bl0);
              mid = Math.imul(al4, bh0);
              mid = (mid + Math.imul(ah4, bl0)) | 0;
              hi = Math.imul(ah4, bh0);
              lo = (lo + Math.imul(al3, bl1)) | 0;
              mid = (mid + Math.imul(al3, bh1)) | 0;
              mid = (mid + Math.imul(ah3, bl1)) | 0;
              hi = (hi + Math.imul(ah3, bh1)) | 0;
              lo = (lo + Math.imul(al2, bl2)) | 0;
              mid = (mid + Math.imul(al2, bh2)) | 0;
              mid = (mid + Math.imul(ah2, bl2)) | 0;
              hi = (hi + Math.imul(ah2, bh2)) | 0;
              lo = (lo + Math.imul(al1, bl3)) | 0;
              mid = (mid + Math.imul(al1, bh3)) | 0;
              mid = (mid + Math.imul(ah1, bl3)) | 0;
              hi = (hi + Math.imul(ah1, bh3)) | 0;
              lo = (lo + Math.imul(al0, bl4)) | 0;
              mid = (mid + Math.imul(al0, bh4)) | 0;
              mid = (mid + Math.imul(ah0, bl4)) | 0;
              hi = (hi + Math.imul(ah0, bh4)) | 0;
              var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
              w4 &= 0x3ffffff;
              /* k = 5 */
              lo = Math.imul(al5, bl0);
              mid = Math.imul(al5, bh0);
              mid = (mid + Math.imul(ah5, bl0)) | 0;
              hi = Math.imul(ah5, bh0);
              lo = (lo + Math.imul(al4, bl1)) | 0;
              mid = (mid + Math.imul(al4, bh1)) | 0;
              mid = (mid + Math.imul(ah4, bl1)) | 0;
              hi = (hi + Math.imul(ah4, bh1)) | 0;
              lo = (lo + Math.imul(al3, bl2)) | 0;
              mid = (mid + Math.imul(al3, bh2)) | 0;
              mid = (mid + Math.imul(ah3, bl2)) | 0;
              hi = (hi + Math.imul(ah3, bh2)) | 0;
              lo = (lo + Math.imul(al2, bl3)) | 0;
              mid = (mid + Math.imul(al2, bh3)) | 0;
              mid = (mid + Math.imul(ah2, bl3)) | 0;
              hi = (hi + Math.imul(ah2, bh3)) | 0;
              lo = (lo + Math.imul(al1, bl4)) | 0;
              mid = (mid + Math.imul(al1, bh4)) | 0;
              mid = (mid + Math.imul(ah1, bl4)) | 0;
              hi = (hi + Math.imul(ah1, bh4)) | 0;
              lo = (lo + Math.imul(al0, bl5)) | 0;
              mid = (mid + Math.imul(al0, bh5)) | 0;
              mid = (mid + Math.imul(ah0, bl5)) | 0;
              hi = (hi + Math.imul(ah0, bh5)) | 0;
              var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
              w5 &= 0x3ffffff;
              /* k = 6 */
              lo = Math.imul(al6, bl0);
              mid = Math.imul(al6, bh0);
              mid = (mid + Math.imul(ah6, bl0)) | 0;
              hi = Math.imul(ah6, bh0);
              lo = (lo + Math.imul(al5, bl1)) | 0;
              mid = (mid + Math.imul(al5, bh1)) | 0;
              mid = (mid + Math.imul(ah5, bl1)) | 0;
              hi = (hi + Math.imul(ah5, bh1)) | 0;
              lo = (lo + Math.imul(al4, bl2)) | 0;
              mid = (mid + Math.imul(al4, bh2)) | 0;
              mid = (mid + Math.imul(ah4, bl2)) | 0;
              hi = (hi + Math.imul(ah4, bh2)) | 0;
              lo = (lo + Math.imul(al3, bl3)) | 0;
              mid = (mid + Math.imul(al3, bh3)) | 0;
              mid = (mid + Math.imul(ah3, bl3)) | 0;
              hi = (hi + Math.imul(ah3, bh3)) | 0;
              lo = (lo + Math.imul(al2, bl4)) | 0;
              mid = (mid + Math.imul(al2, bh4)) | 0;
              mid = (mid + Math.imul(ah2, bl4)) | 0;
              hi = (hi + Math.imul(ah2, bh4)) | 0;
              lo = (lo + Math.imul(al1, bl5)) | 0;
              mid = (mid + Math.imul(al1, bh5)) | 0;
              mid = (mid + Math.imul(ah1, bl5)) | 0;
              hi = (hi + Math.imul(ah1, bh5)) | 0;
              lo = (lo + Math.imul(al0, bl6)) | 0;
              mid = (mid + Math.imul(al0, bh6)) | 0;
              mid = (mid + Math.imul(ah0, bl6)) | 0;
              hi = (hi + Math.imul(ah0, bh6)) | 0;
              var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
              w6 &= 0x3ffffff;
              /* k = 7 */
              lo = Math.imul(al7, bl0);
              mid = Math.imul(al7, bh0);
              mid = (mid + Math.imul(ah7, bl0)) | 0;
              hi = Math.imul(ah7, bh0);
              lo = (lo + Math.imul(al6, bl1)) | 0;
              mid = (mid + Math.imul(al6, bh1)) | 0;
              mid = (mid + Math.imul(ah6, bl1)) | 0;
              hi = (hi + Math.imul(ah6, bh1)) | 0;
              lo = (lo + Math.imul(al5, bl2)) | 0;
              mid = (mid + Math.imul(al5, bh2)) | 0;
              mid = (mid + Math.imul(ah5, bl2)) | 0;
              hi = (hi + Math.imul(ah5, bh2)) | 0;
              lo = (lo + Math.imul(al4, bl3)) | 0;
              mid = (mid + Math.imul(al4, bh3)) | 0;
              mid = (mid + Math.imul(ah4, bl3)) | 0;
              hi = (hi + Math.imul(ah4, bh3)) | 0;
              lo = (lo + Math.imul(al3, bl4)) | 0;
              mid = (mid + Math.imul(al3, bh4)) | 0;
              mid = (mid + Math.imul(ah3, bl4)) | 0;
              hi = (hi + Math.imul(ah3, bh4)) | 0;
              lo = (lo + Math.imul(al2, bl5)) | 0;
              mid = (mid + Math.imul(al2, bh5)) | 0;
              mid = (mid + Math.imul(ah2, bl5)) | 0;
              hi = (hi + Math.imul(ah2, bh5)) | 0;
              lo = (lo + Math.imul(al1, bl6)) | 0;
              mid = (mid + Math.imul(al1, bh6)) | 0;
              mid = (mid + Math.imul(ah1, bl6)) | 0;
              hi = (hi + Math.imul(ah1, bh6)) | 0;
              lo = (lo + Math.imul(al0, bl7)) | 0;
              mid = (mid + Math.imul(al0, bh7)) | 0;
              mid = (mid + Math.imul(ah0, bl7)) | 0;
              hi = (hi + Math.imul(ah0, bh7)) | 0;
              var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
              w7 &= 0x3ffffff;
              /* k = 8 */
              lo = Math.imul(al8, bl0);
              mid = Math.imul(al8, bh0);
              mid = (mid + Math.imul(ah8, bl0)) | 0;
              hi = Math.imul(ah8, bh0);
              lo = (lo + Math.imul(al7, bl1)) | 0;
              mid = (mid + Math.imul(al7, bh1)) | 0;
              mid = (mid + Math.imul(ah7, bl1)) | 0;
              hi = (hi + Math.imul(ah7, bh1)) | 0;
              lo = (lo + Math.imul(al6, bl2)) | 0;
              mid = (mid + Math.imul(al6, bh2)) | 0;
              mid = (mid + Math.imul(ah6, bl2)) | 0;
              hi = (hi + Math.imul(ah6, bh2)) | 0;
              lo = (lo + Math.imul(al5, bl3)) | 0;
              mid = (mid + Math.imul(al5, bh3)) | 0;
              mid = (mid + Math.imul(ah5, bl3)) | 0;
              hi = (hi + Math.imul(ah5, bh3)) | 0;
              lo = (lo + Math.imul(al4, bl4)) | 0;
              mid = (mid + Math.imul(al4, bh4)) | 0;
              mid = (mid + Math.imul(ah4, bl4)) | 0;
              hi = (hi + Math.imul(ah4, bh4)) | 0;
              lo = (lo + Math.imul(al3, bl5)) | 0;
              mid = (mid + Math.imul(al3, bh5)) | 0;
              mid = (mid + Math.imul(ah3, bl5)) | 0;
              hi = (hi + Math.imul(ah3, bh5)) | 0;
              lo = (lo + Math.imul(al2, bl6)) | 0;
              mid = (mid + Math.imul(al2, bh6)) | 0;
              mid = (mid + Math.imul(ah2, bl6)) | 0;
              hi = (hi + Math.imul(ah2, bh6)) | 0;
              lo = (lo + Math.imul(al1, bl7)) | 0;
              mid = (mid + Math.imul(al1, bh7)) | 0;
              mid = (mid + Math.imul(ah1, bl7)) | 0;
              hi = (hi + Math.imul(ah1, bh7)) | 0;
              lo = (lo + Math.imul(al0, bl8)) | 0;
              mid = (mid + Math.imul(al0, bh8)) | 0;
              mid = (mid + Math.imul(ah0, bl8)) | 0;
              hi = (hi + Math.imul(ah0, bh8)) | 0;
              var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
              w8 &= 0x3ffffff;
              /* k = 9 */
              lo = Math.imul(al9, bl0);
              mid = Math.imul(al9, bh0);
              mid = (mid + Math.imul(ah9, bl0)) | 0;
              hi = Math.imul(ah9, bh0);
              lo = (lo + Math.imul(al8, bl1)) | 0;
              mid = (mid + Math.imul(al8, bh1)) | 0;
              mid = (mid + Math.imul(ah8, bl1)) | 0;
              hi = (hi + Math.imul(ah8, bh1)) | 0;
              lo = (lo + Math.imul(al7, bl2)) | 0;
              mid = (mid + Math.imul(al7, bh2)) | 0;
              mid = (mid + Math.imul(ah7, bl2)) | 0;
              hi = (hi + Math.imul(ah7, bh2)) | 0;
              lo = (lo + Math.imul(al6, bl3)) | 0;
              mid = (mid + Math.imul(al6, bh3)) | 0;
              mid = (mid + Math.imul(ah6, bl3)) | 0;
              hi = (hi + Math.imul(ah6, bh3)) | 0;
              lo = (lo + Math.imul(al5, bl4)) | 0;
              mid = (mid + Math.imul(al5, bh4)) | 0;
              mid = (mid + Math.imul(ah5, bl4)) | 0;
              hi = (hi + Math.imul(ah5, bh4)) | 0;
              lo = (lo + Math.imul(al4, bl5)) | 0;
              mid = (mid + Math.imul(al4, bh5)) | 0;
              mid = (mid + Math.imul(ah4, bl5)) | 0;
              hi = (hi + Math.imul(ah4, bh5)) | 0;
              lo = (lo + Math.imul(al3, bl6)) | 0;
              mid = (mid + Math.imul(al3, bh6)) | 0;
              mid = (mid + Math.imul(ah3, bl6)) | 0;
              hi = (hi + Math.imul(ah3, bh6)) | 0;
              lo = (lo + Math.imul(al2, bl7)) | 0;
              mid = (mid + Math.imul(al2, bh7)) | 0;
              mid = (mid + Math.imul(ah2, bl7)) | 0;
              hi = (hi + Math.imul(ah2, bh7)) | 0;
              lo = (lo + Math.imul(al1, bl8)) | 0;
              mid = (mid + Math.imul(al1, bh8)) | 0;
              mid = (mid + Math.imul(ah1, bl8)) | 0;
              hi = (hi + Math.imul(ah1, bh8)) | 0;
              lo = (lo + Math.imul(al0, bl9)) | 0;
              mid = (mid + Math.imul(al0, bh9)) | 0;
              mid = (mid + Math.imul(ah0, bl9)) | 0;
              hi = (hi + Math.imul(ah0, bh9)) | 0;
              var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
              w9 &= 0x3ffffff;
              /* k = 10 */
              lo = Math.imul(al9, bl1);
              mid = Math.imul(al9, bh1);
              mid = (mid + Math.imul(ah9, bl1)) | 0;
              hi = Math.imul(ah9, bh1);
              lo = (lo + Math.imul(al8, bl2)) | 0;
              mid = (mid + Math.imul(al8, bh2)) | 0;
              mid = (mid + Math.imul(ah8, bl2)) | 0;
              hi = (hi + Math.imul(ah8, bh2)) | 0;
              lo = (lo + Math.imul(al7, bl3)) | 0;
              mid = (mid + Math.imul(al7, bh3)) | 0;
              mid = (mid + Math.imul(ah7, bl3)) | 0;
              hi = (hi + Math.imul(ah7, bh3)) | 0;
              lo = (lo + Math.imul(al6, bl4)) | 0;
              mid = (mid + Math.imul(al6, bh4)) | 0;
              mid = (mid + Math.imul(ah6, bl4)) | 0;
              hi = (hi + Math.imul(ah6, bh4)) | 0;
              lo = (lo + Math.imul(al5, bl5)) | 0;
              mid = (mid + Math.imul(al5, bh5)) | 0;
              mid = (mid + Math.imul(ah5, bl5)) | 0;
              hi = (hi + Math.imul(ah5, bh5)) | 0;
              lo = (lo + Math.imul(al4, bl6)) | 0;
              mid = (mid + Math.imul(al4, bh6)) | 0;
              mid = (mid + Math.imul(ah4, bl6)) | 0;
              hi = (hi + Math.imul(ah4, bh6)) | 0;
              lo = (lo + Math.imul(al3, bl7)) | 0;
              mid = (mid + Math.imul(al3, bh7)) | 0;
              mid = (mid + Math.imul(ah3, bl7)) | 0;
              hi = (hi + Math.imul(ah3, bh7)) | 0;
              lo = (lo + Math.imul(al2, bl8)) | 0;
              mid = (mid + Math.imul(al2, bh8)) | 0;
              mid = (mid + Math.imul(ah2, bl8)) | 0;
              hi = (hi + Math.imul(ah2, bh8)) | 0;
              lo = (lo + Math.imul(al1, bl9)) | 0;
              mid = (mid + Math.imul(al1, bh9)) | 0;
              mid = (mid + Math.imul(ah1, bl9)) | 0;
              hi = (hi + Math.imul(ah1, bh9)) | 0;
              var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
              w10 &= 0x3ffffff;
              /* k = 11 */
              lo = Math.imul(al9, bl2);
              mid = Math.imul(al9, bh2);
              mid = (mid + Math.imul(ah9, bl2)) | 0;
              hi = Math.imul(ah9, bh2);
              lo = (lo + Math.imul(al8, bl3)) | 0;
              mid = (mid + Math.imul(al8, bh3)) | 0;
              mid = (mid + Math.imul(ah8, bl3)) | 0;
              hi = (hi + Math.imul(ah8, bh3)) | 0;
              lo = (lo + Math.imul(al7, bl4)) | 0;
              mid = (mid + Math.imul(al7, bh4)) | 0;
              mid = (mid + Math.imul(ah7, bl4)) | 0;
              hi = (hi + Math.imul(ah7, bh4)) | 0;
              lo = (lo + Math.imul(al6, bl5)) | 0;
              mid = (mid + Math.imul(al6, bh5)) | 0;
              mid = (mid + Math.imul(ah6, bl5)) | 0;
              hi = (hi + Math.imul(ah6, bh5)) | 0;
              lo = (lo + Math.imul(al5, bl6)) | 0;
              mid = (mid + Math.imul(al5, bh6)) | 0;
              mid = (mid + Math.imul(ah5, bl6)) | 0;
              hi = (hi + Math.imul(ah5, bh6)) | 0;
              lo = (lo + Math.imul(al4, bl7)) | 0;
              mid = (mid + Math.imul(al4, bh7)) | 0;
              mid = (mid + Math.imul(ah4, bl7)) | 0;
              hi = (hi + Math.imul(ah4, bh7)) | 0;
              lo = (lo + Math.imul(al3, bl8)) | 0;
              mid = (mid + Math.imul(al3, bh8)) | 0;
              mid = (mid + Math.imul(ah3, bl8)) | 0;
              hi = (hi + Math.imul(ah3, bh8)) | 0;
              lo = (lo + Math.imul(al2, bl9)) | 0;
              mid = (mid + Math.imul(al2, bh9)) | 0;
              mid = (mid + Math.imul(ah2, bl9)) | 0;
              hi = (hi + Math.imul(ah2, bh9)) | 0;
              var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
              w11 &= 0x3ffffff;
              /* k = 12 */
              lo = Math.imul(al9, bl3);
              mid = Math.imul(al9, bh3);
              mid = (mid + Math.imul(ah9, bl3)) | 0;
              hi = Math.imul(ah9, bh3);
              lo = (lo + Math.imul(al8, bl4)) | 0;
              mid = (mid + Math.imul(al8, bh4)) | 0;
              mid = (mid + Math.imul(ah8, bl4)) | 0;
              hi = (hi + Math.imul(ah8, bh4)) | 0;
              lo = (lo + Math.imul(al7, bl5)) | 0;
              mid = (mid + Math.imul(al7, bh5)) | 0;
              mid = (mid + Math.imul(ah7, bl5)) | 0;
              hi = (hi + Math.imul(ah7, bh5)) | 0;
              lo = (lo + Math.imul(al6, bl6)) | 0;
              mid = (mid + Math.imul(al6, bh6)) | 0;
              mid = (mid + Math.imul(ah6, bl6)) | 0;
              hi = (hi + Math.imul(ah6, bh6)) | 0;
              lo = (lo + Math.imul(al5, bl7)) | 0;
              mid = (mid + Math.imul(al5, bh7)) | 0;
              mid = (mid + Math.imul(ah5, bl7)) | 0;
              hi = (hi + Math.imul(ah5, bh7)) | 0;
              lo = (lo + Math.imul(al4, bl8)) | 0;
              mid = (mid + Math.imul(al4, bh8)) | 0;
              mid = (mid + Math.imul(ah4, bl8)) | 0;
              hi = (hi + Math.imul(ah4, bh8)) | 0;
              lo = (lo + Math.imul(al3, bl9)) | 0;
              mid = (mid + Math.imul(al3, bh9)) | 0;
              mid = (mid + Math.imul(ah3, bl9)) | 0;
              hi = (hi + Math.imul(ah3, bh9)) | 0;
              var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
              w12 &= 0x3ffffff;
              /* k = 13 */
              lo = Math.imul(al9, bl4);
              mid = Math.imul(al9, bh4);
              mid = (mid + Math.imul(ah9, bl4)) | 0;
              hi = Math.imul(ah9, bh4);
              lo = (lo + Math.imul(al8, bl5)) | 0;
              mid = (mid + Math.imul(al8, bh5)) | 0;
              mid = (mid + Math.imul(ah8, bl5)) | 0;
              hi = (hi + Math.imul(ah8, bh5)) | 0;
              lo = (lo + Math.imul(al7, bl6)) | 0;
              mid = (mid + Math.imul(al7, bh6)) | 0;
              mid = (mid + Math.imul(ah7, bl6)) | 0;
              hi = (hi + Math.imul(ah7, bh6)) | 0;
              lo = (lo + Math.imul(al6, bl7)) | 0;
              mid = (mid + Math.imul(al6, bh7)) | 0;
              mid = (mid + Math.imul(ah6, bl7)) | 0;
              hi = (hi + Math.imul(ah6, bh7)) | 0;
              lo = (lo + Math.imul(al5, bl8)) | 0;
              mid = (mid + Math.imul(al5, bh8)) | 0;
              mid = (mid + Math.imul(ah5, bl8)) | 0;
              hi = (hi + Math.imul(ah5, bh8)) | 0;
              lo = (lo + Math.imul(al4, bl9)) | 0;
              mid = (mid + Math.imul(al4, bh9)) | 0;
              mid = (mid + Math.imul(ah4, bl9)) | 0;
              hi = (hi + Math.imul(ah4, bh9)) | 0;
              var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
              w13 &= 0x3ffffff;
              /* k = 14 */
              lo = Math.imul(al9, bl5);
              mid = Math.imul(al9, bh5);
              mid = (mid + Math.imul(ah9, bl5)) | 0;
              hi = Math.imul(ah9, bh5);
              lo = (lo + Math.imul(al8, bl6)) | 0;
              mid = (mid + Math.imul(al8, bh6)) | 0;
              mid = (mid + Math.imul(ah8, bl6)) | 0;
              hi = (hi + Math.imul(ah8, bh6)) | 0;
              lo = (lo + Math.imul(al7, bl7)) | 0;
              mid = (mid + Math.imul(al7, bh7)) | 0;
              mid = (mid + Math.imul(ah7, bl7)) | 0;
              hi = (hi + Math.imul(ah7, bh7)) | 0;
              lo = (lo + Math.imul(al6, bl8)) | 0;
              mid = (mid + Math.imul(al6, bh8)) | 0;
              mid = (mid + Math.imul(ah6, bl8)) | 0;
              hi = (hi + Math.imul(ah6, bh8)) | 0;
              lo = (lo + Math.imul(al5, bl9)) | 0;
              mid = (mid + Math.imul(al5, bh9)) | 0;
              mid = (mid + Math.imul(ah5, bl9)) | 0;
              hi = (hi + Math.imul(ah5, bh9)) | 0;
              var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
              w14 &= 0x3ffffff;
              /* k = 15 */
              lo = Math.imul(al9, bl6);
              mid = Math.imul(al9, bh6);
              mid = (mid + Math.imul(ah9, bl6)) | 0;
              hi = Math.imul(ah9, bh6);
              lo = (lo + Math.imul(al8, bl7)) | 0;
              mid = (mid + Math.imul(al8, bh7)) | 0;
              mid = (mid + Math.imul(ah8, bl7)) | 0;
              hi = (hi + Math.imul(ah8, bh7)) | 0;
              lo = (lo + Math.imul(al7, bl8)) | 0;
              mid = (mid + Math.imul(al7, bh8)) | 0;
              mid = (mid + Math.imul(ah7, bl8)) | 0;
              hi = (hi + Math.imul(ah7, bh8)) | 0;
              lo = (lo + Math.imul(al6, bl9)) | 0;
              mid = (mid + Math.imul(al6, bh9)) | 0;
              mid = (mid + Math.imul(ah6, bl9)) | 0;
              hi = (hi + Math.imul(ah6, bh9)) | 0;
              var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
              w15 &= 0x3ffffff;
              /* k = 16 */
              lo = Math.imul(al9, bl7);
              mid = Math.imul(al9, bh7);
              mid = (mid + Math.imul(ah9, bl7)) | 0;
              hi = Math.imul(ah9, bh7);
              lo = (lo + Math.imul(al8, bl8)) | 0;
              mid = (mid + Math.imul(al8, bh8)) | 0;
              mid = (mid + Math.imul(ah8, bl8)) | 0;
              hi = (hi + Math.imul(ah8, bh8)) | 0;
              lo = (lo + Math.imul(al7, bl9)) | 0;
              mid = (mid + Math.imul(al7, bh9)) | 0;
              mid = (mid + Math.imul(ah7, bl9)) | 0;
              hi = (hi + Math.imul(ah7, bh9)) | 0;
              var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
              w16 &= 0x3ffffff;
              /* k = 17 */
              lo = Math.imul(al9, bl8);
              mid = Math.imul(al9, bh8);
              mid = (mid + Math.imul(ah9, bl8)) | 0;
              hi = Math.imul(ah9, bh8);
              lo = (lo + Math.imul(al8, bl9)) | 0;
              mid = (mid + Math.imul(al8, bh9)) | 0;
              mid = (mid + Math.imul(ah8, bl9)) | 0;
              hi = (hi + Math.imul(ah8, bh9)) | 0;
              var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
              w17 &= 0x3ffffff;
              /* k = 18 */
              lo = Math.imul(al9, bl9);
              mid = Math.imul(al9, bh9);
              mid = (mid + Math.imul(ah9, bl9)) | 0;
              hi = Math.imul(ah9, bh9);
              var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
              w18 &= 0x3ffffff;
              o[0] = w0;
              o[1] = w1;
              o[2] = w2;
              o[3] = w3;
              o[4] = w4;
              o[5] = w5;
              o[6] = w6;
              o[7] = w7;
              o[8] = w8;
              o[9] = w9;
              o[10] = w10;
              o[11] = w11;
              o[12] = w12;
              o[13] = w13;
              o[14] = w14;
              o[15] = w15;
              o[16] = w16;
              o[17] = w17;
              o[18] = w18;
              if (c !== 0) {
                o[19] = c;
                out.length++;
              }
              return out;
            };

            // Polyfill comb
            if (!Math.imul) {
              comb10MulTo = smallMulTo;
            }

            function bigMulTo(self, num, out) {
              out.negative = num.negative ^ self.negative;
              out.length = self.length + num.length;

              var carry = 0;
              var hncarry = 0;
              for (var k = 0; k < out.length - 1; k++) {
                // Sum all words with the same `i + j = k` and accumulate `ncarry`,
                // note that ncarry could be >= 0x3ffffff
                var ncarry = hncarry;
                hncarry = 0;
                var rword = carry & 0x3ffffff;
                var maxJ = Math.min(k, num.length - 1);
                for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                  var i = k - j;
                  var a = self.words[i] | 0;
                  var b = num.words[j] | 0;
                  var r = a * b;

                  var lo = r & 0x3ffffff;
                  ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
                  lo = (lo + rword) | 0;
                  rword = lo & 0x3ffffff;
                  ncarry = (ncarry + (lo >>> 26)) | 0;

                  hncarry += ncarry >>> 26;
                  ncarry &= 0x3ffffff;
                }
                out.words[k] = rword;
                carry = ncarry;
                ncarry = hncarry;
              }
              if (carry !== 0) {
                out.words[k] = carry;
              } else {
                out.length--;
              }

              return out.strip();
            }

            function jumboMulTo(self, num, out) {
              var fftm = new FFTM();
              return fftm.mulp(self, num, out);
            }

            BN.prototype.mulTo = function mulTo(num, out) {
              var res;
              var len = this.length + num.length;
              if (this.length === 10 && num.length === 10) {
                res = comb10MulTo(this, num, out);
              } else if (len < 63) {
                res = smallMulTo(this, num, out);
              } else if (len < 1024) {
                res = bigMulTo(this, num, out);
              } else {
                res = jumboMulTo(this, num, out);
              }

              return res;
            };

            // Cooley-Tukey algorithm for FFT
            // slightly revisited to rely on looping instead of recursion

            function FFTM(x, y) {
              this.x = x;
              this.y = y;
            }

            FFTM.prototype.makeRBT = function makeRBT(N) {
              var t = new Array(N);
              var l = BN.prototype._countBits(N) - 1;
              for (var i = 0; i < N; i++) {
                t[i] = this.revBin(i, l, N);
              }

              return t;
            };

            // Returns binary-reversed representation of `x`
            FFTM.prototype.revBin = function revBin(x, l, N) {
              if (x === 0 || x === N - 1) return x;

              var rb = 0;
              for (var i = 0; i < l; i++) {
                rb |= (x & 1) << (l - i - 1);
                x >>= 1;
              }

              return rb;
            };

            // Performs "tweedling" phase, therefore 'emulating'
            // behaviour of the recursive algorithm
            FFTM.prototype.permute = function permute(
              rbt,
              rws,
              iws,
              rtws,
              itws,
              N
            ) {
              for (var i = 0; i < N; i++) {
                rtws[i] = rws[rbt[i]];
                itws[i] = iws[rbt[i]];
              }
            };

            FFTM.prototype.transform = function transform(
              rws,
              iws,
              rtws,
              itws,
              N,
              rbt
            ) {
              this.permute(rbt, rws, iws, rtws, itws, N);

              for (var s = 1; s < N; s <<= 1) {
                var l = s << 1;

                var rtwdf = Math.cos((2 * Math.PI) / l);
                var itwdf = Math.sin((2 * Math.PI) / l);

                for (var p = 0; p < N; p += l) {
                  var rtwdf_ = rtwdf;
                  var itwdf_ = itwdf;

                  for (var j = 0; j < s; j++) {
                    var re = rtws[p + j];
                    var ie = itws[p + j];

                    var ro = rtws[p + j + s];
                    var io = itws[p + j + s];

                    var rx = rtwdf_ * ro - itwdf_ * io;

                    io = rtwdf_ * io + itwdf_ * ro;
                    ro = rx;

                    rtws[p + j] = re + ro;
                    itws[p + j] = ie + io;

                    rtws[p + j + s] = re - ro;
                    itws[p + j + s] = ie - io;

                    /* jshint maxdepth : false */
                    if (j !== l) {
                      rx = rtwdf * rtwdf_ - itwdf * itwdf_;

                      itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                      rtwdf_ = rx;
                    }
                  }
                }
              }
            };

            FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
              var N = Math.max(m, n) | 1;
              var odd = N & 1;
              var i = 0;
              for (N = (N / 2) | 0; N; N = N >>> 1) {
                i++;
              }

              return 1 << (i + 1 + odd);
            };

            FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
              if (N <= 1) return;

              for (var i = 0; i < N / 2; i++) {
                var t = rws[i];

                rws[i] = rws[N - i - 1];
                rws[N - i - 1] = t;

                t = iws[i];

                iws[i] = -iws[N - i - 1];
                iws[N - i - 1] = -t;
              }
            };

            FFTM.prototype.normalize13b = function normalize13b(ws, N) {
              var carry = 0;
              for (var i = 0; i < N / 2; i++) {
                var w =
                  Math.round(ws[2 * i + 1] / N) * 0x2000 +
                  Math.round(ws[2 * i] / N) +
                  carry;

                ws[i] = w & 0x3ffffff;

                if (w < 0x4000000) {
                  carry = 0;
                } else {
                  carry = (w / 0x4000000) | 0;
                }
              }

              return ws;
            };

            FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
              var carry = 0;
              for (var i = 0; i < len; i++) {
                carry = carry + (ws[i] | 0);

                rws[2 * i] = carry & 0x1fff;
                carry = carry >>> 13;
                rws[2 * i + 1] = carry & 0x1fff;
                carry = carry >>> 13;
              }

              // Pad with zeroes
              for (i = 2 * len; i < N; ++i) {
                rws[i] = 0;
              }

              assert(carry === 0);
              assert((carry & ~0x1fff) === 0);
            };

            FFTM.prototype.stub = function stub(N) {
              var ph = new Array(N);
              for (var i = 0; i < N; i++) {
                ph[i] = 0;
              }

              return ph;
            };

            FFTM.prototype.mulp = function mulp(x, y, out) {
              var N = 2 * this.guessLen13b(x.length, y.length);

              var rbt = this.makeRBT(N);

              var _ = this.stub(N);

              var rws = new Array(N);
              var rwst = new Array(N);
              var iwst = new Array(N);

              var nrws = new Array(N);
              var nrwst = new Array(N);
              var niwst = new Array(N);

              var rmws = out.words;
              rmws.length = N;

              this.convert13b(x.words, x.length, rws, N);
              this.convert13b(y.words, y.length, nrws, N);

              this.transform(rws, _, rwst, iwst, N, rbt);
              this.transform(nrws, _, nrwst, niwst, N, rbt);

              for (var i = 0; i < N; i++) {
                var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
                iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
                rwst[i] = rx;
              }

              this.conjugate(rwst, iwst, N);
              this.transform(rwst, iwst, rmws, _, N, rbt);
              this.conjugate(rmws, _, N);
              this.normalize13b(rmws, N);

              out.negative = x.negative ^ y.negative;
              out.length = x.length + y.length;
              return out.strip();
            };

            // Multiply `this` by `num`
            BN.prototype.mul = function mul(num) {
              var out = new BN(null);
              out.words = new Array(this.length + num.length);
              return this.mulTo(num, out);
            };

            // Multiply employing FFT
            BN.prototype.mulf = function mulf(num) {
              var out = new BN(null);
              out.words = new Array(this.length + num.length);
              return jumboMulTo(this, num, out);
            };

            // In-place Multiplication
            BN.prototype.imul = function imul(num) {
              return this.clone().mulTo(num, this);
            };

            BN.prototype.imuln = function imuln(num) {
              assert(typeof num === 'number');
              assert(num < 0x4000000);

              // Carry
              var carry = 0;
              for (var i = 0; i < this.length; i++) {
                var w = (this.words[i] | 0) * num;
                var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
                carry >>= 26;
                carry += (w / 0x4000000) | 0;
                // NOTE: lo is 27bit maximum
                carry += lo >>> 26;
                this.words[i] = lo & 0x3ffffff;
              }

              if (carry !== 0) {
                this.words[i] = carry;
                this.length++;
              }

              return this;
            };

            BN.prototype.muln = function muln(num) {
              return this.clone().imuln(num);
            };

            // `this` * `this`
            BN.prototype.sqr = function sqr() {
              return this.mul(this);
            };

            // `this` * `this` in-place
            BN.prototype.isqr = function isqr() {
              return this.imul(this.clone());
            };

            // Math.pow(`this`, `num`)
            BN.prototype.pow = function pow(num) {
              var w = toBitArray(num);
              if (w.length === 0) return new BN(1);

              // Skip leading zeroes
              var res = this;
              for (var i = 0; i < w.length; i++, res = res.sqr()) {
                if (w[i] !== 0) break;
              }

              if (++i < w.length) {
                for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
                  if (w[i] === 0) continue;

                  res = res.mul(q);
                }
              }

              return res;
            };

            // Shift-left in-place
            BN.prototype.iushln = function iushln(bits) {
              assert(typeof bits === 'number' && bits >= 0);
              var r = bits % 26;
              var s = (bits - r) / 26;
              var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
              var i;

              if (r !== 0) {
                var carry = 0;

                for (i = 0; i < this.length; i++) {
                  var newCarry = this.words[i] & carryMask;
                  var c = ((this.words[i] | 0) - newCarry) << r;
                  this.words[i] = c | carry;
                  carry = newCarry >>> (26 - r);
                }

                if (carry) {
                  this.words[i] = carry;
                  this.length++;
                }
              }

              if (s !== 0) {
                for (i = this.length - 1; i >= 0; i--) {
                  this.words[i + s] = this.words[i];
                }

                for (i = 0; i < s; i++) {
                  this.words[i] = 0;
                }

                this.length += s;
              }

              return this.strip();
            };

            BN.prototype.ishln = function ishln(bits) {
              // TODO(indutny): implement me
              assert(this.negative === 0);
              return this.iushln(bits);
            };

            // Shift-right in-place
            // NOTE: `hint` is a lowest bit before trailing zeroes
            // NOTE: if `extended` is present - it will be filled with destroyed bits
            BN.prototype.iushrn = function iushrn(bits, hint, extended) {
              assert(typeof bits === 'number' && bits >= 0);
              var h;
              if (hint) {
                h = (hint - (hint % 26)) / 26;
              } else {
                h = 0;
              }

              var r = bits % 26;
              var s = Math.min((bits - r) / 26, this.length);
              var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
              var maskedWords = extended;

              h -= s;
              h = Math.max(0, h);

              // Extended mode, copy masked part
              if (maskedWords) {
                for (var i = 0; i < s; i++) {
                  maskedWords.words[i] = this.words[i];
                }
                maskedWords.length = s;
              }

              if (s === 0) {
                // No-op, we should not move anything at all
              } else if (this.length > s) {
                this.length -= s;
                for (i = 0; i < this.length; i++) {
                  this.words[i] = this.words[i + s];
                }
              } else {
                this.words[0] = 0;
                this.length = 1;
              }

              var carry = 0;
              for (
                i = this.length - 1;
                i >= 0 && (carry !== 0 || i >= h);
                i--
              ) {
                var word = this.words[i] | 0;
                this.words[i] = (carry << (26 - r)) | (word >>> r);
                carry = word & mask;
              }

              // Push carried bits as a mask
              if (maskedWords && carry !== 0) {
                maskedWords.words[maskedWords.length++] = carry;
              }

              if (this.length === 0) {
                this.words[0] = 0;
                this.length = 1;
              }

              return this.strip();
            };

            BN.prototype.ishrn = function ishrn(bits, hint, extended) {
              // TODO(indutny): implement me
              assert(this.negative === 0);
              return this.iushrn(bits, hint, extended);
            };

            // Shift-left
            BN.prototype.shln = function shln(bits) {
              return this.clone().ishln(bits);
            };

            BN.prototype.ushln = function ushln(bits) {
              return this.clone().iushln(bits);
            };

            // Shift-right
            BN.prototype.shrn = function shrn(bits) {
              return this.clone().ishrn(bits);
            };

            BN.prototype.ushrn = function ushrn(bits) {
              return this.clone().iushrn(bits);
            };

            // Test if n bit is set
            BN.prototype.testn = function testn(bit) {
              assert(typeof bit === 'number' && bit >= 0);
              var r = bit % 26;
              var s = (bit - r) / 26;
              var q = 1 << r;

              // Fast case: bit is much higher than all existing words
              if (this.length <= s) return false;

              // Check bit and return
              var w = this.words[s];

              return !!(w & q);
            };

            // Return only lowers bits of number (in-place)
            BN.prototype.imaskn = function imaskn(bits) {
              assert(typeof bits === 'number' && bits >= 0);
              var r = bits % 26;
              var s = (bits - r) / 26;

              assert(
                this.negative === 0,
                'imaskn works only with positive numbers'
              );

              if (this.length <= s) {
                return this;
              }

              if (r !== 0) {
                s++;
              }
              this.length = Math.min(s, this.length);

              if (r !== 0) {
                var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
                this.words[this.length - 1] &= mask;
              }

              return this.strip();
            };

            // Return only lowers bits of number
            BN.prototype.maskn = function maskn(bits) {
              return this.clone().imaskn(bits);
            };

            // Add plain number `num` to `this`
            BN.prototype.iaddn = function iaddn(num) {
              assert(typeof num === 'number');
              assert(num < 0x4000000);
              if (num < 0) return this.isubn(-num);

              // Possible sign change
              if (this.negative !== 0) {
                if (this.length === 1 && (this.words[0] | 0) < num) {
                  this.words[0] = num - (this.words[0] | 0);
                  this.negative = 0;
                  return this;
                }

                this.negative = 0;
                this.isubn(num);
                this.negative = 1;
                return this;
              }

              // Add without checks
              return this._iaddn(num);
            };

            BN.prototype._iaddn = function _iaddn(num) {
              this.words[0] += num;

              // Carry
              for (
                var i = 0;
                i < this.length && this.words[i] >= 0x4000000;
                i++
              ) {
                this.words[i] -= 0x4000000;
                if (i === this.length - 1) {
                  this.words[i + 1] = 1;
                } else {
                  this.words[i + 1]++;
                }
              }
              this.length = Math.max(this.length, i + 1);

              return this;
            };

            // Subtract plain number `num` from `this`
            BN.prototype.isubn = function isubn(num) {
              assert(typeof num === 'number');
              assert(num < 0x4000000);
              if (num < 0) return this.iaddn(-num);

              if (this.negative !== 0) {
                this.negative = 0;
                this.iaddn(num);
                this.negative = 1;
                return this;
              }

              this.words[0] -= num;

              if (this.length === 1 && this.words[0] < 0) {
                this.words[0] = -this.words[0];
                this.negative = 1;
              } else {
                // Carry
                for (var i = 0; i < this.length && this.words[i] < 0; i++) {
                  this.words[i] += 0x4000000;
                  this.words[i + 1] -= 1;
                }
              }

              return this.strip();
            };

            BN.prototype.addn = function addn(num) {
              return this.clone().iaddn(num);
            };

            BN.prototype.subn = function subn(num) {
              return this.clone().isubn(num);
            };

            BN.prototype.iabs = function iabs() {
              this.negative = 0;

              return this;
            };

            BN.prototype.abs = function abs() {
              return this.clone().iabs();
            };

            BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
              var len = num.length + shift;
              var i;

              this._expand(len);

              var w;
              var carry = 0;
              for (i = 0; i < num.length; i++) {
                w = (this.words[i + shift] | 0) + carry;
                var right = (num.words[i] | 0) * mul;
                w -= right & 0x3ffffff;
                carry = (w >> 26) - ((right / 0x4000000) | 0);
                this.words[i + shift] = w & 0x3ffffff;
              }
              for (; i < this.length - shift; i++) {
                w = (this.words[i + shift] | 0) + carry;
                carry = w >> 26;
                this.words[i + shift] = w & 0x3ffffff;
              }

              if (carry === 0) return this.strip();

              // Subtraction overflow
              assert(carry === -1);
              carry = 0;
              for (i = 0; i < this.length; i++) {
                w = -(this.words[i] | 0) + carry;
                carry = w >> 26;
                this.words[i] = w & 0x3ffffff;
              }
              this.negative = 1;

              return this.strip();
            };

            BN.prototype._wordDiv = function _wordDiv(num, mode) {
              var shift = this.length - num.length;

              var a = this.clone();
              var b = num;

              // Normalize
              var bhi = b.words[b.length - 1] | 0;
              var bhiBits = this._countBits(bhi);
              shift = 26 - bhiBits;
              if (shift !== 0) {
                b = b.ushln(shift);
                a.iushln(shift);
                bhi = b.words[b.length - 1] | 0;
              }

              // Initialize quotient
              var m = a.length - b.length;
              var q;

              if (mode !== 'mod') {
                q = new BN(null);
                q.length = m + 1;
                q.words = new Array(q.length);
                for (var i = 0; i < q.length; i++) {
                  q.words[i] = 0;
                }
              }

              var diff = a.clone()._ishlnsubmul(b, 1, m);
              if (diff.negative === 0) {
                a = diff;
                if (q) {
                  q.words[m] = 1;
                }
              }

              for (var j = m - 1; j >= 0; j--) {
                var qj =
                  (a.words[b.length + j] | 0) * 0x4000000 +
                  (a.words[b.length + j - 1] | 0);

                // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
                // (0x7ffffff)
                qj = Math.min((qj / bhi) | 0, 0x3ffffff);

                a._ishlnsubmul(b, qj, j);
                while (a.negative !== 0) {
                  qj--;
                  a.negative = 0;
                  a._ishlnsubmul(b, 1, j);
                  if (!a.isZero()) {
                    a.negative ^= 1;
                  }
                }
                if (q) {
                  q.words[j] = qj;
                }
              }
              if (q) {
                q.strip();
              }
              a.strip();

              // Denormalize
              if (mode !== 'div' && shift !== 0) {
                a.iushrn(shift);
              }

              return {
                div: q || null,
                mod: a,
              };
            };

            // NOTE: 1) `mode` can be set to `mod` to request mod only,
            //       to `div` to request div only, or be absent to
            //       request both div & mod
            //       2) `positive` is true if unsigned mod is requested
            BN.prototype.divmod = function divmod(num, mode, positive) {
              assert(!num.isZero());

              if (this.isZero()) {
                return {
                  div: new BN(0),
                  mod: new BN(0),
                };
              }

              var div, mod, res;
              if (this.negative !== 0 && num.negative === 0) {
                res = this.neg().divmod(num, mode);

                if (mode !== 'mod') {
                  div = res.div.neg();
                }

                if (mode !== 'div') {
                  mod = res.mod.neg();
                  if (positive && mod.negative !== 0) {
                    mod.iadd(num);
                  }
                }

                return {
                  div: div,
                  mod: mod,
                };
              }

              if (this.negative === 0 && num.negative !== 0) {
                res = this.divmod(num.neg(), mode);

                if (mode !== 'mod') {
                  div = res.div.neg();
                }

                return {
                  div: div,
                  mod: res.mod,
                };
              }

              if ((this.negative & num.negative) !== 0) {
                res = this.neg().divmod(num.neg(), mode);

                if (mode !== 'div') {
                  mod = res.mod.neg();
                  if (positive && mod.negative !== 0) {
                    mod.isub(num);
                  }
                }

                return {
                  div: res.div,
                  mod: mod,
                };
              }

              // Both numbers are positive at this point

              // Strip both numbers to approximate shift value
              if (num.length > this.length || this.cmp(num) < 0) {
                return {
                  div: new BN(0),
                  mod: this,
                };
              }

              // Very short reduction
              if (num.length === 1) {
                if (mode === 'div') {
                  return {
                    div: this.divn(num.words[0]),
                    mod: null,
                  };
                }

                if (mode === 'mod') {
                  return {
                    div: null,
                    mod: new BN(this.modn(num.words[0])),
                  };
                }

                return {
                  div: this.divn(num.words[0]),
                  mod: new BN(this.modn(num.words[0])),
                };
              }

              return this._wordDiv(num, mode);
            };

            // Find `this` / `num`
            BN.prototype.div = function div(num) {
              return this.divmod(num, 'div', false).div;
            };

            // Find `this` % `num`
            BN.prototype.mod = function mod(num) {
              return this.divmod(num, 'mod', false).mod;
            };

            BN.prototype.umod = function umod(num) {
              return this.divmod(num, 'mod', true).mod;
            };

            // Find Round(`this` / `num`)
            BN.prototype.divRound = function divRound(num) {
              var dm = this.divmod(num);

              // Fast case - exact division
              if (dm.mod.isZero()) return dm.div;

              var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

              var half = num.ushrn(1);
              var r2 = num.andln(1);
              var cmp = mod.cmp(half);

              // Round down
              if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;

              // Round up
              return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
            };

            BN.prototype.modn = function modn(num) {
              assert(num <= 0x3ffffff);
              var p = (1 << 26) % num;

              var acc = 0;
              for (var i = this.length - 1; i >= 0; i--) {
                acc = (p * acc + (this.words[i] | 0)) % num;
              }

              return acc;
            };

            // In-place division by number
            BN.prototype.idivn = function idivn(num) {
              assert(num <= 0x3ffffff);

              var carry = 0;
              for (var i = this.length - 1; i >= 0; i--) {
                var w = (this.words[i] | 0) + carry * 0x4000000;
                this.words[i] = (w / num) | 0;
                carry = w % num;
              }

              return this.strip();
            };

            BN.prototype.divn = function divn(num) {
              return this.clone().idivn(num);
            };

            BN.prototype.egcd = function egcd(p) {
              assert(p.negative === 0);
              assert(!p.isZero());

              var x = this;
              var y = p.clone();

              if (x.negative !== 0) {
                x = x.umod(p);
              } else {
                x = x.clone();
              }

              // A * x + B * y = x
              var A = new BN(1);
              var B = new BN(0);

              // C * x + D * y = y
              var C = new BN(0);
              var D = new BN(1);

              var g = 0;

              while (x.isEven() && y.isEven()) {
                x.iushrn(1);
                y.iushrn(1);
                ++g;
              }

              var yp = y.clone();
              var xp = x.clone();

              while (!x.isZero()) {
                for (
                  var i = 0, im = 1;
                  (x.words[0] & im) === 0 && i < 26;
                  ++i, im <<= 1
                );
                if (i > 0) {
                  x.iushrn(i);
                  while (i-- > 0) {
                    if (A.isOdd() || B.isOdd()) {
                      A.iadd(yp);
                      B.isub(xp);
                    }

                    A.iushrn(1);
                    B.iushrn(1);
                  }
                }

                for (
                  var j = 0, jm = 1;
                  (y.words[0] & jm) === 0 && j < 26;
                  ++j, jm <<= 1
                );
                if (j > 0) {
                  y.iushrn(j);
                  while (j-- > 0) {
                    if (C.isOdd() || D.isOdd()) {
                      C.iadd(yp);
                      D.isub(xp);
                    }

                    C.iushrn(1);
                    D.iushrn(1);
                  }
                }

                if (x.cmp(y) >= 0) {
                  x.isub(y);
                  A.isub(C);
                  B.isub(D);
                } else {
                  y.isub(x);
                  C.isub(A);
                  D.isub(B);
                }
              }

              return {
                a: C,
                b: D,
                gcd: y.iushln(g),
              };
            };

            // This is reduced incarnation of the binary EEA
            // above, designated to invert members of the
            // _prime_ fields F(p) at a maximal speed
            BN.prototype._invmp = function _invmp(p) {
              assert(p.negative === 0);
              assert(!p.isZero());

              var a = this;
              var b = p.clone();

              if (a.negative !== 0) {
                a = a.umod(p);
              } else {
                a = a.clone();
              }

              var x1 = new BN(1);
              var x2 = new BN(0);

              var delta = b.clone();

              while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
                for (
                  var i = 0, im = 1;
                  (a.words[0] & im) === 0 && i < 26;
                  ++i, im <<= 1
                );
                if (i > 0) {
                  a.iushrn(i);
                  while (i-- > 0) {
                    if (x1.isOdd()) {
                      x1.iadd(delta);
                    }

                    x1.iushrn(1);
                  }
                }

                for (
                  var j = 0, jm = 1;
                  (b.words[0] & jm) === 0 && j < 26;
                  ++j, jm <<= 1
                );
                if (j > 0) {
                  b.iushrn(j);
                  while (j-- > 0) {
                    if (x2.isOdd()) {
                      x2.iadd(delta);
                    }

                    x2.iushrn(1);
                  }
                }

                if (a.cmp(b) >= 0) {
                  a.isub(b);
                  x1.isub(x2);
                } else {
                  b.isub(a);
                  x2.isub(x1);
                }
              }

              var res;
              if (a.cmpn(1) === 0) {
                res = x1;
              } else {
                res = x2;
              }

              if (res.cmpn(0) < 0) {
                res.iadd(p);
              }

              return res;
            };

            BN.prototype.gcd = function gcd(num) {
              if (this.isZero()) return num.abs();
              if (num.isZero()) return this.abs();

              var a = this.clone();
              var b = num.clone();
              a.negative = 0;
              b.negative = 0;

              // Remove common factor of two
              for (var shift = 0; a.isEven() && b.isEven(); shift++) {
                a.iushrn(1);
                b.iushrn(1);
              }

              do {
                while (a.isEven()) {
                  a.iushrn(1);
                }
                while (b.isEven()) {
                  b.iushrn(1);
                }

                var r = a.cmp(b);
                if (r < 0) {
                  // Swap `a` and `b` to make `a` always bigger than `b`
                  var t = a;
                  a = b;
                  b = t;
                } else if (r === 0 || b.cmpn(1) === 0) {
                  break;
                }

                a.isub(b);
              } while (true);

              return b.iushln(shift);
            };

            // Invert number in the field F(num)
            BN.prototype.invm = function invm(num) {
              return this.egcd(num).a.umod(num);
            };

            BN.prototype.isEven = function isEven() {
              return (this.words[0] & 1) === 0;
            };

            BN.prototype.isOdd = function isOdd() {
              return (this.words[0] & 1) === 1;
            };

            // And first word and num
            BN.prototype.andln = function andln(num) {
              return this.words[0] & num;
            };

            // Increment at the bit position in-line
            BN.prototype.bincn = function bincn(bit) {
              assert(typeof bit === 'number');
              var r = bit % 26;
              var s = (bit - r) / 26;
              var q = 1 << r;

              // Fast case: bit is much higher than all existing words
              if (this.length <= s) {
                this._expand(s + 1);
                this.words[s] |= q;
                return this;
              }

              // Add bit and propagate, if needed
              var carry = q;
              for (var i = s; carry !== 0 && i < this.length; i++) {
                var w = this.words[i] | 0;
                w += carry;
                carry = w >>> 26;
                w &= 0x3ffffff;
                this.words[i] = w;
              }
              if (carry !== 0) {
                this.words[i] = carry;
                this.length++;
              }
              return this;
            };

            BN.prototype.isZero = function isZero() {
              return this.length === 1 && this.words[0] === 0;
            };

            BN.prototype.cmpn = function cmpn(num) {
              var negative = num < 0;

              if (this.negative !== 0 && !negative) return -1;
              if (this.negative === 0 && negative) return 1;

              this.strip();

              var res;
              if (this.length > 1) {
                res = 1;
              } else {
                if (negative) {
                  num = -num;
                }

                assert(num <= 0x3ffffff, 'Number is too big');

                var w = this.words[0] | 0;
                res = w === num ? 0 : w < num ? -1 : 1;
              }
              if (this.negative !== 0) return -res | 0;
              return res;
            };

            // Compare two numbers and return:
            // 1 - if `this` > `num`
            // 0 - if `this` == `num`
            // -1 - if `this` < `num`
            BN.prototype.cmp = function cmp(num) {
              if (this.negative !== 0 && num.negative === 0) return -1;
              if (this.negative === 0 && num.negative !== 0) return 1;

              var res = this.ucmp(num);
              if (this.negative !== 0) return -res | 0;
              return res;
            };

            // Unsigned comparison
            BN.prototype.ucmp = function ucmp(num) {
              // At this point both numbers have the same sign
              if (this.length > num.length) return 1;
              if (this.length < num.length) return -1;

              var res = 0;
              for (var i = this.length - 1; i >= 0; i--) {
                var a = this.words[i] | 0;
                var b = num.words[i] | 0;

                if (a === b) continue;
                if (a < b) {
                  res = -1;
                } else if (a > b) {
                  res = 1;
                }
                break;
              }
              return res;
            };

            BN.prototype.gtn = function gtn(num) {
              return this.cmpn(num) === 1;
            };

            BN.prototype.gt = function gt(num) {
              return this.cmp(num) === 1;
            };

            BN.prototype.gten = function gten(num) {
              return this.cmpn(num) >= 0;
            };

            BN.prototype.gte = function gte(num) {
              return this.cmp(num) >= 0;
            };

            BN.prototype.ltn = function ltn(num) {
              return this.cmpn(num) === -1;
            };

            BN.prototype.lt = function lt(num) {
              return this.cmp(num) === -1;
            };

            BN.prototype.lten = function lten(num) {
              return this.cmpn(num) <= 0;
            };

            BN.prototype.lte = function lte(num) {
              return this.cmp(num) <= 0;
            };

            BN.prototype.eqn = function eqn(num) {
              return this.cmpn(num) === 0;
            };

            BN.prototype.eq = function eq(num) {
              return this.cmp(num) === 0;
            };

            //
            // A reduce context, could be using montgomery or something better, depending
            // on the `m` itself.
            //
            BN.red = function red(num) {
              return new Red(num);
            };

            BN.prototype.toRed = function toRed(ctx) {
              assert(!this.red, 'Already a number in reduction context');
              assert(this.negative === 0, 'red works only with positives');
              return ctx.convertTo(this)._forceRed(ctx);
            };

            BN.prototype.fromRed = function fromRed() {
              assert(
                this.red,
                'fromRed works only with numbers in reduction context'
              );
              return this.red.convertFrom(this);
            };

            BN.prototype._forceRed = function _forceRed(ctx) {
              this.red = ctx;
              return this;
            };

            BN.prototype.forceRed = function forceRed(ctx) {
              assert(!this.red, 'Already a number in reduction context');
              return this._forceRed(ctx);
            };

            BN.prototype.redAdd = function redAdd(num) {
              assert(this.red, 'redAdd works only with red numbers');
              return this.red.add(this, num);
            };

            BN.prototype.redIAdd = function redIAdd(num) {
              assert(this.red, 'redIAdd works only with red numbers');
              return this.red.iadd(this, num);
            };

            BN.prototype.redSub = function redSub(num) {
              assert(this.red, 'redSub works only with red numbers');
              return this.red.sub(this, num);
            };

            BN.prototype.redISub = function redISub(num) {
              assert(this.red, 'redISub works only with red numbers');
              return this.red.isub(this, num);
            };

            BN.prototype.redShl = function redShl(num) {
              assert(this.red, 'redShl works only with red numbers');
              return this.red.shl(this, num);
            };

            BN.prototype.redMul = function redMul(num) {
              assert(this.red, 'redMul works only with red numbers');
              this.red._verify2(this, num);
              return this.red.mul(this, num);
            };

            BN.prototype.redIMul = function redIMul(num) {
              assert(this.red, 'redMul works only with red numbers');
              this.red._verify2(this, num);
              return this.red.imul(this, num);
            };

            BN.prototype.redSqr = function redSqr() {
              assert(this.red, 'redSqr works only with red numbers');
              this.red._verify1(this);
              return this.red.sqr(this);
            };

            BN.prototype.redISqr = function redISqr() {
              assert(this.red, 'redISqr works only with red numbers');
              this.red._verify1(this);
              return this.red.isqr(this);
            };

            // Square root over p
            BN.prototype.redSqrt = function redSqrt() {
              assert(this.red, 'redSqrt works only with red numbers');
              this.red._verify1(this);
              return this.red.sqrt(this);
            };

            BN.prototype.redInvm = function redInvm() {
              assert(this.red, 'redInvm works only with red numbers');
              this.red._verify1(this);
              return this.red.invm(this);
            };

            // Return negative clone of `this` % `red modulo`
            BN.prototype.redNeg = function redNeg() {
              assert(this.red, 'redNeg works only with red numbers');
              this.red._verify1(this);
              return this.red.neg(this);
            };

            BN.prototype.redPow = function redPow(num) {
              assert(this.red && !num.red, 'redPow(normalNum)');
              this.red._verify1(this);
              return this.red.pow(this, num);
            };

            // Prime numbers with efficient reduction
            var primes = {
              k256: null,
              p224: null,
              p192: null,
              p25519: null,
            };

            // Pseudo-Mersenne prime
            function MPrime(name, p) {
              // P = 2 ^ N - K
              this.name = name;
              this.p = new BN(p, 16);
              this.n = this.p.bitLength();
              this.k = new BN(1).iushln(this.n).isub(this.p);

              this.tmp = this._tmp();
            }

            MPrime.prototype._tmp = function _tmp() {
              var tmp = new BN(null);
              tmp.words = new Array(Math.ceil(this.n / 13));
              return tmp;
            };

            MPrime.prototype.ireduce = function ireduce(num) {
              // Assumes that `num` is less than `P^2`
              // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
              var r = num;
              var rlen;

              do {
                this.split(r, this.tmp);
                r = this.imulK(r);
                r = r.iadd(this.tmp);
                rlen = r.bitLength();
              } while (rlen > this.n);

              var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
              if (cmp === 0) {
                r.words[0] = 0;
                r.length = 1;
              } else if (cmp > 0) {
                r.isub(this.p);
              } else {
                if (r.strip !== undefined) {
                  // r is BN v4 instance
                  r.strip();
                } else {
                  // r is BN v5 instance
                  r._strip();
                }
              }

              return r;
            };

            MPrime.prototype.split = function split(input, out) {
              input.iushrn(this.n, 0, out);
            };

            MPrime.prototype.imulK = function imulK(num) {
              return num.imul(this.k);
            };

            function K256() {
              MPrime.call(
                this,
                'k256',
                'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f'
              );
            }
            inherits(K256, MPrime);

            K256.prototype.split = function split(input, output) {
              // 256 = 9 * 26 + 22
              var mask = 0x3fffff;

              var outLen = Math.min(input.length, 9);
              for (var i = 0; i < outLen; i++) {
                output.words[i] = input.words[i];
              }
              output.length = outLen;

              if (input.length <= 9) {
                input.words[0] = 0;
                input.length = 1;
                return;
              }

              // Shift by 9 limbs
              var prev = input.words[9];
              output.words[output.length++] = prev & mask;

              for (i = 10; i < input.length; i++) {
                var next = input.words[i] | 0;
                input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
                prev = next;
              }
              prev >>>= 22;
              input.words[i - 10] = prev;
              if (prev === 0 && input.length > 10) {
                input.length -= 10;
              } else {
                input.length -= 9;
              }
            };

            K256.prototype.imulK = function imulK(num) {
              // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
              num.words[num.length] = 0;
              num.words[num.length + 1] = 0;
              num.length += 2;

              // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
              var lo = 0;
              for (var i = 0; i < num.length; i++) {
                var w = num.words[i] | 0;
                lo += w * 0x3d1;
                num.words[i] = lo & 0x3ffffff;
                lo = w * 0x40 + ((lo / 0x4000000) | 0);
              }

              // Fast length reduction
              if (num.words[num.length - 1] === 0) {
                num.length--;
                if (num.words[num.length - 1] === 0) {
                  num.length--;
                }
              }
              return num;
            };

            function P224() {
              MPrime.call(
                this,
                'p224',
                'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001'
              );
            }
            inherits(P224, MPrime);

            function P192() {
              MPrime.call(
                this,
                'p192',
                'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff'
              );
            }
            inherits(P192, MPrime);

            function P25519() {
              // 2 ^ 255 - 19
              MPrime.call(
                this,
                '25519',
                '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed'
              );
            }
            inherits(P25519, MPrime);

            P25519.prototype.imulK = function imulK(num) {
              // K = 0x13
              var carry = 0;
              for (var i = 0; i < num.length; i++) {
                var hi = (num.words[i] | 0) * 0x13 + carry;
                var lo = hi & 0x3ffffff;
                hi >>>= 26;

                num.words[i] = lo;
                carry = hi;
              }
              if (carry !== 0) {
                num.words[num.length++] = carry;
              }
              return num;
            };

            // Exported mostly for testing purposes, use plain name instead
            BN._prime = function prime(name) {
              // Cached version of prime
              if (primes[name]) return primes[name];

              var prime;
              if (name === 'k256') {
                prime = new K256();
              } else if (name === 'p224') {
                prime = new P224();
              } else if (name === 'p192') {
                prime = new P192();
              } else if (name === 'p25519') {
                prime = new P25519();
              } else {
                throw new Error('Unknown prime ' + name);
              }
              primes[name] = prime;

              return prime;
            };

            //
            // Base reduction engine
            //
            function Red(m) {
              if (typeof m === 'string') {
                var prime = BN._prime(m);
                this.m = prime.p;
                this.prime = prime;
              } else {
                assert(m.gtn(1), 'modulus must be greater than 1');
                this.m = m;
                this.prime = null;
              }
            }

            Red.prototype._verify1 = function _verify1(a) {
              assert(a.negative === 0, 'red works only with positives');
              assert(a.red, 'red works only with red numbers');
            };

            Red.prototype._verify2 = function _verify2(a, b) {
              assert(
                (a.negative | b.negative) === 0,
                'red works only with positives'
              );
              assert(
                a.red && a.red === b.red,
                'red works only with red numbers'
              );
            };

            Red.prototype.imod = function imod(a) {
              if (this.prime) return this.prime.ireduce(a)._forceRed(this);
              return a.umod(this.m)._forceRed(this);
            };

            Red.prototype.neg = function neg(a) {
              if (a.isZero()) {
                return a.clone();
              }

              return this.m.sub(a)._forceRed(this);
            };

            Red.prototype.add = function add(a, b) {
              this._verify2(a, b);

              var res = a.add(b);
              if (res.cmp(this.m) >= 0) {
                res.isub(this.m);
              }
              return res._forceRed(this);
            };

            Red.prototype.iadd = function iadd(a, b) {
              this._verify2(a, b);

              var res = a.iadd(b);
              if (res.cmp(this.m) >= 0) {
                res.isub(this.m);
              }
              return res;
            };

            Red.prototype.sub = function sub(a, b) {
              this._verify2(a, b);

              var res = a.sub(b);
              if (res.cmpn(0) < 0) {
                res.iadd(this.m);
              }
              return res._forceRed(this);
            };

            Red.prototype.isub = function isub(a, b) {
              this._verify2(a, b);

              var res = a.isub(b);
              if (res.cmpn(0) < 0) {
                res.iadd(this.m);
              }
              return res;
            };

            Red.prototype.shl = function shl(a, num) {
              this._verify1(a);
              return this.imod(a.ushln(num));
            };

            Red.prototype.imul = function imul(a, b) {
              this._verify2(a, b);
              return this.imod(a.imul(b));
            };

            Red.prototype.mul = function mul(a, b) {
              this._verify2(a, b);
              return this.imod(a.mul(b));
            };

            Red.prototype.isqr = function isqr(a) {
              return this.imul(a, a.clone());
            };

            Red.prototype.sqr = function sqr(a) {
              return this.mul(a, a);
            };

            Red.prototype.sqrt = function sqrt(a) {
              if (a.isZero()) return a.clone();

              var mod3 = this.m.andln(3);
              assert(mod3 % 2 === 1);

              // Fast case
              if (mod3 === 3) {
                var pow = this.m.add(new BN(1)).iushrn(2);
                return this.pow(a, pow);
              }

              // Tonelli-Shanks algorithm (Totally unoptimized and slow)
              //
              // Find Q and S, that Q * 2 ^ S = (P - 1)
              var q = this.m.subn(1);
              var s = 0;
              while (!q.isZero() && q.andln(1) === 0) {
                s++;
                q.iushrn(1);
              }
              assert(!q.isZero());

              var one = new BN(1).toRed(this);
              var nOne = one.redNeg();

              // Find quadratic non-residue
              // NOTE: Max is such because of generalized Riemann hypothesis.
              var lpow = this.m.subn(1).iushrn(1);
              var z = this.m.bitLength();
              z = new BN(2 * z * z).toRed(this);

              while (this.pow(z, lpow).cmp(nOne) !== 0) {
                z.redIAdd(nOne);
              }

              var c = this.pow(z, q);
              var r = this.pow(a, q.addn(1).iushrn(1));
              var t = this.pow(a, q);
              var m = s;
              while (t.cmp(one) !== 0) {
                var tmp = t;
                for (var i = 0; tmp.cmp(one) !== 0; i++) {
                  tmp = tmp.redSqr();
                }
                assert(i < m);
                var b = this.pow(c, new BN(1).iushln(m - i - 1));

                r = r.redMul(b);
                c = b.redSqr();
                t = t.redMul(c);
                m = i;
              }

              return r;
            };

            Red.prototype.invm = function invm(a) {
              var inv = a._invmp(this.m);
              if (inv.negative !== 0) {
                inv.negative = 0;
                return this.imod(inv).redNeg();
              } else {
                return this.imod(inv);
              }
            };

            Red.prototype.pow = function pow(a, num) {
              if (num.isZero()) return new BN(1).toRed(this);
              if (num.cmpn(1) === 0) return a.clone();

              var windowSize = 4;
              var wnd = new Array(1 << windowSize);
              wnd[0] = new BN(1).toRed(this);
              wnd[1] = a;
              for (var i = 2; i < wnd.length; i++) {
                wnd[i] = this.mul(wnd[i - 1], a);
              }

              var res = wnd[0];
              var current = 0;
              var currentLen = 0;
              var start = num.bitLength() % 26;
              if (start === 0) {
                start = 26;
              }

              for (i = num.length - 1; i >= 0; i--) {
                var word = num.words[i];
                for (var j = start - 1; j >= 0; j--) {
                  var bit = (word >> j) & 1;
                  if (res !== wnd[0]) {
                    res = this.sqr(res);
                  }

                  if (bit === 0 && current === 0) {
                    currentLen = 0;
                    continue;
                  }

                  current <<= 1;
                  current |= bit;
                  currentLen++;
                  if (currentLen !== windowSize && (i !== 0 || j !== 0))
                    continue;

                  res = this.mul(res, wnd[current]);
                  currentLen = 0;
                  current = 0;
                }
                start = 26;
              }

              return res;
            };

            Red.prototype.convertTo = function convertTo(num) {
              var r = num.umod(this.m);

              return r === num ? r.clone() : r;
            };

            Red.prototype.convertFrom = function convertFrom(num) {
              var res = num.clone();
              res.red = null;
              return res;
            };

            //
            // Montgomery method engine
            //

            BN.mont = function mont(num) {
              return new Mont(num);
            };

            function Mont(m) {
              Red.call(this, m);

              this.shift = this.m.bitLength();
              if (this.shift % 26 !== 0) {
                this.shift += 26 - (this.shift % 26);
              }

              this.r = new BN(1).iushln(this.shift);
              this.r2 = this.imod(this.r.sqr());
              this.rinv = this.r._invmp(this.m);

              this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
              this.minv = this.minv.umod(this.r);
              this.minv = this.r.sub(this.minv);
            }
            inherits(Mont, Red);

            Mont.prototype.convertTo = function convertTo(num) {
              return this.imod(num.ushln(this.shift));
            };

            Mont.prototype.convertFrom = function convertFrom(num) {
              var r = this.imod(num.mul(this.rinv));
              r.red = null;
              return r;
            };

            Mont.prototype.imul = function imul(a, b) {
              if (a.isZero() || b.isZero()) {
                a.words[0] = 0;
                a.length = 1;
                return a;
              }

              var t = a.imul(b);
              var c = t
                .maskn(this.shift)
                .mul(this.minv)
                .imaskn(this.shift)
                .mul(this.m);
              var u = t.isub(c).iushrn(this.shift);
              var res = u;

              if (u.cmp(this.m) >= 0) {
                res = u.isub(this.m);
              } else if (u.cmpn(0) < 0) {
                res = u.iadd(this.m);
              }

              return res._forceRed(this);
            };

            Mont.prototype.mul = function mul(a, b) {
              if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

              var t = a.mul(b);
              var c = t
                .maskn(this.shift)
                .mul(this.minv)
                .imaskn(this.shift)
                .mul(this.m);
              var u = t.isub(c).iushrn(this.shift);
              var res = u;
              if (u.cmp(this.m) >= 0) {
                res = u.isub(this.m);
              } else if (u.cmpn(0) < 0) {
                res = u.iadd(this.m);
              }

              return res._forceRed(this);
            };

            Mont.prototype.invm = function invm(a) {
              // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
              var res = this.imod(a._invmp(this.m).mul(this.r2));
              return res._forceRed(this);
            };
          })(false || module, this);

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/module.js */ '../node_modules/webpack/buildin/module.js'
          )(module)
        ));

        /***/
      },

    /***/ '../node_modules/browserify-sign/algos.js':
      /*!************************************************!*\
  !*** ../node_modules/browserify-sign/algos.js ***!
  \************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! ./browser/algorithms.json */ '../node_modules/browserify-sign/browser/algorithms.json'
        );

        /***/
      },

    /***/ '../node_modules/browserify-sign/browser/algorithms.json':
      /*!***************************************************************!*\
  !*** ../node_modules/browserify-sign/browser/algorithms.json ***!
  \***************************************************************/
      /*! exports provided: sha224WithRSAEncryption, RSA-SHA224, sha256WithRSAEncryption, RSA-SHA256, sha384WithRSAEncryption, RSA-SHA384, sha512WithRSAEncryption, RSA-SHA512, RSA-SHA1, ecdsa-with-SHA1, sha256, sha224, sha384, sha512, DSA-SHA, DSA-SHA1, DSA, DSA-WITH-SHA224, DSA-SHA224, DSA-WITH-SHA256, DSA-SHA256, DSA-WITH-SHA384, DSA-SHA384, DSA-WITH-SHA512, DSA-SHA512, DSA-RIPEMD160, ripemd160WithRSA, RSA-RIPEMD160, md5WithRSAEncryption, RSA-MD5, default */
      /***/ function (module) {
        module.exports = JSON.parse(
          '{"sha224WithRSAEncryption":{"sign":"rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"RSA-SHA224":{"sign":"ecdsa/rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"sha256WithRSAEncryption":{"sign":"rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"RSA-SHA256":{"sign":"ecdsa/rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"sha384WithRSAEncryption":{"sign":"rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"RSA-SHA384":{"sign":"ecdsa/rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"sha512WithRSAEncryption":{"sign":"rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA512":{"sign":"ecdsa/rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA1":{"sign":"rsa","hash":"sha1","id":"3021300906052b0e03021a05000414"},"ecdsa-with-SHA1":{"sign":"ecdsa","hash":"sha1","id":""},"sha256":{"sign":"ecdsa","hash":"sha256","id":""},"sha224":{"sign":"ecdsa","hash":"sha224","id":""},"sha384":{"sign":"ecdsa","hash":"sha384","id":""},"sha512":{"sign":"ecdsa","hash":"sha512","id":""},"DSA-SHA":{"sign":"dsa","hash":"sha1","id":""},"DSA-SHA1":{"sign":"dsa","hash":"sha1","id":""},"DSA":{"sign":"dsa","hash":"sha1","id":""},"DSA-WITH-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-WITH-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-WITH-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-WITH-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-RIPEMD160":{"sign":"dsa","hash":"rmd160","id":""},"ripemd160WithRSA":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"RSA-RIPEMD160":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"md5WithRSAEncryption":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"},"RSA-MD5":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"}}'
        );

        /***/
      },

    /***/ '../node_modules/browserify-sign/browser/curves.json':
      /*!***********************************************************!*\
  !*** ../node_modules/browserify-sign/browser/curves.json ***!
  \***********************************************************/
      /*! exports provided: 1.3.132.0.10, 1.3.132.0.33, 1.2.840.10045.3.1.1, 1.2.840.10045.3.1.7, 1.3.132.0.34, 1.3.132.0.35, default */
      /***/ function (module) {
        module.exports = JSON.parse(
          '{"1.3.132.0.10":"secp256k1","1.3.132.0.33":"p224","1.2.840.10045.3.1.1":"p192","1.2.840.10045.3.1.7":"p256","1.3.132.0.34":"p384","1.3.132.0.35":"p521"}'
        );

        /***/
      },

    /***/ '../node_modules/browserify-sign/browser/index.js':
      /*!********************************************************!*\
  !*** ../node_modules/browserify-sign/browser/index.js ***!
  \********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/browserify-sign/node_modules/safe-buffer/index.js'
        ).Buffer;
        var createHash = __webpack_require__(
          /*! create-hash */ '../node_modules/create-hash/browser.js'
        );
        var stream = __webpack_require__(
          /*! readable-stream */ '../node_modules/browserify-sign/node_modules/readable-stream/readable-browser.js'
        );
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );
        var sign = __webpack_require__(
          /*! ./sign */ '../node_modules/browserify-sign/browser/sign.js'
        );
        var verify = __webpack_require__(
          /*! ./verify */ '../node_modules/browserify-sign/browser/verify.js'
        );

        var algorithms = __webpack_require__(
          /*! ./algorithms.json */ '../node_modules/browserify-sign/browser/algorithms.json'
        );
        Object.keys(algorithms).forEach(function (key) {
          algorithms[key].id = Buffer.from(algorithms[key].id, 'hex');
          algorithms[key.toLowerCase()] = algorithms[key];
        });

        function Sign(algorithm) {
          stream.Writable.call(this);

          var data = algorithms[algorithm];
          if (!data) throw new Error('Unknown message digest');

          this._hashType = data.hash;
          this._hash = createHash(data.hash);
          this._tag = data.id;
          this._signType = data.sign;
        }
        inherits(Sign, stream.Writable);

        Sign.prototype._write = function _write(data, _, done) {
          this._hash.update(data);
          done();
        };

        Sign.prototype.update = function update(data, enc) {
          if (typeof data === 'string') data = Buffer.from(data, enc);

          this._hash.update(data);
          return this;
        };

        Sign.prototype.sign = function signMethod(key, enc) {
          this.end();
          var hash = this._hash.digest();
          var sig = sign(hash, key, this._hashType, this._signType, this._tag);

          return enc ? sig.toString(enc) : sig;
        };

        function Verify(algorithm) {
          stream.Writable.call(this);

          var data = algorithms[algorithm];
          if (!data) throw new Error('Unknown message digest');

          this._hash = createHash(data.hash);
          this._tag = data.id;
          this._signType = data.sign;
        }
        inherits(Verify, stream.Writable);

        Verify.prototype._write = function _write(data, _, done) {
          this._hash.update(data);
          done();
        };

        Verify.prototype.update = function update(data, enc) {
          if (typeof data === 'string') data = Buffer.from(data, enc);

          this._hash.update(data);
          return this;
        };

        Verify.prototype.verify = function verifyMethod(key, sig, enc) {
          if (typeof sig === 'string') sig = Buffer.from(sig, enc);

          this.end();
          var hash = this._hash.digest();
          return verify(sig, hash, key, this._signType, this._tag);
        };

        function createSign(algorithm) {
          return new Sign(algorithm);
        }

        function createVerify(algorithm) {
          return new Verify(algorithm);
        }

        module.exports = {
          Sign: createSign,
          Verify: createVerify,
          createSign: createSign,
          createVerify: createVerify,
        };

        /***/
      },

    /***/ '../node_modules/browserify-sign/browser/sign.js':
      /*!*******************************************************!*\
  !*** ../node_modules/browserify-sign/browser/sign.js ***!
  \*******************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        // much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/browserify-sign/node_modules/safe-buffer/index.js'
        ).Buffer;
        var createHmac = __webpack_require__(
          /*! create-hmac */ '../node_modules/create-hmac/browser.js'
        );
        var crt = __webpack_require__(
          /*! browserify-rsa */ '../node_modules/browserify-rsa/index.js'
        );
        var EC = __webpack_require__(
          /*! elliptic */ '../node_modules/elliptic/lib/elliptic.js'
        ).ec;
        var BN = __webpack_require__(
          /*! bn.js */ '../node_modules/bn.js/lib/bn.js'
        );
        var parseKeys = __webpack_require__(
          /*! parse-asn1 */ '../node_modules/parse-asn1/index.js'
        );
        var curves = __webpack_require__(
          /*! ./curves.json */ '../node_modules/browserify-sign/browser/curves.json'
        );

        function sign(hash, key, hashType, signType, tag) {
          var priv = parseKeys(key);
          if (priv.curve) {
            // rsa keys can be interpreted as ecdsa ones in openssl
            if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa')
              throw new Error('wrong private key type');
            return ecSign(hash, priv);
          } else if (priv.type === 'dsa') {
            if (signType !== 'dsa') throw new Error('wrong private key type');
            return dsaSign(hash, priv, hashType);
          } else {
            if (signType !== 'rsa' && signType !== 'ecdsa/rsa')
              throw new Error('wrong private key type');
          }
          hash = Buffer.concat([tag, hash]);
          var len = priv.modulus.byteLength();
          var pad = [0, 1];
          while (hash.length + pad.length + 1 < len) pad.push(0xff);
          pad.push(0x00);
          var i = -1;
          while (++i < hash.length) pad.push(hash[i]);

          var out = crt(pad, priv);
          return out;
        }

        function ecSign(hash, priv) {
          var curveId = curves[priv.curve.join('.')];
          if (!curveId)
            throw new Error('unknown curve ' + priv.curve.join('.'));

          var curve = new EC(curveId);
          var key = curve.keyFromPrivate(priv.privateKey);
          var out = key.sign(hash);

          return Buffer.from(out.toDER());
        }

        function dsaSign(hash, priv, algo) {
          var x = priv.params.priv_key;
          var p = priv.params.p;
          var q = priv.params.q;
          var g = priv.params.g;
          var r = new BN(0);
          var k;
          var H = bits2int(hash, q).mod(q);
          var s = false;
          var kv = getKey(x, q, hash, algo);
          while (s === false) {
            k = makeKey(q, kv, algo);
            r = makeR(g, k, p, q);
            s = k
              .invm(q)
              .imul(H.add(x.mul(r)))
              .mod(q);
            if (s.cmpn(0) === 0) {
              s = false;
              r = new BN(0);
            }
          }
          return toDER(r, s);
        }

        function toDER(r, s) {
          r = r.toArray();
          s = s.toArray();

          // Pad values
          if (r[0] & 0x80) r = [0].concat(r);
          if (s[0] & 0x80) s = [0].concat(s);

          var total = r.length + s.length + 4;
          var res = [0x30, total, 0x02, r.length];
          res = res.concat(r, [0x02, s.length], s);
          return Buffer.from(res);
        }

        function getKey(x, q, hash, algo) {
          x = Buffer.from(x.toArray());
          if (x.length < q.byteLength()) {
            var zeros = Buffer.alloc(q.byteLength() - x.length);
            x = Buffer.concat([zeros, x]);
          }
          var hlen = hash.length;
          var hbits = bits2octets(hash, q);
          var v = Buffer.alloc(hlen);
          v.fill(1);
          var k = Buffer.alloc(hlen);
          k = createHmac(algo, k)
            .update(v)
            .update(Buffer.from([0]))
            .update(x)
            .update(hbits)
            .digest();
          v = createHmac(algo, k).update(v).digest();
          k = createHmac(algo, k)
            .update(v)
            .update(Buffer.from([1]))
            .update(x)
            .update(hbits)
            .digest();
          v = createHmac(algo, k).update(v).digest();
          return { k: k, v: v };
        }

        function bits2int(obits, q) {
          var bits = new BN(obits);
          var shift = (obits.length << 3) - q.bitLength();
          if (shift > 0) bits.ishrn(shift);
          return bits;
        }

        function bits2octets(bits, q) {
          bits = bits2int(bits, q);
          bits = bits.mod(q);
          var out = Buffer.from(bits.toArray());
          if (out.length < q.byteLength()) {
            var zeros = Buffer.alloc(q.byteLength() - out.length);
            out = Buffer.concat([zeros, out]);
          }
          return out;
        }

        function makeKey(q, kv, algo) {
          var t;
          var k;

          do {
            t = Buffer.alloc(0);

            while (t.length * 8 < q.bitLength()) {
              kv.v = createHmac(algo, kv.k).update(kv.v).digest();
              t = Buffer.concat([t, kv.v]);
            }

            k = bits2int(t, q);
            kv.k = createHmac(algo, kv.k)
              .update(kv.v)
              .update(Buffer.from([0]))
              .digest();
            kv.v = createHmac(algo, kv.k).update(kv.v).digest();
          } while (k.cmp(q) !== -1);

          return k;
        }

        function makeR(g, k, p, q) {
          return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q);
        }

        module.exports = sign;
        module.exports.getKey = getKey;
        module.exports.makeKey = makeKey;

        /***/
      },

    /***/ '../node_modules/browserify-sign/browser/verify.js':
      /*!*********************************************************!*\
  !*** ../node_modules/browserify-sign/browser/verify.js ***!
  \*********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        // much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/browserify-sign/node_modules/safe-buffer/index.js'
        ).Buffer;
        var BN = __webpack_require__(
          /*! bn.js */ '../node_modules/bn.js/lib/bn.js'
        );
        var EC = __webpack_require__(
          /*! elliptic */ '../node_modules/elliptic/lib/elliptic.js'
        ).ec;
        var parseKeys = __webpack_require__(
          /*! parse-asn1 */ '../node_modules/parse-asn1/index.js'
        );
        var curves = __webpack_require__(
          /*! ./curves.json */ '../node_modules/browserify-sign/browser/curves.json'
        );

        function verify(sig, hash, key, signType, tag) {
          var pub = parseKeys(key);
          if (pub.type === 'ec') {
            // rsa keys can be interpreted as ecdsa ones in openssl
            if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa')
              throw new Error('wrong public key type');
            return ecVerify(sig, hash, pub);
          } else if (pub.type === 'dsa') {
            if (signType !== 'dsa') throw new Error('wrong public key type');
            return dsaVerify(sig, hash, pub);
          } else {
            if (signType !== 'rsa' && signType !== 'ecdsa/rsa')
              throw new Error('wrong public key type');
          }
          hash = Buffer.concat([tag, hash]);
          var len = pub.modulus.byteLength();
          var pad = [1];
          var padNum = 0;
          while (hash.length + pad.length + 2 < len) {
            pad.push(0xff);
            padNum++;
          }
          pad.push(0x00);
          var i = -1;
          while (++i < hash.length) {
            pad.push(hash[i]);
          }
          pad = Buffer.from(pad);
          var red = BN.mont(pub.modulus);
          sig = new BN(sig).toRed(red);

          sig = sig.redPow(new BN(pub.publicExponent));
          sig = Buffer.from(sig.fromRed().toArray());
          var out = padNum < 8 ? 1 : 0;
          len = Math.min(sig.length, pad.length);
          if (sig.length !== pad.length) out = 1;

          i = -1;
          while (++i < len) out |= sig[i] ^ pad[i];
          return out === 0;
        }

        function ecVerify(sig, hash, pub) {
          var curveId = curves[pub.data.algorithm.curve.join('.')];
          if (!curveId)
            throw new Error(
              'unknown curve ' + pub.data.algorithm.curve.join('.')
            );

          var curve = new EC(curveId);
          var pubkey = pub.data.subjectPrivateKey.data;

          return curve.verify(hash, sig, pubkey);
        }

        function dsaVerify(sig, hash, pub) {
          var p = pub.data.p;
          var q = pub.data.q;
          var g = pub.data.g;
          var y = pub.data.pub_key;
          var unpacked = parseKeys.signature.decode(sig, 'der');
          var s = unpacked.s;
          var r = unpacked.r;
          checkValue(s, q);
          checkValue(r, q);
          var montp = BN.mont(p);
          var w = s.invm(q);
          var v = g
            .toRed(montp)
            .redPow(new BN(hash).mul(w).mod(q))
            .fromRed()
            .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())
            .mod(p)
            .mod(q);
          return v.cmp(r) === 0;
        }

        function checkValue(b, q) {
          if (b.cmpn(0) <= 0) throw new Error('invalid sig');
          if (b.cmp(q) >= q) throw new Error('invalid sig');
        }

        module.exports = verify;

        /***/
      },

    /***/ '../node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js':
      /*!**************************************************************************************!*\
  !*** ../node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js ***!
  \**************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        function _inheritsLoose(subClass, superClass) {
          subClass.prototype = Object.create(superClass.prototype);
          subClass.prototype.constructor = subClass;
          subClass.__proto__ = superClass;
        }

        var codes = {};

        function createErrorType(code, message, Base) {
          if (!Base) {
            Base = Error;
          }

          function getMessage(arg1, arg2, arg3) {
            if (typeof message === 'string') {
              return message;
            } else {
              return message(arg1, arg2, arg3);
            }
          }

          var NodeError =
            /*#__PURE__*/
            (function (_Base) {
              _inheritsLoose(NodeError, _Base);

              function NodeError(arg1, arg2, arg3) {
                return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;
              }

              return NodeError;
            })(Base);

          NodeError.prototype.name = Base.name;
          NodeError.prototype.code = code;
          codes[code] = NodeError;
        } // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js

        function oneOf(expected, thing) {
          if (Array.isArray(expected)) {
            var len = expected.length;
            expected = expected.map(function (i) {
              return String(i);
            });

            if (len > 2) {
              return (
                'one of '
                  .concat(thing, ' ')
                  .concat(expected.slice(0, len - 1).join(', '), ', or ') +
                expected[len - 1]
              );
            } else if (len === 2) {
              return 'one of '
                .concat(thing, ' ')
                .concat(expected[0], ' or ')
                .concat(expected[1]);
            } else {
              return 'of '.concat(thing, ' ').concat(expected[0]);
            }
          } else {
            return 'of '.concat(thing, ' ').concat(String(expected));
          }
        } // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith

        function startsWith(str, search, pos) {
          return (
            str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search
          );
        } // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith

        function endsWith(str, search, this_len) {
          if (this_len === undefined || this_len > str.length) {
            this_len = str.length;
          }

          return str.substring(this_len - search.length, this_len) === search;
        } // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes

        function includes(str, search, start) {
          if (typeof start !== 'number') {
            start = 0;
          }

          if (start + search.length > str.length) {
            return false;
          } else {
            return str.indexOf(search, start) !== -1;
          }
        }

        createErrorType(
          'ERR_INVALID_OPT_VALUE',
          function (name, value) {
            return (
              'The value "' + value + '" is invalid for option "' + name + '"'
            );
          },
          TypeError
        );
        createErrorType(
          'ERR_INVALID_ARG_TYPE',
          function (name, expected, actual) {
            // determiner: 'must be' or 'must not be'
            var determiner;

            if (typeof expected === 'string' && startsWith(expected, 'not ')) {
              determiner = 'must not be';
              expected = expected.replace(/^not /, '');
            } else {
              determiner = 'must be';
            }

            var msg;

            if (endsWith(name, ' argument')) {
              // For cases like 'first argument'
              msg = 'The '
                .concat(name, ' ')
                .concat(determiner, ' ')
                .concat(oneOf(expected, 'type'));
            } else {
              var type = includes(name, '.') ? 'property' : 'argument';
              msg = 'The "'
                .concat(name, '" ')
                .concat(type, ' ')
                .concat(determiner, ' ')
                .concat(oneOf(expected, 'type'));
            }

            msg += '. Received type '.concat(typeof actual);
            return msg;
          },
          TypeError
        );
        createErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');
        createErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {
          return 'The ' + name + ' method is not implemented';
        });
        createErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');
        createErrorType('ERR_STREAM_DESTROYED', function (name) {
          return 'Cannot call ' + name + ' after a stream was destroyed';
        });
        createErrorType(
          'ERR_MULTIPLE_CALLBACK',
          'Callback called multiple times'
        );
        createErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');
        createErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');
        createErrorType(
          'ERR_STREAM_NULL_VALUES',
          'May not write null values to stream',
          TypeError
        );
        createErrorType(
          'ERR_UNKNOWN_ENCODING',
          function (arg) {
            return 'Unknown encoding: ' + arg;
          },
          TypeError
        );
        createErrorType(
          'ERR_STREAM_UNSHIFT_AFTER_END_EVENT',
          'stream.unshift() after end event'
        );
        module.exports.codes = codes;

        /***/
      },

    /***/ '../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js':
      /*!******************************************************************************************!*\
  !*** ../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js ***!
  \******************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (process) {
          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.
          // a duplex stream is just a stream that is both readable and writable.
          // Since JS doesn't have multiple prototypal inheritance, this class
          // prototypally inherits from Readable, and then parasitically from
          // Writable.

          /*<replacement>*/

          var objectKeys =
            Object.keys ||
            function (obj) {
              var keys = [];

              for (var key in obj) {
                keys.push(key);
              }

              return keys;
            };
          /*</replacement>*/

          module.exports = Duplex;

          var Readable = __webpack_require__(
            /*! ./_stream_readable */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js'
          );

          var Writable = __webpack_require__(
            /*! ./_stream_writable */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js'
          );

          __webpack_require__(
            /*! inherits */ '../node_modules/inherits/inherits_browser.js'
          )(Duplex, Readable);

          {
            // Allow the keys array to be GC'ed.
            var keys = objectKeys(Writable.prototype);

            for (var v = 0; v < keys.length; v++) {
              var method = keys[v];
              if (!Duplex.prototype[method])
                Duplex.prototype[method] = Writable.prototype[method];
            }
          }

          function Duplex(options) {
            if (!(this instanceof Duplex)) return new Duplex(options);
            Readable.call(this, options);
            Writable.call(this, options);
            this.allowHalfOpen = true;

            if (options) {
              if (options.readable === false) this.readable = false;
              if (options.writable === false) this.writable = false;

              if (options.allowHalfOpen === false) {
                this.allowHalfOpen = false;
                this.once('end', onend);
              }
            }
          }

          Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              return this._writableState.highWaterMark;
            },
          });
          Object.defineProperty(Duplex.prototype, 'writableBuffer', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              return this._writableState && this._writableState.getBuffer();
            },
          });
          Object.defineProperty(Duplex.prototype, 'writableLength', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              return this._writableState.length;
            },
          }); // the no-half-open enforcer

          function onend() {
            // If the writable side ended, then we're ok.
            if (this._writableState.ended) return; // no more data can be written.
            // But allow more writes to happen in this tick.

            process.nextTick(onEndNT, this);
          }

          function onEndNT(self) {
            self.end();
          }

          Object.defineProperty(Duplex.prototype, 'destroyed', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              if (
                this._readableState === undefined ||
                this._writableState === undefined
              ) {
                return false;
              }

              return (
                this._readableState.destroyed && this._writableState.destroyed
              );
            },
            set: function set(value) {
              // we ignore the value if the stream
              // has not been initialized yet
              if (
                this._readableState === undefined ||
                this._writableState === undefined
              ) {
                return;
              } // backward compatibility, the user is explicitly
              // managing destroyed

              this._readableState.destroyed = value;
              this._writableState.destroyed = value;
            },
          });
          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../process/browser.js */ '../node_modules/process/browser.js'
          )
        ));

        /***/
      },

    /***/ '../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_passthrough.js':
      /*!***********************************************************************************************!*\
  !*** ../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_passthrough.js ***!
  \***********************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.
        // a passthrough stream.
        // basically just the most minimal sort of Transform stream.
        // Every written chunk gets output as-is.

        module.exports = PassThrough;

        var Transform = __webpack_require__(
          /*! ./_stream_transform */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js'
        );

        __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        )(PassThrough, Transform);

        function PassThrough(options) {
          if (!(this instanceof PassThrough)) return new PassThrough(options);
          Transform.call(this, options);
        }

        PassThrough.prototype._transform = function (chunk, encoding, cb) {
          cb(null, chunk);
        };

        /***/
      },

    /***/ '../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js':
      /*!********************************************************************************************!*\
  !*** ../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js ***!
  \********************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (global, process) {
          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.

          module.exports = Readable;
          /*<replacement>*/

          var Duplex;
          /*</replacement>*/

          Readable.ReadableState = ReadableState;
          /*<replacement>*/

          var EE = __webpack_require__(
            /*! events */ '../node_modules/events/events.js'
          ).EventEmitter;

          var EElistenerCount = function EElistenerCount(emitter, type) {
            return emitter.listeners(type).length;
          };
          /*</replacement>*/

          /*<replacement>*/

          var Stream = __webpack_require__(
            /*! ./internal/streams/stream */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js'
          );
          /*</replacement>*/

          var Buffer = __webpack_require__(
            /*! buffer */ '../node_modules/buffer/index.js'
          ).Buffer;

          var OurUint8Array = global.Uint8Array || function () {};

          function _uint8ArrayToBuffer(chunk) {
            return Buffer.from(chunk);
          }

          function _isUint8Array(obj) {
            return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
          }
          /*<replacement>*/

          var debugUtil = __webpack_require__(/*! util */ 8);

          var debug;

          if (debugUtil && debugUtil.debuglog) {
            debug = debugUtil.debuglog('stream');
          } else {
            debug = function debug() {};
          }
          /*</replacement>*/

          var BufferList = __webpack_require__(
            /*! ./internal/streams/buffer_list */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/buffer_list.js'
          );

          var destroyImpl = __webpack_require__(
            /*! ./internal/streams/destroy */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js'
          );

          var _require = __webpack_require__(
              /*! ./internal/streams/state */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/state.js'
            ),
            getHighWaterMark = _require.getHighWaterMark;

          var _require$codes = __webpack_require__(
              /*! ../errors */ '../node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js'
            ).codes,
            ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
            ERR_STREAM_PUSH_AFTER_EOF =
              _require$codes.ERR_STREAM_PUSH_AFTER_EOF,
            ERR_METHOD_NOT_IMPLEMENTED =
              _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
            ERR_STREAM_UNSHIFT_AFTER_END_EVENT =
              _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.

          var StringDecoder;
          var createReadableStreamAsyncIterator;
          var from;

          __webpack_require__(
            /*! inherits */ '../node_modules/inherits/inherits_browser.js'
          )(Readable, Stream);

          var errorOrDestroy = destroyImpl.errorOrDestroy;
          var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

          function prependListener(emitter, event, fn) {
            // Sadly this is not cacheable as some libraries bundle their own
            // event emitter implementation with them.
            if (typeof emitter.prependListener === 'function')
              return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any
            // userland ones.  NEVER DO THIS. This is here only because this code needs
            // to continue to work with older versions of Node.js that do not include
            // the prependListener() method. The goal is to eventually remove this hack.

            if (!emitter._events || !emitter._events[event])
              emitter.on(event, fn);
            else if (Array.isArray(emitter._events[event]))
              emitter._events[event].unshift(fn);
            else emitter._events[event] = [fn, emitter._events[event]];
          }

          function ReadableState(options, stream, isDuplex) {
            Duplex =
              Duplex ||
              __webpack_require__(
                /*! ./_stream_duplex */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js'
              );
            options = options || {}; // Duplex streams are both readable and writable, but share
            // the same options object.
            // However, some cases require setting options to different
            // values for the readable and the writable sides of the duplex stream.
            // These options can be provided separately as readableXXX and writableXXX.

            if (typeof isDuplex !== 'boolean')
              isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to
            // make all the buffer merging and length checks go away

            this.objectMode = !!options.objectMode;
            if (isDuplex)
              this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer
            // Note: 0 is a valid value, means "don't call _read preemptively ever"

            this.highWaterMark = getHighWaterMark(
              this,
              options,
              'readableHighWaterMark',
              isDuplex
            ); // A linked list is used to store data chunks instead of an array because the
            // linked list can remove elements from the beginning faster than
            // array.shift()

            this.buffer = new BufferList();
            this.length = 0;
            this.pipes = null;
            this.pipesCount = 0;
            this.flowing = null;
            this.ended = false;
            this.endEmitted = false;
            this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted
            // immediately, or on a later tick.  We set this to true at first, because
            // any actions that shouldn't happen until "later" should generally also
            // not happen before the first read call.

            this.sync = true; // whenever we return null, then we set a flag to say
            // that we're awaiting a 'readable' event emission.

            this.needReadable = false;
            this.emittedReadable = false;
            this.readableListening = false;
            this.resumeScheduled = false;
            this.paused = true; // Should close be emitted on destroy. Defaults to true.

            this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')

            this.autoDestroy = !!options.autoDestroy; // has it been destroyed

            this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string
            // encoding is 'binary' so we have to make this configurable.
            // Everything else in the universe uses 'utf8', though.

            this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s

            this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled

            this.readingMore = false;
            this.decoder = null;
            this.encoding = null;

            if (options.encoding) {
              if (!StringDecoder)
                StringDecoder = __webpack_require__(
                  /*! string_decoder/ */ '../node_modules/string_decoder/lib/string_decoder.js'
                ).StringDecoder;
              this.decoder = new StringDecoder(options.encoding);
              this.encoding = options.encoding;
            }
          }

          function Readable(options) {
            Duplex =
              Duplex ||
              __webpack_require__(
                /*! ./_stream_duplex */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js'
              );
            if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside
            // the ReadableState constructor, at least with V8 6.5

            var isDuplex = this instanceof Duplex;
            this._readableState = new ReadableState(options, this, isDuplex); // legacy

            this.readable = true;

            if (options) {
              if (typeof options.read === 'function') this._read = options.read;
              if (typeof options.destroy === 'function')
                this._destroy = options.destroy;
            }

            Stream.call(this);
          }

          Object.defineProperty(Readable.prototype, 'destroyed', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              if (this._readableState === undefined) {
                return false;
              }

              return this._readableState.destroyed;
            },
            set: function set(value) {
              // we ignore the value if the stream
              // has not been initialized yet
              if (!this._readableState) {
                return;
              } // backward compatibility, the user is explicitly
              // managing destroyed

              this._readableState.destroyed = value;
            },
          });
          Readable.prototype.destroy = destroyImpl.destroy;
          Readable.prototype._undestroy = destroyImpl.undestroy;

          Readable.prototype._destroy = function (err, cb) {
            cb(err);
          }; // Manually shove something into the read() buffer.
          // This returns true if the highWaterMark has not been hit yet,
          // similar to how Writable.write() returns true if you should
          // write() some more.

          Readable.prototype.push = function (chunk, encoding) {
            var state = this._readableState;
            var skipChunkCheck;

            if (!state.objectMode) {
              if (typeof chunk === 'string') {
                encoding = encoding || state.defaultEncoding;

                if (encoding !== state.encoding) {
                  chunk = Buffer.from(chunk, encoding);
                  encoding = '';
                }

                skipChunkCheck = true;
              }
            } else {
              skipChunkCheck = true;
            }

            return readableAddChunk(
              this,
              chunk,
              encoding,
              false,
              skipChunkCheck
            );
          }; // Unshift should *always* be something directly out of read()

          Readable.prototype.unshift = function (chunk) {
            return readableAddChunk(this, chunk, null, true, false);
          };

          function readableAddChunk(
            stream,
            chunk,
            encoding,
            addToFront,
            skipChunkCheck
          ) {
            debug('readableAddChunk', chunk);
            var state = stream._readableState;

            if (chunk === null) {
              state.reading = false;
              onEofChunk(stream, state);
            } else {
              var er;
              if (!skipChunkCheck) er = chunkInvalid(state, chunk);

              if (er) {
                errorOrDestroy(stream, er);
              } else if (state.objectMode || (chunk && chunk.length > 0)) {
                if (
                  typeof chunk !== 'string' &&
                  !state.objectMode &&
                  Object.getPrototypeOf(chunk) !== Buffer.prototype
                ) {
                  chunk = _uint8ArrayToBuffer(chunk);
                }

                if (addToFront) {
                  if (state.endEmitted)
                    errorOrDestroy(
                      stream,
                      new ERR_STREAM_UNSHIFT_AFTER_END_EVENT()
                    );
                  else addChunk(stream, state, chunk, true);
                } else if (state.ended) {
                  errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
                } else if (state.destroyed) {
                  return false;
                } else {
                  state.reading = false;

                  if (state.decoder && !encoding) {
                    chunk = state.decoder.write(chunk);
                    if (state.objectMode || chunk.length !== 0)
                      addChunk(stream, state, chunk, false);
                    else maybeReadMore(stream, state);
                  } else {
                    addChunk(stream, state, chunk, false);
                  }
                }
              } else if (!addToFront) {
                state.reading = false;
                maybeReadMore(stream, state);
              }
            } // We can push more data if we are below the highWaterMark.
            // Also, if we have no data yet, we can stand some more bytes.
            // This is to work around cases where hwm=0, such as the repl.

            return (
              !state.ended &&
              (state.length < state.highWaterMark || state.length === 0)
            );
          }

          function addChunk(stream, state, chunk, addToFront) {
            if (state.flowing && state.length === 0 && !state.sync) {
              state.awaitDrain = 0;
              stream.emit('data', chunk);
            } else {
              // update the buffer info.
              state.length += state.objectMode ? 1 : chunk.length;
              if (addToFront) state.buffer.unshift(chunk);
              else state.buffer.push(chunk);
              if (state.needReadable) emitReadable(stream);
            }

            maybeReadMore(stream, state);
          }

          function chunkInvalid(state, chunk) {
            var er;

            if (
              !_isUint8Array(chunk) &&
              typeof chunk !== 'string' &&
              chunk !== undefined &&
              !state.objectMode
            ) {
              er = new ERR_INVALID_ARG_TYPE(
                'chunk',
                ['string', 'Buffer', 'Uint8Array'],
                chunk
              );
            }

            return er;
          }

          Readable.prototype.isPaused = function () {
            return this._readableState.flowing === false;
          }; // backwards compatibility.

          Readable.prototype.setEncoding = function (enc) {
            if (!StringDecoder)
              StringDecoder = __webpack_require__(
                /*! string_decoder/ */ '../node_modules/string_decoder/lib/string_decoder.js'
              ).StringDecoder;
            var decoder = new StringDecoder(enc);
            this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8

            this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:

            var p = this._readableState.buffer.head;
            var content = '';

            while (p !== null) {
              content += decoder.write(p.data);
              p = p.next;
            }

            this._readableState.buffer.clear();

            if (content !== '') this._readableState.buffer.push(content);
            this._readableState.length = content.length;
            return this;
          }; // Don't raise the hwm > 1GB

          var MAX_HWM = 0x40000000;

          function computeNewHighWaterMark(n) {
            if (n >= MAX_HWM) {
              // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.
              n = MAX_HWM;
            } else {
              // Get the next highest power of 2 to prevent increasing hwm excessively in
              // tiny amounts
              n--;
              n |= n >>> 1;
              n |= n >>> 2;
              n |= n >>> 4;
              n |= n >>> 8;
              n |= n >>> 16;
              n++;
            }

            return n;
          } // This function is designed to be inlinable, so please take care when making
          // changes to the function body.

          function howMuchToRead(n, state) {
            if (n <= 0 || (state.length === 0 && state.ended)) return 0;
            if (state.objectMode) return 1;

            if (n !== n) {
              // Only flow one buffer at a time
              if (state.flowing && state.length)
                return state.buffer.head.data.length;
              else return state.length;
            } // If we're asking for more than the current hwm, then raise the hwm.

            if (n > state.highWaterMark)
              state.highWaterMark = computeNewHighWaterMark(n);
            if (n <= state.length) return n; // Don't have enough

            if (!state.ended) {
              state.needReadable = true;
              return 0;
            }

            return state.length;
          } // you can override either this method, or the async _read(n) below.

          Readable.prototype.read = function (n) {
            debug('read', n);
            n = parseInt(n, 10);
            var state = this._readableState;
            var nOrig = n;
            if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we
            // already have a bunch of data in the buffer, then just trigger
            // the 'readable' event and move on.

            if (
              n === 0 &&
              state.needReadable &&
              ((state.highWaterMark !== 0
                ? state.length >= state.highWaterMark
                : state.length > 0) ||
                state.ended)
            ) {
              debug('read: emitReadable', state.length, state.ended);
              if (state.length === 0 && state.ended) endReadable(this);
              else emitReadable(this);
              return null;
            }

            n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.

            if (n === 0 && state.ended) {
              if (state.length === 0) endReadable(this);
              return null;
            } // All the actual chunk generation logic needs to be
            // *below* the call to _read.  The reason is that in certain
            // synthetic stream cases, such as passthrough streams, _read
            // may be a completely synchronous operation which may change
            // the state of the read buffer, providing enough data when
            // before there was *not* enough.
            //
            // So, the steps are:
            // 1. Figure out what the state of things will be after we do
            // a read from the buffer.
            //
            // 2. If that resulting state will trigger a _read, then call _read.
            // Note that this may be asynchronous, or synchronous.  Yes, it is
            // deeply ugly to write APIs this way, but that still doesn't mean
            // that the Readable class should behave improperly, as streams are
            // designed to be sync/async agnostic.
            // Take note if the _read call is sync or async (ie, if the read call
            // has returned yet), so that we know whether or not it's safe to emit
            // 'readable' etc.
            //
            // 3. Actually pull the requested chunks out of the buffer and return.
            // if we need a readable event, then we need to do some reading.

            var doRead = state.needReadable;
            debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some

            if (state.length === 0 || state.length - n < state.highWaterMark) {
              doRead = true;
              debug('length less than watermark', doRead);
            } // however, if we've ended, then there's no point, and if we're already
            // reading, then it's unnecessary.

            if (state.ended || state.reading) {
              doRead = false;
              debug('reading or ended', doRead);
            } else if (doRead) {
              debug('do read');
              state.reading = true;
              state.sync = true; // if the length is currently zero, then we *need* a readable event.

              if (state.length === 0) state.needReadable = true; // call internal read method

              this._read(state.highWaterMark);

              state.sync = false; // If _read pushed data synchronously, then `reading` will be false,
              // and we need to re-evaluate how much data we can return to the user.

              if (!state.reading) n = howMuchToRead(nOrig, state);
            }

            var ret;
            if (n > 0) ret = fromList(n, state);
            else ret = null;

            if (ret === null) {
              state.needReadable = state.length <= state.highWaterMark;
              n = 0;
            } else {
              state.length -= n;
              state.awaitDrain = 0;
            }

            if (state.length === 0) {
              // If we have nothing in the buffer, then we want to know
              // as soon as we *do* get something into the buffer.
              if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.

              if (nOrig !== n && state.ended) endReadable(this);
            }

            if (ret !== null) this.emit('data', ret);
            return ret;
          };

          function onEofChunk(stream, state) {
            debug('onEofChunk');
            if (state.ended) return;

            if (state.decoder) {
              var chunk = state.decoder.end();

              if (chunk && chunk.length) {
                state.buffer.push(chunk);
                state.length += state.objectMode ? 1 : chunk.length;
              }
            }

            state.ended = true;

            if (state.sync) {
              // if we are sync, wait until next tick to emit the data.
              // Otherwise we risk emitting data in the flow()
              // the readable code triggers during a read() call
              emitReadable(stream);
            } else {
              // emit 'readable' now to make sure it gets picked up.
              state.needReadable = false;

              if (!state.emittedReadable) {
                state.emittedReadable = true;
                emitReadable_(stream);
              }
            }
          } // Don't emit readable right away in sync mode, because this can trigger
          // another read() call => stack overflow.  This way, it might trigger
          // a nextTick recursion warning, but that's not so bad.

          function emitReadable(stream) {
            var state = stream._readableState;
            debug('emitReadable', state.needReadable, state.emittedReadable);
            state.needReadable = false;

            if (!state.emittedReadable) {
              debug('emitReadable', state.flowing);
              state.emittedReadable = true;
              process.nextTick(emitReadable_, stream);
            }
          }

          function emitReadable_(stream) {
            var state = stream._readableState;
            debug('emitReadable_', state.destroyed, state.length, state.ended);

            if (!state.destroyed && (state.length || state.ended)) {
              stream.emit('readable');
              state.emittedReadable = false;
            } // The stream needs another readable event if
            // 1. It is not flowing, as the flow mechanism will take
            //    care of it.
            // 2. It is not ended.
            // 3. It is below the highWaterMark, so we can schedule
            //    another readable later.

            state.needReadable =
              !state.flowing &&
              !state.ended &&
              state.length <= state.highWaterMark;
            flow(stream);
          } // at this point, the user has presumably seen the 'readable' event,
          // and called read() to consume some data.  that may have triggered
          // in turn another _read(n) call, in which case reading = true if
          // it's in progress.
          // However, if we're not ended, or reading, and the length < hwm,
          // then go ahead and try to read some more preemptively.

          function maybeReadMore(stream, state) {
            if (!state.readingMore) {
              state.readingMore = true;
              process.nextTick(maybeReadMore_, stream, state);
            }
          }

          function maybeReadMore_(stream, state) {
            // Attempt to read more data if we should.
            //
            // The conditions for reading more data are (one of):
            // - Not enough data buffered (state.length < state.highWaterMark). The loop
            //   is responsible for filling the buffer with enough data if such data
            //   is available. If highWaterMark is 0 and we are not in the flowing mode
            //   we should _not_ attempt to buffer any extra data. We'll get more data
            //   when the stream consumer calls read() instead.
            // - No data in the buffer, and the stream is in flowing mode. In this mode
            //   the loop below is responsible for ensuring read() is called. Failing to
            //   call read here would abort the flow and there's no other mechanism for
            //   continuing the flow if the stream consumer has just subscribed to the
            //   'data' event.
            //
            // In addition to the above conditions to keep reading data, the following
            // conditions prevent the data from being read:
            // - The stream has ended (state.ended).
            // - There is already a pending 'read' operation (state.reading). This is a
            //   case where the the stream has called the implementation defined _read()
            //   method, but they are processing the call asynchronously and have _not_
            //   called push() with new data. In this case we skip performing more
            //   read()s. The execution ends in this method again after the _read() ends
            //   up calling push() with more data.
            while (
              !state.reading &&
              !state.ended &&
              (state.length < state.highWaterMark ||
                (state.flowing && state.length === 0))
            ) {
              var len = state.length;
              debug('maybeReadMore read 0');
              stream.read(0);
              if (len === state.length)
                // didn't get any data, stop spinning.
                break;
            }

            state.readingMore = false;
          } // abstract method.  to be overridden in specific implementation classes.
          // call cb(er, data) where data is <= n in length.
          // for virtual (non-string, non-buffer) streams, "length" is somewhat
          // arbitrary, and perhaps not very meaningful.

          Readable.prototype._read = function (n) {
            errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));
          };

          Readable.prototype.pipe = function (dest, pipeOpts) {
            var src = this;
            var state = this._readableState;

            switch (state.pipesCount) {
              case 0:
                state.pipes = dest;
                break;

              case 1:
                state.pipes = [state.pipes, dest];
                break;

              default:
                state.pipes.push(dest);
                break;
            }

            state.pipesCount += 1;
            debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
            var doEnd =
              (!pipeOpts || pipeOpts.end !== false) &&
              dest !== process.stdout &&
              dest !== process.stderr;
            var endFn = doEnd ? onend : unpipe;
            if (state.endEmitted) process.nextTick(endFn);
            else src.once('end', endFn);
            dest.on('unpipe', onunpipe);

            function onunpipe(readable, unpipeInfo) {
              debug('onunpipe');

              if (readable === src) {
                if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
                  unpipeInfo.hasUnpiped = true;
                  cleanup();
                }
              }
            }

            function onend() {
              debug('onend');
              dest.end();
            } // when the dest drains, it reduces the awaitDrain counter
            // on the source.  This would be more elegant with a .once()
            // handler in flow(), but adding and removing repeatedly is
            // too slow.

            var ondrain = pipeOnDrain(src);
            dest.on('drain', ondrain);
            var cleanedUp = false;

            function cleanup() {
              debug('cleanup'); // cleanup event handlers once the pipe is broken

              dest.removeListener('close', onclose);
              dest.removeListener('finish', onfinish);
              dest.removeListener('drain', ondrain);
              dest.removeListener('error', onerror);
              dest.removeListener('unpipe', onunpipe);
              src.removeListener('end', onend);
              src.removeListener('end', unpipe);
              src.removeListener('data', ondata);
              cleanedUp = true; // if the reader is waiting for a drain event from this
              // specific writer, then it would cause it to never start
              // flowing again.
              // So, if this is awaiting a drain, then we just call it now.
              // If we don't know, then assume that we are waiting for one.

              if (
                state.awaitDrain &&
                (!dest._writableState || dest._writableState.needDrain)
              )
                ondrain();
            }

            src.on('data', ondata);

            function ondata(chunk) {
              debug('ondata');
              var ret = dest.write(chunk);
              debug('dest.write', ret);

              if (ret === false) {
                // If the user unpiped during `dest.write()`, it is possible
                // to get stuck in a permanently paused state if that write
                // also returned false.
                // => Check whether `dest` is still a piping destination.
                if (
                  ((state.pipesCount === 1 && state.pipes === dest) ||
                    (state.pipesCount > 1 &&
                      indexOf(state.pipes, dest) !== -1)) &&
                  !cleanedUp
                ) {
                  debug('false write response, pause', state.awaitDrain);
                  state.awaitDrain++;
                }

                src.pause();
              }
            } // if the dest has an error, then stop piping into it.
            // however, don't suppress the throwing behavior for this.

            function onerror(er) {
              debug('onerror', er);
              unpipe();
              dest.removeListener('error', onerror);
              if (EElistenerCount(dest, 'error') === 0)
                errorOrDestroy(dest, er);
            } // Make sure our error handler is attached before userland ones.

            prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.

            function onclose() {
              dest.removeListener('finish', onfinish);
              unpipe();
            }

            dest.once('close', onclose);

            function onfinish() {
              debug('onfinish');
              dest.removeListener('close', onclose);
              unpipe();
            }

            dest.once('finish', onfinish);

            function unpipe() {
              debug('unpipe');
              src.unpipe(dest);
            } // tell the dest that it's being piped to

            dest.emit('pipe', src); // start the flow if it hasn't been started already.

            if (!state.flowing) {
              debug('pipe resume');
              src.resume();
            }

            return dest;
          };

          function pipeOnDrain(src) {
            return function pipeOnDrainFunctionResult() {
              var state = src._readableState;
              debug('pipeOnDrain', state.awaitDrain);
              if (state.awaitDrain) state.awaitDrain--;

              if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
                state.flowing = true;
                flow(src);
              }
            };
          }

          Readable.prototype.unpipe = function (dest) {
            var state = this._readableState;
            var unpipeInfo = {
              hasUnpiped: false,
            }; // if we're not piping anywhere, then do nothing.

            if (state.pipesCount === 0) return this; // just one destination.  most common case.

            if (state.pipesCount === 1) {
              // passed in one, but it's not the right one.
              if (dest && dest !== state.pipes) return this;
              if (!dest) dest = state.pipes; // got a match.

              state.pipes = null;
              state.pipesCount = 0;
              state.flowing = false;
              if (dest) dest.emit('unpipe', this, unpipeInfo);
              return this;
            } // slow case. multiple pipe destinations.

            if (!dest) {
              // remove all.
              var dests = state.pipes;
              var len = state.pipesCount;
              state.pipes = null;
              state.pipesCount = 0;
              state.flowing = false;

              for (var i = 0; i < len; i++) {
                dests[i].emit('unpipe', this, {
                  hasUnpiped: false,
                });
              }

              return this;
            } // try to find the right one.

            var index = indexOf(state.pipes, dest);
            if (index === -1) return this;
            state.pipes.splice(index, 1);
            state.pipesCount -= 1;
            if (state.pipesCount === 1) state.pipes = state.pipes[0];
            dest.emit('unpipe', this, unpipeInfo);
            return this;
          }; // set up data events if they are asked for
          // Ensure readable listeners eventually get something

          Readable.prototype.on = function (ev, fn) {
            var res = Stream.prototype.on.call(this, ev, fn);
            var state = this._readableState;

            if (ev === 'data') {
              // update readableListening so that resume() may be a no-op
              // a few lines down. This is needed to support once('readable').
              state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused

              if (state.flowing !== false) this.resume();
            } else if (ev === 'readable') {
              if (!state.endEmitted && !state.readableListening) {
                state.readableListening = state.needReadable = true;
                state.flowing = false;
                state.emittedReadable = false;
                debug('on readable', state.length, state.reading);

                if (state.length) {
                  emitReadable(this);
                } else if (!state.reading) {
                  process.nextTick(nReadingNextTick, this);
                }
              }
            }

            return res;
          };

          Readable.prototype.addListener = Readable.prototype.on;

          Readable.prototype.removeListener = function (ev, fn) {
            var res = Stream.prototype.removeListener.call(this, ev, fn);

            if (ev === 'readable') {
              // We need to check if there is someone still listening to
              // readable and reset the state. However this needs to happen
              // after readable has been emitted but before I/O (nextTick) to
              // support once('readable', fn) cycles. This means that calling
              // resume within the same tick will have no
              // effect.
              process.nextTick(updateReadableListening, this);
            }

            return res;
          };

          Readable.prototype.removeAllListeners = function (ev) {
            var res = Stream.prototype.removeAllListeners.apply(
              this,
              arguments
            );

            if (ev === 'readable' || ev === undefined) {
              // We need to check if there is someone still listening to
              // readable and reset the state. However this needs to happen
              // after readable has been emitted but before I/O (nextTick) to
              // support once('readable', fn) cycles. This means that calling
              // resume within the same tick will have no
              // effect.
              process.nextTick(updateReadableListening, this);
            }

            return res;
          };

          function updateReadableListening(self) {
            var state = self._readableState;
            state.readableListening = self.listenerCount('readable') > 0;

            if (state.resumeScheduled && !state.paused) {
              // flowing needs to be set to true now, otherwise
              // the upcoming resume will not flow.
              state.flowing = true; // crude way to check if we should resume
            } else if (self.listenerCount('data') > 0) {
              self.resume();
            }
          }

          function nReadingNextTick(self) {
            debug('readable nexttick read 0');
            self.read(0);
          } // pause() and resume() are remnants of the legacy readable stream API
          // If the user uses them, then switch into old mode.

          Readable.prototype.resume = function () {
            var state = this._readableState;

            if (!state.flowing) {
              debug('resume'); // we flow only if there is no one listening
              // for readable, but we still have to call
              // resume()

              state.flowing = !state.readableListening;
              resume(this, state);
            }

            state.paused = false;
            return this;
          };

          function resume(stream, state) {
            if (!state.resumeScheduled) {
              state.resumeScheduled = true;
              process.nextTick(resume_, stream, state);
            }
          }

          function resume_(stream, state) {
            debug('resume', state.reading);

            if (!state.reading) {
              stream.read(0);
            }

            state.resumeScheduled = false;
            stream.emit('resume');
            flow(stream);
            if (state.flowing && !state.reading) stream.read(0);
          }

          Readable.prototype.pause = function () {
            debug('call pause flowing=%j', this._readableState.flowing);

            if (this._readableState.flowing !== false) {
              debug('pause');
              this._readableState.flowing = false;
              this.emit('pause');
            }

            this._readableState.paused = true;
            return this;
          };

          function flow(stream) {
            var state = stream._readableState;
            debug('flow', state.flowing);

            while (state.flowing && stream.read() !== null) {}
          } // wrap an old-style stream as the async data source.
          // This is *not* part of the readable stream interface.
          // It is an ugly unfortunate mess of history.

          Readable.prototype.wrap = function (stream) {
            var _this = this;

            var state = this._readableState;
            var paused = false;
            stream.on('end', function () {
              debug('wrapped end');

              if (state.decoder && !state.ended) {
                var chunk = state.decoder.end();
                if (chunk && chunk.length) _this.push(chunk);
              }

              _this.push(null);
            });
            stream.on('data', function (chunk) {
              debug('wrapped data');
              if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode

              if (state.objectMode && (chunk === null || chunk === undefined))
                return;
              else if (!state.objectMode && (!chunk || !chunk.length)) return;

              var ret = _this.push(chunk);

              if (!ret) {
                paused = true;
                stream.pause();
              }
            }); // proxy all the other methods.
            // important when wrapping filters and duplexes.

            for (var i in stream) {
              if (this[i] === undefined && typeof stream[i] === 'function') {
                this[i] = (function methodWrap(method) {
                  return function methodWrapReturnFunction() {
                    return stream[method].apply(stream, arguments);
                  };
                })(i);
              }
            } // proxy certain important events.

            for (var n = 0; n < kProxyEvents.length; n++) {
              stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
            } // when we try to consume some more bytes, simply unpause the
            // underlying stream.

            this._read = function (n) {
              debug('wrapped _read', n);

              if (paused) {
                paused = false;
                stream.resume();
              }
            };

            return this;
          };

          if (typeof Symbol === 'function') {
            Readable.prototype[Symbol.asyncIterator] = function () {
              if (createReadableStreamAsyncIterator === undefined) {
                createReadableStreamAsyncIterator = __webpack_require__(
                  /*! ./internal/streams/async_iterator */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/async_iterator.js'
                );
              }

              return createReadableStreamAsyncIterator(this);
            };
          }

          Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              return this._readableState.highWaterMark;
            },
          });
          Object.defineProperty(Readable.prototype, 'readableBuffer', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              return this._readableState && this._readableState.buffer;
            },
          });
          Object.defineProperty(Readable.prototype, 'readableFlowing', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              return this._readableState.flowing;
            },
            set: function set(state) {
              if (this._readableState) {
                this._readableState.flowing = state;
              }
            },
          }); // exposed for testing purposes only.

          Readable._fromList = fromList;
          Object.defineProperty(Readable.prototype, 'readableLength', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              return this._readableState.length;
            },
          }); // Pluck off n bytes from an array of buffers.
          // Length is the combined lengths of all the buffers in the list.
          // This function is designed to be inlinable, so please take care when making
          // changes to the function body.

          function fromList(n, state) {
            // nothing buffered
            if (state.length === 0) return null;
            var ret;
            if (state.objectMode) ret = state.buffer.shift();
            else if (!n || n >= state.length) {
              // read it all, truncate the list
              if (state.decoder) ret = state.buffer.join('');
              else if (state.buffer.length === 1) ret = state.buffer.first();
              else ret = state.buffer.concat(state.length);
              state.buffer.clear();
            } else {
              // read part of list
              ret = state.buffer.consume(n, state.decoder);
            }
            return ret;
          }

          function endReadable(stream) {
            var state = stream._readableState;
            debug('endReadable', state.endEmitted);

            if (!state.endEmitted) {
              state.ended = true;
              process.nextTick(endReadableNT, state, stream);
            }
          }

          function endReadableNT(state, stream) {
            debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.

            if (!state.endEmitted && state.length === 0) {
              state.endEmitted = true;
              stream.readable = false;
              stream.emit('end');

              if (state.autoDestroy) {
                // In case of duplex streams we need a way to detect
                // if the writable side is ready for autoDestroy as well
                var wState = stream._writableState;

                if (!wState || (wState.autoDestroy && wState.finished)) {
                  stream.destroy();
                }
              }
            }
          }

          if (typeof Symbol === 'function') {
            Readable.from = function (iterable, opts) {
              if (from === undefined) {
                from = __webpack_require__(
                  /*! ./internal/streams/from */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/from-browser.js'
                );
              }

              return from(Readable, iterable, opts);
            };
          }

          function indexOf(xs, x) {
            for (var i = 0, l = xs.length; i < l; i++) {
              if (xs[i] === x) return i;
            }

            return -1;
          }
          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/global.js */ '../node_modules/webpack/buildin/global.js'
          ),
          __webpack_require__(
            /*! ./../../../../process/browser.js */ '../node_modules/process/browser.js'
          )
        ));

        /***/
      },

    /***/ '../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js':
      /*!*********************************************************************************************!*\
  !*** ../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js ***!
  \*********************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.
        // a transform stream is a readable/writable stream where you do
        // something with the data.  Sometimes it's called a "filter",
        // but that's not a great name for it, since that implies a thing where
        // some bits pass through, and others are simply ignored.  (That would
        // be a valid example of a transform, of course.)
        //
        // While the output is causally related to the input, it's not a
        // necessarily symmetric or synchronous transformation.  For example,
        // a zlib stream might take multiple plain-text writes(), and then
        // emit a single compressed chunk some time in the future.
        //
        // Here's how this works:
        //
        // The Transform stream has all the aspects of the readable and writable
        // stream classes.  When you write(chunk), that calls _write(chunk,cb)
        // internally, and returns false if there's a lot of pending writes
        // buffered up.  When you call read(), that calls _read(n) until
        // there's enough pending readable data buffered up.
        //
        // In a transform stream, the written data is placed in a buffer.  When
        // _read(n) is called, it transforms the queued up data, calling the
        // buffered _write cb's as it consumes chunks.  If consuming a single
        // written chunk would result in multiple output chunks, then the first
        // outputted bit calls the readcb, and subsequent chunks just go into
        // the read buffer, and will cause it to emit 'readable' if necessary.
        //
        // This way, back-pressure is actually determined by the reading side,
        // since _read has to be called to start processing a new chunk.  However,
        // a pathological inflate type of transform can cause excessive buffering
        // here.  For example, imagine a stream where every byte of input is
        // interpreted as an integer from 0-255, and then results in that many
        // bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
        // 1kb of data being output.  In this case, you could write a very small
        // amount of input, and end up with a very large amount of output.  In
        // such a pathological inflating mechanism, there'd be no way to tell
        // the system to stop doing the transform.  A single 4MB write could
        // cause the system to run out of memory.
        //
        // However, even in such a pathological case, only a single written chunk
        // would be consumed, and then the rest would wait (un-transformed) until
        // the results of the previous transformed chunk were consumed.

        module.exports = Transform;

        var _require$codes = __webpack_require__(
            /*! ../errors */ '../node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js'
          ).codes,
          ERR_METHOD_NOT_IMPLEMENTED =
            _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
          ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
          ERR_TRANSFORM_ALREADY_TRANSFORMING =
            _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,
          ERR_TRANSFORM_WITH_LENGTH_0 =
            _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;

        var Duplex = __webpack_require__(
          /*! ./_stream_duplex */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js'
        );

        __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        )(Transform, Duplex);

        function afterTransform(er, data) {
          var ts = this._transformState;
          ts.transforming = false;
          var cb = ts.writecb;

          if (cb === null) {
            return this.emit('error', new ERR_MULTIPLE_CALLBACK());
          }

          ts.writechunk = null;
          ts.writecb = null;
          if (data != null)
            // single equals check for both `null` and `undefined`
            this.push(data);
          cb(er);
          var rs = this._readableState;
          rs.reading = false;

          if (rs.needReadable || rs.length < rs.highWaterMark) {
            this._read(rs.highWaterMark);
          }
        }

        function Transform(options) {
          if (!(this instanceof Transform)) return new Transform(options);
          Duplex.call(this, options);
          this._transformState = {
            afterTransform: afterTransform.bind(this),
            needTransform: false,
            transforming: false,
            writecb: null,
            writechunk: null,
            writeencoding: null,
          }; // start out asking for a readable event once data is transformed.

          this._readableState.needReadable = true; // we have implemented the _read method, and done the other things
          // that Readable wants before the first _read call, so unset the
          // sync guard flag.

          this._readableState.sync = false;

          if (options) {
            if (typeof options.transform === 'function')
              this._transform = options.transform;
            if (typeof options.flush === 'function')
              this._flush = options.flush;
          } // When the writable side finishes, then flush out anything remaining.

          this.on('prefinish', prefinish);
        }

        function prefinish() {
          var _this = this;

          if (
            typeof this._flush === 'function' &&
            !this._readableState.destroyed
          ) {
            this._flush(function (er, data) {
              done(_this, er, data);
            });
          } else {
            done(this, null, null);
          }
        }

        Transform.prototype.push = function (chunk, encoding) {
          this._transformState.needTransform = false;
          return Duplex.prototype.push.call(this, chunk, encoding);
        }; // This is the part where you do stuff!
        // override this function in implementation classes.
        // 'chunk' is an input chunk.
        //
        // Call `push(newChunk)` to pass along transformed output
        // to the readable side.  You may call 'push' zero or more times.
        //
        // Call `cb(err)` when you are done with this chunk.  If you pass
        // an error, then that'll put the hurt on the whole operation.  If you
        // never call cb(), then you'll never get another chunk.

        Transform.prototype._transform = function (chunk, encoding, cb) {
          cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));
        };

        Transform.prototype._write = function (chunk, encoding, cb) {
          var ts = this._transformState;
          ts.writecb = cb;
          ts.writechunk = chunk;
          ts.writeencoding = encoding;

          if (!ts.transforming) {
            var rs = this._readableState;
            if (
              ts.needTransform ||
              rs.needReadable ||
              rs.length < rs.highWaterMark
            )
              this._read(rs.highWaterMark);
          }
        }; // Doesn't matter what the args are here.
        // _transform does all the work.
        // That we got here means that the readable side wants more data.

        Transform.prototype._read = function (n) {
          var ts = this._transformState;

          if (ts.writechunk !== null && !ts.transforming) {
            ts.transforming = true;

            this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
          } else {
            // mark that we need a transform, so that any data that comes in
            // will get processed, now that we've asked for it.
            ts.needTransform = true;
          }
        };

        Transform.prototype._destroy = function (err, cb) {
          Duplex.prototype._destroy.call(this, err, function (err2) {
            cb(err2);
          });
        };

        function done(stream, er, data) {
          if (er) return stream.emit('error', er);
          if (data != null)
            // single equals check for both `null` and `undefined`
            stream.push(data); // TODO(BridgeAR): Write a test for these two error cases
          // if there's nothing in the write buffer, then that means
          // that nothing more will ever be provided

          if (stream._writableState.length)
            throw new ERR_TRANSFORM_WITH_LENGTH_0();
          if (stream._transformState.transforming)
            throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
          return stream.push(null);
        }

        /***/
      },

    /***/ '../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js':
      /*!********************************************************************************************!*\
  !*** ../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js ***!
  \********************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (global, process) {
          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.
          // A bit simpler than readable streams.
          // Implement an async ._write(chunk, encoding, cb), and it'll handle all
          // the drain event emission and buffering.

          module.exports = Writable;
          /* <replacement> */

          function WriteReq(chunk, encoding, cb) {
            this.chunk = chunk;
            this.encoding = encoding;
            this.callback = cb;
            this.next = null;
          } // It seems a linked list but it is not
          // there will be only 2 of these for each stream

          function CorkedRequest(state) {
            var _this = this;

            this.next = null;
            this.entry = null;

            this.finish = function () {
              onCorkedFinish(_this, state);
            };
          }
          /* </replacement> */

          /*<replacement>*/

          var Duplex;
          /*</replacement>*/

          Writable.WritableState = WritableState;
          /*<replacement>*/

          var internalUtil = {
            deprecate: __webpack_require__(
              /*! util-deprecate */ '../node_modules/util-deprecate/browser.js'
            ),
          };
          /*</replacement>*/

          /*<replacement>*/

          var Stream = __webpack_require__(
            /*! ./internal/streams/stream */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js'
          );
          /*</replacement>*/

          var Buffer = __webpack_require__(
            /*! buffer */ '../node_modules/buffer/index.js'
          ).Buffer;

          var OurUint8Array = global.Uint8Array || function () {};

          function _uint8ArrayToBuffer(chunk) {
            return Buffer.from(chunk);
          }

          function _isUint8Array(obj) {
            return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
          }

          var destroyImpl = __webpack_require__(
            /*! ./internal/streams/destroy */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js'
          );

          var _require = __webpack_require__(
              /*! ./internal/streams/state */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/state.js'
            ),
            getHighWaterMark = _require.getHighWaterMark;

          var _require$codes = __webpack_require__(
              /*! ../errors */ '../node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js'
            ).codes,
            ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
            ERR_METHOD_NOT_IMPLEMENTED =
              _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
            ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
            ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,
            ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,
            ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,
            ERR_STREAM_WRITE_AFTER_END =
              _require$codes.ERR_STREAM_WRITE_AFTER_END,
            ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;

          var errorOrDestroy = destroyImpl.errorOrDestroy;

          __webpack_require__(
            /*! inherits */ '../node_modules/inherits/inherits_browser.js'
          )(Writable, Stream);

          function nop() {}

          function WritableState(options, stream, isDuplex) {
            Duplex =
              Duplex ||
              __webpack_require__(
                /*! ./_stream_duplex */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js'
              );
            options = options || {}; // Duplex streams are both readable and writable, but share
            // the same options object.
            // However, some cases require setting options to different
            // values for the readable and the writable sides of the duplex stream,
            // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.

            if (typeof isDuplex !== 'boolean')
              isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream
            // contains buffers or objects.

            this.objectMode = !!options.objectMode;
            if (isDuplex)
              this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false
            // Note: 0 is a valid value, means that we always return false if
            // the entire buffer is not flushed immediately on write()

            this.highWaterMark = getHighWaterMark(
              this,
              options,
              'writableHighWaterMark',
              isDuplex
            ); // if _final has been called

            this.finalCalled = false; // drain event flag.

            this.needDrain = false; // at the start of calling end()

            this.ending = false; // when end() has been called, and returned

            this.ended = false; // when 'finish' is emitted

            this.finished = false; // has it been destroyed

            this.destroyed = false; // should we decode strings into buffers before passing to _write?
            // this is here so that some node-core streams can optimize string
            // handling at a lower level.

            var noDecode = options.decodeStrings === false;
            this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string
            // encoding is 'binary' so we have to make this configurable.
            // Everything else in the universe uses 'utf8', though.

            this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement
            // of how much we're waiting to get pushed to some underlying
            // socket or file.

            this.length = 0; // a flag to see when we're in the middle of a write.

            this.writing = false; // when true all writes will be buffered until .uncork() call

            this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,
            // or on a later tick.  We set this to true at first, because any
            // actions that shouldn't happen until "later" should generally also
            // not happen before the first write call.

            this.sync = true; // a flag to know if we're processing previously buffered items, which
            // may call the _write() callback in the same tick, so that we don't
            // end up in an overlapped onwrite situation.

            this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)

            this.onwrite = function (er) {
              onwrite(stream, er);
            }; // the callback that the user supplies to write(chunk,encoding,cb)

            this.writecb = null; // the amount that is being written when _write is called.

            this.writelen = 0;
            this.bufferedRequest = null;
            this.lastBufferedRequest = null; // number of pending user-supplied write callbacks
            // this must be 0 before 'finish' can be emitted

            this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs
            // This is relevant for synchronous Transform streams

            this.prefinished = false; // True if the error was already emitted and should not be thrown again

            this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.

            this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')

            this.autoDestroy = !!options.autoDestroy; // count buffered requests

            this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always
            // one allocated and free to use, and we maintain at most two

            this.corkedRequestsFree = new CorkedRequest(this);
          }

          WritableState.prototype.getBuffer = function getBuffer() {
            var current = this.bufferedRequest;
            var out = [];

            while (current) {
              out.push(current);
              current = current.next;
            }

            return out;
          };

          (function () {
            try {
              Object.defineProperty(WritableState.prototype, 'buffer', {
                get: internalUtil.deprecate(
                  function writableStateBufferGetter() {
                    return this.getBuffer();
                  },
                  '_writableState.buffer is deprecated. Use _writableState.getBuffer ' +
                    'instead.',
                  'DEP0003'
                ),
              });
            } catch (_) {}
          })(); // Test _writableState for inheritance to account for Duplex streams,
          // whose prototype chain only points to Readable.

          var realHasInstance;

          if (
            typeof Symbol === 'function' &&
            Symbol.hasInstance &&
            typeof Function.prototype[Symbol.hasInstance] === 'function'
          ) {
            realHasInstance = Function.prototype[Symbol.hasInstance];
            Object.defineProperty(Writable, Symbol.hasInstance, {
              value: function value(object) {
                if (realHasInstance.call(this, object)) return true;
                if (this !== Writable) return false;
                return object && object._writableState instanceof WritableState;
              },
            });
          } else {
            realHasInstance = function realHasInstance(object) {
              return object instanceof this;
            };
          }

          function Writable(options) {
            Duplex =
              Duplex ||
              __webpack_require__(
                /*! ./_stream_duplex */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js'
              ); // Writable ctor is applied to Duplexes, too.
            // `realHasInstance` is necessary because using plain `instanceof`
            // would return false, as no `_writableState` property is attached.
            // Trying to use the custom `instanceof` for Writable here will also break the
            // Node.js LazyTransform implementation, which has a non-trivial getter for
            // `_writableState` that would lead to infinite recursion.
            // Checking for a Stream.Duplex instance is faster here instead of inside
            // the WritableState constructor, at least with V8 6.5

            var isDuplex = this instanceof Duplex;
            if (!isDuplex && !realHasInstance.call(Writable, this))
              return new Writable(options);
            this._writableState = new WritableState(options, this, isDuplex); // legacy.

            this.writable = true;

            if (options) {
              if (typeof options.write === 'function')
                this._write = options.write;
              if (typeof options.writev === 'function')
                this._writev = options.writev;
              if (typeof options.destroy === 'function')
                this._destroy = options.destroy;
              if (typeof options.final === 'function')
                this._final = options.final;
            }

            Stream.call(this);
          } // Otherwise people can pipe Writable streams, which is just wrong.

          Writable.prototype.pipe = function () {
            errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
          };

          function writeAfterEnd(stream, cb) {
            var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb

            errorOrDestroy(stream, er);
            process.nextTick(cb, er);
          } // Checks that a user-supplied chunk is valid, especially for the particular
          // mode the stream is in. Currently this means that `null` is never accepted
          // and undefined/non-string values are only allowed in object mode.

          function validChunk(stream, state, chunk, cb) {
            var er;

            if (chunk === null) {
              er = new ERR_STREAM_NULL_VALUES();
            } else if (typeof chunk !== 'string' && !state.objectMode) {
              er = new ERR_INVALID_ARG_TYPE(
                'chunk',
                ['string', 'Buffer'],
                chunk
              );
            }

            if (er) {
              errorOrDestroy(stream, er);
              process.nextTick(cb, er);
              return false;
            }

            return true;
          }

          Writable.prototype.write = function (chunk, encoding, cb) {
            var state = this._writableState;
            var ret = false;

            var isBuf = !state.objectMode && _isUint8Array(chunk);

            if (isBuf && !Buffer.isBuffer(chunk)) {
              chunk = _uint8ArrayToBuffer(chunk);
            }

            if (typeof encoding === 'function') {
              cb = encoding;
              encoding = null;
            }

            if (isBuf) encoding = 'buffer';
            else if (!encoding) encoding = state.defaultEncoding;
            if (typeof cb !== 'function') cb = nop;
            if (state.ending) writeAfterEnd(this, cb);
            else if (isBuf || validChunk(this, state, chunk, cb)) {
              state.pendingcb++;
              ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
            }
            return ret;
          };

          Writable.prototype.cork = function () {
            this._writableState.corked++;
          };

          Writable.prototype.uncork = function () {
            var state = this._writableState;

            if (state.corked) {
              state.corked--;
              if (
                !state.writing &&
                !state.corked &&
                !state.bufferProcessing &&
                state.bufferedRequest
              )
                clearBuffer(this, state);
            }
          };

          Writable.prototype.setDefaultEncoding = function setDefaultEncoding(
            encoding
          ) {
            // node::ParseEncoding() requires lower case.
            if (typeof encoding === 'string') encoding = encoding.toLowerCase();
            if (
              !(
                [
                  'hex',
                  'utf8',
                  'utf-8',
                  'ascii',
                  'binary',
                  'base64',
                  'ucs2',
                  'ucs-2',
                  'utf16le',
                  'utf-16le',
                  'raw',
                ].indexOf((encoding + '').toLowerCase()) > -1
              )
            )
              throw new ERR_UNKNOWN_ENCODING(encoding);
            this._writableState.defaultEncoding = encoding;
            return this;
          };

          Object.defineProperty(Writable.prototype, 'writableBuffer', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              return this._writableState && this._writableState.getBuffer();
            },
          });

          function decodeChunk(state, chunk, encoding) {
            if (
              !state.objectMode &&
              state.decodeStrings !== false &&
              typeof chunk === 'string'
            ) {
              chunk = Buffer.from(chunk, encoding);
            }

            return chunk;
          }

          Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              return this._writableState.highWaterMark;
            },
          }); // if we're already writing something, then just put this
          // in the queue, and wait our turn.  Otherwise, call _write
          // If we return false, then we need a drain event, so set that flag.

          function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
            if (!isBuf) {
              var newChunk = decodeChunk(state, chunk, encoding);

              if (chunk !== newChunk) {
                isBuf = true;
                encoding = 'buffer';
                chunk = newChunk;
              }
            }

            var len = state.objectMode ? 1 : chunk.length;
            state.length += len;
            var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.

            if (!ret) state.needDrain = true;

            if (state.writing || state.corked) {
              var last = state.lastBufferedRequest;
              state.lastBufferedRequest = {
                chunk: chunk,
                encoding: encoding,
                isBuf: isBuf,
                callback: cb,
                next: null,
              };

              if (last) {
                last.next = state.lastBufferedRequest;
              } else {
                state.bufferedRequest = state.lastBufferedRequest;
              }

              state.bufferedRequestCount += 1;
            } else {
              doWrite(stream, state, false, len, chunk, encoding, cb);
            }

            return ret;
          }

          function doWrite(stream, state, writev, len, chunk, encoding, cb) {
            state.writelen = len;
            state.writecb = cb;
            state.writing = true;
            state.sync = true;
            if (state.destroyed)
              state.onwrite(new ERR_STREAM_DESTROYED('write'));
            else if (writev) stream._writev(chunk, state.onwrite);
            else stream._write(chunk, encoding, state.onwrite);
            state.sync = false;
          }

          function onwriteError(stream, state, sync, er, cb) {
            --state.pendingcb;

            if (sync) {
              // defer the callback if we are being called synchronously
              // to avoid piling up things on the stack
              process.nextTick(cb, er); // this can emit finish, and it will always happen
              // after error

              process.nextTick(finishMaybe, stream, state);
              stream._writableState.errorEmitted = true;
              errorOrDestroy(stream, er);
            } else {
              // the caller expect this to happen before if
              // it is async
              cb(er);
              stream._writableState.errorEmitted = true;
              errorOrDestroy(stream, er); // this can emit finish, but finish must
              // always follow error

              finishMaybe(stream, state);
            }
          }

          function onwriteStateUpdate(state) {
            state.writing = false;
            state.writecb = null;
            state.length -= state.writelen;
            state.writelen = 0;
          }

          function onwrite(stream, er) {
            var state = stream._writableState;
            var sync = state.sync;
            var cb = state.writecb;
            if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();
            onwriteStateUpdate(state);
            if (er) onwriteError(stream, state, sync, er, cb);
            else {
              // Check if we're actually ready to finish, but don't emit yet
              var finished = needFinish(state) || stream.destroyed;

              if (
                !finished &&
                !state.corked &&
                !state.bufferProcessing &&
                state.bufferedRequest
              ) {
                clearBuffer(stream, state);
              }

              if (sync) {
                process.nextTick(afterWrite, stream, state, finished, cb);
              } else {
                afterWrite(stream, state, finished, cb);
              }
            }
          }

          function afterWrite(stream, state, finished, cb) {
            if (!finished) onwriteDrain(stream, state);
            state.pendingcb--;
            cb();
            finishMaybe(stream, state);
          } // Must force callback to be called on nextTick, so that we don't
          // emit 'drain' before the write() consumer gets the 'false' return
          // value, and has a chance to attach a 'drain' listener.

          function onwriteDrain(stream, state) {
            if (state.length === 0 && state.needDrain) {
              state.needDrain = false;
              stream.emit('drain');
            }
          } // if there's something in the buffer waiting, then process it

          function clearBuffer(stream, state) {
            state.bufferProcessing = true;
            var entry = state.bufferedRequest;

            if (stream._writev && entry && entry.next) {
              // Fast case, write everything using _writev()
              var l = state.bufferedRequestCount;
              var buffer = new Array(l);
              var holder = state.corkedRequestsFree;
              holder.entry = entry;
              var count = 0;
              var allBuffers = true;

              while (entry) {
                buffer[count] = entry;
                if (!entry.isBuf) allBuffers = false;
                entry = entry.next;
                count += 1;
              }

              buffer.allBuffers = allBuffers;
              doWrite(
                stream,
                state,
                true,
                state.length,
                buffer,
                '',
                holder.finish
              ); // doWrite is almost always async, defer these to save a bit of time
              // as the hot path ends with doWrite

              state.pendingcb++;
              state.lastBufferedRequest = null;

              if (holder.next) {
                state.corkedRequestsFree = holder.next;
                holder.next = null;
              } else {
                state.corkedRequestsFree = new CorkedRequest(state);
              }

              state.bufferedRequestCount = 0;
            } else {
              // Slow case, write chunks one-by-one
              while (entry) {
                var chunk = entry.chunk;
                var encoding = entry.encoding;
                var cb = entry.callback;
                var len = state.objectMode ? 1 : chunk.length;
                doWrite(stream, state, false, len, chunk, encoding, cb);
                entry = entry.next;
                state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then
                // it means that we need to wait until it does.
                // also, that means that the chunk and cb are currently
                // being processed, so move the buffer counter past them.

                if (state.writing) {
                  break;
                }
              }

              if (entry === null) state.lastBufferedRequest = null;
            }

            state.bufferedRequest = entry;
            state.bufferProcessing = false;
          }

          Writable.prototype._write = function (chunk, encoding, cb) {
            cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));
          };

          Writable.prototype._writev = null;

          Writable.prototype.end = function (chunk, encoding, cb) {
            var state = this._writableState;

            if (typeof chunk === 'function') {
              cb = chunk;
              chunk = null;
              encoding = null;
            } else if (typeof encoding === 'function') {
              cb = encoding;
              encoding = null;
            }

            if (chunk !== null && chunk !== undefined)
              this.write(chunk, encoding); // .end() fully uncorks

            if (state.corked) {
              state.corked = 1;
              this.uncork();
            } // ignore unnecessary end() calls.

            if (!state.ending) endWritable(this, state, cb);
            return this;
          };

          Object.defineProperty(Writable.prototype, 'writableLength', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              return this._writableState.length;
            },
          });

          function needFinish(state) {
            return (
              state.ending &&
              state.length === 0 &&
              state.bufferedRequest === null &&
              !state.finished &&
              !state.writing
            );
          }

          function callFinal(stream, state) {
            stream._final(function (err) {
              state.pendingcb--;

              if (err) {
                errorOrDestroy(stream, err);
              }

              state.prefinished = true;
              stream.emit('prefinish');
              finishMaybe(stream, state);
            });
          }

          function prefinish(stream, state) {
            if (!state.prefinished && !state.finalCalled) {
              if (typeof stream._final === 'function' && !state.destroyed) {
                state.pendingcb++;
                state.finalCalled = true;
                process.nextTick(callFinal, stream, state);
              } else {
                state.prefinished = true;
                stream.emit('prefinish');
              }
            }
          }

          function finishMaybe(stream, state) {
            var need = needFinish(state);

            if (need) {
              prefinish(stream, state);

              if (state.pendingcb === 0) {
                state.finished = true;
                stream.emit('finish');

                if (state.autoDestroy) {
                  // In case of duplex streams we need a way to detect
                  // if the readable side is ready for autoDestroy as well
                  var rState = stream._readableState;

                  if (!rState || (rState.autoDestroy && rState.endEmitted)) {
                    stream.destroy();
                  }
                }
              }
            }

            return need;
          }

          function endWritable(stream, state, cb) {
            state.ending = true;
            finishMaybe(stream, state);

            if (cb) {
              if (state.finished) process.nextTick(cb);
              else stream.once('finish', cb);
            }

            state.ended = true;
            stream.writable = false;
          }

          function onCorkedFinish(corkReq, state, err) {
            var entry = corkReq.entry;
            corkReq.entry = null;

            while (entry) {
              var cb = entry.callback;
              state.pendingcb--;
              cb(err);
              entry = entry.next;
            } // reuse the free corkReq.

            state.corkedRequestsFree.next = corkReq;
          }

          Object.defineProperty(Writable.prototype, 'destroyed', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              if (this._writableState === undefined) {
                return false;
              }

              return this._writableState.destroyed;
            },
            set: function set(value) {
              // we ignore the value if the stream
              // has not been initialized yet
              if (!this._writableState) {
                return;
              } // backward compatibility, the user is explicitly
              // managing destroyed

              this._writableState.destroyed = value;
            },
          });
          Writable.prototype.destroy = destroyImpl.destroy;
          Writable.prototype._undestroy = destroyImpl.undestroy;

          Writable.prototype._destroy = function (err, cb) {
            cb(err);
          };
          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/global.js */ '../node_modules/webpack/buildin/global.js'
          ),
          __webpack_require__(
            /*! ./../../../../process/browser.js */ '../node_modules/process/browser.js'
          )
        ));

        /***/
      },

    /***/ '../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/async_iterator.js':
      /*!***********************************************************************************************************!*\
  !*** ../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/async_iterator.js ***!
  \***********************************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (process) {
          var _Object$setPrototypeO;

          function _defineProperty(obj, key, value) {
            if (key in obj) {
              Object.defineProperty(obj, key, {
                value: value,
                enumerable: true,
                configurable: true,
                writable: true,
              });
            } else {
              obj[key] = value;
            }
            return obj;
          }

          var finished = __webpack_require__(
            /*! ./end-of-stream */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/end-of-stream.js'
          );

          var kLastResolve = Symbol('lastResolve');
          var kLastReject = Symbol('lastReject');
          var kError = Symbol('error');
          var kEnded = Symbol('ended');
          var kLastPromise = Symbol('lastPromise');
          var kHandlePromise = Symbol('handlePromise');
          var kStream = Symbol('stream');

          function createIterResult(value, done) {
            return {
              value: value,
              done: done,
            };
          }

          function readAndResolve(iter) {
            var resolve = iter[kLastResolve];

            if (resolve !== null) {
              var data = iter[kStream].read(); // we defer if data is null
              // we can be expecting either 'end' or
              // 'error'

              if (data !== null) {
                iter[kLastPromise] = null;
                iter[kLastResolve] = null;
                iter[kLastReject] = null;
                resolve(createIterResult(data, false));
              }
            }
          }

          function onReadable(iter) {
            // we wait for the next tick, because it might
            // emit an error with process.nextTick
            process.nextTick(readAndResolve, iter);
          }

          function wrapForNext(lastPromise, iter) {
            return function (resolve, reject) {
              lastPromise.then(function () {
                if (iter[kEnded]) {
                  resolve(createIterResult(undefined, true));
                  return;
                }

                iter[kHandlePromise](resolve, reject);
              }, reject);
            };
          }

          var AsyncIteratorPrototype = Object.getPrototypeOf(function () {});
          var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf(
            ((_Object$setPrototypeO = {
              get stream() {
                return this[kStream];
              },

              next: function next() {
                var _this = this;

                // if we have detected an error in the meanwhile
                // reject straight away
                var error = this[kError];

                if (error !== null) {
                  return Promise.reject(error);
                }

                if (this[kEnded]) {
                  return Promise.resolve(createIterResult(undefined, true));
                }

                if (this[kStream].destroyed) {
                  // We need to defer via nextTick because if .destroy(err) is
                  // called, the error will be emitted via nextTick, and
                  // we cannot guarantee that there is no error lingering around
                  // waiting to be emitted.
                  return new Promise(function (resolve, reject) {
                    process.nextTick(function () {
                      if (_this[kError]) {
                        reject(_this[kError]);
                      } else {
                        resolve(createIterResult(undefined, true));
                      }
                    });
                  });
                } // if we have multiple next() calls
                // we will wait for the previous Promise to finish
                // this logic is optimized to support for await loops,
                // where next() is only called once at a time

                var lastPromise = this[kLastPromise];
                var promise;

                if (lastPromise) {
                  promise = new Promise(wrapForNext(lastPromise, this));
                } else {
                  // fast path needed to support multiple this.push()
                  // without triggering the next() queue
                  var data = this[kStream].read();

                  if (data !== null) {
                    return Promise.resolve(createIterResult(data, false));
                  }

                  promise = new Promise(this[kHandlePromise]);
                }

                this[kLastPromise] = promise;
                return promise;
              },
            }),
            _defineProperty(
              _Object$setPrototypeO,
              Symbol.asyncIterator,
              function () {
                return this;
              }
            ),
            _defineProperty(
              _Object$setPrototypeO,
              'return',
              function _return() {
                var _this2 = this;

                // destroy(err, cb) is a private API
                // we can guarantee we have that here, because we control the
                // Readable class this is attached to
                return new Promise(function (resolve, reject) {
                  _this2[kStream].destroy(null, function (err) {
                    if (err) {
                      reject(err);
                      return;
                    }

                    resolve(createIterResult(undefined, true));
                  });
                });
              }
            ),
            _Object$setPrototypeO),
            AsyncIteratorPrototype
          );

          var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(
            stream
          ) {
            var _Object$create;

            var iterator = Object.create(
              ReadableStreamAsyncIteratorPrototype,
              ((_Object$create = {}),
              _defineProperty(_Object$create, kStream, {
                value: stream,
                writable: true,
              }),
              _defineProperty(_Object$create, kLastResolve, {
                value: null,
                writable: true,
              }),
              _defineProperty(_Object$create, kLastReject, {
                value: null,
                writable: true,
              }),
              _defineProperty(_Object$create, kError, {
                value: null,
                writable: true,
              }),
              _defineProperty(_Object$create, kEnded, {
                value: stream._readableState.endEmitted,
                writable: true,
              }),
              _defineProperty(_Object$create, kHandlePromise, {
                value: function value(resolve, reject) {
                  var data = iterator[kStream].read();

                  if (data) {
                    iterator[kLastPromise] = null;
                    iterator[kLastResolve] = null;
                    iterator[kLastReject] = null;
                    resolve(createIterResult(data, false));
                  } else {
                    iterator[kLastResolve] = resolve;
                    iterator[kLastReject] = reject;
                  }
                },
                writable: true,
              }),
              _Object$create)
            );
            iterator[kLastPromise] = null;
            finished(stream, function (err) {
              if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {
                var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise
                // returned by next() and store the error

                if (reject !== null) {
                  iterator[kLastPromise] = null;
                  iterator[kLastResolve] = null;
                  iterator[kLastReject] = null;
                  reject(err);
                }

                iterator[kError] = err;
                return;
              }

              var resolve = iterator[kLastResolve];

              if (resolve !== null) {
                iterator[kLastPromise] = null;
                iterator[kLastResolve] = null;
                iterator[kLastReject] = null;
                resolve(createIterResult(undefined, true));
              }

              iterator[kEnded] = true;
            });
            stream.on('readable', onReadable.bind(null, iterator));
            return iterator;
          };

          module.exports = createReadableStreamAsyncIterator;
          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../../../process/browser.js */ '../node_modules/process/browser.js'
          )
        ));

        /***/
      },

    /***/ '../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/buffer_list.js':
      /*!********************************************************************************************************!*\
  !*** ../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/buffer_list.js ***!
  \********************************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        function ownKeys(object, enumerableOnly) {
          var keys = Object.keys(object);
          if (Object.getOwnPropertySymbols) {
            var symbols = Object.getOwnPropertySymbols(object);
            if (enumerableOnly)
              symbols = symbols.filter(function (sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
              });
            keys.push.apply(keys, symbols);
          }
          return keys;
        }

        function _objectSpread(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i] != null ? arguments[i] : {};
            if (i % 2) {
              ownKeys(Object(source), true).forEach(function (key) {
                _defineProperty(target, key, source[key]);
              });
            } else if (Object.getOwnPropertyDescriptors) {
              Object.defineProperties(
                target,
                Object.getOwnPropertyDescriptors(source)
              );
            } else {
              ownKeys(Object(source)).forEach(function (key) {
                Object.defineProperty(
                  target,
                  key,
                  Object.getOwnPropertyDescriptor(source, key)
                );
              });
            }
          }
          return target;
        }

        function _defineProperty(obj, key, value) {
          if (key in obj) {
            Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true,
            });
          } else {
            obj[key] = value;
          }
          return obj;
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          return Constructor;
        }

        var _require = __webpack_require__(
            /*! buffer */ '../node_modules/buffer/index.js'
          ),
          Buffer = _require.Buffer;

        var _require2 = __webpack_require__(/*! util */ 9),
          inspect = _require2.inspect;

        var custom = (inspect && inspect.custom) || 'inspect';

        function copyBuffer(src, target, offset) {
          Buffer.prototype.copy.call(src, target, offset);
        }

        module.exports =
          /*#__PURE__*/
          (function () {
            function BufferList() {
              _classCallCheck(this, BufferList);

              this.head = null;
              this.tail = null;
              this.length = 0;
            }

            _createClass(BufferList, [
              {
                key: 'push',
                value: function push(v) {
                  var entry = {
                    data: v,
                    next: null,
                  };
                  if (this.length > 0) this.tail.next = entry;
                  else this.head = entry;
                  this.tail = entry;
                  ++this.length;
                },
              },
              {
                key: 'unshift',
                value: function unshift(v) {
                  var entry = {
                    data: v,
                    next: this.head,
                  };
                  if (this.length === 0) this.tail = entry;
                  this.head = entry;
                  ++this.length;
                },
              },
              {
                key: 'shift',
                value: function shift() {
                  if (this.length === 0) return;
                  var ret = this.head.data;
                  if (this.length === 1) this.head = this.tail = null;
                  else this.head = this.head.next;
                  --this.length;
                  return ret;
                },
              },
              {
                key: 'clear',
                value: function clear() {
                  this.head = this.tail = null;
                  this.length = 0;
                },
              },
              {
                key: 'join',
                value: function join(s) {
                  if (this.length === 0) return '';
                  var p = this.head;
                  var ret = '' + p.data;

                  while ((p = p.next)) {
                    ret += s + p.data;
                  }

                  return ret;
                },
              },
              {
                key: 'concat',
                value: function concat(n) {
                  if (this.length === 0) return Buffer.alloc(0);
                  var ret = Buffer.allocUnsafe(n >>> 0);
                  var p = this.head;
                  var i = 0;

                  while (p) {
                    copyBuffer(p.data, ret, i);
                    i += p.data.length;
                    p = p.next;
                  }

                  return ret;
                }, // Consumes a specified amount of bytes or characters from the buffered data.
              },
              {
                key: 'consume',
                value: function consume(n, hasStrings) {
                  var ret;

                  if (n < this.head.data.length) {
                    // `slice` is the same for buffers and strings.
                    ret = this.head.data.slice(0, n);
                    this.head.data = this.head.data.slice(n);
                  } else if (n === this.head.data.length) {
                    // First chunk is a perfect match.
                    ret = this.shift();
                  } else {
                    // Result spans more than one buffer.
                    ret = hasStrings ? this._getString(n) : this._getBuffer(n);
                  }

                  return ret;
                },
              },
              {
                key: 'first',
                value: function first() {
                  return this.head.data;
                }, // Consumes a specified amount of characters from the buffered data.
              },
              {
                key: '_getString',
                value: function _getString(n) {
                  var p = this.head;
                  var c = 1;
                  var ret = p.data;
                  n -= ret.length;

                  while ((p = p.next)) {
                    var str = p.data;
                    var nb = n > str.length ? str.length : n;
                    if (nb === str.length) ret += str;
                    else ret += str.slice(0, n);
                    n -= nb;

                    if (n === 0) {
                      if (nb === str.length) {
                        ++c;
                        if (p.next) this.head = p.next;
                        else this.head = this.tail = null;
                      } else {
                        this.head = p;
                        p.data = str.slice(nb);
                      }

                      break;
                    }

                    ++c;
                  }

                  this.length -= c;
                  return ret;
                }, // Consumes a specified amount of bytes from the buffered data.
              },
              {
                key: '_getBuffer',
                value: function _getBuffer(n) {
                  var ret = Buffer.allocUnsafe(n);
                  var p = this.head;
                  var c = 1;
                  p.data.copy(ret);
                  n -= p.data.length;

                  while ((p = p.next)) {
                    var buf = p.data;
                    var nb = n > buf.length ? buf.length : n;
                    buf.copy(ret, ret.length - n, 0, nb);
                    n -= nb;

                    if (n === 0) {
                      if (nb === buf.length) {
                        ++c;
                        if (p.next) this.head = p.next;
                        else this.head = this.tail = null;
                      } else {
                        this.head = p;
                        p.data = buf.slice(nb);
                      }

                      break;
                    }

                    ++c;
                  }

                  this.length -= c;
                  return ret;
                }, // Make sure the linked list only shows the minimal necessary information.
              },
              {
                key: custom,
                value: function value(_, options) {
                  return inspect(
                    this,
                    _objectSpread({}, options, {
                      // Only inspect one level.
                      depth: 0,
                      // It should not recurse.
                      customInspect: false,
                    })
                  );
                },
              },
            ]);

            return BufferList;
          })();

        /***/
      },

    /***/ '../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js':
      /*!****************************************************************************************************!*\
  !*** ../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js ***!
  \****************************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (process) {
          // undocumented cb() API, needed for core, not for public API

          function destroy(err, cb) {
            var _this = this;

            var readableDestroyed =
              this._readableState && this._readableState.destroyed;
            var writableDestroyed =
              this._writableState && this._writableState.destroyed;

            if (readableDestroyed || writableDestroyed) {
              if (cb) {
                cb(err);
              } else if (err) {
                if (!this._writableState) {
                  process.nextTick(emitErrorNT, this, err);
                } else if (!this._writableState.errorEmitted) {
                  this._writableState.errorEmitted = true;
                  process.nextTick(emitErrorNT, this, err);
                }
              }

              return this;
            } // we set destroyed to true before firing error callbacks in order
            // to make it re-entrance safe in case destroy() is called within callbacks

            if (this._readableState) {
              this._readableState.destroyed = true;
            } // if this is a duplex stream mark the writable part as destroyed as well

            if (this._writableState) {
              this._writableState.destroyed = true;
            }

            this._destroy(err || null, function (err) {
              if (!cb && err) {
                if (!_this._writableState) {
                  process.nextTick(emitErrorAndCloseNT, _this, err);
                } else if (!_this._writableState.errorEmitted) {
                  _this._writableState.errorEmitted = true;
                  process.nextTick(emitErrorAndCloseNT, _this, err);
                } else {
                  process.nextTick(emitCloseNT, _this);
                }
              } else if (cb) {
                process.nextTick(emitCloseNT, _this);
                cb(err);
              } else {
                process.nextTick(emitCloseNT, _this);
              }
            });

            return this;
          }

          function emitErrorAndCloseNT(self, err) {
            emitErrorNT(self, err);
            emitCloseNT(self);
          }

          function emitCloseNT(self) {
            if (self._writableState && !self._writableState.emitClose) return;
            if (self._readableState && !self._readableState.emitClose) return;
            self.emit('close');
          }

          function undestroy() {
            if (this._readableState) {
              this._readableState.destroyed = false;
              this._readableState.reading = false;
              this._readableState.ended = false;
              this._readableState.endEmitted = false;
            }

            if (this._writableState) {
              this._writableState.destroyed = false;
              this._writableState.ended = false;
              this._writableState.ending = false;
              this._writableState.finalCalled = false;
              this._writableState.prefinished = false;
              this._writableState.finished = false;
              this._writableState.errorEmitted = false;
            }
          }

          function emitErrorNT(self, err) {
            self.emit('error', err);
          }

          function errorOrDestroy(stream, err) {
            // We have tests that rely on errors being emitted
            // in the same tick, so changing this is semver major.
            // For now when you opt-in to autoDestroy we allow
            // the error to be emitted nextTick. In a future
            // semver major update we should change the default to this.
            var rState = stream._readableState;
            var wState = stream._writableState;
            if (
              (rState && rState.autoDestroy) ||
              (wState && wState.autoDestroy)
            )
              stream.destroy(err);
            else stream.emit('error', err);
          }

          module.exports = {
            destroy: destroy,
            undestroy: undestroy,
            errorOrDestroy: errorOrDestroy,
          };
          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../../../process/browser.js */ '../node_modules/process/browser.js'
          )
        ));

        /***/
      },

    /***/ '../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/end-of-stream.js':
      /*!**********************************************************************************************************!*\
  !*** ../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/end-of-stream.js ***!
  \**********************************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        // Ported from https://github.com/mafintosh/end-of-stream with
        // permission from the author, Mathias Buus (@mafintosh).

        var ERR_STREAM_PREMATURE_CLOSE = __webpack_require__(
          /*! ../../../errors */ '../node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js'
        ).codes.ERR_STREAM_PREMATURE_CLOSE;

        function once(callback) {
          var called = false;
          return function () {
            if (called) return;
            called = true;

            for (
              var _len = arguments.length, args = new Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            callback.apply(this, args);
          };
        }

        function noop() {}

        function isRequest(stream) {
          return stream.setHeader && typeof stream.abort === 'function';
        }

        function eos(stream, opts, callback) {
          if (typeof opts === 'function') return eos(stream, null, opts);
          if (!opts) opts = {};
          callback = once(callback || noop);
          var readable =
            opts.readable || (opts.readable !== false && stream.readable);
          var writable =
            opts.writable || (opts.writable !== false && stream.writable);

          var onlegacyfinish = function onlegacyfinish() {
            if (!stream.writable) onfinish();
          };

          var writableEnded =
            stream._writableState && stream._writableState.finished;

          var onfinish = function onfinish() {
            writable = false;
            writableEnded = true;
            if (!readable) callback.call(stream);
          };

          var readableEnded =
            stream._readableState && stream._readableState.endEmitted;

          var onend = function onend() {
            readable = false;
            readableEnded = true;
            if (!writable) callback.call(stream);
          };

          var onerror = function onerror(err) {
            callback.call(stream, err);
          };

          var onclose = function onclose() {
            var err;

            if (readable && !readableEnded) {
              if (!stream._readableState || !stream._readableState.ended)
                err = new ERR_STREAM_PREMATURE_CLOSE();
              return callback.call(stream, err);
            }

            if (writable && !writableEnded) {
              if (!stream._writableState || !stream._writableState.ended)
                err = new ERR_STREAM_PREMATURE_CLOSE();
              return callback.call(stream, err);
            }
          };

          var onrequest = function onrequest() {
            stream.req.on('finish', onfinish);
          };

          if (isRequest(stream)) {
            stream.on('complete', onfinish);
            stream.on('abort', onclose);
            if (stream.req) onrequest();
            else stream.on('request', onrequest);
          } else if (writable && !stream._writableState) {
            // legacy streams
            stream.on('end', onlegacyfinish);
            stream.on('close', onlegacyfinish);
          }

          stream.on('end', onend);
          stream.on('finish', onfinish);
          if (opts.error !== false) stream.on('error', onerror);
          stream.on('close', onclose);
          return function () {
            stream.removeListener('complete', onfinish);
            stream.removeListener('abort', onclose);
            stream.removeListener('request', onrequest);
            if (stream.req) stream.req.removeListener('finish', onfinish);
            stream.removeListener('end', onlegacyfinish);
            stream.removeListener('close', onlegacyfinish);
            stream.removeListener('finish', onfinish);
            stream.removeListener('end', onend);
            stream.removeListener('error', onerror);
            stream.removeListener('close', onclose);
          };
        }

        module.exports = eos;

        /***/
      },

    /***/ '../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/from-browser.js':
      /*!*********************************************************************************************************!*\
  !*** ../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/from-browser.js ***!
  \*********************************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        module.exports = function () {
          throw new Error('Readable.from is not available in the browser');
        };

        /***/
      },

    /***/ '../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/pipeline.js':
      /*!*****************************************************************************************************!*\
  !*** ../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/pipeline.js ***!
  \*****************************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        // Ported from https://github.com/mafintosh/pump with
        // permission from the author, Mathias Buus (@mafintosh).

        var eos;

        function once(callback) {
          var called = false;
          return function () {
            if (called) return;
            called = true;
            callback.apply(void 0, arguments);
          };
        }

        var _require$codes = __webpack_require__(
            /*! ../../../errors */ '../node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js'
          ).codes,
          ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,
          ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;

        function noop(err) {
          // Rethrow the error if it exists to avoid swallowing it
          if (err) throw err;
        }

        function isRequest(stream) {
          return stream.setHeader && typeof stream.abort === 'function';
        }

        function destroyer(stream, reading, writing, callback) {
          callback = once(callback);
          var closed = false;
          stream.on('close', function () {
            closed = true;
          });
          if (eos === undefined)
            eos = __webpack_require__(
              /*! ./end-of-stream */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/end-of-stream.js'
            );
          eos(
            stream,
            {
              readable: reading,
              writable: writing,
            },
            function (err) {
              if (err) return callback(err);
              closed = true;
              callback();
            }
          );
          var destroyed = false;
          return function (err) {
            if (closed) return;
            if (destroyed) return;
            destroyed = true; // request.destroy just do .end - .abort is what we want

            if (isRequest(stream)) return stream.abort();
            if (typeof stream.destroy === 'function') return stream.destroy();
            callback(err || new ERR_STREAM_DESTROYED('pipe'));
          };
        }

        function call(fn) {
          fn();
        }

        function pipe(from, to) {
          return from.pipe(to);
        }

        function popCallback(streams) {
          if (!streams.length) return noop;
          if (typeof streams[streams.length - 1] !== 'function') return noop;
          return streams.pop();
        }

        function pipeline() {
          for (
            var _len = arguments.length, streams = new Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            streams[_key] = arguments[_key];
          }

          var callback = popCallback(streams);
          if (Array.isArray(streams[0])) streams = streams[0];

          if (streams.length < 2) {
            throw new ERR_MISSING_ARGS('streams');
          }

          var error;
          var destroys = streams.map(function (stream, i) {
            var reading = i < streams.length - 1;
            var writing = i > 0;
            return destroyer(stream, reading, writing, function (err) {
              if (!error) error = err;
              if (err) destroys.forEach(call);
              if (reading) return;
              destroys.forEach(call);
              callback(error);
            });
          });
          return streams.reduce(pipe);
        }

        module.exports = pipeline;

        /***/
      },

    /***/ '../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/state.js':
      /*!**************************************************************************************************!*\
  !*** ../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/state.js ***!
  \**************************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var ERR_INVALID_OPT_VALUE = __webpack_require__(
          /*! ../../../errors */ '../node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js'
        ).codes.ERR_INVALID_OPT_VALUE;

        function highWaterMarkFrom(options, isDuplex, duplexKey) {
          return options.highWaterMark != null
            ? options.highWaterMark
            : isDuplex
            ? options[duplexKey]
            : null;
        }

        function getHighWaterMark(state, options, duplexKey, isDuplex) {
          var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);

          if (hwm != null) {
            if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
              var name = isDuplex ? duplexKey : 'highWaterMark';
              throw new ERR_INVALID_OPT_VALUE(name, hwm);
            }

            return Math.floor(hwm);
          } // Default value

          return state.objectMode ? 16 : 16 * 1024;
        }

        module.exports = {
          getHighWaterMark: getHighWaterMark,
        };

        /***/
      },

    /***/ '../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js':
      /*!***********************************************************************************************************!*\
  !*** ../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js ***!
  \***********************************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! events */ '../node_modules/events/events.js'
        ).EventEmitter;

        /***/
      },

    /***/ '../node_modules/browserify-sign/node_modules/readable-stream/readable-browser.js':
      /*!****************************************************************************************!*\
  !*** ../node_modules/browserify-sign/node_modules/readable-stream/readable-browser.js ***!
  \****************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        exports = module.exports = __webpack_require__(
          /*! ./lib/_stream_readable.js */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js'
        );
        exports.Stream = exports;
        exports.Readable = exports;
        exports.Writable = __webpack_require__(
          /*! ./lib/_stream_writable.js */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js'
        );
        exports.Duplex = __webpack_require__(
          /*! ./lib/_stream_duplex.js */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js'
        );
        exports.Transform = __webpack_require__(
          /*! ./lib/_stream_transform.js */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js'
        );
        exports.PassThrough = __webpack_require__(
          /*! ./lib/_stream_passthrough.js */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_passthrough.js'
        );
        exports.finished = __webpack_require__(
          /*! ./lib/internal/streams/end-of-stream.js */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/end-of-stream.js'
        );
        exports.pipeline = __webpack_require__(
          /*! ./lib/internal/streams/pipeline.js */ '../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/pipeline.js'
        );

        /***/
      },

    /***/ '../node_modules/browserify-sign/node_modules/safe-buffer/index.js':
      /*!*************************************************************************!*\
  !*** ../node_modules/browserify-sign/node_modules/safe-buffer/index.js ***!
  \*************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
        /* eslint-disable node/no-deprecated-api */
        var buffer = __webpack_require__(
          /*! buffer */ '../node_modules/buffer/index.js'
        );
        var Buffer = buffer.Buffer;

        // alternative to using Object.keys for old browsers
        function copyProps(src, dst) {
          for (var key in src) {
            dst[key] = src[key];
          }
        }
        if (
          Buffer.from &&
          Buffer.alloc &&
          Buffer.allocUnsafe &&
          Buffer.allocUnsafeSlow
        ) {
          module.exports = buffer;
        } else {
          // Copy properties from require('buffer')
          copyProps(buffer, exports);
          exports.Buffer = SafeBuffer;
        }

        function SafeBuffer(arg, encodingOrOffset, length) {
          return Buffer(arg, encodingOrOffset, length);
        }

        SafeBuffer.prototype = Object.create(Buffer.prototype);

        // Copy static methods from Buffer
        copyProps(Buffer, SafeBuffer);

        SafeBuffer.from = function (arg, encodingOrOffset, length) {
          if (typeof arg === 'number') {
            throw new TypeError('Argument must not be a number');
          }
          return Buffer(arg, encodingOrOffset, length);
        };

        SafeBuffer.alloc = function (size, fill, encoding) {
          if (typeof size !== 'number') {
            throw new TypeError('Argument must be a number');
          }
          var buf = Buffer(size);
          if (fill !== undefined) {
            if (typeof encoding === 'string') {
              buf.fill(fill, encoding);
            } else {
              buf.fill(fill);
            }
          } else {
            buf.fill(0);
          }
          return buf;
        };

        SafeBuffer.allocUnsafe = function (size) {
          if (typeof size !== 'number') {
            throw new TypeError('Argument must be a number');
          }
          return Buffer(size);
        };

        SafeBuffer.allocUnsafeSlow = function (size) {
          if (typeof size !== 'number') {
            throw new TypeError('Argument must be a number');
          }
          return buffer.SlowBuffer(size);
        };

        /***/
      },

    /***/ '../node_modules/buffer-xor/index.js':
      /*!*******************************************!*\
  !*** ../node_modules/buffer-xor/index.js ***!
  \*******************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function (Buffer) {
          module.exports = function xor(a, b) {
            var length = Math.min(a.length, b.length);
            var buffer = new Buffer(length);

            for (var i = 0; i < length; ++i) {
              buffer[i] = a[i] ^ b[i];
            }

            return buffer;
          };

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../buffer/index.js */ '../node_modules/buffer/index.js'
          ).Buffer
        ));

        /***/
      },

    /***/ '../node_modules/buffer/index.js':
      /*!***************************************!*\
  !*** ../node_modules/buffer/index.js ***!
  \***************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (global) {
          /*!
           * The buffer module from node.js, for the browser.
           *
           * @author   Feross Aboukhadijeh <http://feross.org>
           * @license  MIT
           */
          /* eslint-disable no-proto */

          var base64 = __webpack_require__(
            /*! base64-js */ '../node_modules/base64-js/index.js'
          );
          var ieee754 = __webpack_require__(
            /*! ieee754 */ '../node_modules/ieee754/index.js'
          );
          var isArray = __webpack_require__(
            /*! isarray */ '../node_modules/isarray/index.js'
          );

          exports.Buffer = Buffer;
          exports.SlowBuffer = SlowBuffer;
          exports.INSPECT_MAX_BYTES = 50;

          /**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
          Buffer.TYPED_ARRAY_SUPPORT =
            global.TYPED_ARRAY_SUPPORT !== undefined
              ? global.TYPED_ARRAY_SUPPORT
              : typedArraySupport();

          /*
           * Export kMaxLength after typed array support is determined.
           */
          exports.kMaxLength = kMaxLength();

          function typedArraySupport() {
            try {
              var arr = new Uint8Array(1);
              arr.__proto__ = {
                __proto__: Uint8Array.prototype,
                foo: function () {
                  return 42;
                },
              };
              return (
                arr.foo() === 42 && // typed array instances can be augmented
                typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
                arr.subarray(1, 1).byteLength === 0
              ); // ie10 has broken `subarray`
            } catch (e) {
              return false;
            }
          }

          function kMaxLength() {
            return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;
          }

          function createBuffer(that, length) {
            if (kMaxLength() < length) {
              throw new RangeError('Invalid typed array length');
            }
            if (Buffer.TYPED_ARRAY_SUPPORT) {
              // Return an augmented `Uint8Array` instance, for best performance
              that = new Uint8Array(length);
              that.__proto__ = Buffer.prototype;
            } else {
              // Fallback: Return an object instance of the Buffer class
              if (that === null) {
                that = new Buffer(length);
              }
              that.length = length;
            }

            return that;
          }

          /**
           * The Buffer constructor returns instances of `Uint8Array` that have their
           * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
           * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
           * and the `Uint8Array` methods. Square bracket notation works as expected -- it
           * returns a single octet.
           *
           * The `Uint8Array` prototype remains unmodified.
           */

          function Buffer(arg, encodingOrOffset, length) {
            if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
              return new Buffer(arg, encodingOrOffset, length);
            }

            // Common case.
            if (typeof arg === 'number') {
              if (typeof encodingOrOffset === 'string') {
                throw new Error(
                  'If encoding is specified then the first argument must be a string'
                );
              }
              return allocUnsafe(this, arg);
            }
            return from(this, arg, encodingOrOffset, length);
          }

          Buffer.poolSize = 8192; // not used by this implementation

          // TODO: Legacy, not needed anymore. Remove in next major version.
          Buffer._augment = function (arr) {
            arr.__proto__ = Buffer.prototype;
            return arr;
          };

          function from(that, value, encodingOrOffset, length) {
            if (typeof value === 'number') {
              throw new TypeError('"value" argument must not be a number');
            }

            if (
              typeof ArrayBuffer !== 'undefined' &&
              value instanceof ArrayBuffer
            ) {
              return fromArrayBuffer(that, value, encodingOrOffset, length);
            }

            if (typeof value === 'string') {
              return fromString(that, value, encodingOrOffset);
            }

            return fromObject(that, value);
          }

          /**
           * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
           * if value is a number.
           * Buffer.from(str[, encoding])
           * Buffer.from(array)
           * Buffer.from(buffer)
           * Buffer.from(arrayBuffer[, byteOffset[, length]])
           **/
          Buffer.from = function (value, encodingOrOffset, length) {
            return from(null, value, encodingOrOffset, length);
          };

          if (Buffer.TYPED_ARRAY_SUPPORT) {
            Buffer.prototype.__proto__ = Uint8Array.prototype;
            Buffer.__proto__ = Uint8Array;
            if (
              typeof Symbol !== 'undefined' &&
              Symbol.species &&
              Buffer[Symbol.species] === Buffer
            ) {
              // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
              Object.defineProperty(Buffer, Symbol.species, {
                value: null,
                configurable: true,
              });
            }
          }

          function assertSize(size) {
            if (typeof size !== 'number') {
              throw new TypeError('"size" argument must be a number');
            } else if (size < 0) {
              throw new RangeError('"size" argument must not be negative');
            }
          }

          function alloc(that, size, fill, encoding) {
            assertSize(size);
            if (size <= 0) {
              return createBuffer(that, size);
            }
            if (fill !== undefined) {
              // Only pay attention to encoding if it's a string. This
              // prevents accidentally sending in a number that would
              // be interpretted as a start offset.
              return typeof encoding === 'string'
                ? createBuffer(that, size).fill(fill, encoding)
                : createBuffer(that, size).fill(fill);
            }
            return createBuffer(that, size);
          }

          /**
           * Creates a new filled Buffer instance.
           * alloc(size[, fill[, encoding]])
           **/
          Buffer.alloc = function (size, fill, encoding) {
            return alloc(null, size, fill, encoding);
          };

          function allocUnsafe(that, size) {
            assertSize(size);
            that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);
            if (!Buffer.TYPED_ARRAY_SUPPORT) {
              for (var i = 0; i < size; ++i) {
                that[i] = 0;
              }
            }
            return that;
          }

          /**
           * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
           * */
          Buffer.allocUnsafe = function (size) {
            return allocUnsafe(null, size);
          };
          /**
           * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
           */
          Buffer.allocUnsafeSlow = function (size) {
            return allocUnsafe(null, size);
          };

          function fromString(that, string, encoding) {
            if (typeof encoding !== 'string' || encoding === '') {
              encoding = 'utf8';
            }

            if (!Buffer.isEncoding(encoding)) {
              throw new TypeError('"encoding" must be a valid string encoding');
            }

            var length = byteLength(string, encoding) | 0;
            that = createBuffer(that, length);

            var actual = that.write(string, encoding);

            if (actual !== length) {
              // Writing a hex string, for example, that contains invalid characters will
              // cause everything after the first invalid character to be ignored. (e.g.
              // 'abxxcd' will be treated as 'ab')
              that = that.slice(0, actual);
            }

            return that;
          }

          function fromArrayLike(that, array) {
            var length = array.length < 0 ? 0 : checked(array.length) | 0;
            that = createBuffer(that, length);
            for (var i = 0; i < length; i += 1) {
              that[i] = array[i] & 255;
            }
            return that;
          }

          function fromArrayBuffer(that, array, byteOffset, length) {
            array.byteLength; // this throws if `array` is not a valid ArrayBuffer

            if (byteOffset < 0 || array.byteLength < byteOffset) {
              throw new RangeError("'offset' is out of bounds");
            }

            if (array.byteLength < byteOffset + (length || 0)) {
              throw new RangeError("'length' is out of bounds");
            }

            if (byteOffset === undefined && length === undefined) {
              array = new Uint8Array(array);
            } else if (length === undefined) {
              array = new Uint8Array(array, byteOffset);
            } else {
              array = new Uint8Array(array, byteOffset, length);
            }

            if (Buffer.TYPED_ARRAY_SUPPORT) {
              // Return an augmented `Uint8Array` instance, for best performance
              that = array;
              that.__proto__ = Buffer.prototype;
            } else {
              // Fallback: Return an object instance of the Buffer class
              that = fromArrayLike(that, array);
            }
            return that;
          }

          function fromObject(that, obj) {
            if (Buffer.isBuffer(obj)) {
              var len = checked(obj.length) | 0;
              that = createBuffer(that, len);

              if (that.length === 0) {
                return that;
              }

              obj.copy(that, 0, 0, len);
              return that;
            }

            if (obj) {
              if (
                (typeof ArrayBuffer !== 'undefined' &&
                  obj.buffer instanceof ArrayBuffer) ||
                'length' in obj
              ) {
                if (typeof obj.length !== 'number' || isnan(obj.length)) {
                  return createBuffer(that, 0);
                }
                return fromArrayLike(that, obj);
              }

              if (obj.type === 'Buffer' && isArray(obj.data)) {
                return fromArrayLike(that, obj.data);
              }
            }

            throw new TypeError(
              'First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.'
            );
          }

          function checked(length) {
            // Note: cannot use `length < kMaxLength()` here because that fails when
            // length is NaN (which is otherwise coerced to zero.)
            if (length >= kMaxLength()) {
              throw new RangeError(
                'Attempt to allocate Buffer larger than maximum ' +
                  'size: 0x' +
                  kMaxLength().toString(16) +
                  ' bytes'
              );
            }
            return length | 0;
          }

          function SlowBuffer(length) {
            if (+length != length) {
              // eslint-disable-line eqeqeq
              length = 0;
            }
            return Buffer.alloc(+length);
          }

          Buffer.isBuffer = function isBuffer(b) {
            return !!(b != null && b._isBuffer);
          };

          Buffer.compare = function compare(a, b) {
            if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
              throw new TypeError('Arguments must be Buffers');
            }

            if (a === b) return 0;

            var x = a.length;
            var y = b.length;

            for (var i = 0, len = Math.min(x, y); i < len; ++i) {
              if (a[i] !== b[i]) {
                x = a[i];
                y = b[i];
                break;
              }
            }

            if (x < y) return -1;
            if (y < x) return 1;
            return 0;
          };

          Buffer.isEncoding = function isEncoding(encoding) {
            switch (String(encoding).toLowerCase()) {
              case 'hex':
              case 'utf8':
              case 'utf-8':
              case 'ascii':
              case 'latin1':
              case 'binary':
              case 'base64':
              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                return true;
              default:
                return false;
            }
          };

          Buffer.concat = function concat(list, length) {
            if (!isArray(list)) {
              throw new TypeError(
                '"list" argument must be an Array of Buffers'
              );
            }

            if (list.length === 0) {
              return Buffer.alloc(0);
            }

            var i;
            if (length === undefined) {
              length = 0;
              for (i = 0; i < list.length; ++i) {
                length += list[i].length;
              }
            }

            var buffer = Buffer.allocUnsafe(length);
            var pos = 0;
            for (i = 0; i < list.length; ++i) {
              var buf = list[i];
              if (!Buffer.isBuffer(buf)) {
                throw new TypeError(
                  '"list" argument must be an Array of Buffers'
                );
              }
              buf.copy(buffer, pos);
              pos += buf.length;
            }
            return buffer;
          };

          function byteLength(string, encoding) {
            if (Buffer.isBuffer(string)) {
              return string.length;
            }
            if (
              typeof ArrayBuffer !== 'undefined' &&
              typeof ArrayBuffer.isView === 'function' &&
              (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)
            ) {
              return string.byteLength;
            }
            if (typeof string !== 'string') {
              string = '' + string;
            }

            var len = string.length;
            if (len === 0) return 0;

            // Use a for loop to avoid recursion
            var loweredCase = false;
            for (;;) {
              switch (encoding) {
                case 'ascii':
                case 'latin1':
                case 'binary':
                  return len;
                case 'utf8':
                case 'utf-8':
                case undefined:
                  return utf8ToBytes(string).length;
                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                  return len * 2;
                case 'hex':
                  return len >>> 1;
                case 'base64':
                  return base64ToBytes(string).length;
                default:
                  if (loweredCase) return utf8ToBytes(string).length; // assume utf8
                  encoding = ('' + encoding).toLowerCase();
                  loweredCase = true;
              }
            }
          }
          Buffer.byteLength = byteLength;

          function slowToString(encoding, start, end) {
            var loweredCase = false;

            // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
            // property of a typed array.

            // This behaves neither like String nor Uint8Array in that we set start/end
            // to their upper/lower bounds if the value passed is out of range.
            // undefined is handled specially as per ECMA-262 6th Edition,
            // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
            if (start === undefined || start < 0) {
              start = 0;
            }
            // Return early if start > this.length. Done here to prevent potential uint32
            // coercion fail below.
            if (start > this.length) {
              return '';
            }

            if (end === undefined || end > this.length) {
              end = this.length;
            }

            if (end <= 0) {
              return '';
            }

            // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
            end >>>= 0;
            start >>>= 0;

            if (end <= start) {
              return '';
            }

            if (!encoding) encoding = 'utf8';

            while (true) {
              switch (encoding) {
                case 'hex':
                  return hexSlice(this, start, end);

                case 'utf8':
                case 'utf-8':
                  return utf8Slice(this, start, end);

                case 'ascii':
                  return asciiSlice(this, start, end);

                case 'latin1':
                case 'binary':
                  return latin1Slice(this, start, end);

                case 'base64':
                  return base64Slice(this, start, end);

                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                  return utf16leSlice(this, start, end);

                default:
                  if (loweredCase)
                    throw new TypeError('Unknown encoding: ' + encoding);
                  encoding = (encoding + '').toLowerCase();
                  loweredCase = true;
              }
            }
          }

          // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
          // Buffer instances.
          Buffer.prototype._isBuffer = true;

          function swap(b, n, m) {
            var i = b[n];
            b[n] = b[m];
            b[m] = i;
          }

          Buffer.prototype.swap16 = function swap16() {
            var len = this.length;
            if (len % 2 !== 0) {
              throw new RangeError('Buffer size must be a multiple of 16-bits');
            }
            for (var i = 0; i < len; i += 2) {
              swap(this, i, i + 1);
            }
            return this;
          };

          Buffer.prototype.swap32 = function swap32() {
            var len = this.length;
            if (len % 4 !== 0) {
              throw new RangeError('Buffer size must be a multiple of 32-bits');
            }
            for (var i = 0; i < len; i += 4) {
              swap(this, i, i + 3);
              swap(this, i + 1, i + 2);
            }
            return this;
          };

          Buffer.prototype.swap64 = function swap64() {
            var len = this.length;
            if (len % 8 !== 0) {
              throw new RangeError('Buffer size must be a multiple of 64-bits');
            }
            for (var i = 0; i < len; i += 8) {
              swap(this, i, i + 7);
              swap(this, i + 1, i + 6);
              swap(this, i + 2, i + 5);
              swap(this, i + 3, i + 4);
            }
            return this;
          };

          Buffer.prototype.toString = function toString() {
            var length = this.length | 0;
            if (length === 0) return '';
            if (arguments.length === 0) return utf8Slice(this, 0, length);
            return slowToString.apply(this, arguments);
          };

          Buffer.prototype.equals = function equals(b) {
            if (!Buffer.isBuffer(b))
              throw new TypeError('Argument must be a Buffer');
            if (this === b) return true;
            return Buffer.compare(this, b) === 0;
          };

          Buffer.prototype.inspect = function inspect() {
            var str = '';
            var max = exports.INSPECT_MAX_BYTES;
            if (this.length > 0) {
              str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');
              if (this.length > max) str += ' ... ';
            }
            return '<Buffer ' + str + '>';
          };

          Buffer.prototype.compare = function compare(
            target,
            start,
            end,
            thisStart,
            thisEnd
          ) {
            if (!Buffer.isBuffer(target)) {
              throw new TypeError('Argument must be a Buffer');
            }

            if (start === undefined) {
              start = 0;
            }
            if (end === undefined) {
              end = target ? target.length : 0;
            }
            if (thisStart === undefined) {
              thisStart = 0;
            }
            if (thisEnd === undefined) {
              thisEnd = this.length;
            }

            if (
              start < 0 ||
              end > target.length ||
              thisStart < 0 ||
              thisEnd > this.length
            ) {
              throw new RangeError('out of range index');
            }

            if (thisStart >= thisEnd && start >= end) {
              return 0;
            }
            if (thisStart >= thisEnd) {
              return -1;
            }
            if (start >= end) {
              return 1;
            }

            start >>>= 0;
            end >>>= 0;
            thisStart >>>= 0;
            thisEnd >>>= 0;

            if (this === target) return 0;

            var x = thisEnd - thisStart;
            var y = end - start;
            var len = Math.min(x, y);

            var thisCopy = this.slice(thisStart, thisEnd);
            var targetCopy = target.slice(start, end);

            for (var i = 0; i < len; ++i) {
              if (thisCopy[i] !== targetCopy[i]) {
                x = thisCopy[i];
                y = targetCopy[i];
                break;
              }
            }

            if (x < y) return -1;
            if (y < x) return 1;
            return 0;
          };

          // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
          // OR the last index of `val` in `buffer` at offset <= `byteOffset`.
          //
          // Arguments:
          // - buffer - a Buffer to search
          // - val - a string, Buffer, or number
          // - byteOffset - an index into `buffer`; will be clamped to an int32
          // - encoding - an optional encoding, relevant is val is a string
          // - dir - true for indexOf, false for lastIndexOf
          function bidirectionalIndexOf(
            buffer,
            val,
            byteOffset,
            encoding,
            dir
          ) {
            // Empty buffer means no match
            if (buffer.length === 0) return -1;

            // Normalize byteOffset
            if (typeof byteOffset === 'string') {
              encoding = byteOffset;
              byteOffset = 0;
            } else if (byteOffset > 0x7fffffff) {
              byteOffset = 0x7fffffff;
            } else if (byteOffset < -0x80000000) {
              byteOffset = -0x80000000;
            }
            byteOffset = +byteOffset; // Coerce to Number.
            if (isNaN(byteOffset)) {
              // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
              byteOffset = dir ? 0 : buffer.length - 1;
            }

            // Normalize byteOffset: negative offsets start from the end of the buffer
            if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
            if (byteOffset >= buffer.length) {
              if (dir) return -1;
              else byteOffset = buffer.length - 1;
            } else if (byteOffset < 0) {
              if (dir) byteOffset = 0;
              else return -1;
            }

            // Normalize val
            if (typeof val === 'string') {
              val = Buffer.from(val, encoding);
            }

            // Finally, search either indexOf (if dir is true) or lastIndexOf
            if (Buffer.isBuffer(val)) {
              // Special case: looking for empty string/buffer always fails
              if (val.length === 0) {
                return -1;
              }
              return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
            } else if (typeof val === 'number') {
              val = val & 0xff; // Search for a byte value [0-255]
              if (
                Buffer.TYPED_ARRAY_SUPPORT &&
                typeof Uint8Array.prototype.indexOf === 'function'
              ) {
                if (dir) {
                  return Uint8Array.prototype.indexOf.call(
                    buffer,
                    val,
                    byteOffset
                  );
                } else {
                  return Uint8Array.prototype.lastIndexOf.call(
                    buffer,
                    val,
                    byteOffset
                  );
                }
              }
              return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
            }

            throw new TypeError('val must be string, number or Buffer');
          }

          function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
            var indexSize = 1;
            var arrLength = arr.length;
            var valLength = val.length;

            if (encoding !== undefined) {
              encoding = String(encoding).toLowerCase();
              if (
                encoding === 'ucs2' ||
                encoding === 'ucs-2' ||
                encoding === 'utf16le' ||
                encoding === 'utf-16le'
              ) {
                if (arr.length < 2 || val.length < 2) {
                  return -1;
                }
                indexSize = 2;
                arrLength /= 2;
                valLength /= 2;
                byteOffset /= 2;
              }
            }

            function read(buf, i) {
              if (indexSize === 1) {
                return buf[i];
              } else {
                return buf.readUInt16BE(i * indexSize);
              }
            }

            var i;
            if (dir) {
              var foundIndex = -1;
              for (i = byteOffset; i < arrLength; i++) {
                if (
                  read(arr, i) ===
                  read(val, foundIndex === -1 ? 0 : i - foundIndex)
                ) {
                  if (foundIndex === -1) foundIndex = i;
                  if (i - foundIndex + 1 === valLength)
                    return foundIndex * indexSize;
                } else {
                  if (foundIndex !== -1) i -= i - foundIndex;
                  foundIndex = -1;
                }
              }
            } else {
              if (byteOffset + valLength > arrLength)
                byteOffset = arrLength - valLength;
              for (i = byteOffset; i >= 0; i--) {
                var found = true;
                for (var j = 0; j < valLength; j++) {
                  if (read(arr, i + j) !== read(val, j)) {
                    found = false;
                    break;
                  }
                }
                if (found) return i;
              }
            }

            return -1;
          }

          Buffer.prototype.includes = function includes(
            val,
            byteOffset,
            encoding
          ) {
            return this.indexOf(val, byteOffset, encoding) !== -1;
          };

          Buffer.prototype.indexOf = function indexOf(
            val,
            byteOffset,
            encoding
          ) {
            return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
          };

          Buffer.prototype.lastIndexOf = function lastIndexOf(
            val,
            byteOffset,
            encoding
          ) {
            return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
          };

          function hexWrite(buf, string, offset, length) {
            offset = Number(offset) || 0;
            var remaining = buf.length - offset;
            if (!length) {
              length = remaining;
            } else {
              length = Number(length);
              if (length > remaining) {
                length = remaining;
              }
            }

            // must be an even number of digits
            var strLen = string.length;
            if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');

            if (length > strLen / 2) {
              length = strLen / 2;
            }
            for (var i = 0; i < length; ++i) {
              var parsed = parseInt(string.substr(i * 2, 2), 16);
              if (isNaN(parsed)) return i;
              buf[offset + i] = parsed;
            }
            return i;
          }

          function utf8Write(buf, string, offset, length) {
            return blitBuffer(
              utf8ToBytes(string, buf.length - offset),
              buf,
              offset,
              length
            );
          }

          function asciiWrite(buf, string, offset, length) {
            return blitBuffer(asciiToBytes(string), buf, offset, length);
          }

          function latin1Write(buf, string, offset, length) {
            return asciiWrite(buf, string, offset, length);
          }

          function base64Write(buf, string, offset, length) {
            return blitBuffer(base64ToBytes(string), buf, offset, length);
          }

          function ucs2Write(buf, string, offset, length) {
            return blitBuffer(
              utf16leToBytes(string, buf.length - offset),
              buf,
              offset,
              length
            );
          }

          Buffer.prototype.write = function write(
            string,
            offset,
            length,
            encoding
          ) {
            // Buffer#write(string)
            if (offset === undefined) {
              encoding = 'utf8';
              length = this.length;
              offset = 0;
              // Buffer#write(string, encoding)
            } else if (length === undefined && typeof offset === 'string') {
              encoding = offset;
              length = this.length;
              offset = 0;
              // Buffer#write(string, offset[, length][, encoding])
            } else if (isFinite(offset)) {
              offset = offset | 0;
              if (isFinite(length)) {
                length = length | 0;
                if (encoding === undefined) encoding = 'utf8';
              } else {
                encoding = length;
                length = undefined;
              }
              // legacy write(string, encoding, offset, length) - remove in v0.13
            } else {
              throw new Error(
                'Buffer.write(string, encoding, offset[, length]) is no longer supported'
              );
            }

            var remaining = this.length - offset;
            if (length === undefined || length > remaining) length = remaining;

            if (
              (string.length > 0 && (length < 0 || offset < 0)) ||
              offset > this.length
            ) {
              throw new RangeError('Attempt to write outside buffer bounds');
            }

            if (!encoding) encoding = 'utf8';

            var loweredCase = false;
            for (;;) {
              switch (encoding) {
                case 'hex':
                  return hexWrite(this, string, offset, length);

                case 'utf8':
                case 'utf-8':
                  return utf8Write(this, string, offset, length);

                case 'ascii':
                  return asciiWrite(this, string, offset, length);

                case 'latin1':
                case 'binary':
                  return latin1Write(this, string, offset, length);

                case 'base64':
                  // Warning: maxLength not taken into account in base64Write
                  return base64Write(this, string, offset, length);

                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                  return ucs2Write(this, string, offset, length);

                default:
                  if (loweredCase)
                    throw new TypeError('Unknown encoding: ' + encoding);
                  encoding = ('' + encoding).toLowerCase();
                  loweredCase = true;
              }
            }
          };

          Buffer.prototype.toJSON = function toJSON() {
            return {
              type: 'Buffer',
              data: Array.prototype.slice.call(this._arr || this, 0),
            };
          };

          function base64Slice(buf, start, end) {
            if (start === 0 && end === buf.length) {
              return base64.fromByteArray(buf);
            } else {
              return base64.fromByteArray(buf.slice(start, end));
            }
          }

          function utf8Slice(buf, start, end) {
            end = Math.min(buf.length, end);
            var res = [];

            var i = start;
            while (i < end) {
              var firstByte = buf[i];
              var codePoint = null;
              var bytesPerSequence =
                firstByte > 0xef
                  ? 4
                  : firstByte > 0xdf
                  ? 3
                  : firstByte > 0xbf
                  ? 2
                  : 1;

              if (i + bytesPerSequence <= end) {
                var secondByte, thirdByte, fourthByte, tempCodePoint;

                switch (bytesPerSequence) {
                  case 1:
                    if (firstByte < 0x80) {
                      codePoint = firstByte;
                    }
                    break;
                  case 2:
                    secondByte = buf[i + 1];
                    if ((secondByte & 0xc0) === 0x80) {
                      tempCodePoint =
                        ((firstByte & 0x1f) << 0x6) | (secondByte & 0x3f);
                      if (tempCodePoint > 0x7f) {
                        codePoint = tempCodePoint;
                      }
                    }
                    break;
                  case 3:
                    secondByte = buf[i + 1];
                    thirdByte = buf[i + 2];
                    if (
                      (secondByte & 0xc0) === 0x80 &&
                      (thirdByte & 0xc0) === 0x80
                    ) {
                      tempCodePoint =
                        ((firstByte & 0xf) << 0xc) |
                        ((secondByte & 0x3f) << 0x6) |
                        (thirdByte & 0x3f);
                      if (
                        tempCodePoint > 0x7ff &&
                        (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)
                      ) {
                        codePoint = tempCodePoint;
                      }
                    }
                    break;
                  case 4:
                    secondByte = buf[i + 1];
                    thirdByte = buf[i + 2];
                    fourthByte = buf[i + 3];
                    if (
                      (secondByte & 0xc0) === 0x80 &&
                      (thirdByte & 0xc0) === 0x80 &&
                      (fourthByte & 0xc0) === 0x80
                    ) {
                      tempCodePoint =
                        ((firstByte & 0xf) << 0x12) |
                        ((secondByte & 0x3f) << 0xc) |
                        ((thirdByte & 0x3f) << 0x6) |
                        (fourthByte & 0x3f);
                      if (tempCodePoint > 0xffff && tempCodePoint < 0x110000) {
                        codePoint = tempCodePoint;
                      }
                    }
                }
              }

              if (codePoint === null) {
                // we did not generate a valid codePoint so insert a
                // replacement char (U+FFFD) and advance only 1 byte
                codePoint = 0xfffd;
                bytesPerSequence = 1;
              } else if (codePoint > 0xffff) {
                // encode to utf16 (surrogate pair dance)
                codePoint -= 0x10000;
                res.push(((codePoint >>> 10) & 0x3ff) | 0xd800);
                codePoint = 0xdc00 | (codePoint & 0x3ff);
              }

              res.push(codePoint);
              i += bytesPerSequence;
            }

            return decodeCodePointsArray(res);
          }

          // Based on http://stackoverflow.com/a/22747272/680742, the browser with
          // the lowest limit is Chrome, with 0x10000 args.
          // We go 1 magnitude less, for safety
          var MAX_ARGUMENTS_LENGTH = 0x1000;

          function decodeCodePointsArray(codePoints) {
            var len = codePoints.length;
            if (len <= MAX_ARGUMENTS_LENGTH) {
              return String.fromCharCode.apply(String, codePoints); // avoid extra slice()
            }

            // Decode in chunks to avoid "call stack size exceeded".
            var res = '';
            var i = 0;
            while (i < len) {
              res += String.fromCharCode.apply(
                String,
                codePoints.slice(i, (i += MAX_ARGUMENTS_LENGTH))
              );
            }
            return res;
          }

          function asciiSlice(buf, start, end) {
            var ret = '';
            end = Math.min(buf.length, end);

            for (var i = start; i < end; ++i) {
              ret += String.fromCharCode(buf[i] & 0x7f);
            }
            return ret;
          }

          function latin1Slice(buf, start, end) {
            var ret = '';
            end = Math.min(buf.length, end);

            for (var i = start; i < end; ++i) {
              ret += String.fromCharCode(buf[i]);
            }
            return ret;
          }

          function hexSlice(buf, start, end) {
            var len = buf.length;

            if (!start || start < 0) start = 0;
            if (!end || end < 0 || end > len) end = len;

            var out = '';
            for (var i = start; i < end; ++i) {
              out += toHex(buf[i]);
            }
            return out;
          }

          function utf16leSlice(buf, start, end) {
            var bytes = buf.slice(start, end);
            var res = '';
            for (var i = 0; i < bytes.length; i += 2) {
              res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
            }
            return res;
          }

          Buffer.prototype.slice = function slice(start, end) {
            var len = this.length;
            start = ~~start;
            end = end === undefined ? len : ~~end;

            if (start < 0) {
              start += len;
              if (start < 0) start = 0;
            } else if (start > len) {
              start = len;
            }

            if (end < 0) {
              end += len;
              if (end < 0) end = 0;
            } else if (end > len) {
              end = len;
            }

            if (end < start) end = start;

            var newBuf;
            if (Buffer.TYPED_ARRAY_SUPPORT) {
              newBuf = this.subarray(start, end);
              newBuf.__proto__ = Buffer.prototype;
            } else {
              var sliceLen = end - start;
              newBuf = new Buffer(sliceLen, undefined);
              for (var i = 0; i < sliceLen; ++i) {
                newBuf[i] = this[i + start];
              }
            }

            return newBuf;
          };

          /*
           * Need to make sure that buffer isn't trying to write out of bounds.
           */
          function checkOffset(offset, ext, length) {
            if (offset % 1 !== 0 || offset < 0)
              throw new RangeError('offset is not uint');
            if (offset + ext > length)
              throw new RangeError('Trying to access beyond buffer length');
          }

          Buffer.prototype.readUIntLE = function readUIntLE(
            offset,
            byteLength,
            noAssert
          ) {
            offset = offset | 0;
            byteLength = byteLength | 0;
            if (!noAssert) checkOffset(offset, byteLength, this.length);

            var val = this[offset];
            var mul = 1;
            var i = 0;
            while (++i < byteLength && (mul *= 0x100)) {
              val += this[offset + i] * mul;
            }

            return val;
          };

          Buffer.prototype.readUIntBE = function readUIntBE(
            offset,
            byteLength,
            noAssert
          ) {
            offset = offset | 0;
            byteLength = byteLength | 0;
            if (!noAssert) {
              checkOffset(offset, byteLength, this.length);
            }

            var val = this[offset + --byteLength];
            var mul = 1;
            while (byteLength > 0 && (mul *= 0x100)) {
              val += this[offset + --byteLength] * mul;
            }

            return val;
          };

          Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
            if (!noAssert) checkOffset(offset, 1, this.length);
            return this[offset];
          };

          Buffer.prototype.readUInt16LE = function readUInt16LE(
            offset,
            noAssert
          ) {
            if (!noAssert) checkOffset(offset, 2, this.length);
            return this[offset] | (this[offset + 1] << 8);
          };

          Buffer.prototype.readUInt16BE = function readUInt16BE(
            offset,
            noAssert
          ) {
            if (!noAssert) checkOffset(offset, 2, this.length);
            return (this[offset] << 8) | this[offset + 1];
          };

          Buffer.prototype.readUInt32LE = function readUInt32LE(
            offset,
            noAssert
          ) {
            if (!noAssert) checkOffset(offset, 4, this.length);

            return (
              (this[offset] |
                (this[offset + 1] << 8) |
                (this[offset + 2] << 16)) +
              this[offset + 3] * 0x1000000
            );
          };

          Buffer.prototype.readUInt32BE = function readUInt32BE(
            offset,
            noAssert
          ) {
            if (!noAssert) checkOffset(offset, 4, this.length);

            return (
              this[offset] * 0x1000000 +
              ((this[offset + 1] << 16) |
                (this[offset + 2] << 8) |
                this[offset + 3])
            );
          };

          Buffer.prototype.readIntLE = function readIntLE(
            offset,
            byteLength,
            noAssert
          ) {
            offset = offset | 0;
            byteLength = byteLength | 0;
            if (!noAssert) checkOffset(offset, byteLength, this.length);

            var val = this[offset];
            var mul = 1;
            var i = 0;
            while (++i < byteLength && (mul *= 0x100)) {
              val += this[offset + i] * mul;
            }
            mul *= 0x80;

            if (val >= mul) val -= Math.pow(2, 8 * byteLength);

            return val;
          };

          Buffer.prototype.readIntBE = function readIntBE(
            offset,
            byteLength,
            noAssert
          ) {
            offset = offset | 0;
            byteLength = byteLength | 0;
            if (!noAssert) checkOffset(offset, byteLength, this.length);

            var i = byteLength;
            var mul = 1;
            var val = this[offset + --i];
            while (i > 0 && (mul *= 0x100)) {
              val += this[offset + --i] * mul;
            }
            mul *= 0x80;

            if (val >= mul) val -= Math.pow(2, 8 * byteLength);

            return val;
          };

          Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
            if (!noAssert) checkOffset(offset, 1, this.length);
            if (!(this[offset] & 0x80)) return this[offset];
            return (0xff - this[offset] + 1) * -1;
          };

          Buffer.prototype.readInt16LE = function readInt16LE(
            offset,
            noAssert
          ) {
            if (!noAssert) checkOffset(offset, 2, this.length);
            var val = this[offset] | (this[offset + 1] << 8);
            return val & 0x8000 ? val | 0xffff0000 : val;
          };

          Buffer.prototype.readInt16BE = function readInt16BE(
            offset,
            noAssert
          ) {
            if (!noAssert) checkOffset(offset, 2, this.length);
            var val = this[offset + 1] | (this[offset] << 8);
            return val & 0x8000 ? val | 0xffff0000 : val;
          };

          Buffer.prototype.readInt32LE = function readInt32LE(
            offset,
            noAssert
          ) {
            if (!noAssert) checkOffset(offset, 4, this.length);

            return (
              this[offset] |
              (this[offset + 1] << 8) |
              (this[offset + 2] << 16) |
              (this[offset + 3] << 24)
            );
          };

          Buffer.prototype.readInt32BE = function readInt32BE(
            offset,
            noAssert
          ) {
            if (!noAssert) checkOffset(offset, 4, this.length);

            return (
              (this[offset] << 24) |
              (this[offset + 1] << 16) |
              (this[offset + 2] << 8) |
              this[offset + 3]
            );
          };

          Buffer.prototype.readFloatLE = function readFloatLE(
            offset,
            noAssert
          ) {
            if (!noAssert) checkOffset(offset, 4, this.length);
            return ieee754.read(this, offset, true, 23, 4);
          };

          Buffer.prototype.readFloatBE = function readFloatBE(
            offset,
            noAssert
          ) {
            if (!noAssert) checkOffset(offset, 4, this.length);
            return ieee754.read(this, offset, false, 23, 4);
          };

          Buffer.prototype.readDoubleLE = function readDoubleLE(
            offset,
            noAssert
          ) {
            if (!noAssert) checkOffset(offset, 8, this.length);
            return ieee754.read(this, offset, true, 52, 8);
          };

          Buffer.prototype.readDoubleBE = function readDoubleBE(
            offset,
            noAssert
          ) {
            if (!noAssert) checkOffset(offset, 8, this.length);
            return ieee754.read(this, offset, false, 52, 8);
          };

          function checkInt(buf, value, offset, ext, max, min) {
            if (!Buffer.isBuffer(buf))
              throw new TypeError(
                '"buffer" argument must be a Buffer instance'
              );
            if (value > max || value < min)
              throw new RangeError('"value" argument is out of bounds');
            if (offset + ext > buf.length)
              throw new RangeError('Index out of range');
          }

          Buffer.prototype.writeUIntLE = function writeUIntLE(
            value,
            offset,
            byteLength,
            noAssert
          ) {
            value = +value;
            offset = offset | 0;
            byteLength = byteLength | 0;
            if (!noAssert) {
              var maxBytes = Math.pow(2, 8 * byteLength) - 1;
              checkInt(this, value, offset, byteLength, maxBytes, 0);
            }

            var mul = 1;
            var i = 0;
            this[offset] = value & 0xff;
            while (++i < byteLength && (mul *= 0x100)) {
              this[offset + i] = (value / mul) & 0xff;
            }

            return offset + byteLength;
          };

          Buffer.prototype.writeUIntBE = function writeUIntBE(
            value,
            offset,
            byteLength,
            noAssert
          ) {
            value = +value;
            offset = offset | 0;
            byteLength = byteLength | 0;
            if (!noAssert) {
              var maxBytes = Math.pow(2, 8 * byteLength) - 1;
              checkInt(this, value, offset, byteLength, maxBytes, 0);
            }

            var i = byteLength - 1;
            var mul = 1;
            this[offset + i] = value & 0xff;
            while (--i >= 0 && (mul *= 0x100)) {
              this[offset + i] = (value / mul) & 0xff;
            }

            return offset + byteLength;
          };

          Buffer.prototype.writeUInt8 = function writeUInt8(
            value,
            offset,
            noAssert
          ) {
            value = +value;
            offset = offset | 0;
            if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
            if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
            this[offset] = value & 0xff;
            return offset + 1;
          };

          function objectWriteUInt16(buf, value, offset, littleEndian) {
            if (value < 0) value = 0xffff + value + 1;
            for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
              buf[offset + i] =
                (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
                ((littleEndian ? i : 1 - i) * 8);
            }
          }

          Buffer.prototype.writeUInt16LE = function writeUInt16LE(
            value,
            offset,
            noAssert
          ) {
            value = +value;
            offset = offset | 0;
            if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
            if (Buffer.TYPED_ARRAY_SUPPORT) {
              this[offset] = value & 0xff;
              this[offset + 1] = value >>> 8;
            } else {
              objectWriteUInt16(this, value, offset, true);
            }
            return offset + 2;
          };

          Buffer.prototype.writeUInt16BE = function writeUInt16BE(
            value,
            offset,
            noAssert
          ) {
            value = +value;
            offset = offset | 0;
            if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
            if (Buffer.TYPED_ARRAY_SUPPORT) {
              this[offset] = value >>> 8;
              this[offset + 1] = value & 0xff;
            } else {
              objectWriteUInt16(this, value, offset, false);
            }
            return offset + 2;
          };

          function objectWriteUInt32(buf, value, offset, littleEndian) {
            if (value < 0) value = 0xffffffff + value + 1;
            for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
              buf[offset + i] =
                (value >>> ((littleEndian ? i : 3 - i) * 8)) & 0xff;
            }
          }

          Buffer.prototype.writeUInt32LE = function writeUInt32LE(
            value,
            offset,
            noAssert
          ) {
            value = +value;
            offset = offset | 0;
            if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
            if (Buffer.TYPED_ARRAY_SUPPORT) {
              this[offset + 3] = value >>> 24;
              this[offset + 2] = value >>> 16;
              this[offset + 1] = value >>> 8;
              this[offset] = value & 0xff;
            } else {
              objectWriteUInt32(this, value, offset, true);
            }
            return offset + 4;
          };

          Buffer.prototype.writeUInt32BE = function writeUInt32BE(
            value,
            offset,
            noAssert
          ) {
            value = +value;
            offset = offset | 0;
            if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
            if (Buffer.TYPED_ARRAY_SUPPORT) {
              this[offset] = value >>> 24;
              this[offset + 1] = value >>> 16;
              this[offset + 2] = value >>> 8;
              this[offset + 3] = value & 0xff;
            } else {
              objectWriteUInt32(this, value, offset, false);
            }
            return offset + 4;
          };

          Buffer.prototype.writeIntLE = function writeIntLE(
            value,
            offset,
            byteLength,
            noAssert
          ) {
            value = +value;
            offset = offset | 0;
            if (!noAssert) {
              var limit = Math.pow(2, 8 * byteLength - 1);

              checkInt(this, value, offset, byteLength, limit - 1, -limit);
            }

            var i = 0;
            var mul = 1;
            var sub = 0;
            this[offset] = value & 0xff;
            while (++i < byteLength && (mul *= 0x100)) {
              if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
                sub = 1;
              }
              this[offset + i] = (((value / mul) >> 0) - sub) & 0xff;
            }

            return offset + byteLength;
          };

          Buffer.prototype.writeIntBE = function writeIntBE(
            value,
            offset,
            byteLength,
            noAssert
          ) {
            value = +value;
            offset = offset | 0;
            if (!noAssert) {
              var limit = Math.pow(2, 8 * byteLength - 1);

              checkInt(this, value, offset, byteLength, limit - 1, -limit);
            }

            var i = byteLength - 1;
            var mul = 1;
            var sub = 0;
            this[offset + i] = value & 0xff;
            while (--i >= 0 && (mul *= 0x100)) {
              if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
                sub = 1;
              }
              this[offset + i] = (((value / mul) >> 0) - sub) & 0xff;
            }

            return offset + byteLength;
          };

          Buffer.prototype.writeInt8 = function writeInt8(
            value,
            offset,
            noAssert
          ) {
            value = +value;
            offset = offset | 0;
            if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);
            if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
            if (value < 0) value = 0xff + value + 1;
            this[offset] = value & 0xff;
            return offset + 1;
          };

          Buffer.prototype.writeInt16LE = function writeInt16LE(
            value,
            offset,
            noAssert
          ) {
            value = +value;
            offset = offset | 0;
            if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
            if (Buffer.TYPED_ARRAY_SUPPORT) {
              this[offset] = value & 0xff;
              this[offset + 1] = value >>> 8;
            } else {
              objectWriteUInt16(this, value, offset, true);
            }
            return offset + 2;
          };

          Buffer.prototype.writeInt16BE = function writeInt16BE(
            value,
            offset,
            noAssert
          ) {
            value = +value;
            offset = offset | 0;
            if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
            if (Buffer.TYPED_ARRAY_SUPPORT) {
              this[offset] = value >>> 8;
              this[offset + 1] = value & 0xff;
            } else {
              objectWriteUInt16(this, value, offset, false);
            }
            return offset + 2;
          };

          Buffer.prototype.writeInt32LE = function writeInt32LE(
            value,
            offset,
            noAssert
          ) {
            value = +value;
            offset = offset | 0;
            if (!noAssert)
              checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
            if (Buffer.TYPED_ARRAY_SUPPORT) {
              this[offset] = value & 0xff;
              this[offset + 1] = value >>> 8;
              this[offset + 2] = value >>> 16;
              this[offset + 3] = value >>> 24;
            } else {
              objectWriteUInt32(this, value, offset, true);
            }
            return offset + 4;
          };

          Buffer.prototype.writeInt32BE = function writeInt32BE(
            value,
            offset,
            noAssert
          ) {
            value = +value;
            offset = offset | 0;
            if (!noAssert)
              checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
            if (value < 0) value = 0xffffffff + value + 1;
            if (Buffer.TYPED_ARRAY_SUPPORT) {
              this[offset] = value >>> 24;
              this[offset + 1] = value >>> 16;
              this[offset + 2] = value >>> 8;
              this[offset + 3] = value & 0xff;
            } else {
              objectWriteUInt32(this, value, offset, false);
            }
            return offset + 4;
          };

          function checkIEEE754(buf, value, offset, ext, max, min) {
            if (offset + ext > buf.length)
              throw new RangeError('Index out of range');
            if (offset < 0) throw new RangeError('Index out of range');
          }

          function writeFloat(buf, value, offset, littleEndian, noAssert) {
            if (!noAssert) {
              checkIEEE754(
                buf,
                value,
                offset,
                4,
                3.4028234663852886e38,
                -3.4028234663852886e38
              );
            }
            ieee754.write(buf, value, offset, littleEndian, 23, 4);
            return offset + 4;
          }

          Buffer.prototype.writeFloatLE = function writeFloatLE(
            value,
            offset,
            noAssert
          ) {
            return writeFloat(this, value, offset, true, noAssert);
          };

          Buffer.prototype.writeFloatBE = function writeFloatBE(
            value,
            offset,
            noAssert
          ) {
            return writeFloat(this, value, offset, false, noAssert);
          };

          function writeDouble(buf, value, offset, littleEndian, noAssert) {
            if (!noAssert) {
              checkIEEE754(
                buf,
                value,
                offset,
                8,
                1.7976931348623157e308,
                -1.7976931348623157e308
              );
            }
            ieee754.write(buf, value, offset, littleEndian, 52, 8);
            return offset + 8;
          }

          Buffer.prototype.writeDoubleLE = function writeDoubleLE(
            value,
            offset,
            noAssert
          ) {
            return writeDouble(this, value, offset, true, noAssert);
          };

          Buffer.prototype.writeDoubleBE = function writeDoubleBE(
            value,
            offset,
            noAssert
          ) {
            return writeDouble(this, value, offset, false, noAssert);
          };

          // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
          Buffer.prototype.copy = function copy(
            target,
            targetStart,
            start,
            end
          ) {
            if (!start) start = 0;
            if (!end && end !== 0) end = this.length;
            if (targetStart >= target.length) targetStart = target.length;
            if (!targetStart) targetStart = 0;
            if (end > 0 && end < start) end = start;

            // Copy 0 bytes; we're done
            if (end === start) return 0;
            if (target.length === 0 || this.length === 0) return 0;

            // Fatal error conditions
            if (targetStart < 0) {
              throw new RangeError('targetStart out of bounds');
            }
            if (start < 0 || start >= this.length)
              throw new RangeError('sourceStart out of bounds');
            if (end < 0) throw new RangeError('sourceEnd out of bounds');

            // Are we oob?
            if (end > this.length) end = this.length;
            if (target.length - targetStart < end - start) {
              end = target.length - targetStart + start;
            }

            var len = end - start;
            var i;

            if (this === target && start < targetStart && targetStart < end) {
              // descending copy from end
              for (i = len - 1; i >= 0; --i) {
                target[i + targetStart] = this[i + start];
              }
            } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
              // ascending copy from start
              for (i = 0; i < len; ++i) {
                target[i + targetStart] = this[i + start];
              }
            } else {
              Uint8Array.prototype.set.call(
                target,
                this.subarray(start, start + len),
                targetStart
              );
            }

            return len;
          };

          // Usage:
          //    buffer.fill(number[, offset[, end]])
          //    buffer.fill(buffer[, offset[, end]])
          //    buffer.fill(string[, offset[, end]][, encoding])
          Buffer.prototype.fill = function fill(val, start, end, encoding) {
            // Handle string cases:
            if (typeof val === 'string') {
              if (typeof start === 'string') {
                encoding = start;
                start = 0;
                end = this.length;
              } else if (typeof end === 'string') {
                encoding = end;
                end = this.length;
              }
              if (val.length === 1) {
                var code = val.charCodeAt(0);
                if (code < 256) {
                  val = code;
                }
              }
              if (encoding !== undefined && typeof encoding !== 'string') {
                throw new TypeError('encoding must be a string');
              }
              if (
                typeof encoding === 'string' &&
                !Buffer.isEncoding(encoding)
              ) {
                throw new TypeError('Unknown encoding: ' + encoding);
              }
            } else if (typeof val === 'number') {
              val = val & 255;
            }

            // Invalid ranges are not set to a default, so can range check early.
            if (start < 0 || this.length < start || this.length < end) {
              throw new RangeError('Out of range index');
            }

            if (end <= start) {
              return this;
            }

            start = start >>> 0;
            end = end === undefined ? this.length : end >>> 0;

            if (!val) val = 0;

            var i;
            if (typeof val === 'number') {
              for (i = start; i < end; ++i) {
                this[i] = val;
              }
            } else {
              var bytes = Buffer.isBuffer(val)
                ? val
                : utf8ToBytes(new Buffer(val, encoding).toString());
              var len = bytes.length;
              for (i = 0; i < end - start; ++i) {
                this[i + start] = bytes[i % len];
              }
            }

            return this;
          };

          // HELPER FUNCTIONS
          // ================

          var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g;

          function base64clean(str) {
            // Node strips out invalid characters like \n and \t from the string, base64-js does not
            str = stringtrim(str).replace(INVALID_BASE64_RE, '');
            // Node converts strings with length < 2 to ''
            if (str.length < 2) return '';
            // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
            while (str.length % 4 !== 0) {
              str = str + '=';
            }
            return str;
          }

          function stringtrim(str) {
            if (str.trim) return str.trim();
            return str.replace(/^\s+|\s+$/g, '');
          }

          function toHex(n) {
            if (n < 16) return '0' + n.toString(16);
            return n.toString(16);
          }

          function utf8ToBytes(string, units) {
            units = units || Infinity;
            var codePoint;
            var length = string.length;
            var leadSurrogate = null;
            var bytes = [];

            for (var i = 0; i < length; ++i) {
              codePoint = string.charCodeAt(i);

              // is surrogate component
              if (codePoint > 0xd7ff && codePoint < 0xe000) {
                // last char was a lead
                if (!leadSurrogate) {
                  // no lead yet
                  if (codePoint > 0xdbff) {
                    // unexpected trail
                    if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd);
                    continue;
                  } else if (i + 1 === length) {
                    // unpaired lead
                    if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd);
                    continue;
                  }

                  // valid lead
                  leadSurrogate = codePoint;

                  continue;
                }

                // 2 leads in a row
                if (codePoint < 0xdc00) {
                  if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd);
                  leadSurrogate = codePoint;
                  continue;
                }

                // valid surrogate pair
                codePoint =
                  (((leadSurrogate - 0xd800) << 10) | (codePoint - 0xdc00)) +
                  0x10000;
              } else if (leadSurrogate) {
                // valid bmp char, but last char was a lead
                if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd);
              }

              leadSurrogate = null;

              // encode utf8
              if (codePoint < 0x80) {
                if ((units -= 1) < 0) break;
                bytes.push(codePoint);
              } else if (codePoint < 0x800) {
                if ((units -= 2) < 0) break;
                bytes.push(
                  (codePoint >> 0x6) | 0xc0,
                  (codePoint & 0x3f) | 0x80
                );
              } else if (codePoint < 0x10000) {
                if ((units -= 3) < 0) break;
                bytes.push(
                  (codePoint >> 0xc) | 0xe0,
                  ((codePoint >> 0x6) & 0x3f) | 0x80,
                  (codePoint & 0x3f) | 0x80
                );
              } else if (codePoint < 0x110000) {
                if ((units -= 4) < 0) break;
                bytes.push(
                  (codePoint >> 0x12) | 0xf0,
                  ((codePoint >> 0xc) & 0x3f) | 0x80,
                  ((codePoint >> 0x6) & 0x3f) | 0x80,
                  (codePoint & 0x3f) | 0x80
                );
              } else {
                throw new Error('Invalid code point');
              }
            }

            return bytes;
          }

          function asciiToBytes(str) {
            var byteArray = [];
            for (var i = 0; i < str.length; ++i) {
              // Node's code seems to be doing this and not & 0x7F..
              byteArray.push(str.charCodeAt(i) & 0xff);
            }
            return byteArray;
          }

          function utf16leToBytes(str, units) {
            var c, hi, lo;
            var byteArray = [];
            for (var i = 0; i < str.length; ++i) {
              if ((units -= 2) < 0) break;

              c = str.charCodeAt(i);
              hi = c >> 8;
              lo = c % 256;
              byteArray.push(lo);
              byteArray.push(hi);
            }

            return byteArray;
          }

          function base64ToBytes(str) {
            return base64.toByteArray(base64clean(str));
          }

          function blitBuffer(src, dst, offset, length) {
            for (var i = 0; i < length; ++i) {
              if (i + offset >= dst.length || i >= src.length) break;
              dst[i + offset] = src[i];
            }
            return i;
          }

          function isnan(val) {
            return val !== val; // eslint-disable-line no-self-compare
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../webpack/buildin/global.js */ '../node_modules/webpack/buildin/global.js'
          )
        ));

        /***/
      },

    /***/ '../node_modules/cipher-base/index.js':
      /*!********************************************!*\
  !*** ../node_modules/cipher-base/index.js ***!
  \********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;
        var Transform = __webpack_require__(
          /*! stream */ '../node_modules/stream-browserify/index.js'
        ).Transform;
        var StringDecoder = __webpack_require__(
          /*! string_decoder */ '../node_modules/string_decoder/lib/string_decoder.js'
        ).StringDecoder;
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );

        function CipherBase(hashMode) {
          Transform.call(this);
          this.hashMode = typeof hashMode === 'string';
          if (this.hashMode) {
            this[hashMode] = this._finalOrDigest;
          } else {
            this.final = this._finalOrDigest;
          }
          if (this._final) {
            this.__final = this._final;
            this._final = null;
          }
          this._decoder = null;
          this._encoding = null;
        }
        inherits(CipherBase, Transform);

        CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
          if (typeof data === 'string') {
            data = Buffer.from(data, inputEnc);
          }

          var outData = this._update(data);
          if (this.hashMode) return this;

          if (outputEnc) {
            outData = this._toString(outData, outputEnc);
          }

          return outData;
        };

        CipherBase.prototype.setAutoPadding = function () {};
        CipherBase.prototype.getAuthTag = function () {
          throw new Error('trying to get auth tag in unsupported state');
        };

        CipherBase.prototype.setAuthTag = function () {
          throw new Error('trying to set auth tag in unsupported state');
        };

        CipherBase.prototype.setAAD = function () {
          throw new Error('trying to set aad in unsupported state');
        };

        CipherBase.prototype._transform = function (data, _, next) {
          var err;
          try {
            if (this.hashMode) {
              this._update(data);
            } else {
              this.push(this._update(data));
            }
          } catch (e) {
            err = e;
          } finally {
            next(err);
          }
        };
        CipherBase.prototype._flush = function (done) {
          var err;
          try {
            this.push(this.__final());
          } catch (e) {
            err = e;
          }

          done(err);
        };
        CipherBase.prototype._finalOrDigest = function (outputEnc) {
          var outData = this.__final() || Buffer.alloc(0);
          if (outputEnc) {
            outData = this._toString(outData, outputEnc, true);
          }
          return outData;
        };

        CipherBase.prototype._toString = function (value, enc, fin) {
          if (!this._decoder) {
            this._decoder = new StringDecoder(enc);
            this._encoding = enc;
          }

          if (this._encoding !== enc) throw new Error("can't switch encodings");

          var out = this._decoder.write(value);
          if (fin) {
            out += this._decoder.end();
          }

          return out;
        };

        module.exports = CipherBase;

        /***/
      },

    /***/ '../node_modules/core-util-is/lib/util.js':
      /*!************************************************!*\
  !*** ../node_modules/core-util-is/lib/util.js ***!
  \************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function (Buffer) {
          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.

          // NOTE: These type checking functions intentionally don't use `instanceof`
          // because it is fragile and can be easily faked with `Object.create()`.

          function isArray(arg) {
            if (Array.isArray) {
              return Array.isArray(arg);
            }
            return objectToString(arg) === '[object Array]';
          }
          exports.isArray = isArray;

          function isBoolean(arg) {
            return typeof arg === 'boolean';
          }
          exports.isBoolean = isBoolean;

          function isNull(arg) {
            return arg === null;
          }
          exports.isNull = isNull;

          function isNullOrUndefined(arg) {
            return arg == null;
          }
          exports.isNullOrUndefined = isNullOrUndefined;

          function isNumber(arg) {
            return typeof arg === 'number';
          }
          exports.isNumber = isNumber;

          function isString(arg) {
            return typeof arg === 'string';
          }
          exports.isString = isString;

          function isSymbol(arg) {
            return typeof arg === 'symbol';
          }
          exports.isSymbol = isSymbol;

          function isUndefined(arg) {
            return arg === void 0;
          }
          exports.isUndefined = isUndefined;

          function isRegExp(re) {
            return objectToString(re) === '[object RegExp]';
          }
          exports.isRegExp = isRegExp;

          function isObject(arg) {
            return typeof arg === 'object' && arg !== null;
          }
          exports.isObject = isObject;

          function isDate(d) {
            return objectToString(d) === '[object Date]';
          }
          exports.isDate = isDate;

          function isError(e) {
            return objectToString(e) === '[object Error]' || e instanceof Error;
          }
          exports.isError = isError;

          function isFunction(arg) {
            return typeof arg === 'function';
          }
          exports.isFunction = isFunction;

          function isPrimitive(arg) {
            return (
              arg === null ||
              typeof arg === 'boolean' ||
              typeof arg === 'number' ||
              typeof arg === 'string' ||
              typeof arg === 'symbol' || // ES6 symbol
              typeof arg === 'undefined'
            );
          }
          exports.isPrimitive = isPrimitive;

          exports.isBuffer = Buffer.isBuffer;

          function objectToString(o) {
            return Object.prototype.toString.call(o);
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../buffer/index.js */ '../node_modules/buffer/index.js'
          ).Buffer
        ));

        /***/
      },

    /***/ '../node_modules/create-ecdh/browser.js':
      /*!**********************************************!*\
  !*** ../node_modules/create-ecdh/browser.js ***!
  \**********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function (Buffer) {
          var elliptic = __webpack_require__(
            /*! elliptic */ '../node_modules/elliptic/lib/elliptic.js'
          );
          var BN = __webpack_require__(
            /*! bn.js */ '../node_modules/create-ecdh/node_modules/bn.js/lib/bn.js'
          );

          module.exports = function createECDH(curve) {
            return new ECDH(curve);
          };

          var aliases = {
            secp256k1: {
              name: 'secp256k1',
              byteLength: 32,
            },
            secp224r1: {
              name: 'p224',
              byteLength: 28,
            },
            prime256v1: {
              name: 'p256',
              byteLength: 32,
            },
            prime192v1: {
              name: 'p192',
              byteLength: 24,
            },
            ed25519: {
              name: 'ed25519',
              byteLength: 32,
            },
            secp384r1: {
              name: 'p384',
              byteLength: 48,
            },
            secp521r1: {
              name: 'p521',
              byteLength: 66,
            },
          };

          aliases.p224 = aliases.secp224r1;
          aliases.p256 = aliases.secp256r1 = aliases.prime256v1;
          aliases.p192 = aliases.secp192r1 = aliases.prime192v1;
          aliases.p384 = aliases.secp384r1;
          aliases.p521 = aliases.secp521r1;

          function ECDH(curve) {
            this.curveType = aliases[curve];
            if (!this.curveType) {
              this.curveType = {
                name: curve,
              };
            }
            this.curve = new elliptic.ec(this.curveType.name); // eslint-disable-line new-cap
            this.keys = void 0;
          }

          ECDH.prototype.generateKeys = function (enc, format) {
            this.keys = this.curve.genKeyPair();
            return this.getPublicKey(enc, format);
          };

          ECDH.prototype.computeSecret = function (other, inenc, enc) {
            inenc = inenc || 'utf8';
            if (!Buffer.isBuffer(other)) {
              other = new Buffer(other, inenc);
            }
            var otherPub = this.curve.keyFromPublic(other).getPublic();
            var out = otherPub.mul(this.keys.getPrivate()).getX();
            return formatReturnValue(out, enc, this.curveType.byteLength);
          };

          ECDH.prototype.getPublicKey = function (enc, format) {
            var key = this.keys.getPublic(format === 'compressed', true);
            if (format === 'hybrid') {
              if (key[key.length - 1] % 2) {
                key[0] = 7;
              } else {
                key[0] = 6;
              }
            }
            return formatReturnValue(key, enc);
          };

          ECDH.prototype.getPrivateKey = function (enc) {
            return formatReturnValue(this.keys.getPrivate(), enc);
          };

          ECDH.prototype.setPublicKey = function (pub, enc) {
            enc = enc || 'utf8';
            if (!Buffer.isBuffer(pub)) {
              pub = new Buffer(pub, enc);
            }
            this.keys._importPublic(pub);
            return this;
          };

          ECDH.prototype.setPrivateKey = function (priv, enc) {
            enc = enc || 'utf8';
            if (!Buffer.isBuffer(priv)) {
              priv = new Buffer(priv, enc);
            }

            var _priv = new BN(priv);
            _priv = _priv.toString(16);
            this.keys = this.curve.genKeyPair();
            this.keys._importPrivate(_priv);
            return this;
          };

          function formatReturnValue(bn, enc, len) {
            if (!Array.isArray(bn)) {
              bn = bn.toArray();
            }
            var buf = new Buffer(bn);
            if (len && buf.length < len) {
              var zeros = new Buffer(len - buf.length);
              zeros.fill(0);
              buf = Buffer.concat([zeros, buf]);
            }
            if (!enc) {
              return buf;
            } else {
              return buf.toString(enc);
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../buffer/index.js */ '../node_modules/buffer/index.js'
          ).Buffer
        ));

        /***/
      },

    /***/ '../node_modules/create-ecdh/node_modules/bn.js/lib/bn.js':
      /*!****************************************************************!*\
  !*** ../node_modules/create-ecdh/node_modules/bn.js/lib/bn.js ***!
  \****************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function (module) {
          (function (module, exports) {
            'use strict';

            // Utils
            function assert(val, msg) {
              if (!val) throw new Error(msg || 'Assertion failed');
            }

            // Could use `inherits` module, but don't want to move from single file
            // architecture yet.
            function inherits(ctor, superCtor) {
              ctor.super_ = superCtor;
              var TempCtor = function () {};
              TempCtor.prototype = superCtor.prototype;
              ctor.prototype = new TempCtor();
              ctor.prototype.constructor = ctor;
            }

            // BN

            function BN(number, base, endian) {
              if (BN.isBN(number)) {
                return number;
              }

              this.negative = 0;
              this.words = null;
              this.length = 0;

              // Reduction context
              this.red = null;

              if (number !== null) {
                if (base === 'le' || base === 'be') {
                  endian = base;
                  base = 10;
                }

                this._init(number || 0, base || 10, endian || 'be');
              }
            }
            if (typeof module === 'object') {
              module.exports = BN;
            } else {
              exports.BN = BN;
            }

            BN.BN = BN;
            BN.wordSize = 26;

            var Buffer;
            try {
              Buffer = __webpack_require__(/*! buffer */ 14).Buffer;
            } catch (e) {}

            BN.isBN = function isBN(num) {
              if (num instanceof BN) {
                return true;
              }

              return (
                num !== null &&
                typeof num === 'object' &&
                num.constructor.wordSize === BN.wordSize &&
                Array.isArray(num.words)
              );
            };

            BN.max = function max(left, right) {
              if (left.cmp(right) > 0) return left;
              return right;
            };

            BN.min = function min(left, right) {
              if (left.cmp(right) < 0) return left;
              return right;
            };

            BN.prototype._init = function init(number, base, endian) {
              if (typeof number === 'number') {
                return this._initNumber(number, base, endian);
              }

              if (typeof number === 'object') {
                return this._initArray(number, base, endian);
              }

              if (base === 'hex') {
                base = 16;
              }
              assert(base === (base | 0) && base >= 2 && base <= 36);

              number = number.toString().replace(/\s+/g, '');
              var start = 0;
              if (number[0] === '-') {
                start++;
              }

              if (base === 16) {
                this._parseHex(number, start);
              } else {
                this._parseBase(number, base, start);
              }

              if (number[0] === '-') {
                this.negative = 1;
              }

              this.strip();

              if (endian !== 'le') return;

              this._initArray(this.toArray(), base, endian);
            };

            BN.prototype._initNumber = function _initNumber(
              number,
              base,
              endian
            ) {
              if (number < 0) {
                this.negative = 1;
                number = -number;
              }
              if (number < 0x4000000) {
                this.words = [number & 0x3ffffff];
                this.length = 1;
              } else if (number < 0x10000000000000) {
                this.words = [
                  number & 0x3ffffff,
                  (number / 0x4000000) & 0x3ffffff,
                ];
                this.length = 2;
              } else {
                assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
                this.words = [
                  number & 0x3ffffff,
                  (number / 0x4000000) & 0x3ffffff,
                  1,
                ];
                this.length = 3;
              }

              if (endian !== 'le') return;

              // Reverse the bytes
              this._initArray(this.toArray(), base, endian);
            };

            BN.prototype._initArray = function _initArray(
              number,
              base,
              endian
            ) {
              // Perhaps a Uint8Array
              assert(typeof number.length === 'number');
              if (number.length <= 0) {
                this.words = [0];
                this.length = 1;
                return this;
              }

              this.length = Math.ceil(number.length / 3);
              this.words = new Array(this.length);
              for (var i = 0; i < this.length; i++) {
                this.words[i] = 0;
              }

              var j, w;
              var off = 0;
              if (endian === 'be') {
                for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
                  w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
                  this.words[j] |= (w << off) & 0x3ffffff;
                  this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
                  off += 24;
                  if (off >= 26) {
                    off -= 26;
                    j++;
                  }
                }
              } else if (endian === 'le') {
                for (i = 0, j = 0; i < number.length; i += 3) {
                  w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
                  this.words[j] |= (w << off) & 0x3ffffff;
                  this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
                  off += 24;
                  if (off >= 26) {
                    off -= 26;
                    j++;
                  }
                }
              }
              return this.strip();
            };

            function parseHex(str, start, end) {
              var r = 0;
              var len = Math.min(str.length, end);
              for (var i = start; i < len; i++) {
                var c = str.charCodeAt(i) - 48;

                r <<= 4;

                // 'a' - 'f'
                if (c >= 49 && c <= 54) {
                  r |= c - 49 + 0xa;

                  // 'A' - 'F'
                } else if (c >= 17 && c <= 22) {
                  r |= c - 17 + 0xa;

                  // '0' - '9'
                } else {
                  r |= c & 0xf;
                }
              }
              return r;
            }

            BN.prototype._parseHex = function _parseHex(number, start) {
              // Create possibly bigger array to ensure that it fits the number
              this.length = Math.ceil((number.length - start) / 6);
              this.words = new Array(this.length);
              for (var i = 0; i < this.length; i++) {
                this.words[i] = 0;
              }

              var j, w;
              // Scan 24-bit chunks and add them to the number
              var off = 0;
              for (i = number.length - 6, j = 0; i >= start; i -= 6) {
                w = parseHex(number, i, i + 6);
                this.words[j] |= (w << off) & 0x3ffffff;
                // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
                this.words[j + 1] |= (w >>> (26 - off)) & 0x3fffff;
                off += 24;
                if (off >= 26) {
                  off -= 26;
                  j++;
                }
              }
              if (i + 6 !== start) {
                w = parseHex(number, start, i + 6);
                this.words[j] |= (w << off) & 0x3ffffff;
                this.words[j + 1] |= (w >>> (26 - off)) & 0x3fffff;
              }
              this.strip();
            };

            function parseBase(str, start, end, mul) {
              var r = 0;
              var len = Math.min(str.length, end);
              for (var i = start; i < len; i++) {
                var c = str.charCodeAt(i) - 48;

                r *= mul;

                // 'a'
                if (c >= 49) {
                  r += c - 49 + 0xa;

                  // 'A'
                } else if (c >= 17) {
                  r += c - 17 + 0xa;

                  // '0' - '9'
                } else {
                  r += c;
                }
              }
              return r;
            }

            BN.prototype._parseBase = function _parseBase(number, base, start) {
              // Initialize as zero
              this.words = [0];
              this.length = 1;

              // Find length of limb in base
              for (
                var limbLen = 0, limbPow = 1;
                limbPow <= 0x3ffffff;
                limbPow *= base
              ) {
                limbLen++;
              }
              limbLen--;
              limbPow = (limbPow / base) | 0;

              var total = number.length - start;
              var mod = total % limbLen;
              var end = Math.min(total, total - mod) + start;

              var word = 0;
              for (var i = start; i < end; i += limbLen) {
                word = parseBase(number, i, i + limbLen, base);

                this.imuln(limbPow);
                if (this.words[0] + word < 0x4000000) {
                  this.words[0] += word;
                } else {
                  this._iaddn(word);
                }
              }

              if (mod !== 0) {
                var pow = 1;
                word = parseBase(number, i, number.length, base);

                for (i = 0; i < mod; i++) {
                  pow *= base;
                }

                this.imuln(pow);
                if (this.words[0] + word < 0x4000000) {
                  this.words[0] += word;
                } else {
                  this._iaddn(word);
                }
              }
            };

            BN.prototype.copy = function copy(dest) {
              dest.words = new Array(this.length);
              for (var i = 0; i < this.length; i++) {
                dest.words[i] = this.words[i];
              }
              dest.length = this.length;
              dest.negative = this.negative;
              dest.red = this.red;
            };

            BN.prototype.clone = function clone() {
              var r = new BN(null);
              this.copy(r);
              return r;
            };

            BN.prototype._expand = function _expand(size) {
              while (this.length < size) {
                this.words[this.length++] = 0;
              }
              return this;
            };

            // Remove leading `0` from `this`
            BN.prototype.strip = function strip() {
              while (this.length > 1 && this.words[this.length - 1] === 0) {
                this.length--;
              }
              return this._normSign();
            };

            BN.prototype._normSign = function _normSign() {
              // -0 = 0
              if (this.length === 1 && this.words[0] === 0) {
                this.negative = 0;
              }
              return this;
            };

            BN.prototype.inspect = function inspect() {
              return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
            };

            /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

            var zeros = [
              '',
              '0',
              '00',
              '000',
              '0000',
              '00000',
              '000000',
              '0000000',
              '00000000',
              '000000000',
              '0000000000',
              '00000000000',
              '000000000000',
              '0000000000000',
              '00000000000000',
              '000000000000000',
              '0000000000000000',
              '00000000000000000',
              '000000000000000000',
              '0000000000000000000',
              '00000000000000000000',
              '000000000000000000000',
              '0000000000000000000000',
              '00000000000000000000000',
              '000000000000000000000000',
              '0000000000000000000000000',
            ];

            var groupSizes = [
              0,
              0,
              25,
              16,
              12,
              11,
              10,
              9,
              8,
              8,
              7,
              7,
              7,
              7,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
            ];

            var groupBases = [
              0,
              0,
              33554432,
              43046721,
              16777216,
              48828125,
              60466176,
              40353607,
              16777216,
              43046721,
              10000000,
              19487171,
              35831808,
              62748517,
              7529536,
              11390625,
              16777216,
              24137569,
              34012224,
              47045881,
              64000000,
              4084101,
              5153632,
              6436343,
              7962624,
              9765625,
              11881376,
              14348907,
              17210368,
              20511149,
              24300000,
              28629151,
              33554432,
              39135393,
              45435424,
              52521875,
              60466176,
            ];

            BN.prototype.toString = function toString(base, padding) {
              base = base || 10;
              padding = padding | 0 || 1;

              var out;
              if (base === 16 || base === 'hex') {
                out = '';
                var off = 0;
                var carry = 0;
                for (var i = 0; i < this.length; i++) {
                  var w = this.words[i];
                  var word = (((w << off) | carry) & 0xffffff).toString(16);
                  carry = (w >>> (24 - off)) & 0xffffff;
                  if (carry !== 0 || i !== this.length - 1) {
                    out = zeros[6 - word.length] + word + out;
                  } else {
                    out = word + out;
                  }
                  off += 2;
                  if (off >= 26) {
                    off -= 26;
                    i--;
                  }
                }
                if (carry !== 0) {
                  out = carry.toString(16) + out;
                }
                while (out.length % padding !== 0) {
                  out = '0' + out;
                }
                if (this.negative !== 0) {
                  out = '-' + out;
                }
                return out;
              }

              if (base === (base | 0) && base >= 2 && base <= 36) {
                // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
                var groupSize = groupSizes[base];
                // var groupBase = Math.pow(base, groupSize);
                var groupBase = groupBases[base];
                out = '';
                var c = this.clone();
                c.negative = 0;
                while (!c.isZero()) {
                  var r = c.modn(groupBase).toString(base);
                  c = c.idivn(groupBase);

                  if (!c.isZero()) {
                    out = zeros[groupSize - r.length] + r + out;
                  } else {
                    out = r + out;
                  }
                }
                if (this.isZero()) {
                  out = '0' + out;
                }
                while (out.length % padding !== 0) {
                  out = '0' + out;
                }
                if (this.negative !== 0) {
                  out = '-' + out;
                }
                return out;
              }

              assert(false, 'Base should be between 2 and 36');
            };

            BN.prototype.toNumber = function toNumber() {
              var ret = this.words[0];
              if (this.length === 2) {
                ret += this.words[1] * 0x4000000;
              } else if (this.length === 3 && this.words[2] === 0x01) {
                // NOTE: at this stage it is known that the top bit is set
                ret += 0x10000000000000 + this.words[1] * 0x4000000;
              } else if (this.length > 2) {
                assert(false, 'Number can only safely store up to 53 bits');
              }
              return this.negative !== 0 ? -ret : ret;
            };

            BN.prototype.toJSON = function toJSON() {
              return this.toString(16);
            };

            BN.prototype.toBuffer = function toBuffer(endian, length) {
              assert(typeof Buffer !== 'undefined');
              return this.toArrayLike(Buffer, endian, length);
            };

            BN.prototype.toArray = function toArray(endian, length) {
              return this.toArrayLike(Array, endian, length);
            };

            BN.prototype.toArrayLike = function toArrayLike(
              ArrayType,
              endian,
              length
            ) {
              var byteLength = this.byteLength();
              var reqLength = length || Math.max(1, byteLength);
              assert(
                byteLength <= reqLength,
                'byte array longer than desired length'
              );
              assert(reqLength > 0, 'Requested array length <= 0');

              this.strip();
              var littleEndian = endian === 'le';
              var res = new ArrayType(reqLength);

              var b, i;
              var q = this.clone();
              if (!littleEndian) {
                // Assume big-endian
                for (i = 0; i < reqLength - byteLength; i++) {
                  res[i] = 0;
                }

                for (i = 0; !q.isZero(); i++) {
                  b = q.andln(0xff);
                  q.iushrn(8);

                  res[reqLength - i - 1] = b;
                }
              } else {
                for (i = 0; !q.isZero(); i++) {
                  b = q.andln(0xff);
                  q.iushrn(8);

                  res[i] = b;
                }

                for (; i < reqLength; i++) {
                  res[i] = 0;
                }
              }

              return res;
            };

            if (Math.clz32) {
              BN.prototype._countBits = function _countBits(w) {
                return 32 - Math.clz32(w);
              };
            } else {
              BN.prototype._countBits = function _countBits(w) {
                var t = w;
                var r = 0;
                if (t >= 0x1000) {
                  r += 13;
                  t >>>= 13;
                }
                if (t >= 0x40) {
                  r += 7;
                  t >>>= 7;
                }
                if (t >= 0x8) {
                  r += 4;
                  t >>>= 4;
                }
                if (t >= 0x02) {
                  r += 2;
                  t >>>= 2;
                }
                return r + t;
              };
            }

            BN.prototype._zeroBits = function _zeroBits(w) {
              // Short-cut
              if (w === 0) return 26;

              var t = w;
              var r = 0;
              if ((t & 0x1fff) === 0) {
                r += 13;
                t >>>= 13;
              }
              if ((t & 0x7f) === 0) {
                r += 7;
                t >>>= 7;
              }
              if ((t & 0xf) === 0) {
                r += 4;
                t >>>= 4;
              }
              if ((t & 0x3) === 0) {
                r += 2;
                t >>>= 2;
              }
              if ((t & 0x1) === 0) {
                r++;
              }
              return r;
            };

            // Return number of used bits in a BN
            BN.prototype.bitLength = function bitLength() {
              var w = this.words[this.length - 1];
              var hi = this._countBits(w);
              return (this.length - 1) * 26 + hi;
            };

            function toBitArray(num) {
              var w = new Array(num.bitLength());

              for (var bit = 0; bit < w.length; bit++) {
                var off = (bit / 26) | 0;
                var wbit = bit % 26;

                w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
              }

              return w;
            }

            // Number of trailing zero bits
            BN.prototype.zeroBits = function zeroBits() {
              if (this.isZero()) return 0;

              var r = 0;
              for (var i = 0; i < this.length; i++) {
                var b = this._zeroBits(this.words[i]);
                r += b;
                if (b !== 26) break;
              }
              return r;
            };

            BN.prototype.byteLength = function byteLength() {
              return Math.ceil(this.bitLength() / 8);
            };

            BN.prototype.toTwos = function toTwos(width) {
              if (this.negative !== 0) {
                return this.abs().inotn(width).iaddn(1);
              }
              return this.clone();
            };

            BN.prototype.fromTwos = function fromTwos(width) {
              if (this.testn(width - 1)) {
                return this.notn(width).iaddn(1).ineg();
              }
              return this.clone();
            };

            BN.prototype.isNeg = function isNeg() {
              return this.negative !== 0;
            };

            // Return negative clone of `this`
            BN.prototype.neg = function neg() {
              return this.clone().ineg();
            };

            BN.prototype.ineg = function ineg() {
              if (!this.isZero()) {
                this.negative ^= 1;
              }

              return this;
            };

            // Or `num` with `this` in-place
            BN.prototype.iuor = function iuor(num) {
              while (this.length < num.length) {
                this.words[this.length++] = 0;
              }

              for (var i = 0; i < num.length; i++) {
                this.words[i] = this.words[i] | num.words[i];
              }

              return this.strip();
            };

            BN.prototype.ior = function ior(num) {
              assert((this.negative | num.negative) === 0);
              return this.iuor(num);
            };

            // Or `num` with `this`
            BN.prototype.or = function or(num) {
              if (this.length > num.length) return this.clone().ior(num);
              return num.clone().ior(this);
            };

            BN.prototype.uor = function uor(num) {
              if (this.length > num.length) return this.clone().iuor(num);
              return num.clone().iuor(this);
            };

            // And `num` with `this` in-place
            BN.prototype.iuand = function iuand(num) {
              // b = min-length(num, this)
              var b;
              if (this.length > num.length) {
                b = num;
              } else {
                b = this;
              }

              for (var i = 0; i < b.length; i++) {
                this.words[i] = this.words[i] & num.words[i];
              }

              this.length = b.length;

              return this.strip();
            };

            BN.prototype.iand = function iand(num) {
              assert((this.negative | num.negative) === 0);
              return this.iuand(num);
            };

            // And `num` with `this`
            BN.prototype.and = function and(num) {
              if (this.length > num.length) return this.clone().iand(num);
              return num.clone().iand(this);
            };

            BN.prototype.uand = function uand(num) {
              if (this.length > num.length) return this.clone().iuand(num);
              return num.clone().iuand(this);
            };

            // Xor `num` with `this` in-place
            BN.prototype.iuxor = function iuxor(num) {
              // a.length > b.length
              var a;
              var b;
              if (this.length > num.length) {
                a = this;
                b = num;
              } else {
                a = num;
                b = this;
              }

              for (var i = 0; i < b.length; i++) {
                this.words[i] = a.words[i] ^ b.words[i];
              }

              if (this !== a) {
                for (; i < a.length; i++) {
                  this.words[i] = a.words[i];
                }
              }

              this.length = a.length;

              return this.strip();
            };

            BN.prototype.ixor = function ixor(num) {
              assert((this.negative | num.negative) === 0);
              return this.iuxor(num);
            };

            // Xor `num` with `this`
            BN.prototype.xor = function xor(num) {
              if (this.length > num.length) return this.clone().ixor(num);
              return num.clone().ixor(this);
            };

            BN.prototype.uxor = function uxor(num) {
              if (this.length > num.length) return this.clone().iuxor(num);
              return num.clone().iuxor(this);
            };

            // Not ``this`` with ``width`` bitwidth
            BN.prototype.inotn = function inotn(width) {
              assert(typeof width === 'number' && width >= 0);

              var bytesNeeded = Math.ceil(width / 26) | 0;
              var bitsLeft = width % 26;

              // Extend the buffer with leading zeroes
              this._expand(bytesNeeded);

              if (bitsLeft > 0) {
                bytesNeeded--;
              }

              // Handle complete words
              for (var i = 0; i < bytesNeeded; i++) {
                this.words[i] = ~this.words[i] & 0x3ffffff;
              }

              // Handle the residue
              if (bitsLeft > 0) {
                this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
              }

              // And remove leading zeroes
              return this.strip();
            };

            BN.prototype.notn = function notn(width) {
              return this.clone().inotn(width);
            };

            // Set `bit` of `this`
            BN.prototype.setn = function setn(bit, val) {
              assert(typeof bit === 'number' && bit >= 0);

              var off = (bit / 26) | 0;
              var wbit = bit % 26;

              this._expand(off + 1);

              if (val) {
                this.words[off] = this.words[off] | (1 << wbit);
              } else {
                this.words[off] = this.words[off] & ~(1 << wbit);
              }

              return this.strip();
            };

            // Add `num` to `this` in-place
            BN.prototype.iadd = function iadd(num) {
              var r;

              // negative + positive
              if (this.negative !== 0 && num.negative === 0) {
                this.negative = 0;
                r = this.isub(num);
                this.negative ^= 1;
                return this._normSign();

                // positive + negative
              } else if (this.negative === 0 && num.negative !== 0) {
                num.negative = 0;
                r = this.isub(num);
                num.negative = 1;
                return r._normSign();
              }

              // a.length > b.length
              var a, b;
              if (this.length > num.length) {
                a = this;
                b = num;
              } else {
                a = num;
                b = this;
              }

              var carry = 0;
              for (var i = 0; i < b.length; i++) {
                r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
                this.words[i] = r & 0x3ffffff;
                carry = r >>> 26;
              }
              for (; carry !== 0 && i < a.length; i++) {
                r = (a.words[i] | 0) + carry;
                this.words[i] = r & 0x3ffffff;
                carry = r >>> 26;
              }

              this.length = a.length;
              if (carry !== 0) {
                this.words[this.length] = carry;
                this.length++;
                // Copy the rest of the words
              } else if (a !== this) {
                for (; i < a.length; i++) {
                  this.words[i] = a.words[i];
                }
              }

              return this;
            };

            // Add `num` to `this`
            BN.prototype.add = function add(num) {
              var res;
              if (num.negative !== 0 && this.negative === 0) {
                num.negative = 0;
                res = this.sub(num);
                num.negative ^= 1;
                return res;
              } else if (num.negative === 0 && this.negative !== 0) {
                this.negative = 0;
                res = num.sub(this);
                this.negative = 1;
                return res;
              }

              if (this.length > num.length) return this.clone().iadd(num);

              return num.clone().iadd(this);
            };

            // Subtract `num` from `this` in-place
            BN.prototype.isub = function isub(num) {
              // this - (-num) = this + num
              if (num.negative !== 0) {
                num.negative = 0;
                var r = this.iadd(num);
                num.negative = 1;
                return r._normSign();

                // -this - num = -(this + num)
              } else if (this.negative !== 0) {
                this.negative = 0;
                this.iadd(num);
                this.negative = 1;
                return this._normSign();
              }

              // At this point both numbers are positive
              var cmp = this.cmp(num);

              // Optimization - zeroify
              if (cmp === 0) {
                this.negative = 0;
                this.length = 1;
                this.words[0] = 0;
                return this;
              }

              // a > b
              var a, b;
              if (cmp > 0) {
                a = this;
                b = num;
              } else {
                a = num;
                b = this;
              }

              var carry = 0;
              for (var i = 0; i < b.length; i++) {
                r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
                carry = r >> 26;
                this.words[i] = r & 0x3ffffff;
              }
              for (; carry !== 0 && i < a.length; i++) {
                r = (a.words[i] | 0) + carry;
                carry = r >> 26;
                this.words[i] = r & 0x3ffffff;
              }

              // Copy rest of the words
              if (carry === 0 && i < a.length && a !== this) {
                for (; i < a.length; i++) {
                  this.words[i] = a.words[i];
                }
              }

              this.length = Math.max(this.length, i);

              if (a !== this) {
                this.negative = 1;
              }

              return this.strip();
            };

            // Subtract `num` from `this`
            BN.prototype.sub = function sub(num) {
              return this.clone().isub(num);
            };

            function smallMulTo(self, num, out) {
              out.negative = num.negative ^ self.negative;
              var len = (self.length + num.length) | 0;
              out.length = len;
              len = (len - 1) | 0;

              // Peel one iteration (compiler can't do it, because of code complexity)
              var a = self.words[0] | 0;
              var b = num.words[0] | 0;
              var r = a * b;

              var lo = r & 0x3ffffff;
              var carry = (r / 0x4000000) | 0;
              out.words[0] = lo;

              for (var k = 1; k < len; k++) {
                // Sum all words with the same `i + j = k` and accumulate `ncarry`,
                // note that ncarry could be >= 0x3ffffff
                var ncarry = carry >>> 26;
                var rword = carry & 0x3ffffff;
                var maxJ = Math.min(k, num.length - 1);
                for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                  var i = (k - j) | 0;
                  a = self.words[i] | 0;
                  b = num.words[j] | 0;
                  r = a * b + rword;
                  ncarry += (r / 0x4000000) | 0;
                  rword = r & 0x3ffffff;
                }
                out.words[k] = rword | 0;
                carry = ncarry | 0;
              }
              if (carry !== 0) {
                out.words[k] = carry | 0;
              } else {
                out.length--;
              }

              return out.strip();
            }

            // TODO(indutny): it may be reasonable to omit it for users who don't need
            // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
            // multiplication (like elliptic secp256k1).
            var comb10MulTo = function comb10MulTo(self, num, out) {
              var a = self.words;
              var b = num.words;
              var o = out.words;
              var c = 0;
              var lo;
              var mid;
              var hi;
              var a0 = a[0] | 0;
              var al0 = a0 & 0x1fff;
              var ah0 = a0 >>> 13;
              var a1 = a[1] | 0;
              var al1 = a1 & 0x1fff;
              var ah1 = a1 >>> 13;
              var a2 = a[2] | 0;
              var al2 = a2 & 0x1fff;
              var ah2 = a2 >>> 13;
              var a3 = a[3] | 0;
              var al3 = a3 & 0x1fff;
              var ah3 = a3 >>> 13;
              var a4 = a[4] | 0;
              var al4 = a4 & 0x1fff;
              var ah4 = a4 >>> 13;
              var a5 = a[5] | 0;
              var al5 = a5 & 0x1fff;
              var ah5 = a5 >>> 13;
              var a6 = a[6] | 0;
              var al6 = a6 & 0x1fff;
              var ah6 = a6 >>> 13;
              var a7 = a[7] | 0;
              var al7 = a7 & 0x1fff;
              var ah7 = a7 >>> 13;
              var a8 = a[8] | 0;
              var al8 = a8 & 0x1fff;
              var ah8 = a8 >>> 13;
              var a9 = a[9] | 0;
              var al9 = a9 & 0x1fff;
              var ah9 = a9 >>> 13;
              var b0 = b[0] | 0;
              var bl0 = b0 & 0x1fff;
              var bh0 = b0 >>> 13;
              var b1 = b[1] | 0;
              var bl1 = b1 & 0x1fff;
              var bh1 = b1 >>> 13;
              var b2 = b[2] | 0;
              var bl2 = b2 & 0x1fff;
              var bh2 = b2 >>> 13;
              var b3 = b[3] | 0;
              var bl3 = b3 & 0x1fff;
              var bh3 = b3 >>> 13;
              var b4 = b[4] | 0;
              var bl4 = b4 & 0x1fff;
              var bh4 = b4 >>> 13;
              var b5 = b[5] | 0;
              var bl5 = b5 & 0x1fff;
              var bh5 = b5 >>> 13;
              var b6 = b[6] | 0;
              var bl6 = b6 & 0x1fff;
              var bh6 = b6 >>> 13;
              var b7 = b[7] | 0;
              var bl7 = b7 & 0x1fff;
              var bh7 = b7 >>> 13;
              var b8 = b[8] | 0;
              var bl8 = b8 & 0x1fff;
              var bh8 = b8 >>> 13;
              var b9 = b[9] | 0;
              var bl9 = b9 & 0x1fff;
              var bh9 = b9 >>> 13;

              out.negative = self.negative ^ num.negative;
              out.length = 19;
              /* k = 0 */
              lo = Math.imul(al0, bl0);
              mid = Math.imul(al0, bh0);
              mid = (mid + Math.imul(ah0, bl0)) | 0;
              hi = Math.imul(ah0, bh0);
              var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
              w0 &= 0x3ffffff;
              /* k = 1 */
              lo = Math.imul(al1, bl0);
              mid = Math.imul(al1, bh0);
              mid = (mid + Math.imul(ah1, bl0)) | 0;
              hi = Math.imul(ah1, bh0);
              lo = (lo + Math.imul(al0, bl1)) | 0;
              mid = (mid + Math.imul(al0, bh1)) | 0;
              mid = (mid + Math.imul(ah0, bl1)) | 0;
              hi = (hi + Math.imul(ah0, bh1)) | 0;
              var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
              w1 &= 0x3ffffff;
              /* k = 2 */
              lo = Math.imul(al2, bl0);
              mid = Math.imul(al2, bh0);
              mid = (mid + Math.imul(ah2, bl0)) | 0;
              hi = Math.imul(ah2, bh0);
              lo = (lo + Math.imul(al1, bl1)) | 0;
              mid = (mid + Math.imul(al1, bh1)) | 0;
              mid = (mid + Math.imul(ah1, bl1)) | 0;
              hi = (hi + Math.imul(ah1, bh1)) | 0;
              lo = (lo + Math.imul(al0, bl2)) | 0;
              mid = (mid + Math.imul(al0, bh2)) | 0;
              mid = (mid + Math.imul(ah0, bl2)) | 0;
              hi = (hi + Math.imul(ah0, bh2)) | 0;
              var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
              w2 &= 0x3ffffff;
              /* k = 3 */
              lo = Math.imul(al3, bl0);
              mid = Math.imul(al3, bh0);
              mid = (mid + Math.imul(ah3, bl0)) | 0;
              hi = Math.imul(ah3, bh0);
              lo = (lo + Math.imul(al2, bl1)) | 0;
              mid = (mid + Math.imul(al2, bh1)) | 0;
              mid = (mid + Math.imul(ah2, bl1)) | 0;
              hi = (hi + Math.imul(ah2, bh1)) | 0;
              lo = (lo + Math.imul(al1, bl2)) | 0;
              mid = (mid + Math.imul(al1, bh2)) | 0;
              mid = (mid + Math.imul(ah1, bl2)) | 0;
              hi = (hi + Math.imul(ah1, bh2)) | 0;
              lo = (lo + Math.imul(al0, bl3)) | 0;
              mid = (mid + Math.imul(al0, bh3)) | 0;
              mid = (mid + Math.imul(ah0, bl3)) | 0;
              hi = (hi + Math.imul(ah0, bh3)) | 0;
              var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
              w3 &= 0x3ffffff;
              /* k = 4 */
              lo = Math.imul(al4, bl0);
              mid = Math.imul(al4, bh0);
              mid = (mid + Math.imul(ah4, bl0)) | 0;
              hi = Math.imul(ah4, bh0);
              lo = (lo + Math.imul(al3, bl1)) | 0;
              mid = (mid + Math.imul(al3, bh1)) | 0;
              mid = (mid + Math.imul(ah3, bl1)) | 0;
              hi = (hi + Math.imul(ah3, bh1)) | 0;
              lo = (lo + Math.imul(al2, bl2)) | 0;
              mid = (mid + Math.imul(al2, bh2)) | 0;
              mid = (mid + Math.imul(ah2, bl2)) | 0;
              hi = (hi + Math.imul(ah2, bh2)) | 0;
              lo = (lo + Math.imul(al1, bl3)) | 0;
              mid = (mid + Math.imul(al1, bh3)) | 0;
              mid = (mid + Math.imul(ah1, bl3)) | 0;
              hi = (hi + Math.imul(ah1, bh3)) | 0;
              lo = (lo + Math.imul(al0, bl4)) | 0;
              mid = (mid + Math.imul(al0, bh4)) | 0;
              mid = (mid + Math.imul(ah0, bl4)) | 0;
              hi = (hi + Math.imul(ah0, bh4)) | 0;
              var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
              w4 &= 0x3ffffff;
              /* k = 5 */
              lo = Math.imul(al5, bl0);
              mid = Math.imul(al5, bh0);
              mid = (mid + Math.imul(ah5, bl0)) | 0;
              hi = Math.imul(ah5, bh0);
              lo = (lo + Math.imul(al4, bl1)) | 0;
              mid = (mid + Math.imul(al4, bh1)) | 0;
              mid = (mid + Math.imul(ah4, bl1)) | 0;
              hi = (hi + Math.imul(ah4, bh1)) | 0;
              lo = (lo + Math.imul(al3, bl2)) | 0;
              mid = (mid + Math.imul(al3, bh2)) | 0;
              mid = (mid + Math.imul(ah3, bl2)) | 0;
              hi = (hi + Math.imul(ah3, bh2)) | 0;
              lo = (lo + Math.imul(al2, bl3)) | 0;
              mid = (mid + Math.imul(al2, bh3)) | 0;
              mid = (mid + Math.imul(ah2, bl3)) | 0;
              hi = (hi + Math.imul(ah2, bh3)) | 0;
              lo = (lo + Math.imul(al1, bl4)) | 0;
              mid = (mid + Math.imul(al1, bh4)) | 0;
              mid = (mid + Math.imul(ah1, bl4)) | 0;
              hi = (hi + Math.imul(ah1, bh4)) | 0;
              lo = (lo + Math.imul(al0, bl5)) | 0;
              mid = (mid + Math.imul(al0, bh5)) | 0;
              mid = (mid + Math.imul(ah0, bl5)) | 0;
              hi = (hi + Math.imul(ah0, bh5)) | 0;
              var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
              w5 &= 0x3ffffff;
              /* k = 6 */
              lo = Math.imul(al6, bl0);
              mid = Math.imul(al6, bh0);
              mid = (mid + Math.imul(ah6, bl0)) | 0;
              hi = Math.imul(ah6, bh0);
              lo = (lo + Math.imul(al5, bl1)) | 0;
              mid = (mid + Math.imul(al5, bh1)) | 0;
              mid = (mid + Math.imul(ah5, bl1)) | 0;
              hi = (hi + Math.imul(ah5, bh1)) | 0;
              lo = (lo + Math.imul(al4, bl2)) | 0;
              mid = (mid + Math.imul(al4, bh2)) | 0;
              mid = (mid + Math.imul(ah4, bl2)) | 0;
              hi = (hi + Math.imul(ah4, bh2)) | 0;
              lo = (lo + Math.imul(al3, bl3)) | 0;
              mid = (mid + Math.imul(al3, bh3)) | 0;
              mid = (mid + Math.imul(ah3, bl3)) | 0;
              hi = (hi + Math.imul(ah3, bh3)) | 0;
              lo = (lo + Math.imul(al2, bl4)) | 0;
              mid = (mid + Math.imul(al2, bh4)) | 0;
              mid = (mid + Math.imul(ah2, bl4)) | 0;
              hi = (hi + Math.imul(ah2, bh4)) | 0;
              lo = (lo + Math.imul(al1, bl5)) | 0;
              mid = (mid + Math.imul(al1, bh5)) | 0;
              mid = (mid + Math.imul(ah1, bl5)) | 0;
              hi = (hi + Math.imul(ah1, bh5)) | 0;
              lo = (lo + Math.imul(al0, bl6)) | 0;
              mid = (mid + Math.imul(al0, bh6)) | 0;
              mid = (mid + Math.imul(ah0, bl6)) | 0;
              hi = (hi + Math.imul(ah0, bh6)) | 0;
              var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
              w6 &= 0x3ffffff;
              /* k = 7 */
              lo = Math.imul(al7, bl0);
              mid = Math.imul(al7, bh0);
              mid = (mid + Math.imul(ah7, bl0)) | 0;
              hi = Math.imul(ah7, bh0);
              lo = (lo + Math.imul(al6, bl1)) | 0;
              mid = (mid + Math.imul(al6, bh1)) | 0;
              mid = (mid + Math.imul(ah6, bl1)) | 0;
              hi = (hi + Math.imul(ah6, bh1)) | 0;
              lo = (lo + Math.imul(al5, bl2)) | 0;
              mid = (mid + Math.imul(al5, bh2)) | 0;
              mid = (mid + Math.imul(ah5, bl2)) | 0;
              hi = (hi + Math.imul(ah5, bh2)) | 0;
              lo = (lo + Math.imul(al4, bl3)) | 0;
              mid = (mid + Math.imul(al4, bh3)) | 0;
              mid = (mid + Math.imul(ah4, bl3)) | 0;
              hi = (hi + Math.imul(ah4, bh3)) | 0;
              lo = (lo + Math.imul(al3, bl4)) | 0;
              mid = (mid + Math.imul(al3, bh4)) | 0;
              mid = (mid + Math.imul(ah3, bl4)) | 0;
              hi = (hi + Math.imul(ah3, bh4)) | 0;
              lo = (lo + Math.imul(al2, bl5)) | 0;
              mid = (mid + Math.imul(al2, bh5)) | 0;
              mid = (mid + Math.imul(ah2, bl5)) | 0;
              hi = (hi + Math.imul(ah2, bh5)) | 0;
              lo = (lo + Math.imul(al1, bl6)) | 0;
              mid = (mid + Math.imul(al1, bh6)) | 0;
              mid = (mid + Math.imul(ah1, bl6)) | 0;
              hi = (hi + Math.imul(ah1, bh6)) | 0;
              lo = (lo + Math.imul(al0, bl7)) | 0;
              mid = (mid + Math.imul(al0, bh7)) | 0;
              mid = (mid + Math.imul(ah0, bl7)) | 0;
              hi = (hi + Math.imul(ah0, bh7)) | 0;
              var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
              w7 &= 0x3ffffff;
              /* k = 8 */
              lo = Math.imul(al8, bl0);
              mid = Math.imul(al8, bh0);
              mid = (mid + Math.imul(ah8, bl0)) | 0;
              hi = Math.imul(ah8, bh0);
              lo = (lo + Math.imul(al7, bl1)) | 0;
              mid = (mid + Math.imul(al7, bh1)) | 0;
              mid = (mid + Math.imul(ah7, bl1)) | 0;
              hi = (hi + Math.imul(ah7, bh1)) | 0;
              lo = (lo + Math.imul(al6, bl2)) | 0;
              mid = (mid + Math.imul(al6, bh2)) | 0;
              mid = (mid + Math.imul(ah6, bl2)) | 0;
              hi = (hi + Math.imul(ah6, bh2)) | 0;
              lo = (lo + Math.imul(al5, bl3)) | 0;
              mid = (mid + Math.imul(al5, bh3)) | 0;
              mid = (mid + Math.imul(ah5, bl3)) | 0;
              hi = (hi + Math.imul(ah5, bh3)) | 0;
              lo = (lo + Math.imul(al4, bl4)) | 0;
              mid = (mid + Math.imul(al4, bh4)) | 0;
              mid = (mid + Math.imul(ah4, bl4)) | 0;
              hi = (hi + Math.imul(ah4, bh4)) | 0;
              lo = (lo + Math.imul(al3, bl5)) | 0;
              mid = (mid + Math.imul(al3, bh5)) | 0;
              mid = (mid + Math.imul(ah3, bl5)) | 0;
              hi = (hi + Math.imul(ah3, bh5)) | 0;
              lo = (lo + Math.imul(al2, bl6)) | 0;
              mid = (mid + Math.imul(al2, bh6)) | 0;
              mid = (mid + Math.imul(ah2, bl6)) | 0;
              hi = (hi + Math.imul(ah2, bh6)) | 0;
              lo = (lo + Math.imul(al1, bl7)) | 0;
              mid = (mid + Math.imul(al1, bh7)) | 0;
              mid = (mid + Math.imul(ah1, bl7)) | 0;
              hi = (hi + Math.imul(ah1, bh7)) | 0;
              lo = (lo + Math.imul(al0, bl8)) | 0;
              mid = (mid + Math.imul(al0, bh8)) | 0;
              mid = (mid + Math.imul(ah0, bl8)) | 0;
              hi = (hi + Math.imul(ah0, bh8)) | 0;
              var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
              w8 &= 0x3ffffff;
              /* k = 9 */
              lo = Math.imul(al9, bl0);
              mid = Math.imul(al9, bh0);
              mid = (mid + Math.imul(ah9, bl0)) | 0;
              hi = Math.imul(ah9, bh0);
              lo = (lo + Math.imul(al8, bl1)) | 0;
              mid = (mid + Math.imul(al8, bh1)) | 0;
              mid = (mid + Math.imul(ah8, bl1)) | 0;
              hi = (hi + Math.imul(ah8, bh1)) | 0;
              lo = (lo + Math.imul(al7, bl2)) | 0;
              mid = (mid + Math.imul(al7, bh2)) | 0;
              mid = (mid + Math.imul(ah7, bl2)) | 0;
              hi = (hi + Math.imul(ah7, bh2)) | 0;
              lo = (lo + Math.imul(al6, bl3)) | 0;
              mid = (mid + Math.imul(al6, bh3)) | 0;
              mid = (mid + Math.imul(ah6, bl3)) | 0;
              hi = (hi + Math.imul(ah6, bh3)) | 0;
              lo = (lo + Math.imul(al5, bl4)) | 0;
              mid = (mid + Math.imul(al5, bh4)) | 0;
              mid = (mid + Math.imul(ah5, bl4)) | 0;
              hi = (hi + Math.imul(ah5, bh4)) | 0;
              lo = (lo + Math.imul(al4, bl5)) | 0;
              mid = (mid + Math.imul(al4, bh5)) | 0;
              mid = (mid + Math.imul(ah4, bl5)) | 0;
              hi = (hi + Math.imul(ah4, bh5)) | 0;
              lo = (lo + Math.imul(al3, bl6)) | 0;
              mid = (mid + Math.imul(al3, bh6)) | 0;
              mid = (mid + Math.imul(ah3, bl6)) | 0;
              hi = (hi + Math.imul(ah3, bh6)) | 0;
              lo = (lo + Math.imul(al2, bl7)) | 0;
              mid = (mid + Math.imul(al2, bh7)) | 0;
              mid = (mid + Math.imul(ah2, bl7)) | 0;
              hi = (hi + Math.imul(ah2, bh7)) | 0;
              lo = (lo + Math.imul(al1, bl8)) | 0;
              mid = (mid + Math.imul(al1, bh8)) | 0;
              mid = (mid + Math.imul(ah1, bl8)) | 0;
              hi = (hi + Math.imul(ah1, bh8)) | 0;
              lo = (lo + Math.imul(al0, bl9)) | 0;
              mid = (mid + Math.imul(al0, bh9)) | 0;
              mid = (mid + Math.imul(ah0, bl9)) | 0;
              hi = (hi + Math.imul(ah0, bh9)) | 0;
              var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
              w9 &= 0x3ffffff;
              /* k = 10 */
              lo = Math.imul(al9, bl1);
              mid = Math.imul(al9, bh1);
              mid = (mid + Math.imul(ah9, bl1)) | 0;
              hi = Math.imul(ah9, bh1);
              lo = (lo + Math.imul(al8, bl2)) | 0;
              mid = (mid + Math.imul(al8, bh2)) | 0;
              mid = (mid + Math.imul(ah8, bl2)) | 0;
              hi = (hi + Math.imul(ah8, bh2)) | 0;
              lo = (lo + Math.imul(al7, bl3)) | 0;
              mid = (mid + Math.imul(al7, bh3)) | 0;
              mid = (mid + Math.imul(ah7, bl3)) | 0;
              hi = (hi + Math.imul(ah7, bh3)) | 0;
              lo = (lo + Math.imul(al6, bl4)) | 0;
              mid = (mid + Math.imul(al6, bh4)) | 0;
              mid = (mid + Math.imul(ah6, bl4)) | 0;
              hi = (hi + Math.imul(ah6, bh4)) | 0;
              lo = (lo + Math.imul(al5, bl5)) | 0;
              mid = (mid + Math.imul(al5, bh5)) | 0;
              mid = (mid + Math.imul(ah5, bl5)) | 0;
              hi = (hi + Math.imul(ah5, bh5)) | 0;
              lo = (lo + Math.imul(al4, bl6)) | 0;
              mid = (mid + Math.imul(al4, bh6)) | 0;
              mid = (mid + Math.imul(ah4, bl6)) | 0;
              hi = (hi + Math.imul(ah4, bh6)) | 0;
              lo = (lo + Math.imul(al3, bl7)) | 0;
              mid = (mid + Math.imul(al3, bh7)) | 0;
              mid = (mid + Math.imul(ah3, bl7)) | 0;
              hi = (hi + Math.imul(ah3, bh7)) | 0;
              lo = (lo + Math.imul(al2, bl8)) | 0;
              mid = (mid + Math.imul(al2, bh8)) | 0;
              mid = (mid + Math.imul(ah2, bl8)) | 0;
              hi = (hi + Math.imul(ah2, bh8)) | 0;
              lo = (lo + Math.imul(al1, bl9)) | 0;
              mid = (mid + Math.imul(al1, bh9)) | 0;
              mid = (mid + Math.imul(ah1, bl9)) | 0;
              hi = (hi + Math.imul(ah1, bh9)) | 0;
              var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
              w10 &= 0x3ffffff;
              /* k = 11 */
              lo = Math.imul(al9, bl2);
              mid = Math.imul(al9, bh2);
              mid = (mid + Math.imul(ah9, bl2)) | 0;
              hi = Math.imul(ah9, bh2);
              lo = (lo + Math.imul(al8, bl3)) | 0;
              mid = (mid + Math.imul(al8, bh3)) | 0;
              mid = (mid + Math.imul(ah8, bl3)) | 0;
              hi = (hi + Math.imul(ah8, bh3)) | 0;
              lo = (lo + Math.imul(al7, bl4)) | 0;
              mid = (mid + Math.imul(al7, bh4)) | 0;
              mid = (mid + Math.imul(ah7, bl4)) | 0;
              hi = (hi + Math.imul(ah7, bh4)) | 0;
              lo = (lo + Math.imul(al6, bl5)) | 0;
              mid = (mid + Math.imul(al6, bh5)) | 0;
              mid = (mid + Math.imul(ah6, bl5)) | 0;
              hi = (hi + Math.imul(ah6, bh5)) | 0;
              lo = (lo + Math.imul(al5, bl6)) | 0;
              mid = (mid + Math.imul(al5, bh6)) | 0;
              mid = (mid + Math.imul(ah5, bl6)) | 0;
              hi = (hi + Math.imul(ah5, bh6)) | 0;
              lo = (lo + Math.imul(al4, bl7)) | 0;
              mid = (mid + Math.imul(al4, bh7)) | 0;
              mid = (mid + Math.imul(ah4, bl7)) | 0;
              hi = (hi + Math.imul(ah4, bh7)) | 0;
              lo = (lo + Math.imul(al3, bl8)) | 0;
              mid = (mid + Math.imul(al3, bh8)) | 0;
              mid = (mid + Math.imul(ah3, bl8)) | 0;
              hi = (hi + Math.imul(ah3, bh8)) | 0;
              lo = (lo + Math.imul(al2, bl9)) | 0;
              mid = (mid + Math.imul(al2, bh9)) | 0;
              mid = (mid + Math.imul(ah2, bl9)) | 0;
              hi = (hi + Math.imul(ah2, bh9)) | 0;
              var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
              w11 &= 0x3ffffff;
              /* k = 12 */
              lo = Math.imul(al9, bl3);
              mid = Math.imul(al9, bh3);
              mid = (mid + Math.imul(ah9, bl3)) | 0;
              hi = Math.imul(ah9, bh3);
              lo = (lo + Math.imul(al8, bl4)) | 0;
              mid = (mid + Math.imul(al8, bh4)) | 0;
              mid = (mid + Math.imul(ah8, bl4)) | 0;
              hi = (hi + Math.imul(ah8, bh4)) | 0;
              lo = (lo + Math.imul(al7, bl5)) | 0;
              mid = (mid + Math.imul(al7, bh5)) | 0;
              mid = (mid + Math.imul(ah7, bl5)) | 0;
              hi = (hi + Math.imul(ah7, bh5)) | 0;
              lo = (lo + Math.imul(al6, bl6)) | 0;
              mid = (mid + Math.imul(al6, bh6)) | 0;
              mid = (mid + Math.imul(ah6, bl6)) | 0;
              hi = (hi + Math.imul(ah6, bh6)) | 0;
              lo = (lo + Math.imul(al5, bl7)) | 0;
              mid = (mid + Math.imul(al5, bh7)) | 0;
              mid = (mid + Math.imul(ah5, bl7)) | 0;
              hi = (hi + Math.imul(ah5, bh7)) | 0;
              lo = (lo + Math.imul(al4, bl8)) | 0;
              mid = (mid + Math.imul(al4, bh8)) | 0;
              mid = (mid + Math.imul(ah4, bl8)) | 0;
              hi = (hi + Math.imul(ah4, bh8)) | 0;
              lo = (lo + Math.imul(al3, bl9)) | 0;
              mid = (mid + Math.imul(al3, bh9)) | 0;
              mid = (mid + Math.imul(ah3, bl9)) | 0;
              hi = (hi + Math.imul(ah3, bh9)) | 0;
              var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
              w12 &= 0x3ffffff;
              /* k = 13 */
              lo = Math.imul(al9, bl4);
              mid = Math.imul(al9, bh4);
              mid = (mid + Math.imul(ah9, bl4)) | 0;
              hi = Math.imul(ah9, bh4);
              lo = (lo + Math.imul(al8, bl5)) | 0;
              mid = (mid + Math.imul(al8, bh5)) | 0;
              mid = (mid + Math.imul(ah8, bl5)) | 0;
              hi = (hi + Math.imul(ah8, bh5)) | 0;
              lo = (lo + Math.imul(al7, bl6)) | 0;
              mid = (mid + Math.imul(al7, bh6)) | 0;
              mid = (mid + Math.imul(ah7, bl6)) | 0;
              hi = (hi + Math.imul(ah7, bh6)) | 0;
              lo = (lo + Math.imul(al6, bl7)) | 0;
              mid = (mid + Math.imul(al6, bh7)) | 0;
              mid = (mid + Math.imul(ah6, bl7)) | 0;
              hi = (hi + Math.imul(ah6, bh7)) | 0;
              lo = (lo + Math.imul(al5, bl8)) | 0;
              mid = (mid + Math.imul(al5, bh8)) | 0;
              mid = (mid + Math.imul(ah5, bl8)) | 0;
              hi = (hi + Math.imul(ah5, bh8)) | 0;
              lo = (lo + Math.imul(al4, bl9)) | 0;
              mid = (mid + Math.imul(al4, bh9)) | 0;
              mid = (mid + Math.imul(ah4, bl9)) | 0;
              hi = (hi + Math.imul(ah4, bh9)) | 0;
              var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
              w13 &= 0x3ffffff;
              /* k = 14 */
              lo = Math.imul(al9, bl5);
              mid = Math.imul(al9, bh5);
              mid = (mid + Math.imul(ah9, bl5)) | 0;
              hi = Math.imul(ah9, bh5);
              lo = (lo + Math.imul(al8, bl6)) | 0;
              mid = (mid + Math.imul(al8, bh6)) | 0;
              mid = (mid + Math.imul(ah8, bl6)) | 0;
              hi = (hi + Math.imul(ah8, bh6)) | 0;
              lo = (lo + Math.imul(al7, bl7)) | 0;
              mid = (mid + Math.imul(al7, bh7)) | 0;
              mid = (mid + Math.imul(ah7, bl7)) | 0;
              hi = (hi + Math.imul(ah7, bh7)) | 0;
              lo = (lo + Math.imul(al6, bl8)) | 0;
              mid = (mid + Math.imul(al6, bh8)) | 0;
              mid = (mid + Math.imul(ah6, bl8)) | 0;
              hi = (hi + Math.imul(ah6, bh8)) | 0;
              lo = (lo + Math.imul(al5, bl9)) | 0;
              mid = (mid + Math.imul(al5, bh9)) | 0;
              mid = (mid + Math.imul(ah5, bl9)) | 0;
              hi = (hi + Math.imul(ah5, bh9)) | 0;
              var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
              w14 &= 0x3ffffff;
              /* k = 15 */
              lo = Math.imul(al9, bl6);
              mid = Math.imul(al9, bh6);
              mid = (mid + Math.imul(ah9, bl6)) | 0;
              hi = Math.imul(ah9, bh6);
              lo = (lo + Math.imul(al8, bl7)) | 0;
              mid = (mid + Math.imul(al8, bh7)) | 0;
              mid = (mid + Math.imul(ah8, bl7)) | 0;
              hi = (hi + Math.imul(ah8, bh7)) | 0;
              lo = (lo + Math.imul(al7, bl8)) | 0;
              mid = (mid + Math.imul(al7, bh8)) | 0;
              mid = (mid + Math.imul(ah7, bl8)) | 0;
              hi = (hi + Math.imul(ah7, bh8)) | 0;
              lo = (lo + Math.imul(al6, bl9)) | 0;
              mid = (mid + Math.imul(al6, bh9)) | 0;
              mid = (mid + Math.imul(ah6, bl9)) | 0;
              hi = (hi + Math.imul(ah6, bh9)) | 0;
              var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
              w15 &= 0x3ffffff;
              /* k = 16 */
              lo = Math.imul(al9, bl7);
              mid = Math.imul(al9, bh7);
              mid = (mid + Math.imul(ah9, bl7)) | 0;
              hi = Math.imul(ah9, bh7);
              lo = (lo + Math.imul(al8, bl8)) | 0;
              mid = (mid + Math.imul(al8, bh8)) | 0;
              mid = (mid + Math.imul(ah8, bl8)) | 0;
              hi = (hi + Math.imul(ah8, bh8)) | 0;
              lo = (lo + Math.imul(al7, bl9)) | 0;
              mid = (mid + Math.imul(al7, bh9)) | 0;
              mid = (mid + Math.imul(ah7, bl9)) | 0;
              hi = (hi + Math.imul(ah7, bh9)) | 0;
              var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
              w16 &= 0x3ffffff;
              /* k = 17 */
              lo = Math.imul(al9, bl8);
              mid = Math.imul(al9, bh8);
              mid = (mid + Math.imul(ah9, bl8)) | 0;
              hi = Math.imul(ah9, bh8);
              lo = (lo + Math.imul(al8, bl9)) | 0;
              mid = (mid + Math.imul(al8, bh9)) | 0;
              mid = (mid + Math.imul(ah8, bl9)) | 0;
              hi = (hi + Math.imul(ah8, bh9)) | 0;
              var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
              w17 &= 0x3ffffff;
              /* k = 18 */
              lo = Math.imul(al9, bl9);
              mid = Math.imul(al9, bh9);
              mid = (mid + Math.imul(ah9, bl9)) | 0;
              hi = Math.imul(ah9, bh9);
              var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
              w18 &= 0x3ffffff;
              o[0] = w0;
              o[1] = w1;
              o[2] = w2;
              o[3] = w3;
              o[4] = w4;
              o[5] = w5;
              o[6] = w6;
              o[7] = w7;
              o[8] = w8;
              o[9] = w9;
              o[10] = w10;
              o[11] = w11;
              o[12] = w12;
              o[13] = w13;
              o[14] = w14;
              o[15] = w15;
              o[16] = w16;
              o[17] = w17;
              o[18] = w18;
              if (c !== 0) {
                o[19] = c;
                out.length++;
              }
              return out;
            };

            // Polyfill comb
            if (!Math.imul) {
              comb10MulTo = smallMulTo;
            }

            function bigMulTo(self, num, out) {
              out.negative = num.negative ^ self.negative;
              out.length = self.length + num.length;

              var carry = 0;
              var hncarry = 0;
              for (var k = 0; k < out.length - 1; k++) {
                // Sum all words with the same `i + j = k` and accumulate `ncarry`,
                // note that ncarry could be >= 0x3ffffff
                var ncarry = hncarry;
                hncarry = 0;
                var rword = carry & 0x3ffffff;
                var maxJ = Math.min(k, num.length - 1);
                for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                  var i = k - j;
                  var a = self.words[i] | 0;
                  var b = num.words[j] | 0;
                  var r = a * b;

                  var lo = r & 0x3ffffff;
                  ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
                  lo = (lo + rword) | 0;
                  rword = lo & 0x3ffffff;
                  ncarry = (ncarry + (lo >>> 26)) | 0;

                  hncarry += ncarry >>> 26;
                  ncarry &= 0x3ffffff;
                }
                out.words[k] = rword;
                carry = ncarry;
                ncarry = hncarry;
              }
              if (carry !== 0) {
                out.words[k] = carry;
              } else {
                out.length--;
              }

              return out.strip();
            }

            function jumboMulTo(self, num, out) {
              var fftm = new FFTM();
              return fftm.mulp(self, num, out);
            }

            BN.prototype.mulTo = function mulTo(num, out) {
              var res;
              var len = this.length + num.length;
              if (this.length === 10 && num.length === 10) {
                res = comb10MulTo(this, num, out);
              } else if (len < 63) {
                res = smallMulTo(this, num, out);
              } else if (len < 1024) {
                res = bigMulTo(this, num, out);
              } else {
                res = jumboMulTo(this, num, out);
              }

              return res;
            };

            // Cooley-Tukey algorithm for FFT
            // slightly revisited to rely on looping instead of recursion

            function FFTM(x, y) {
              this.x = x;
              this.y = y;
            }

            FFTM.prototype.makeRBT = function makeRBT(N) {
              var t = new Array(N);
              var l = BN.prototype._countBits(N) - 1;
              for (var i = 0; i < N; i++) {
                t[i] = this.revBin(i, l, N);
              }

              return t;
            };

            // Returns binary-reversed representation of `x`
            FFTM.prototype.revBin = function revBin(x, l, N) {
              if (x === 0 || x === N - 1) return x;

              var rb = 0;
              for (var i = 0; i < l; i++) {
                rb |= (x & 1) << (l - i - 1);
                x >>= 1;
              }

              return rb;
            };

            // Performs "tweedling" phase, therefore 'emulating'
            // behaviour of the recursive algorithm
            FFTM.prototype.permute = function permute(
              rbt,
              rws,
              iws,
              rtws,
              itws,
              N
            ) {
              for (var i = 0; i < N; i++) {
                rtws[i] = rws[rbt[i]];
                itws[i] = iws[rbt[i]];
              }
            };

            FFTM.prototype.transform = function transform(
              rws,
              iws,
              rtws,
              itws,
              N,
              rbt
            ) {
              this.permute(rbt, rws, iws, rtws, itws, N);

              for (var s = 1; s < N; s <<= 1) {
                var l = s << 1;

                var rtwdf = Math.cos((2 * Math.PI) / l);
                var itwdf = Math.sin((2 * Math.PI) / l);

                for (var p = 0; p < N; p += l) {
                  var rtwdf_ = rtwdf;
                  var itwdf_ = itwdf;

                  for (var j = 0; j < s; j++) {
                    var re = rtws[p + j];
                    var ie = itws[p + j];

                    var ro = rtws[p + j + s];
                    var io = itws[p + j + s];

                    var rx = rtwdf_ * ro - itwdf_ * io;

                    io = rtwdf_ * io + itwdf_ * ro;
                    ro = rx;

                    rtws[p + j] = re + ro;
                    itws[p + j] = ie + io;

                    rtws[p + j + s] = re - ro;
                    itws[p + j + s] = ie - io;

                    /* jshint maxdepth : false */
                    if (j !== l) {
                      rx = rtwdf * rtwdf_ - itwdf * itwdf_;

                      itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                      rtwdf_ = rx;
                    }
                  }
                }
              }
            };

            FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
              var N = Math.max(m, n) | 1;
              var odd = N & 1;
              var i = 0;
              for (N = (N / 2) | 0; N; N = N >>> 1) {
                i++;
              }

              return 1 << (i + 1 + odd);
            };

            FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
              if (N <= 1) return;

              for (var i = 0; i < N / 2; i++) {
                var t = rws[i];

                rws[i] = rws[N - i - 1];
                rws[N - i - 1] = t;

                t = iws[i];

                iws[i] = -iws[N - i - 1];
                iws[N - i - 1] = -t;
              }
            };

            FFTM.prototype.normalize13b = function normalize13b(ws, N) {
              var carry = 0;
              for (var i = 0; i < N / 2; i++) {
                var w =
                  Math.round(ws[2 * i + 1] / N) * 0x2000 +
                  Math.round(ws[2 * i] / N) +
                  carry;

                ws[i] = w & 0x3ffffff;

                if (w < 0x4000000) {
                  carry = 0;
                } else {
                  carry = (w / 0x4000000) | 0;
                }
              }

              return ws;
            };

            FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
              var carry = 0;
              for (var i = 0; i < len; i++) {
                carry = carry + (ws[i] | 0);

                rws[2 * i] = carry & 0x1fff;
                carry = carry >>> 13;
                rws[2 * i + 1] = carry & 0x1fff;
                carry = carry >>> 13;
              }

              // Pad with zeroes
              for (i = 2 * len; i < N; ++i) {
                rws[i] = 0;
              }

              assert(carry === 0);
              assert((carry & ~0x1fff) === 0);
            };

            FFTM.prototype.stub = function stub(N) {
              var ph = new Array(N);
              for (var i = 0; i < N; i++) {
                ph[i] = 0;
              }

              return ph;
            };

            FFTM.prototype.mulp = function mulp(x, y, out) {
              var N = 2 * this.guessLen13b(x.length, y.length);

              var rbt = this.makeRBT(N);

              var _ = this.stub(N);

              var rws = new Array(N);
              var rwst = new Array(N);
              var iwst = new Array(N);

              var nrws = new Array(N);
              var nrwst = new Array(N);
              var niwst = new Array(N);

              var rmws = out.words;
              rmws.length = N;

              this.convert13b(x.words, x.length, rws, N);
              this.convert13b(y.words, y.length, nrws, N);

              this.transform(rws, _, rwst, iwst, N, rbt);
              this.transform(nrws, _, nrwst, niwst, N, rbt);

              for (var i = 0; i < N; i++) {
                var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
                iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
                rwst[i] = rx;
              }

              this.conjugate(rwst, iwst, N);
              this.transform(rwst, iwst, rmws, _, N, rbt);
              this.conjugate(rmws, _, N);
              this.normalize13b(rmws, N);

              out.negative = x.negative ^ y.negative;
              out.length = x.length + y.length;
              return out.strip();
            };

            // Multiply `this` by `num`
            BN.prototype.mul = function mul(num) {
              var out = new BN(null);
              out.words = new Array(this.length + num.length);
              return this.mulTo(num, out);
            };

            // Multiply employing FFT
            BN.prototype.mulf = function mulf(num) {
              var out = new BN(null);
              out.words = new Array(this.length + num.length);
              return jumboMulTo(this, num, out);
            };

            // In-place Multiplication
            BN.prototype.imul = function imul(num) {
              return this.clone().mulTo(num, this);
            };

            BN.prototype.imuln = function imuln(num) {
              assert(typeof num === 'number');
              assert(num < 0x4000000);

              // Carry
              var carry = 0;
              for (var i = 0; i < this.length; i++) {
                var w = (this.words[i] | 0) * num;
                var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
                carry >>= 26;
                carry += (w / 0x4000000) | 0;
                // NOTE: lo is 27bit maximum
                carry += lo >>> 26;
                this.words[i] = lo & 0x3ffffff;
              }

              if (carry !== 0) {
                this.words[i] = carry;
                this.length++;
              }

              return this;
            };

            BN.prototype.muln = function muln(num) {
              return this.clone().imuln(num);
            };

            // `this` * `this`
            BN.prototype.sqr = function sqr() {
              return this.mul(this);
            };

            // `this` * `this` in-place
            BN.prototype.isqr = function isqr() {
              return this.imul(this.clone());
            };

            // Math.pow(`this`, `num`)
            BN.prototype.pow = function pow(num) {
              var w = toBitArray(num);
              if (w.length === 0) return new BN(1);

              // Skip leading zeroes
              var res = this;
              for (var i = 0; i < w.length; i++, res = res.sqr()) {
                if (w[i] !== 0) break;
              }

              if (++i < w.length) {
                for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
                  if (w[i] === 0) continue;

                  res = res.mul(q);
                }
              }

              return res;
            };

            // Shift-left in-place
            BN.prototype.iushln = function iushln(bits) {
              assert(typeof bits === 'number' && bits >= 0);
              var r = bits % 26;
              var s = (bits - r) / 26;
              var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
              var i;

              if (r !== 0) {
                var carry = 0;

                for (i = 0; i < this.length; i++) {
                  var newCarry = this.words[i] & carryMask;
                  var c = ((this.words[i] | 0) - newCarry) << r;
                  this.words[i] = c | carry;
                  carry = newCarry >>> (26 - r);
                }

                if (carry) {
                  this.words[i] = carry;
                  this.length++;
                }
              }

              if (s !== 0) {
                for (i = this.length - 1; i >= 0; i--) {
                  this.words[i + s] = this.words[i];
                }

                for (i = 0; i < s; i++) {
                  this.words[i] = 0;
                }

                this.length += s;
              }

              return this.strip();
            };

            BN.prototype.ishln = function ishln(bits) {
              // TODO(indutny): implement me
              assert(this.negative === 0);
              return this.iushln(bits);
            };

            // Shift-right in-place
            // NOTE: `hint` is a lowest bit before trailing zeroes
            // NOTE: if `extended` is present - it will be filled with destroyed bits
            BN.prototype.iushrn = function iushrn(bits, hint, extended) {
              assert(typeof bits === 'number' && bits >= 0);
              var h;
              if (hint) {
                h = (hint - (hint % 26)) / 26;
              } else {
                h = 0;
              }

              var r = bits % 26;
              var s = Math.min((bits - r) / 26, this.length);
              var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
              var maskedWords = extended;

              h -= s;
              h = Math.max(0, h);

              // Extended mode, copy masked part
              if (maskedWords) {
                for (var i = 0; i < s; i++) {
                  maskedWords.words[i] = this.words[i];
                }
                maskedWords.length = s;
              }

              if (s === 0) {
                // No-op, we should not move anything at all
              } else if (this.length > s) {
                this.length -= s;
                for (i = 0; i < this.length; i++) {
                  this.words[i] = this.words[i + s];
                }
              } else {
                this.words[0] = 0;
                this.length = 1;
              }

              var carry = 0;
              for (
                i = this.length - 1;
                i >= 0 && (carry !== 0 || i >= h);
                i--
              ) {
                var word = this.words[i] | 0;
                this.words[i] = (carry << (26 - r)) | (word >>> r);
                carry = word & mask;
              }

              // Push carried bits as a mask
              if (maskedWords && carry !== 0) {
                maskedWords.words[maskedWords.length++] = carry;
              }

              if (this.length === 0) {
                this.words[0] = 0;
                this.length = 1;
              }

              return this.strip();
            };

            BN.prototype.ishrn = function ishrn(bits, hint, extended) {
              // TODO(indutny): implement me
              assert(this.negative === 0);
              return this.iushrn(bits, hint, extended);
            };

            // Shift-left
            BN.prototype.shln = function shln(bits) {
              return this.clone().ishln(bits);
            };

            BN.prototype.ushln = function ushln(bits) {
              return this.clone().iushln(bits);
            };

            // Shift-right
            BN.prototype.shrn = function shrn(bits) {
              return this.clone().ishrn(bits);
            };

            BN.prototype.ushrn = function ushrn(bits) {
              return this.clone().iushrn(bits);
            };

            // Test if n bit is set
            BN.prototype.testn = function testn(bit) {
              assert(typeof bit === 'number' && bit >= 0);
              var r = bit % 26;
              var s = (bit - r) / 26;
              var q = 1 << r;

              // Fast case: bit is much higher than all existing words
              if (this.length <= s) return false;

              // Check bit and return
              var w = this.words[s];

              return !!(w & q);
            };

            // Return only lowers bits of number (in-place)
            BN.prototype.imaskn = function imaskn(bits) {
              assert(typeof bits === 'number' && bits >= 0);
              var r = bits % 26;
              var s = (bits - r) / 26;

              assert(
                this.negative === 0,
                'imaskn works only with positive numbers'
              );

              if (this.length <= s) {
                return this;
              }

              if (r !== 0) {
                s++;
              }
              this.length = Math.min(s, this.length);

              if (r !== 0) {
                var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
                this.words[this.length - 1] &= mask;
              }

              return this.strip();
            };

            // Return only lowers bits of number
            BN.prototype.maskn = function maskn(bits) {
              return this.clone().imaskn(bits);
            };

            // Add plain number `num` to `this`
            BN.prototype.iaddn = function iaddn(num) {
              assert(typeof num === 'number');
              assert(num < 0x4000000);
              if (num < 0) return this.isubn(-num);

              // Possible sign change
              if (this.negative !== 0) {
                if (this.length === 1 && (this.words[0] | 0) < num) {
                  this.words[0] = num - (this.words[0] | 0);
                  this.negative = 0;
                  return this;
                }

                this.negative = 0;
                this.isubn(num);
                this.negative = 1;
                return this;
              }

              // Add without checks
              return this._iaddn(num);
            };

            BN.prototype._iaddn = function _iaddn(num) {
              this.words[0] += num;

              // Carry
              for (
                var i = 0;
                i < this.length && this.words[i] >= 0x4000000;
                i++
              ) {
                this.words[i] -= 0x4000000;
                if (i === this.length - 1) {
                  this.words[i + 1] = 1;
                } else {
                  this.words[i + 1]++;
                }
              }
              this.length = Math.max(this.length, i + 1);

              return this;
            };

            // Subtract plain number `num` from `this`
            BN.prototype.isubn = function isubn(num) {
              assert(typeof num === 'number');
              assert(num < 0x4000000);
              if (num < 0) return this.iaddn(-num);

              if (this.negative !== 0) {
                this.negative = 0;
                this.iaddn(num);
                this.negative = 1;
                return this;
              }

              this.words[0] -= num;

              if (this.length === 1 && this.words[0] < 0) {
                this.words[0] = -this.words[0];
                this.negative = 1;
              } else {
                // Carry
                for (var i = 0; i < this.length && this.words[i] < 0; i++) {
                  this.words[i] += 0x4000000;
                  this.words[i + 1] -= 1;
                }
              }

              return this.strip();
            };

            BN.prototype.addn = function addn(num) {
              return this.clone().iaddn(num);
            };

            BN.prototype.subn = function subn(num) {
              return this.clone().isubn(num);
            };

            BN.prototype.iabs = function iabs() {
              this.negative = 0;

              return this;
            };

            BN.prototype.abs = function abs() {
              return this.clone().iabs();
            };

            BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
              var len = num.length + shift;
              var i;

              this._expand(len);

              var w;
              var carry = 0;
              for (i = 0; i < num.length; i++) {
                w = (this.words[i + shift] | 0) + carry;
                var right = (num.words[i] | 0) * mul;
                w -= right & 0x3ffffff;
                carry = (w >> 26) - ((right / 0x4000000) | 0);
                this.words[i + shift] = w & 0x3ffffff;
              }
              for (; i < this.length - shift; i++) {
                w = (this.words[i + shift] | 0) + carry;
                carry = w >> 26;
                this.words[i + shift] = w & 0x3ffffff;
              }

              if (carry === 0) return this.strip();

              // Subtraction overflow
              assert(carry === -1);
              carry = 0;
              for (i = 0; i < this.length; i++) {
                w = -(this.words[i] | 0) + carry;
                carry = w >> 26;
                this.words[i] = w & 0x3ffffff;
              }
              this.negative = 1;

              return this.strip();
            };

            BN.prototype._wordDiv = function _wordDiv(num, mode) {
              var shift = this.length - num.length;

              var a = this.clone();
              var b = num;

              // Normalize
              var bhi = b.words[b.length - 1] | 0;
              var bhiBits = this._countBits(bhi);
              shift = 26 - bhiBits;
              if (shift !== 0) {
                b = b.ushln(shift);
                a.iushln(shift);
                bhi = b.words[b.length - 1] | 0;
              }

              // Initialize quotient
              var m = a.length - b.length;
              var q;

              if (mode !== 'mod') {
                q = new BN(null);
                q.length = m + 1;
                q.words = new Array(q.length);
                for (var i = 0; i < q.length; i++) {
                  q.words[i] = 0;
                }
              }

              var diff = a.clone()._ishlnsubmul(b, 1, m);
              if (diff.negative === 0) {
                a = diff;
                if (q) {
                  q.words[m] = 1;
                }
              }

              for (var j = m - 1; j >= 0; j--) {
                var qj =
                  (a.words[b.length + j] | 0) * 0x4000000 +
                  (a.words[b.length + j - 1] | 0);

                // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
                // (0x7ffffff)
                qj = Math.min((qj / bhi) | 0, 0x3ffffff);

                a._ishlnsubmul(b, qj, j);
                while (a.negative !== 0) {
                  qj--;
                  a.negative = 0;
                  a._ishlnsubmul(b, 1, j);
                  if (!a.isZero()) {
                    a.negative ^= 1;
                  }
                }
                if (q) {
                  q.words[j] = qj;
                }
              }
              if (q) {
                q.strip();
              }
              a.strip();

              // Denormalize
              if (mode !== 'div' && shift !== 0) {
                a.iushrn(shift);
              }

              return {
                div: q || null,
                mod: a,
              };
            };

            // NOTE: 1) `mode` can be set to `mod` to request mod only,
            //       to `div` to request div only, or be absent to
            //       request both div & mod
            //       2) `positive` is true if unsigned mod is requested
            BN.prototype.divmod = function divmod(num, mode, positive) {
              assert(!num.isZero());

              if (this.isZero()) {
                return {
                  div: new BN(0),
                  mod: new BN(0),
                };
              }

              var div, mod, res;
              if (this.negative !== 0 && num.negative === 0) {
                res = this.neg().divmod(num, mode);

                if (mode !== 'mod') {
                  div = res.div.neg();
                }

                if (mode !== 'div') {
                  mod = res.mod.neg();
                  if (positive && mod.negative !== 0) {
                    mod.iadd(num);
                  }
                }

                return {
                  div: div,
                  mod: mod,
                };
              }

              if (this.negative === 0 && num.negative !== 0) {
                res = this.divmod(num.neg(), mode);

                if (mode !== 'mod') {
                  div = res.div.neg();
                }

                return {
                  div: div,
                  mod: res.mod,
                };
              }

              if ((this.negative & num.negative) !== 0) {
                res = this.neg().divmod(num.neg(), mode);

                if (mode !== 'div') {
                  mod = res.mod.neg();
                  if (positive && mod.negative !== 0) {
                    mod.isub(num);
                  }
                }

                return {
                  div: res.div,
                  mod: mod,
                };
              }

              // Both numbers are positive at this point

              // Strip both numbers to approximate shift value
              if (num.length > this.length || this.cmp(num) < 0) {
                return {
                  div: new BN(0),
                  mod: this,
                };
              }

              // Very short reduction
              if (num.length === 1) {
                if (mode === 'div') {
                  return {
                    div: this.divn(num.words[0]),
                    mod: null,
                  };
                }

                if (mode === 'mod') {
                  return {
                    div: null,
                    mod: new BN(this.modn(num.words[0])),
                  };
                }

                return {
                  div: this.divn(num.words[0]),
                  mod: new BN(this.modn(num.words[0])),
                };
              }

              return this._wordDiv(num, mode);
            };

            // Find `this` / `num`
            BN.prototype.div = function div(num) {
              return this.divmod(num, 'div', false).div;
            };

            // Find `this` % `num`
            BN.prototype.mod = function mod(num) {
              return this.divmod(num, 'mod', false).mod;
            };

            BN.prototype.umod = function umod(num) {
              return this.divmod(num, 'mod', true).mod;
            };

            // Find Round(`this` / `num`)
            BN.prototype.divRound = function divRound(num) {
              var dm = this.divmod(num);

              // Fast case - exact division
              if (dm.mod.isZero()) return dm.div;

              var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

              var half = num.ushrn(1);
              var r2 = num.andln(1);
              var cmp = mod.cmp(half);

              // Round down
              if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;

              // Round up
              return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
            };

            BN.prototype.modn = function modn(num) {
              assert(num <= 0x3ffffff);
              var p = (1 << 26) % num;

              var acc = 0;
              for (var i = this.length - 1; i >= 0; i--) {
                acc = (p * acc + (this.words[i] | 0)) % num;
              }

              return acc;
            };

            // In-place division by number
            BN.prototype.idivn = function idivn(num) {
              assert(num <= 0x3ffffff);

              var carry = 0;
              for (var i = this.length - 1; i >= 0; i--) {
                var w = (this.words[i] | 0) + carry * 0x4000000;
                this.words[i] = (w / num) | 0;
                carry = w % num;
              }

              return this.strip();
            };

            BN.prototype.divn = function divn(num) {
              return this.clone().idivn(num);
            };

            BN.prototype.egcd = function egcd(p) {
              assert(p.negative === 0);
              assert(!p.isZero());

              var x = this;
              var y = p.clone();

              if (x.negative !== 0) {
                x = x.umod(p);
              } else {
                x = x.clone();
              }

              // A * x + B * y = x
              var A = new BN(1);
              var B = new BN(0);

              // C * x + D * y = y
              var C = new BN(0);
              var D = new BN(1);

              var g = 0;

              while (x.isEven() && y.isEven()) {
                x.iushrn(1);
                y.iushrn(1);
                ++g;
              }

              var yp = y.clone();
              var xp = x.clone();

              while (!x.isZero()) {
                for (
                  var i = 0, im = 1;
                  (x.words[0] & im) === 0 && i < 26;
                  ++i, im <<= 1
                );
                if (i > 0) {
                  x.iushrn(i);
                  while (i-- > 0) {
                    if (A.isOdd() || B.isOdd()) {
                      A.iadd(yp);
                      B.isub(xp);
                    }

                    A.iushrn(1);
                    B.iushrn(1);
                  }
                }

                for (
                  var j = 0, jm = 1;
                  (y.words[0] & jm) === 0 && j < 26;
                  ++j, jm <<= 1
                );
                if (j > 0) {
                  y.iushrn(j);
                  while (j-- > 0) {
                    if (C.isOdd() || D.isOdd()) {
                      C.iadd(yp);
                      D.isub(xp);
                    }

                    C.iushrn(1);
                    D.iushrn(1);
                  }
                }

                if (x.cmp(y) >= 0) {
                  x.isub(y);
                  A.isub(C);
                  B.isub(D);
                } else {
                  y.isub(x);
                  C.isub(A);
                  D.isub(B);
                }
              }

              return {
                a: C,
                b: D,
                gcd: y.iushln(g),
              };
            };

            // This is reduced incarnation of the binary EEA
            // above, designated to invert members of the
            // _prime_ fields F(p) at a maximal speed
            BN.prototype._invmp = function _invmp(p) {
              assert(p.negative === 0);
              assert(!p.isZero());

              var a = this;
              var b = p.clone();

              if (a.negative !== 0) {
                a = a.umod(p);
              } else {
                a = a.clone();
              }

              var x1 = new BN(1);
              var x2 = new BN(0);

              var delta = b.clone();

              while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
                for (
                  var i = 0, im = 1;
                  (a.words[0] & im) === 0 && i < 26;
                  ++i, im <<= 1
                );
                if (i > 0) {
                  a.iushrn(i);
                  while (i-- > 0) {
                    if (x1.isOdd()) {
                      x1.iadd(delta);
                    }

                    x1.iushrn(1);
                  }
                }

                for (
                  var j = 0, jm = 1;
                  (b.words[0] & jm) === 0 && j < 26;
                  ++j, jm <<= 1
                );
                if (j > 0) {
                  b.iushrn(j);
                  while (j-- > 0) {
                    if (x2.isOdd()) {
                      x2.iadd(delta);
                    }

                    x2.iushrn(1);
                  }
                }

                if (a.cmp(b) >= 0) {
                  a.isub(b);
                  x1.isub(x2);
                } else {
                  b.isub(a);
                  x2.isub(x1);
                }
              }

              var res;
              if (a.cmpn(1) === 0) {
                res = x1;
              } else {
                res = x2;
              }

              if (res.cmpn(0) < 0) {
                res.iadd(p);
              }

              return res;
            };

            BN.prototype.gcd = function gcd(num) {
              if (this.isZero()) return num.abs();
              if (num.isZero()) return this.abs();

              var a = this.clone();
              var b = num.clone();
              a.negative = 0;
              b.negative = 0;

              // Remove common factor of two
              for (var shift = 0; a.isEven() && b.isEven(); shift++) {
                a.iushrn(1);
                b.iushrn(1);
              }

              do {
                while (a.isEven()) {
                  a.iushrn(1);
                }
                while (b.isEven()) {
                  b.iushrn(1);
                }

                var r = a.cmp(b);
                if (r < 0) {
                  // Swap `a` and `b` to make `a` always bigger than `b`
                  var t = a;
                  a = b;
                  b = t;
                } else if (r === 0 || b.cmpn(1) === 0) {
                  break;
                }

                a.isub(b);
              } while (true);

              return b.iushln(shift);
            };

            // Invert number in the field F(num)
            BN.prototype.invm = function invm(num) {
              return this.egcd(num).a.umod(num);
            };

            BN.prototype.isEven = function isEven() {
              return (this.words[0] & 1) === 0;
            };

            BN.prototype.isOdd = function isOdd() {
              return (this.words[0] & 1) === 1;
            };

            // And first word and num
            BN.prototype.andln = function andln(num) {
              return this.words[0] & num;
            };

            // Increment at the bit position in-line
            BN.prototype.bincn = function bincn(bit) {
              assert(typeof bit === 'number');
              var r = bit % 26;
              var s = (bit - r) / 26;
              var q = 1 << r;

              // Fast case: bit is much higher than all existing words
              if (this.length <= s) {
                this._expand(s + 1);
                this.words[s] |= q;
                return this;
              }

              // Add bit and propagate, if needed
              var carry = q;
              for (var i = s; carry !== 0 && i < this.length; i++) {
                var w = this.words[i] | 0;
                w += carry;
                carry = w >>> 26;
                w &= 0x3ffffff;
                this.words[i] = w;
              }
              if (carry !== 0) {
                this.words[i] = carry;
                this.length++;
              }
              return this;
            };

            BN.prototype.isZero = function isZero() {
              return this.length === 1 && this.words[0] === 0;
            };

            BN.prototype.cmpn = function cmpn(num) {
              var negative = num < 0;

              if (this.negative !== 0 && !negative) return -1;
              if (this.negative === 0 && negative) return 1;

              this.strip();

              var res;
              if (this.length > 1) {
                res = 1;
              } else {
                if (negative) {
                  num = -num;
                }

                assert(num <= 0x3ffffff, 'Number is too big');

                var w = this.words[0] | 0;
                res = w === num ? 0 : w < num ? -1 : 1;
              }
              if (this.negative !== 0) return -res | 0;
              return res;
            };

            // Compare two numbers and return:
            // 1 - if `this` > `num`
            // 0 - if `this` == `num`
            // -1 - if `this` < `num`
            BN.prototype.cmp = function cmp(num) {
              if (this.negative !== 0 && num.negative === 0) return -1;
              if (this.negative === 0 && num.negative !== 0) return 1;

              var res = this.ucmp(num);
              if (this.negative !== 0) return -res | 0;
              return res;
            };

            // Unsigned comparison
            BN.prototype.ucmp = function ucmp(num) {
              // At this point both numbers have the same sign
              if (this.length > num.length) return 1;
              if (this.length < num.length) return -1;

              var res = 0;
              for (var i = this.length - 1; i >= 0; i--) {
                var a = this.words[i] | 0;
                var b = num.words[i] | 0;

                if (a === b) continue;
                if (a < b) {
                  res = -1;
                } else if (a > b) {
                  res = 1;
                }
                break;
              }
              return res;
            };

            BN.prototype.gtn = function gtn(num) {
              return this.cmpn(num) === 1;
            };

            BN.prototype.gt = function gt(num) {
              return this.cmp(num) === 1;
            };

            BN.prototype.gten = function gten(num) {
              return this.cmpn(num) >= 0;
            };

            BN.prototype.gte = function gte(num) {
              return this.cmp(num) >= 0;
            };

            BN.prototype.ltn = function ltn(num) {
              return this.cmpn(num) === -1;
            };

            BN.prototype.lt = function lt(num) {
              return this.cmp(num) === -1;
            };

            BN.prototype.lten = function lten(num) {
              return this.cmpn(num) <= 0;
            };

            BN.prototype.lte = function lte(num) {
              return this.cmp(num) <= 0;
            };

            BN.prototype.eqn = function eqn(num) {
              return this.cmpn(num) === 0;
            };

            BN.prototype.eq = function eq(num) {
              return this.cmp(num) === 0;
            };

            //
            // A reduce context, could be using montgomery or something better, depending
            // on the `m` itself.
            //
            BN.red = function red(num) {
              return new Red(num);
            };

            BN.prototype.toRed = function toRed(ctx) {
              assert(!this.red, 'Already a number in reduction context');
              assert(this.negative === 0, 'red works only with positives');
              return ctx.convertTo(this)._forceRed(ctx);
            };

            BN.prototype.fromRed = function fromRed() {
              assert(
                this.red,
                'fromRed works only with numbers in reduction context'
              );
              return this.red.convertFrom(this);
            };

            BN.prototype._forceRed = function _forceRed(ctx) {
              this.red = ctx;
              return this;
            };

            BN.prototype.forceRed = function forceRed(ctx) {
              assert(!this.red, 'Already a number in reduction context');
              return this._forceRed(ctx);
            };

            BN.prototype.redAdd = function redAdd(num) {
              assert(this.red, 'redAdd works only with red numbers');
              return this.red.add(this, num);
            };

            BN.prototype.redIAdd = function redIAdd(num) {
              assert(this.red, 'redIAdd works only with red numbers');
              return this.red.iadd(this, num);
            };

            BN.prototype.redSub = function redSub(num) {
              assert(this.red, 'redSub works only with red numbers');
              return this.red.sub(this, num);
            };

            BN.prototype.redISub = function redISub(num) {
              assert(this.red, 'redISub works only with red numbers');
              return this.red.isub(this, num);
            };

            BN.prototype.redShl = function redShl(num) {
              assert(this.red, 'redShl works only with red numbers');
              return this.red.shl(this, num);
            };

            BN.prototype.redMul = function redMul(num) {
              assert(this.red, 'redMul works only with red numbers');
              this.red._verify2(this, num);
              return this.red.mul(this, num);
            };

            BN.prototype.redIMul = function redIMul(num) {
              assert(this.red, 'redMul works only with red numbers');
              this.red._verify2(this, num);
              return this.red.imul(this, num);
            };

            BN.prototype.redSqr = function redSqr() {
              assert(this.red, 'redSqr works only with red numbers');
              this.red._verify1(this);
              return this.red.sqr(this);
            };

            BN.prototype.redISqr = function redISqr() {
              assert(this.red, 'redISqr works only with red numbers');
              this.red._verify1(this);
              return this.red.isqr(this);
            };

            // Square root over p
            BN.prototype.redSqrt = function redSqrt() {
              assert(this.red, 'redSqrt works only with red numbers');
              this.red._verify1(this);
              return this.red.sqrt(this);
            };

            BN.prototype.redInvm = function redInvm() {
              assert(this.red, 'redInvm works only with red numbers');
              this.red._verify1(this);
              return this.red.invm(this);
            };

            // Return negative clone of `this` % `red modulo`
            BN.prototype.redNeg = function redNeg() {
              assert(this.red, 'redNeg works only with red numbers');
              this.red._verify1(this);
              return this.red.neg(this);
            };

            BN.prototype.redPow = function redPow(num) {
              assert(this.red && !num.red, 'redPow(normalNum)');
              this.red._verify1(this);
              return this.red.pow(this, num);
            };

            // Prime numbers with efficient reduction
            var primes = {
              k256: null,
              p224: null,
              p192: null,
              p25519: null,
            };

            // Pseudo-Mersenne prime
            function MPrime(name, p) {
              // P = 2 ^ N - K
              this.name = name;
              this.p = new BN(p, 16);
              this.n = this.p.bitLength();
              this.k = new BN(1).iushln(this.n).isub(this.p);

              this.tmp = this._tmp();
            }

            MPrime.prototype._tmp = function _tmp() {
              var tmp = new BN(null);
              tmp.words = new Array(Math.ceil(this.n / 13));
              return tmp;
            };

            MPrime.prototype.ireduce = function ireduce(num) {
              // Assumes that `num` is less than `P^2`
              // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
              var r = num;
              var rlen;

              do {
                this.split(r, this.tmp);
                r = this.imulK(r);
                r = r.iadd(this.tmp);
                rlen = r.bitLength();
              } while (rlen > this.n);

              var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
              if (cmp === 0) {
                r.words[0] = 0;
                r.length = 1;
              } else if (cmp > 0) {
                r.isub(this.p);
              } else {
                if (r.strip !== undefined) {
                  // r is BN v4 instance
                  r.strip();
                } else {
                  // r is BN v5 instance
                  r._strip();
                }
              }

              return r;
            };

            MPrime.prototype.split = function split(input, out) {
              input.iushrn(this.n, 0, out);
            };

            MPrime.prototype.imulK = function imulK(num) {
              return num.imul(this.k);
            };

            function K256() {
              MPrime.call(
                this,
                'k256',
                'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f'
              );
            }
            inherits(K256, MPrime);

            K256.prototype.split = function split(input, output) {
              // 256 = 9 * 26 + 22
              var mask = 0x3fffff;

              var outLen = Math.min(input.length, 9);
              for (var i = 0; i < outLen; i++) {
                output.words[i] = input.words[i];
              }
              output.length = outLen;

              if (input.length <= 9) {
                input.words[0] = 0;
                input.length = 1;
                return;
              }

              // Shift by 9 limbs
              var prev = input.words[9];
              output.words[output.length++] = prev & mask;

              for (i = 10; i < input.length; i++) {
                var next = input.words[i] | 0;
                input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
                prev = next;
              }
              prev >>>= 22;
              input.words[i - 10] = prev;
              if (prev === 0 && input.length > 10) {
                input.length -= 10;
              } else {
                input.length -= 9;
              }
            };

            K256.prototype.imulK = function imulK(num) {
              // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
              num.words[num.length] = 0;
              num.words[num.length + 1] = 0;
              num.length += 2;

              // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
              var lo = 0;
              for (var i = 0; i < num.length; i++) {
                var w = num.words[i] | 0;
                lo += w * 0x3d1;
                num.words[i] = lo & 0x3ffffff;
                lo = w * 0x40 + ((lo / 0x4000000) | 0);
              }

              // Fast length reduction
              if (num.words[num.length - 1] === 0) {
                num.length--;
                if (num.words[num.length - 1] === 0) {
                  num.length--;
                }
              }
              return num;
            };

            function P224() {
              MPrime.call(
                this,
                'p224',
                'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001'
              );
            }
            inherits(P224, MPrime);

            function P192() {
              MPrime.call(
                this,
                'p192',
                'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff'
              );
            }
            inherits(P192, MPrime);

            function P25519() {
              // 2 ^ 255 - 19
              MPrime.call(
                this,
                '25519',
                '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed'
              );
            }
            inherits(P25519, MPrime);

            P25519.prototype.imulK = function imulK(num) {
              // K = 0x13
              var carry = 0;
              for (var i = 0; i < num.length; i++) {
                var hi = (num.words[i] | 0) * 0x13 + carry;
                var lo = hi & 0x3ffffff;
                hi >>>= 26;

                num.words[i] = lo;
                carry = hi;
              }
              if (carry !== 0) {
                num.words[num.length++] = carry;
              }
              return num;
            };

            // Exported mostly for testing purposes, use plain name instead
            BN._prime = function prime(name) {
              // Cached version of prime
              if (primes[name]) return primes[name];

              var prime;
              if (name === 'k256') {
                prime = new K256();
              } else if (name === 'p224') {
                prime = new P224();
              } else if (name === 'p192') {
                prime = new P192();
              } else if (name === 'p25519') {
                prime = new P25519();
              } else {
                throw new Error('Unknown prime ' + name);
              }
              primes[name] = prime;

              return prime;
            };

            //
            // Base reduction engine
            //
            function Red(m) {
              if (typeof m === 'string') {
                var prime = BN._prime(m);
                this.m = prime.p;
                this.prime = prime;
              } else {
                assert(m.gtn(1), 'modulus must be greater than 1');
                this.m = m;
                this.prime = null;
              }
            }

            Red.prototype._verify1 = function _verify1(a) {
              assert(a.negative === 0, 'red works only with positives');
              assert(a.red, 'red works only with red numbers');
            };

            Red.prototype._verify2 = function _verify2(a, b) {
              assert(
                (a.negative | b.negative) === 0,
                'red works only with positives'
              );
              assert(
                a.red && a.red === b.red,
                'red works only with red numbers'
              );
            };

            Red.prototype.imod = function imod(a) {
              if (this.prime) return this.prime.ireduce(a)._forceRed(this);
              return a.umod(this.m)._forceRed(this);
            };

            Red.prototype.neg = function neg(a) {
              if (a.isZero()) {
                return a.clone();
              }

              return this.m.sub(a)._forceRed(this);
            };

            Red.prototype.add = function add(a, b) {
              this._verify2(a, b);

              var res = a.add(b);
              if (res.cmp(this.m) >= 0) {
                res.isub(this.m);
              }
              return res._forceRed(this);
            };

            Red.prototype.iadd = function iadd(a, b) {
              this._verify2(a, b);

              var res = a.iadd(b);
              if (res.cmp(this.m) >= 0) {
                res.isub(this.m);
              }
              return res;
            };

            Red.prototype.sub = function sub(a, b) {
              this._verify2(a, b);

              var res = a.sub(b);
              if (res.cmpn(0) < 0) {
                res.iadd(this.m);
              }
              return res._forceRed(this);
            };

            Red.prototype.isub = function isub(a, b) {
              this._verify2(a, b);

              var res = a.isub(b);
              if (res.cmpn(0) < 0) {
                res.iadd(this.m);
              }
              return res;
            };

            Red.prototype.shl = function shl(a, num) {
              this._verify1(a);
              return this.imod(a.ushln(num));
            };

            Red.prototype.imul = function imul(a, b) {
              this._verify2(a, b);
              return this.imod(a.imul(b));
            };

            Red.prototype.mul = function mul(a, b) {
              this._verify2(a, b);
              return this.imod(a.mul(b));
            };

            Red.prototype.isqr = function isqr(a) {
              return this.imul(a, a.clone());
            };

            Red.prototype.sqr = function sqr(a) {
              return this.mul(a, a);
            };

            Red.prototype.sqrt = function sqrt(a) {
              if (a.isZero()) return a.clone();

              var mod3 = this.m.andln(3);
              assert(mod3 % 2 === 1);

              // Fast case
              if (mod3 === 3) {
                var pow = this.m.add(new BN(1)).iushrn(2);
                return this.pow(a, pow);
              }

              // Tonelli-Shanks algorithm (Totally unoptimized and slow)
              //
              // Find Q and S, that Q * 2 ^ S = (P - 1)
              var q = this.m.subn(1);
              var s = 0;
              while (!q.isZero() && q.andln(1) === 0) {
                s++;
                q.iushrn(1);
              }
              assert(!q.isZero());

              var one = new BN(1).toRed(this);
              var nOne = one.redNeg();

              // Find quadratic non-residue
              // NOTE: Max is such because of generalized Riemann hypothesis.
              var lpow = this.m.subn(1).iushrn(1);
              var z = this.m.bitLength();
              z = new BN(2 * z * z).toRed(this);

              while (this.pow(z, lpow).cmp(nOne) !== 0) {
                z.redIAdd(nOne);
              }

              var c = this.pow(z, q);
              var r = this.pow(a, q.addn(1).iushrn(1));
              var t = this.pow(a, q);
              var m = s;
              while (t.cmp(one) !== 0) {
                var tmp = t;
                for (var i = 0; tmp.cmp(one) !== 0; i++) {
                  tmp = tmp.redSqr();
                }
                assert(i < m);
                var b = this.pow(c, new BN(1).iushln(m - i - 1));

                r = r.redMul(b);
                c = b.redSqr();
                t = t.redMul(c);
                m = i;
              }

              return r;
            };

            Red.prototype.invm = function invm(a) {
              var inv = a._invmp(this.m);
              if (inv.negative !== 0) {
                inv.negative = 0;
                return this.imod(inv).redNeg();
              } else {
                return this.imod(inv);
              }
            };

            Red.prototype.pow = function pow(a, num) {
              if (num.isZero()) return new BN(1).toRed(this);
              if (num.cmpn(1) === 0) return a.clone();

              var windowSize = 4;
              var wnd = new Array(1 << windowSize);
              wnd[0] = new BN(1).toRed(this);
              wnd[1] = a;
              for (var i = 2; i < wnd.length; i++) {
                wnd[i] = this.mul(wnd[i - 1], a);
              }

              var res = wnd[0];
              var current = 0;
              var currentLen = 0;
              var start = num.bitLength() % 26;
              if (start === 0) {
                start = 26;
              }

              for (i = num.length - 1; i >= 0; i--) {
                var word = num.words[i];
                for (var j = start - 1; j >= 0; j--) {
                  var bit = (word >> j) & 1;
                  if (res !== wnd[0]) {
                    res = this.sqr(res);
                  }

                  if (bit === 0 && current === 0) {
                    currentLen = 0;
                    continue;
                  }

                  current <<= 1;
                  current |= bit;
                  currentLen++;
                  if (currentLen !== windowSize && (i !== 0 || j !== 0))
                    continue;

                  res = this.mul(res, wnd[current]);
                  currentLen = 0;
                  current = 0;
                }
                start = 26;
              }

              return res;
            };

            Red.prototype.convertTo = function convertTo(num) {
              var r = num.umod(this.m);

              return r === num ? r.clone() : r;
            };

            Red.prototype.convertFrom = function convertFrom(num) {
              var res = num.clone();
              res.red = null;
              return res;
            };

            //
            // Montgomery method engine
            //

            BN.mont = function mont(num) {
              return new Mont(num);
            };

            function Mont(m) {
              Red.call(this, m);

              this.shift = this.m.bitLength();
              if (this.shift % 26 !== 0) {
                this.shift += 26 - (this.shift % 26);
              }

              this.r = new BN(1).iushln(this.shift);
              this.r2 = this.imod(this.r.sqr());
              this.rinv = this.r._invmp(this.m);

              this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
              this.minv = this.minv.umod(this.r);
              this.minv = this.r.sub(this.minv);
            }
            inherits(Mont, Red);

            Mont.prototype.convertTo = function convertTo(num) {
              return this.imod(num.ushln(this.shift));
            };

            Mont.prototype.convertFrom = function convertFrom(num) {
              var r = this.imod(num.mul(this.rinv));
              r.red = null;
              return r;
            };

            Mont.prototype.imul = function imul(a, b) {
              if (a.isZero() || b.isZero()) {
                a.words[0] = 0;
                a.length = 1;
                return a;
              }

              var t = a.imul(b);
              var c = t
                .maskn(this.shift)
                .mul(this.minv)
                .imaskn(this.shift)
                .mul(this.m);
              var u = t.isub(c).iushrn(this.shift);
              var res = u;

              if (u.cmp(this.m) >= 0) {
                res = u.isub(this.m);
              } else if (u.cmpn(0) < 0) {
                res = u.iadd(this.m);
              }

              return res._forceRed(this);
            };

            Mont.prototype.mul = function mul(a, b) {
              if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

              var t = a.mul(b);
              var c = t
                .maskn(this.shift)
                .mul(this.minv)
                .imaskn(this.shift)
                .mul(this.m);
              var u = t.isub(c).iushrn(this.shift);
              var res = u;
              if (u.cmp(this.m) >= 0) {
                res = u.isub(this.m);
              } else if (u.cmpn(0) < 0) {
                res = u.iadd(this.m);
              }

              return res._forceRed(this);
            };

            Mont.prototype.invm = function invm(a) {
              // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
              var res = this.imod(a._invmp(this.m).mul(this.r2));
              return res._forceRed(this);
            };
          })(false || module, this);

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/module.js */ '../node_modules/webpack/buildin/module.js'
          )(module)
        ));

        /***/
      },

    /***/ '../node_modules/create-hash/browser.js':
      /*!**********************************************!*\
  !*** ../node_modules/create-hash/browser.js ***!
  \**********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );
        var MD5 = __webpack_require__(
          /*! md5.js */ '../node_modules/md5.js/index.js'
        );
        var RIPEMD160 = __webpack_require__(
          /*! ripemd160 */ '../node_modules/ripemd160/index.js'
        );
        var sha = __webpack_require__(
          /*! sha.js */ '../node_modules/sha.js/index.js'
        );
        var Base = __webpack_require__(
          /*! cipher-base */ '../node_modules/cipher-base/index.js'
        );

        function Hash(hash) {
          Base.call(this, 'digest');

          this._hash = hash;
        }

        inherits(Hash, Base);

        Hash.prototype._update = function (data) {
          this._hash.update(data);
        };

        Hash.prototype._final = function () {
          return this._hash.digest();
        };

        module.exports = function createHash(alg) {
          alg = alg.toLowerCase();
          if (alg === 'md5') return new MD5();
          if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160();

          return new Hash(sha(alg));
        };

        /***/
      },

    /***/ '../node_modules/create-hash/md5.js':
      /*!******************************************!*\
  !*** ../node_modules/create-hash/md5.js ***!
  \******************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var MD5 = __webpack_require__(
          /*! md5.js */ '../node_modules/md5.js/index.js'
        );

        module.exports = function (buffer) {
          return new MD5().update(buffer).digest();
        };

        /***/
      },

    /***/ '../node_modules/create-hmac/browser.js':
      /*!**********************************************!*\
  !*** ../node_modules/create-hmac/browser.js ***!
  \**********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );
        var Legacy = __webpack_require__(
          /*! ./legacy */ '../node_modules/create-hmac/legacy.js'
        );
        var Base = __webpack_require__(
          /*! cipher-base */ '../node_modules/cipher-base/index.js'
        );
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;
        var md5 = __webpack_require__(
          /*! create-hash/md5 */ '../node_modules/create-hash/md5.js'
        );
        var RIPEMD160 = __webpack_require__(
          /*! ripemd160 */ '../node_modules/ripemd160/index.js'
        );

        var sha = __webpack_require__(
          /*! sha.js */ '../node_modules/sha.js/index.js'
        );

        var ZEROS = Buffer.alloc(128);

        function Hmac(alg, key) {
          Base.call(this, 'digest');
          if (typeof key === 'string') {
            key = Buffer.from(key);
          }

          var blocksize = alg === 'sha512' || alg === 'sha384' ? 128 : 64;

          this._alg = alg;
          this._key = key;
          if (key.length > blocksize) {
            var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg);
            key = hash.update(key).digest();
          } else if (key.length < blocksize) {
            key = Buffer.concat([key, ZEROS], blocksize);
          }

          var ipad = (this._ipad = Buffer.allocUnsafe(blocksize));
          var opad = (this._opad = Buffer.allocUnsafe(blocksize));

          for (var i = 0; i < blocksize; i++) {
            ipad[i] = key[i] ^ 0x36;
            opad[i] = key[i] ^ 0x5c;
          }
          this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg);
          this._hash.update(ipad);
        }

        inherits(Hmac, Base);

        Hmac.prototype._update = function (data) {
          this._hash.update(data);
        };

        Hmac.prototype._final = function () {
          var h = this._hash.digest();
          var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg);
          return hash.update(this._opad).update(h).digest();
        };

        module.exports = function createHmac(alg, key) {
          alg = alg.toLowerCase();
          if (alg === 'rmd160' || alg === 'ripemd160') {
            return new Hmac('rmd160', key);
          }
          if (alg === 'md5') {
            return new Legacy(md5, key);
          }
          return new Hmac(alg, key);
        };

        /***/
      },

    /***/ '../node_modules/create-hmac/legacy.js':
      /*!*********************************************!*\
  !*** ../node_modules/create-hmac/legacy.js ***!
  \*********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;

        var Base = __webpack_require__(
          /*! cipher-base */ '../node_modules/cipher-base/index.js'
        );

        var ZEROS = Buffer.alloc(128);
        var blocksize = 64;

        function Hmac(alg, key) {
          Base.call(this, 'digest');
          if (typeof key === 'string') {
            key = Buffer.from(key);
          }

          this._alg = alg;
          this._key = key;

          if (key.length > blocksize) {
            key = alg(key);
          } else if (key.length < blocksize) {
            key = Buffer.concat([key, ZEROS], blocksize);
          }

          var ipad = (this._ipad = Buffer.allocUnsafe(blocksize));
          var opad = (this._opad = Buffer.allocUnsafe(blocksize));

          for (var i = 0; i < blocksize; i++) {
            ipad[i] = key[i] ^ 0x36;
            opad[i] = key[i] ^ 0x5c;
          }

          this._hash = [ipad];
        }

        inherits(Hmac, Base);

        Hmac.prototype._update = function (data) {
          this._hash.push(data);
        };

        Hmac.prototype._final = function () {
          var h = this._alg(Buffer.concat(this._hash));
          return this._alg(Buffer.concat([this._opad, h]));
        };
        module.exports = Hmac;

        /***/
      },

    /***/ '../node_modules/crypto-browserify/index.js':
      /*!**************************************************!*\
  !*** ../node_modules/crypto-browserify/index.js ***!
  \**************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = __webpack_require__(
          /*! randombytes */ '../node_modules/randombytes/browser.js'
        );
        exports.createHash = exports.Hash = __webpack_require__(
          /*! create-hash */ '../node_modules/create-hash/browser.js'
        );
        exports.createHmac = exports.Hmac = __webpack_require__(
          /*! create-hmac */ '../node_modules/create-hmac/browser.js'
        );

        var algos = __webpack_require__(
          /*! browserify-sign/algos */ '../node_modules/browserify-sign/algos.js'
        );
        var algoKeys = Object.keys(algos);
        var hashes = [
          'sha1',
          'sha224',
          'sha256',
          'sha384',
          'sha512',
          'md5',
          'rmd160',
        ].concat(algoKeys);
        exports.getHashes = function () {
          return hashes;
        };

        var p = __webpack_require__(
          /*! pbkdf2 */ '../node_modules/pbkdf2/browser.js'
        );
        exports.pbkdf2 = p.pbkdf2;
        exports.pbkdf2Sync = p.pbkdf2Sync;

        var aes = __webpack_require__(
          /*! browserify-cipher */ '../node_modules/browserify-cipher/browser.js'
        );

        exports.Cipher = aes.Cipher;
        exports.createCipher = aes.createCipher;
        exports.Cipheriv = aes.Cipheriv;
        exports.createCipheriv = aes.createCipheriv;
        exports.Decipher = aes.Decipher;
        exports.createDecipher = aes.createDecipher;
        exports.Decipheriv = aes.Decipheriv;
        exports.createDecipheriv = aes.createDecipheriv;
        exports.getCiphers = aes.getCiphers;
        exports.listCiphers = aes.listCiphers;

        var dh = __webpack_require__(
          /*! diffie-hellman */ '../node_modules/diffie-hellman/browser.js'
        );

        exports.DiffieHellmanGroup = dh.DiffieHellmanGroup;
        exports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup;
        exports.getDiffieHellman = dh.getDiffieHellman;
        exports.createDiffieHellman = dh.createDiffieHellman;
        exports.DiffieHellman = dh.DiffieHellman;

        var sign = __webpack_require__(
          /*! browserify-sign */ '../node_modules/browserify-sign/browser/index.js'
        );

        exports.createSign = sign.createSign;
        exports.Sign = sign.Sign;
        exports.createVerify = sign.createVerify;
        exports.Verify = sign.Verify;

        exports.createECDH = __webpack_require__(
          /*! create-ecdh */ '../node_modules/create-ecdh/browser.js'
        );

        var publicEncrypt = __webpack_require__(
          /*! public-encrypt */ '../node_modules/public-encrypt/browser.js'
        );

        exports.publicEncrypt = publicEncrypt.publicEncrypt;
        exports.privateEncrypt = publicEncrypt.privateEncrypt;
        exports.publicDecrypt = publicEncrypt.publicDecrypt;
        exports.privateDecrypt = publicEncrypt.privateDecrypt;

        // the least I can do is make error messages for the rest of the node.js/crypto api.
        // ;[
        //   'createCredentials'
        // ].forEach(function (name) {
        //   exports[name] = function () {
        //     throw new Error([
        //       'sorry, ' + name + ' is not implemented yet',
        //       'we accept pull requests',
        //       'https://github.com/crypto-browserify/crypto-browserify'
        //     ].join('\n'))
        //   }
        // })

        var rf = __webpack_require__(
          /*! randomfill */ '../node_modules/randomfill/browser.js'
        );

        exports.randomFill = rf.randomFill;
        exports.randomFillSync = rf.randomFillSync;

        exports.createCredentials = function () {
          throw new Error(
            [
              'sorry, createCredentials is not implemented yet',
              'we accept pull requests',
              'https://github.com/crypto-browserify/crypto-browserify',
            ].join('\n')
          );
        };

        exports.constants = {
          DH_CHECK_P_NOT_SAFE_PRIME: 2,
          DH_CHECK_P_NOT_PRIME: 1,
          DH_UNABLE_TO_CHECK_GENERATOR: 4,
          DH_NOT_SUITABLE_GENERATOR: 8,
          NPN_ENABLED: 1,
          ALPN_ENABLED: 1,
          RSA_PKCS1_PADDING: 1,
          RSA_SSLV23_PADDING: 2,
          RSA_NO_PADDING: 3,
          RSA_PKCS1_OAEP_PADDING: 4,
          RSA_X931_PADDING: 5,
          RSA_PKCS1_PSS_PADDING: 6,
          POINT_CONVERSION_COMPRESSED: 2,
          POINT_CONVERSION_UNCOMPRESSED: 4,
          POINT_CONVERSION_HYBRID: 6,
        };

        /***/
      },

    /***/ '../node_modules/des.js/lib/des.js':
      /*!*****************************************!*\
  !*** ../node_modules/des.js/lib/des.js ***!
  \*****************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.utils = __webpack_require__(
          /*! ./des/utils */ '../node_modules/des.js/lib/des/utils.js'
        );
        exports.Cipher = __webpack_require__(
          /*! ./des/cipher */ '../node_modules/des.js/lib/des/cipher.js'
        );
        exports.DES = __webpack_require__(
          /*! ./des/des */ '../node_modules/des.js/lib/des/des.js'
        );
        exports.CBC = __webpack_require__(
          /*! ./des/cbc */ '../node_modules/des.js/lib/des/cbc.js'
        );
        exports.EDE = __webpack_require__(
          /*! ./des/ede */ '../node_modules/des.js/lib/des/ede.js'
        );

        /***/
      },

    /***/ '../node_modules/des.js/lib/des/cbc.js':
      /*!*********************************************!*\
  !*** ../node_modules/des.js/lib/des/cbc.js ***!
  \*********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var assert = __webpack_require__(
          /*! minimalistic-assert */ '../node_modules/minimalistic-assert/index.js'
        );
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );

        var proto = {};

        function CBCState(iv) {
          assert.equal(iv.length, 8, 'Invalid IV length');

          this.iv = new Array(8);
          for (var i = 0; i < this.iv.length; i++) this.iv[i] = iv[i];
        }

        function instantiate(Base) {
          function CBC(options) {
            Base.call(this, options);
            this._cbcInit();
          }
          inherits(CBC, Base);

          var keys = Object.keys(proto);
          for (var i = 0; i < keys.length; i++) {
            var key = keys[i];
            CBC.prototype[key] = proto[key];
          }

          CBC.create = function create(options) {
            return new CBC(options);
          };

          return CBC;
        }

        exports.instantiate = instantiate;

        proto._cbcInit = function _cbcInit() {
          var state = new CBCState(this.options.iv);
          this._cbcState = state;
        };

        proto._update = function _update(inp, inOff, out, outOff) {
          var state = this._cbcState;
          var superProto = this.constructor.super_.prototype;

          var iv = state.iv;
          if (this.type === 'encrypt') {
            for (var i = 0; i < this.blockSize; i++) iv[i] ^= inp[inOff + i];

            superProto._update.call(this, iv, 0, out, outOff);

            for (var i = 0; i < this.blockSize; i++) iv[i] = out[outOff + i];
          } else {
            superProto._update.call(this, inp, inOff, out, outOff);

            for (var i = 0; i < this.blockSize; i++) out[outOff + i] ^= iv[i];

            for (var i = 0; i < this.blockSize; i++) iv[i] = inp[inOff + i];
          }
        };

        /***/
      },

    /***/ '../node_modules/des.js/lib/des/cipher.js':
      /*!************************************************!*\
  !*** ../node_modules/des.js/lib/des/cipher.js ***!
  \************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var assert = __webpack_require__(
          /*! minimalistic-assert */ '../node_modules/minimalistic-assert/index.js'
        );

        function Cipher(options) {
          this.options = options;

          this.type = this.options.type;
          this.blockSize = 8;
          this._init();

          this.buffer = new Array(this.blockSize);
          this.bufferOff = 0;
        }
        module.exports = Cipher;

        Cipher.prototype._init = function _init() {
          // Might be overrided
        };

        Cipher.prototype.update = function update(data) {
          if (data.length === 0) return [];

          if (this.type === 'decrypt') return this._updateDecrypt(data);
          else return this._updateEncrypt(data);
        };

        Cipher.prototype._buffer = function _buffer(data, off) {
          // Append data to buffer
          var min = Math.min(
            this.buffer.length - this.bufferOff,
            data.length - off
          );
          for (var i = 0; i < min; i++)
            this.buffer[this.bufferOff + i] = data[off + i];
          this.bufferOff += min;

          // Shift next
          return min;
        };

        Cipher.prototype._flushBuffer = function _flushBuffer(out, off) {
          this._update(this.buffer, 0, out, off);
          this.bufferOff = 0;
          return this.blockSize;
        };

        Cipher.prototype._updateEncrypt = function _updateEncrypt(data) {
          var inputOff = 0;
          var outputOff = 0;

          var count = ((this.bufferOff + data.length) / this.blockSize) | 0;
          var out = new Array(count * this.blockSize);

          if (this.bufferOff !== 0) {
            inputOff += this._buffer(data, inputOff);

            if (this.bufferOff === this.buffer.length)
              outputOff += this._flushBuffer(out, outputOff);
          }

          // Write blocks
          var max = data.length - ((data.length - inputOff) % this.blockSize);
          for (; inputOff < max; inputOff += this.blockSize) {
            this._update(data, inputOff, out, outputOff);
            outputOff += this.blockSize;
          }

          // Queue rest
          for (; inputOff < data.length; inputOff++, this.bufferOff++)
            this.buffer[this.bufferOff] = data[inputOff];

          return out;
        };

        Cipher.prototype._updateDecrypt = function _updateDecrypt(data) {
          var inputOff = 0;
          var outputOff = 0;

          var count =
            Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;
          var out = new Array(count * this.blockSize);

          // TODO(indutny): optimize it, this is far from optimal
          for (; count > 0; count--) {
            inputOff += this._buffer(data, inputOff);
            outputOff += this._flushBuffer(out, outputOff);
          }

          // Buffer rest of the input
          inputOff += this._buffer(data, inputOff);

          return out;
        };

        Cipher.prototype.final = function final(buffer) {
          var first;
          if (buffer) first = this.update(buffer);

          var last;
          if (this.type === 'encrypt') last = this._finalEncrypt();
          else last = this._finalDecrypt();

          if (first) return first.concat(last);
          else return last;
        };

        Cipher.prototype._pad = function _pad(buffer, off) {
          if (off === 0) return false;

          while (off < buffer.length) buffer[off++] = 0;

          return true;
        };

        Cipher.prototype._finalEncrypt = function _finalEncrypt() {
          if (!this._pad(this.buffer, this.bufferOff)) return [];

          var out = new Array(this.blockSize);
          this._update(this.buffer, 0, out, 0);
          return out;
        };

        Cipher.prototype._unpad = function _unpad(buffer) {
          return buffer;
        };

        Cipher.prototype._finalDecrypt = function _finalDecrypt() {
          assert.equal(
            this.bufferOff,
            this.blockSize,
            'Not enough data to decrypt'
          );
          var out = new Array(this.blockSize);
          this._flushBuffer(out, 0);

          return this._unpad(out);
        };

        /***/
      },

    /***/ '../node_modules/des.js/lib/des/des.js':
      /*!*********************************************!*\
  !*** ../node_modules/des.js/lib/des/des.js ***!
  \*********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var assert = __webpack_require__(
          /*! minimalistic-assert */ '../node_modules/minimalistic-assert/index.js'
        );
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );

        var utils = __webpack_require__(
          /*! ./utils */ '../node_modules/des.js/lib/des/utils.js'
        );
        var Cipher = __webpack_require__(
          /*! ./cipher */ '../node_modules/des.js/lib/des/cipher.js'
        );

        function DESState() {
          this.tmp = new Array(2);
          this.keys = null;
        }

        function DES(options) {
          Cipher.call(this, options);

          var state = new DESState();
          this._desState = state;

          this.deriveKeys(state, options.key);
        }
        inherits(DES, Cipher);
        module.exports = DES;

        DES.create = function create(options) {
          return new DES(options);
        };

        var shiftTable = [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1];

        DES.prototype.deriveKeys = function deriveKeys(state, key) {
          state.keys = new Array(16 * 2);

          assert.equal(key.length, this.blockSize, 'Invalid key length');

          var kL = utils.readUInt32BE(key, 0);
          var kR = utils.readUInt32BE(key, 4);

          utils.pc1(kL, kR, state.tmp, 0);
          kL = state.tmp[0];
          kR = state.tmp[1];
          for (var i = 0; i < state.keys.length; i += 2) {
            var shift = shiftTable[i >>> 1];
            kL = utils.r28shl(kL, shift);
            kR = utils.r28shl(kR, shift);
            utils.pc2(kL, kR, state.keys, i);
          }
        };

        DES.prototype._update = function _update(inp, inOff, out, outOff) {
          var state = this._desState;

          var l = utils.readUInt32BE(inp, inOff);
          var r = utils.readUInt32BE(inp, inOff + 4);

          // Initial Permutation
          utils.ip(l, r, state.tmp, 0);
          l = state.tmp[0];
          r = state.tmp[1];

          if (this.type === 'encrypt') this._encrypt(state, l, r, state.tmp, 0);
          else this._decrypt(state, l, r, state.tmp, 0);

          l = state.tmp[0];
          r = state.tmp[1];

          utils.writeUInt32BE(out, l, outOff);
          utils.writeUInt32BE(out, r, outOff + 4);
        };

        DES.prototype._pad = function _pad(buffer, off) {
          var value = buffer.length - off;
          for (var i = off; i < buffer.length; i++) buffer[i] = value;

          return true;
        };

        DES.prototype._unpad = function _unpad(buffer) {
          var pad = buffer[buffer.length - 1];
          for (var i = buffer.length - pad; i < buffer.length; i++)
            assert.equal(buffer[i], pad);

          return buffer.slice(0, buffer.length - pad);
        };

        DES.prototype._encrypt = function _encrypt(
          state,
          lStart,
          rStart,
          out,
          off
        ) {
          var l = lStart;
          var r = rStart;

          // Apply f() x16 times
          for (var i = 0; i < state.keys.length; i += 2) {
            var keyL = state.keys[i];
            var keyR = state.keys[i + 1];

            // f(r, k)
            utils.expand(r, state.tmp, 0);

            keyL ^= state.tmp[0];
            keyR ^= state.tmp[1];
            var s = utils.substitute(keyL, keyR);
            var f = utils.permute(s);

            var t = r;
            r = (l ^ f) >>> 0;
            l = t;
          }

          // Reverse Initial Permutation
          utils.rip(r, l, out, off);
        };

        DES.prototype._decrypt = function _decrypt(
          state,
          lStart,
          rStart,
          out,
          off
        ) {
          var l = rStart;
          var r = lStart;

          // Apply f() x16 times
          for (var i = state.keys.length - 2; i >= 0; i -= 2) {
            var keyL = state.keys[i];
            var keyR = state.keys[i + 1];

            // f(r, k)
            utils.expand(l, state.tmp, 0);

            keyL ^= state.tmp[0];
            keyR ^= state.tmp[1];
            var s = utils.substitute(keyL, keyR);
            var f = utils.permute(s);

            var t = l;
            l = (r ^ f) >>> 0;
            r = t;
          }

          // Reverse Initial Permutation
          utils.rip(l, r, out, off);
        };

        /***/
      },

    /***/ '../node_modules/des.js/lib/des/ede.js':
      /*!*********************************************!*\
  !*** ../node_modules/des.js/lib/des/ede.js ***!
  \*********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var assert = __webpack_require__(
          /*! minimalistic-assert */ '../node_modules/minimalistic-assert/index.js'
        );
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );

        var Cipher = __webpack_require__(
          /*! ./cipher */ '../node_modules/des.js/lib/des/cipher.js'
        );
        var DES = __webpack_require__(
          /*! ./des */ '../node_modules/des.js/lib/des/des.js'
        );

        function EDEState(type, key) {
          assert.equal(key.length, 24, 'Invalid key length');

          var k1 = key.slice(0, 8);
          var k2 = key.slice(8, 16);
          var k3 = key.slice(16, 24);

          if (type === 'encrypt') {
            this.ciphers = [
              DES.create({ type: 'encrypt', key: k1 }),
              DES.create({ type: 'decrypt', key: k2 }),
              DES.create({ type: 'encrypt', key: k3 }),
            ];
          } else {
            this.ciphers = [
              DES.create({ type: 'decrypt', key: k3 }),
              DES.create({ type: 'encrypt', key: k2 }),
              DES.create({ type: 'decrypt', key: k1 }),
            ];
          }
        }

        function EDE(options) {
          Cipher.call(this, options);

          var state = new EDEState(this.type, this.options.key);
          this._edeState = state;
        }
        inherits(EDE, Cipher);

        module.exports = EDE;

        EDE.create = function create(options) {
          return new EDE(options);
        };

        EDE.prototype._update = function _update(inp, inOff, out, outOff) {
          var state = this._edeState;

          state.ciphers[0]._update(inp, inOff, out, outOff);
          state.ciphers[1]._update(out, outOff, out, outOff);
          state.ciphers[2]._update(out, outOff, out, outOff);
        };

        EDE.prototype._pad = DES.prototype._pad;
        EDE.prototype._unpad = DES.prototype._unpad;

        /***/
      },

    /***/ '../node_modules/des.js/lib/des/utils.js':
      /*!***********************************************!*\
  !*** ../node_modules/des.js/lib/des/utils.js ***!
  \***********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.readUInt32BE = function readUInt32BE(bytes, off) {
          var res =
            (bytes[0 + off] << 24) |
            (bytes[1 + off] << 16) |
            (bytes[2 + off] << 8) |
            bytes[3 + off];
          return res >>> 0;
        };

        exports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {
          bytes[0 + off] = value >>> 24;
          bytes[1 + off] = (value >>> 16) & 0xff;
          bytes[2 + off] = (value >>> 8) & 0xff;
          bytes[3 + off] = value & 0xff;
        };

        exports.ip = function ip(inL, inR, out, off) {
          var outL = 0;
          var outR = 0;

          for (var i = 6; i >= 0; i -= 2) {
            for (var j = 0; j <= 24; j += 8) {
              outL <<= 1;
              outL |= (inR >>> (j + i)) & 1;
            }
            for (var j = 0; j <= 24; j += 8) {
              outL <<= 1;
              outL |= (inL >>> (j + i)) & 1;
            }
          }

          for (var i = 6; i >= 0; i -= 2) {
            for (var j = 1; j <= 25; j += 8) {
              outR <<= 1;
              outR |= (inR >>> (j + i)) & 1;
            }
            for (var j = 1; j <= 25; j += 8) {
              outR <<= 1;
              outR |= (inL >>> (j + i)) & 1;
            }
          }

          out[off + 0] = outL >>> 0;
          out[off + 1] = outR >>> 0;
        };

        exports.rip = function rip(inL, inR, out, off) {
          var outL = 0;
          var outR = 0;

          for (var i = 0; i < 4; i++) {
            for (var j = 24; j >= 0; j -= 8) {
              outL <<= 1;
              outL |= (inR >>> (j + i)) & 1;
              outL <<= 1;
              outL |= (inL >>> (j + i)) & 1;
            }
          }
          for (var i = 4; i < 8; i++) {
            for (var j = 24; j >= 0; j -= 8) {
              outR <<= 1;
              outR |= (inR >>> (j + i)) & 1;
              outR <<= 1;
              outR |= (inL >>> (j + i)) & 1;
            }
          }

          out[off + 0] = outL >>> 0;
          out[off + 1] = outR >>> 0;
        };

        exports.pc1 = function pc1(inL, inR, out, off) {
          var outL = 0;
          var outR = 0;

          // 7, 15, 23, 31, 39, 47, 55, 63
          // 6, 14, 22, 30, 39, 47, 55, 63
          // 5, 13, 21, 29, 39, 47, 55, 63
          // 4, 12, 20, 28
          for (var i = 7; i >= 5; i--) {
            for (var j = 0; j <= 24; j += 8) {
              outL <<= 1;
              outL |= (inR >> (j + i)) & 1;
            }
            for (var j = 0; j <= 24; j += 8) {
              outL <<= 1;
              outL |= (inL >> (j + i)) & 1;
            }
          }
          for (var j = 0; j <= 24; j += 8) {
            outL <<= 1;
            outL |= (inR >> (j + i)) & 1;
          }

          // 1, 9, 17, 25, 33, 41, 49, 57
          // 2, 10, 18, 26, 34, 42, 50, 58
          // 3, 11, 19, 27, 35, 43, 51, 59
          // 36, 44, 52, 60
          for (var i = 1; i <= 3; i++) {
            for (var j = 0; j <= 24; j += 8) {
              outR <<= 1;
              outR |= (inR >> (j + i)) & 1;
            }
            for (var j = 0; j <= 24; j += 8) {
              outR <<= 1;
              outR |= (inL >> (j + i)) & 1;
            }
          }
          for (var j = 0; j <= 24; j += 8) {
            outR <<= 1;
            outR |= (inL >> (j + i)) & 1;
          }

          out[off + 0] = outL >>> 0;
          out[off + 1] = outR >>> 0;
        };

        exports.r28shl = function r28shl(num, shift) {
          return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));
        };

        var pc2table = [
          // inL => outL
          14,
          11,
          17,
          4,
          27,
          23,
          25,
          0,
          13,
          22,
          7,
          18,
          5,
          9,
          16,
          24,
          2,
          20,
          12,
          21,
          1,
          8,
          15,
          26,

          // inR => outR
          15,
          4,
          25,
          19,
          9,
          1,
          26,
          16,
          5,
          11,
          23,
          8,
          12,
          7,
          17,
          0,
          22,
          3,
          10,
          14,
          6,
          20,
          27,
          24,
        ];

        exports.pc2 = function pc2(inL, inR, out, off) {
          var outL = 0;
          var outR = 0;

          var len = pc2table.length >>> 1;
          for (var i = 0; i < len; i++) {
            outL <<= 1;
            outL |= (inL >>> pc2table[i]) & 0x1;
          }
          for (var i = len; i < pc2table.length; i++) {
            outR <<= 1;
            outR |= (inR >>> pc2table[i]) & 0x1;
          }

          out[off + 0] = outL >>> 0;
          out[off + 1] = outR >>> 0;
        };

        exports.expand = function expand(r, out, off) {
          var outL = 0;
          var outR = 0;

          outL = ((r & 1) << 5) | (r >>> 27);
          for (var i = 23; i >= 15; i -= 4) {
            outL <<= 6;
            outL |= (r >>> i) & 0x3f;
          }
          for (var i = 11; i >= 3; i -= 4) {
            outR |= (r >>> i) & 0x3f;
            outR <<= 6;
          }
          outR |= ((r & 0x1f) << 1) | (r >>> 31);

          out[off + 0] = outL >>> 0;
          out[off + 1] = outR >>> 0;
        };

        var sTable = [
          14,
          0,
          4,
          15,
          13,
          7,
          1,
          4,
          2,
          14,
          15,
          2,
          11,
          13,
          8,
          1,
          3,
          10,
          10,
          6,
          6,
          12,
          12,
          11,
          5,
          9,
          9,
          5,
          0,
          3,
          7,
          8,
          4,
          15,
          1,
          12,
          14,
          8,
          8,
          2,
          13,
          4,
          6,
          9,
          2,
          1,
          11,
          7,
          15,
          5,
          12,
          11,
          9,
          3,
          7,
          14,
          3,
          10,
          10,
          0,
          5,
          6,
          0,
          13,

          15,
          3,
          1,
          13,
          8,
          4,
          14,
          7,
          6,
          15,
          11,
          2,
          3,
          8,
          4,
          14,
          9,
          12,
          7,
          0,
          2,
          1,
          13,
          10,
          12,
          6,
          0,
          9,
          5,
          11,
          10,
          5,
          0,
          13,
          14,
          8,
          7,
          10,
          11,
          1,
          10,
          3,
          4,
          15,
          13,
          4,
          1,
          2,
          5,
          11,
          8,
          6,
          12,
          7,
          6,
          12,
          9,
          0,
          3,
          5,
          2,
          14,
          15,
          9,

          10,
          13,
          0,
          7,
          9,
          0,
          14,
          9,
          6,
          3,
          3,
          4,
          15,
          6,
          5,
          10,
          1,
          2,
          13,
          8,
          12,
          5,
          7,
          14,
          11,
          12,
          4,
          11,
          2,
          15,
          8,
          1,
          13,
          1,
          6,
          10,
          4,
          13,
          9,
          0,
          8,
          6,
          15,
          9,
          3,
          8,
          0,
          7,
          11,
          4,
          1,
          15,
          2,
          14,
          12,
          3,
          5,
          11,
          10,
          5,
          14,
          2,
          7,
          12,

          7,
          13,
          13,
          8,
          14,
          11,
          3,
          5,
          0,
          6,
          6,
          15,
          9,
          0,
          10,
          3,
          1,
          4,
          2,
          7,
          8,
          2,
          5,
          12,
          11,
          1,
          12,
          10,
          4,
          14,
          15,
          9,
          10,
          3,
          6,
          15,
          9,
          0,
          0,
          6,
          12,
          10,
          11,
          1,
          7,
          13,
          13,
          8,
          15,
          9,
          1,
          4,
          3,
          5,
          14,
          11,
          5,
          12,
          2,
          7,
          8,
          2,
          4,
          14,

          2,
          14,
          12,
          11,
          4,
          2,
          1,
          12,
          7,
          4,
          10,
          7,
          11,
          13,
          6,
          1,
          8,
          5,
          5,
          0,
          3,
          15,
          15,
          10,
          13,
          3,
          0,
          9,
          14,
          8,
          9,
          6,
          4,
          11,
          2,
          8,
          1,
          12,
          11,
          7,
          10,
          1,
          13,
          14,
          7,
          2,
          8,
          13,
          15,
          6,
          9,
          15,
          12,
          0,
          5,
          9,
          6,
          10,
          3,
          4,
          0,
          5,
          14,
          3,

          12,
          10,
          1,
          15,
          10,
          4,
          15,
          2,
          9,
          7,
          2,
          12,
          6,
          9,
          8,
          5,
          0,
          6,
          13,
          1,
          3,
          13,
          4,
          14,
          14,
          0,
          7,
          11,
          5,
          3,
          11,
          8,
          9,
          4,
          14,
          3,
          15,
          2,
          5,
          12,
          2,
          9,
          8,
          5,
          12,
          15,
          3,
          10,
          7,
          11,
          0,
          14,
          4,
          1,
          10,
          7,
          1,
          6,
          13,
          0,
          11,
          8,
          6,
          13,

          4,
          13,
          11,
          0,
          2,
          11,
          14,
          7,
          15,
          4,
          0,
          9,
          8,
          1,
          13,
          10,
          3,
          14,
          12,
          3,
          9,
          5,
          7,
          12,
          5,
          2,
          10,
          15,
          6,
          8,
          1,
          6,
          1,
          6,
          4,
          11,
          11,
          13,
          13,
          8,
          12,
          1,
          3,
          4,
          7,
          10,
          14,
          7,
          10,
          9,
          15,
          5,
          6,
          0,
          8,
          15,
          0,
          14,
          5,
          2,
          9,
          3,
          2,
          12,

          13,
          1,
          2,
          15,
          8,
          13,
          4,
          8,
          6,
          10,
          15,
          3,
          11,
          7,
          1,
          4,
          10,
          12,
          9,
          5,
          3,
          6,
          14,
          11,
          5,
          0,
          0,
          14,
          12,
          9,
          7,
          2,
          7,
          2,
          11,
          1,
          4,
          14,
          1,
          7,
          9,
          4,
          12,
          10,
          14,
          8,
          2,
          13,
          0,
          15,
          6,
          12,
          10,
          9,
          13,
          0,
          15,
          3,
          3,
          5,
          5,
          6,
          8,
          11,
        ];

        exports.substitute = function substitute(inL, inR) {
          var out = 0;
          for (var i = 0; i < 4; i++) {
            var b = (inL >>> (18 - i * 6)) & 0x3f;
            var sb = sTable[i * 0x40 + b];

            out <<= 4;
            out |= sb;
          }
          for (var i = 0; i < 4; i++) {
            var b = (inR >>> (18 - i * 6)) & 0x3f;
            var sb = sTable[4 * 0x40 + i * 0x40 + b];

            out <<= 4;
            out |= sb;
          }
          return out >>> 0;
        };

        var permuteTable = [
          16,
          25,
          12,
          11,
          3,
          20,
          4,
          15,
          31,
          17,
          9,
          6,
          27,
          14,
          1,
          22,
          30,
          24,
          8,
          18,
          0,
          5,
          29,
          23,
          13,
          19,
          2,
          26,
          10,
          21,
          28,
          7,
        ];

        exports.permute = function permute(num) {
          var out = 0;
          for (var i = 0; i < permuteTable.length; i++) {
            out <<= 1;
            out |= (num >>> permuteTable[i]) & 0x1;
          }
          return out >>> 0;
        };

        exports.padSplit = function padSplit(num, size, group) {
          var str = num.toString(2);
          while (str.length < size) str = '0' + str;

          var out = [];
          for (var i = 0; i < size; i += group)
            out.push(str.slice(i, i + group));
          return out.join(' ');
        };

        /***/
      },

    /***/ '../node_modules/diffie-hellman/browser.js':
      /*!*************************************************!*\
  !*** ../node_modules/diffie-hellman/browser.js ***!
  \*************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function (Buffer) {
          var generatePrime = __webpack_require__(
            /*! ./lib/generatePrime */ '../node_modules/diffie-hellman/lib/generatePrime.js'
          );
          var primes = __webpack_require__(
            /*! ./lib/primes.json */ '../node_modules/diffie-hellman/lib/primes.json'
          );

          var DH = __webpack_require__(
            /*! ./lib/dh */ '../node_modules/diffie-hellman/lib/dh.js'
          );

          function getDiffieHellman(mod) {
            var prime = new Buffer(primes[mod].prime, 'hex');
            var gen = new Buffer(primes[mod].gen, 'hex');

            return new DH(prime, gen);
          }

          var ENCODINGS = {
            binary: true,
            hex: true,
            base64: true,
          };

          function createDiffieHellman(prime, enc, generator, genc) {
            if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {
              return createDiffieHellman(prime, 'binary', enc, generator);
            }

            enc = enc || 'binary';
            genc = genc || 'binary';
            generator = generator || new Buffer([2]);

            if (!Buffer.isBuffer(generator)) {
              generator = new Buffer(generator, genc);
            }

            if (typeof prime === 'number') {
              return new DH(generatePrime(prime, generator), generator, true);
            }

            if (!Buffer.isBuffer(prime)) {
              prime = new Buffer(prime, enc);
            }

            return new DH(prime, generator, true);
          }

          exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman;
          exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman;

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../buffer/index.js */ '../node_modules/buffer/index.js'
          ).Buffer
        ));

        /***/
      },

    /***/ '../node_modules/diffie-hellman/lib/dh.js':
      /*!************************************************!*\
  !*** ../node_modules/diffie-hellman/lib/dh.js ***!
  \************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function (Buffer) {
          var BN = __webpack_require__(
            /*! bn.js */ '../node_modules/diffie-hellman/node_modules/bn.js/lib/bn.js'
          );
          var MillerRabin = __webpack_require__(
            /*! miller-rabin */ '../node_modules/miller-rabin/lib/mr.js'
          );
          var millerRabin = new MillerRabin();
          var TWENTYFOUR = new BN(24);
          var ELEVEN = new BN(11);
          var TEN = new BN(10);
          var THREE = new BN(3);
          var SEVEN = new BN(7);
          var primes = __webpack_require__(
            /*! ./generatePrime */ '../node_modules/diffie-hellman/lib/generatePrime.js'
          );
          var randomBytes = __webpack_require__(
            /*! randombytes */ '../node_modules/randombytes/browser.js'
          );
          module.exports = DH;

          function setPublicKey(pub, enc) {
            enc = enc || 'utf8';
            if (!Buffer.isBuffer(pub)) {
              pub = new Buffer(pub, enc);
            }
            this._pub = new BN(pub);
            return this;
          }

          function setPrivateKey(priv, enc) {
            enc = enc || 'utf8';
            if (!Buffer.isBuffer(priv)) {
              priv = new Buffer(priv, enc);
            }
            this._priv = new BN(priv);
            return this;
          }

          var primeCache = {};
          function checkPrime(prime, generator) {
            var gen = generator.toString('hex');
            var hex = [gen, prime.toString(16)].join('_');
            if (hex in primeCache) {
              return primeCache[hex];
            }
            var error = 0;

            if (
              prime.isEven() ||
              !primes.simpleSieve ||
              !primes.fermatTest(prime) ||
              !millerRabin.test(prime)
            ) {
              //not a prime so +1
              error += 1;

              if (gen === '02' || gen === '05') {
                // we'd be able to check the generator
                // it would fail so +8
                error += 8;
              } else {
                //we wouldn't be able to test the generator
                // so +4
                error += 4;
              }
              primeCache[hex] = error;
              return error;
            }
            if (!millerRabin.test(prime.shrn(1))) {
              //not a safe prime
              error += 2;
            }
            var rem;
            switch (gen) {
              case '02':
                if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {
                  // unsuidable generator
                  error += 8;
                }
                break;
              case '05':
                rem = prime.mod(TEN);
                if (rem.cmp(THREE) && rem.cmp(SEVEN)) {
                  // prime mod 10 needs to equal 3 or 7
                  error += 8;
                }
                break;
              default:
                error += 4;
            }
            primeCache[hex] = error;
            return error;
          }

          function DH(prime, generator, malleable) {
            this.setGenerator(generator);
            this.__prime = new BN(prime);
            this._prime = BN.mont(this.__prime);
            this._primeLen = prime.length;
            this._pub = undefined;
            this._priv = undefined;
            this._primeCode = undefined;
            if (malleable) {
              this.setPublicKey = setPublicKey;
              this.setPrivateKey = setPrivateKey;
            } else {
              this._primeCode = 8;
            }
          }
          Object.defineProperty(DH.prototype, 'verifyError', {
            enumerable: true,
            get: function () {
              if (typeof this._primeCode !== 'number') {
                this._primeCode = checkPrime(this.__prime, this.__gen);
              }
              return this._primeCode;
            },
          });
          DH.prototype.generateKeys = function () {
            if (!this._priv) {
              this._priv = new BN(randomBytes(this._primeLen));
            }
            this._pub = this._gen
              .toRed(this._prime)
              .redPow(this._priv)
              .fromRed();
            return this.getPublicKey();
          };

          DH.prototype.computeSecret = function (other) {
            other = new BN(other);
            other = other.toRed(this._prime);
            var secret = other.redPow(this._priv).fromRed();
            var out = new Buffer(secret.toArray());
            var prime = this.getPrime();
            if (out.length < prime.length) {
              var front = new Buffer(prime.length - out.length);
              front.fill(0);
              out = Buffer.concat([front, out]);
            }
            return out;
          };

          DH.prototype.getPublicKey = function getPublicKey(enc) {
            return formatReturnValue(this._pub, enc);
          };

          DH.prototype.getPrivateKey = function getPrivateKey(enc) {
            return formatReturnValue(this._priv, enc);
          };

          DH.prototype.getPrime = function (enc) {
            return formatReturnValue(this.__prime, enc);
          };

          DH.prototype.getGenerator = function (enc) {
            return formatReturnValue(this._gen, enc);
          };

          DH.prototype.setGenerator = function (gen, enc) {
            enc = enc || 'utf8';
            if (!Buffer.isBuffer(gen)) {
              gen = new Buffer(gen, enc);
            }
            this.__gen = gen;
            this._gen = new BN(gen);
            return this;
          };

          function formatReturnValue(bn, enc) {
            var buf = new Buffer(bn.toArray());
            if (!enc) {
              return buf;
            } else {
              return buf.toString(enc);
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../buffer/index.js */ '../node_modules/buffer/index.js'
          ).Buffer
        ));

        /***/
      },

    /***/ '../node_modules/diffie-hellman/lib/generatePrime.js':
      /*!***********************************************************!*\
  !*** ../node_modules/diffie-hellman/lib/generatePrime.js ***!
  \***********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var randomBytes = __webpack_require__(
          /*! randombytes */ '../node_modules/randombytes/browser.js'
        );
        module.exports = findPrime;
        findPrime.simpleSieve = simpleSieve;
        findPrime.fermatTest = fermatTest;
        var BN = __webpack_require__(
          /*! bn.js */ '../node_modules/diffie-hellman/node_modules/bn.js/lib/bn.js'
        );
        var TWENTYFOUR = new BN(24);
        var MillerRabin = __webpack_require__(
          /*! miller-rabin */ '../node_modules/miller-rabin/lib/mr.js'
        );
        var millerRabin = new MillerRabin();
        var ONE = new BN(1);
        var TWO = new BN(2);
        var FIVE = new BN(5);
        var SIXTEEN = new BN(16);
        var EIGHT = new BN(8);
        var TEN = new BN(10);
        var THREE = new BN(3);
        var SEVEN = new BN(7);
        var ELEVEN = new BN(11);
        var FOUR = new BN(4);
        var TWELVE = new BN(12);
        var primes = null;

        function _getPrimes() {
          if (primes !== null) return primes;

          var limit = 0x100000;
          var res = [];
          res[0] = 2;
          for (var i = 1, k = 3; k < limit; k += 2) {
            var sqrt = Math.ceil(Math.sqrt(k));
            for (var j = 0; j < i && res[j] <= sqrt; j++)
              if (k % res[j] === 0) break;

            if (i !== j && res[j] <= sqrt) continue;

            res[i++] = k;
          }
          primes = res;
          return res;
        }

        function simpleSieve(p) {
          var primes = _getPrimes();

          for (var i = 0; i < primes.length; i++)
            if (p.modn(primes[i]) === 0) {
              if (p.cmpn(primes[i]) === 0) {
                return true;
              } else {
                return false;
              }
            }

          return true;
        }

        function fermatTest(p) {
          var red = BN.mont(p);
          return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;
        }

        function findPrime(bits, gen) {
          if (bits < 16) {
            // this is what openssl does
            if (gen === 2 || gen === 5) {
              return new BN([0x8c, 0x7b]);
            } else {
              return new BN([0x8c, 0x27]);
            }
          }
          gen = new BN(gen);

          var num, n2;

          while (true) {
            num = new BN(randomBytes(Math.ceil(bits / 8)));
            while (num.bitLength() > bits) {
              num.ishrn(1);
            }
            if (num.isEven()) {
              num.iadd(ONE);
            }
            if (!num.testn(1)) {
              num.iadd(TWO);
            }
            if (!gen.cmp(TWO)) {
              while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {
                num.iadd(FOUR);
              }
            } else if (!gen.cmp(FIVE)) {
              while (num.mod(TEN).cmp(THREE)) {
                num.iadd(FOUR);
              }
            }
            n2 = num.shrn(1);
            if (
              simpleSieve(n2) &&
              simpleSieve(num) &&
              fermatTest(n2) &&
              fermatTest(num) &&
              millerRabin.test(n2) &&
              millerRabin.test(num)
            ) {
              return num;
            }
          }
        }

        /***/
      },

    /***/ '../node_modules/diffie-hellman/lib/primes.json':
      /*!******************************************************!*\
  !*** ../node_modules/diffie-hellman/lib/primes.json ***!
  \******************************************************/
      /*! exports provided: modp1, modp2, modp5, modp14, modp15, modp16, modp17, modp18, default */
      /***/ function (module) {
        module.exports = JSON.parse(
          '{"modp1":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"},"modp2":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"},"modp5":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"},"modp14":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"},"modp15":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"},"modp16":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"},"modp17":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"},"modp18":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"}}'
        );

        /***/
      },

    /***/ '../node_modules/diffie-hellman/node_modules/bn.js/lib/bn.js':
      /*!*******************************************************************!*\
  !*** ../node_modules/diffie-hellman/node_modules/bn.js/lib/bn.js ***!
  \*******************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function (module) {
          (function (module, exports) {
            'use strict';

            // Utils
            function assert(val, msg) {
              if (!val) throw new Error(msg || 'Assertion failed');
            }

            // Could use `inherits` module, but don't want to move from single file
            // architecture yet.
            function inherits(ctor, superCtor) {
              ctor.super_ = superCtor;
              var TempCtor = function () {};
              TempCtor.prototype = superCtor.prototype;
              ctor.prototype = new TempCtor();
              ctor.prototype.constructor = ctor;
            }

            // BN

            function BN(number, base, endian) {
              if (BN.isBN(number)) {
                return number;
              }

              this.negative = 0;
              this.words = null;
              this.length = 0;

              // Reduction context
              this.red = null;

              if (number !== null) {
                if (base === 'le' || base === 'be') {
                  endian = base;
                  base = 10;
                }

                this._init(number || 0, base || 10, endian || 'be');
              }
            }
            if (typeof module === 'object') {
              module.exports = BN;
            } else {
              exports.BN = BN;
            }

            BN.BN = BN;
            BN.wordSize = 26;

            var Buffer;
            try {
              Buffer = __webpack_require__(/*! buffer */ 5).Buffer;
            } catch (e) {}

            BN.isBN = function isBN(num) {
              if (num instanceof BN) {
                return true;
              }

              return (
                num !== null &&
                typeof num === 'object' &&
                num.constructor.wordSize === BN.wordSize &&
                Array.isArray(num.words)
              );
            };

            BN.max = function max(left, right) {
              if (left.cmp(right) > 0) return left;
              return right;
            };

            BN.min = function min(left, right) {
              if (left.cmp(right) < 0) return left;
              return right;
            };

            BN.prototype._init = function init(number, base, endian) {
              if (typeof number === 'number') {
                return this._initNumber(number, base, endian);
              }

              if (typeof number === 'object') {
                return this._initArray(number, base, endian);
              }

              if (base === 'hex') {
                base = 16;
              }
              assert(base === (base | 0) && base >= 2 && base <= 36);

              number = number.toString().replace(/\s+/g, '');
              var start = 0;
              if (number[0] === '-') {
                start++;
              }

              if (base === 16) {
                this._parseHex(number, start);
              } else {
                this._parseBase(number, base, start);
              }

              if (number[0] === '-') {
                this.negative = 1;
              }

              this.strip();

              if (endian !== 'le') return;

              this._initArray(this.toArray(), base, endian);
            };

            BN.prototype._initNumber = function _initNumber(
              number,
              base,
              endian
            ) {
              if (number < 0) {
                this.negative = 1;
                number = -number;
              }
              if (number < 0x4000000) {
                this.words = [number & 0x3ffffff];
                this.length = 1;
              } else if (number < 0x10000000000000) {
                this.words = [
                  number & 0x3ffffff,
                  (number / 0x4000000) & 0x3ffffff,
                ];
                this.length = 2;
              } else {
                assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
                this.words = [
                  number & 0x3ffffff,
                  (number / 0x4000000) & 0x3ffffff,
                  1,
                ];
                this.length = 3;
              }

              if (endian !== 'le') return;

              // Reverse the bytes
              this._initArray(this.toArray(), base, endian);
            };

            BN.prototype._initArray = function _initArray(
              number,
              base,
              endian
            ) {
              // Perhaps a Uint8Array
              assert(typeof number.length === 'number');
              if (number.length <= 0) {
                this.words = [0];
                this.length = 1;
                return this;
              }

              this.length = Math.ceil(number.length / 3);
              this.words = new Array(this.length);
              for (var i = 0; i < this.length; i++) {
                this.words[i] = 0;
              }

              var j, w;
              var off = 0;
              if (endian === 'be') {
                for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
                  w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
                  this.words[j] |= (w << off) & 0x3ffffff;
                  this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
                  off += 24;
                  if (off >= 26) {
                    off -= 26;
                    j++;
                  }
                }
              } else if (endian === 'le') {
                for (i = 0, j = 0; i < number.length; i += 3) {
                  w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
                  this.words[j] |= (w << off) & 0x3ffffff;
                  this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
                  off += 24;
                  if (off >= 26) {
                    off -= 26;
                    j++;
                  }
                }
              }
              return this.strip();
            };

            function parseHex(str, start, end) {
              var r = 0;
              var len = Math.min(str.length, end);
              for (var i = start; i < len; i++) {
                var c = str.charCodeAt(i) - 48;

                r <<= 4;

                // 'a' - 'f'
                if (c >= 49 && c <= 54) {
                  r |= c - 49 + 0xa;

                  // 'A' - 'F'
                } else if (c >= 17 && c <= 22) {
                  r |= c - 17 + 0xa;

                  // '0' - '9'
                } else {
                  r |= c & 0xf;
                }
              }
              return r;
            }

            BN.prototype._parseHex = function _parseHex(number, start) {
              // Create possibly bigger array to ensure that it fits the number
              this.length = Math.ceil((number.length - start) / 6);
              this.words = new Array(this.length);
              for (var i = 0; i < this.length; i++) {
                this.words[i] = 0;
              }

              var j, w;
              // Scan 24-bit chunks and add them to the number
              var off = 0;
              for (i = number.length - 6, j = 0; i >= start; i -= 6) {
                w = parseHex(number, i, i + 6);
                this.words[j] |= (w << off) & 0x3ffffff;
                // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
                this.words[j + 1] |= (w >>> (26 - off)) & 0x3fffff;
                off += 24;
                if (off >= 26) {
                  off -= 26;
                  j++;
                }
              }
              if (i + 6 !== start) {
                w = parseHex(number, start, i + 6);
                this.words[j] |= (w << off) & 0x3ffffff;
                this.words[j + 1] |= (w >>> (26 - off)) & 0x3fffff;
              }
              this.strip();
            };

            function parseBase(str, start, end, mul) {
              var r = 0;
              var len = Math.min(str.length, end);
              for (var i = start; i < len; i++) {
                var c = str.charCodeAt(i) - 48;

                r *= mul;

                // 'a'
                if (c >= 49) {
                  r += c - 49 + 0xa;

                  // 'A'
                } else if (c >= 17) {
                  r += c - 17 + 0xa;

                  // '0' - '9'
                } else {
                  r += c;
                }
              }
              return r;
            }

            BN.prototype._parseBase = function _parseBase(number, base, start) {
              // Initialize as zero
              this.words = [0];
              this.length = 1;

              // Find length of limb in base
              for (
                var limbLen = 0, limbPow = 1;
                limbPow <= 0x3ffffff;
                limbPow *= base
              ) {
                limbLen++;
              }
              limbLen--;
              limbPow = (limbPow / base) | 0;

              var total = number.length - start;
              var mod = total % limbLen;
              var end = Math.min(total, total - mod) + start;

              var word = 0;
              for (var i = start; i < end; i += limbLen) {
                word = parseBase(number, i, i + limbLen, base);

                this.imuln(limbPow);
                if (this.words[0] + word < 0x4000000) {
                  this.words[0] += word;
                } else {
                  this._iaddn(word);
                }
              }

              if (mod !== 0) {
                var pow = 1;
                word = parseBase(number, i, number.length, base);

                for (i = 0; i < mod; i++) {
                  pow *= base;
                }

                this.imuln(pow);
                if (this.words[0] + word < 0x4000000) {
                  this.words[0] += word;
                } else {
                  this._iaddn(word);
                }
              }
            };

            BN.prototype.copy = function copy(dest) {
              dest.words = new Array(this.length);
              for (var i = 0; i < this.length; i++) {
                dest.words[i] = this.words[i];
              }
              dest.length = this.length;
              dest.negative = this.negative;
              dest.red = this.red;
            };

            BN.prototype.clone = function clone() {
              var r = new BN(null);
              this.copy(r);
              return r;
            };

            BN.prototype._expand = function _expand(size) {
              while (this.length < size) {
                this.words[this.length++] = 0;
              }
              return this;
            };

            // Remove leading `0` from `this`
            BN.prototype.strip = function strip() {
              while (this.length > 1 && this.words[this.length - 1] === 0) {
                this.length--;
              }
              return this._normSign();
            };

            BN.prototype._normSign = function _normSign() {
              // -0 = 0
              if (this.length === 1 && this.words[0] === 0) {
                this.negative = 0;
              }
              return this;
            };

            BN.prototype.inspect = function inspect() {
              return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
            };

            /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

            var zeros = [
              '',
              '0',
              '00',
              '000',
              '0000',
              '00000',
              '000000',
              '0000000',
              '00000000',
              '000000000',
              '0000000000',
              '00000000000',
              '000000000000',
              '0000000000000',
              '00000000000000',
              '000000000000000',
              '0000000000000000',
              '00000000000000000',
              '000000000000000000',
              '0000000000000000000',
              '00000000000000000000',
              '000000000000000000000',
              '0000000000000000000000',
              '00000000000000000000000',
              '000000000000000000000000',
              '0000000000000000000000000',
            ];

            var groupSizes = [
              0,
              0,
              25,
              16,
              12,
              11,
              10,
              9,
              8,
              8,
              7,
              7,
              7,
              7,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
            ];

            var groupBases = [
              0,
              0,
              33554432,
              43046721,
              16777216,
              48828125,
              60466176,
              40353607,
              16777216,
              43046721,
              10000000,
              19487171,
              35831808,
              62748517,
              7529536,
              11390625,
              16777216,
              24137569,
              34012224,
              47045881,
              64000000,
              4084101,
              5153632,
              6436343,
              7962624,
              9765625,
              11881376,
              14348907,
              17210368,
              20511149,
              24300000,
              28629151,
              33554432,
              39135393,
              45435424,
              52521875,
              60466176,
            ];

            BN.prototype.toString = function toString(base, padding) {
              base = base || 10;
              padding = padding | 0 || 1;

              var out;
              if (base === 16 || base === 'hex') {
                out = '';
                var off = 0;
                var carry = 0;
                for (var i = 0; i < this.length; i++) {
                  var w = this.words[i];
                  var word = (((w << off) | carry) & 0xffffff).toString(16);
                  carry = (w >>> (24 - off)) & 0xffffff;
                  if (carry !== 0 || i !== this.length - 1) {
                    out = zeros[6 - word.length] + word + out;
                  } else {
                    out = word + out;
                  }
                  off += 2;
                  if (off >= 26) {
                    off -= 26;
                    i--;
                  }
                }
                if (carry !== 0) {
                  out = carry.toString(16) + out;
                }
                while (out.length % padding !== 0) {
                  out = '0' + out;
                }
                if (this.negative !== 0) {
                  out = '-' + out;
                }
                return out;
              }

              if (base === (base | 0) && base >= 2 && base <= 36) {
                // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
                var groupSize = groupSizes[base];
                // var groupBase = Math.pow(base, groupSize);
                var groupBase = groupBases[base];
                out = '';
                var c = this.clone();
                c.negative = 0;
                while (!c.isZero()) {
                  var r = c.modn(groupBase).toString(base);
                  c = c.idivn(groupBase);

                  if (!c.isZero()) {
                    out = zeros[groupSize - r.length] + r + out;
                  } else {
                    out = r + out;
                  }
                }
                if (this.isZero()) {
                  out = '0' + out;
                }
                while (out.length % padding !== 0) {
                  out = '0' + out;
                }
                if (this.negative !== 0) {
                  out = '-' + out;
                }
                return out;
              }

              assert(false, 'Base should be between 2 and 36');
            };

            BN.prototype.toNumber = function toNumber() {
              var ret = this.words[0];
              if (this.length === 2) {
                ret += this.words[1] * 0x4000000;
              } else if (this.length === 3 && this.words[2] === 0x01) {
                // NOTE: at this stage it is known that the top bit is set
                ret += 0x10000000000000 + this.words[1] * 0x4000000;
              } else if (this.length > 2) {
                assert(false, 'Number can only safely store up to 53 bits');
              }
              return this.negative !== 0 ? -ret : ret;
            };

            BN.prototype.toJSON = function toJSON() {
              return this.toString(16);
            };

            BN.prototype.toBuffer = function toBuffer(endian, length) {
              assert(typeof Buffer !== 'undefined');
              return this.toArrayLike(Buffer, endian, length);
            };

            BN.prototype.toArray = function toArray(endian, length) {
              return this.toArrayLike(Array, endian, length);
            };

            BN.prototype.toArrayLike = function toArrayLike(
              ArrayType,
              endian,
              length
            ) {
              var byteLength = this.byteLength();
              var reqLength = length || Math.max(1, byteLength);
              assert(
                byteLength <= reqLength,
                'byte array longer than desired length'
              );
              assert(reqLength > 0, 'Requested array length <= 0');

              this.strip();
              var littleEndian = endian === 'le';
              var res = new ArrayType(reqLength);

              var b, i;
              var q = this.clone();
              if (!littleEndian) {
                // Assume big-endian
                for (i = 0; i < reqLength - byteLength; i++) {
                  res[i] = 0;
                }

                for (i = 0; !q.isZero(); i++) {
                  b = q.andln(0xff);
                  q.iushrn(8);

                  res[reqLength - i - 1] = b;
                }
              } else {
                for (i = 0; !q.isZero(); i++) {
                  b = q.andln(0xff);
                  q.iushrn(8);

                  res[i] = b;
                }

                for (; i < reqLength; i++) {
                  res[i] = 0;
                }
              }

              return res;
            };

            if (Math.clz32) {
              BN.prototype._countBits = function _countBits(w) {
                return 32 - Math.clz32(w);
              };
            } else {
              BN.prototype._countBits = function _countBits(w) {
                var t = w;
                var r = 0;
                if (t >= 0x1000) {
                  r += 13;
                  t >>>= 13;
                }
                if (t >= 0x40) {
                  r += 7;
                  t >>>= 7;
                }
                if (t >= 0x8) {
                  r += 4;
                  t >>>= 4;
                }
                if (t >= 0x02) {
                  r += 2;
                  t >>>= 2;
                }
                return r + t;
              };
            }

            BN.prototype._zeroBits = function _zeroBits(w) {
              // Short-cut
              if (w === 0) return 26;

              var t = w;
              var r = 0;
              if ((t & 0x1fff) === 0) {
                r += 13;
                t >>>= 13;
              }
              if ((t & 0x7f) === 0) {
                r += 7;
                t >>>= 7;
              }
              if ((t & 0xf) === 0) {
                r += 4;
                t >>>= 4;
              }
              if ((t & 0x3) === 0) {
                r += 2;
                t >>>= 2;
              }
              if ((t & 0x1) === 0) {
                r++;
              }
              return r;
            };

            // Return number of used bits in a BN
            BN.prototype.bitLength = function bitLength() {
              var w = this.words[this.length - 1];
              var hi = this._countBits(w);
              return (this.length - 1) * 26 + hi;
            };

            function toBitArray(num) {
              var w = new Array(num.bitLength());

              for (var bit = 0; bit < w.length; bit++) {
                var off = (bit / 26) | 0;
                var wbit = bit % 26;

                w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
              }

              return w;
            }

            // Number of trailing zero bits
            BN.prototype.zeroBits = function zeroBits() {
              if (this.isZero()) return 0;

              var r = 0;
              for (var i = 0; i < this.length; i++) {
                var b = this._zeroBits(this.words[i]);
                r += b;
                if (b !== 26) break;
              }
              return r;
            };

            BN.prototype.byteLength = function byteLength() {
              return Math.ceil(this.bitLength() / 8);
            };

            BN.prototype.toTwos = function toTwos(width) {
              if (this.negative !== 0) {
                return this.abs().inotn(width).iaddn(1);
              }
              return this.clone();
            };

            BN.prototype.fromTwos = function fromTwos(width) {
              if (this.testn(width - 1)) {
                return this.notn(width).iaddn(1).ineg();
              }
              return this.clone();
            };

            BN.prototype.isNeg = function isNeg() {
              return this.negative !== 0;
            };

            // Return negative clone of `this`
            BN.prototype.neg = function neg() {
              return this.clone().ineg();
            };

            BN.prototype.ineg = function ineg() {
              if (!this.isZero()) {
                this.negative ^= 1;
              }

              return this;
            };

            // Or `num` with `this` in-place
            BN.prototype.iuor = function iuor(num) {
              while (this.length < num.length) {
                this.words[this.length++] = 0;
              }

              for (var i = 0; i < num.length; i++) {
                this.words[i] = this.words[i] | num.words[i];
              }

              return this.strip();
            };

            BN.prototype.ior = function ior(num) {
              assert((this.negative | num.negative) === 0);
              return this.iuor(num);
            };

            // Or `num` with `this`
            BN.prototype.or = function or(num) {
              if (this.length > num.length) return this.clone().ior(num);
              return num.clone().ior(this);
            };

            BN.prototype.uor = function uor(num) {
              if (this.length > num.length) return this.clone().iuor(num);
              return num.clone().iuor(this);
            };

            // And `num` with `this` in-place
            BN.prototype.iuand = function iuand(num) {
              // b = min-length(num, this)
              var b;
              if (this.length > num.length) {
                b = num;
              } else {
                b = this;
              }

              for (var i = 0; i < b.length; i++) {
                this.words[i] = this.words[i] & num.words[i];
              }

              this.length = b.length;

              return this.strip();
            };

            BN.prototype.iand = function iand(num) {
              assert((this.negative | num.negative) === 0);
              return this.iuand(num);
            };

            // And `num` with `this`
            BN.prototype.and = function and(num) {
              if (this.length > num.length) return this.clone().iand(num);
              return num.clone().iand(this);
            };

            BN.prototype.uand = function uand(num) {
              if (this.length > num.length) return this.clone().iuand(num);
              return num.clone().iuand(this);
            };

            // Xor `num` with `this` in-place
            BN.prototype.iuxor = function iuxor(num) {
              // a.length > b.length
              var a;
              var b;
              if (this.length > num.length) {
                a = this;
                b = num;
              } else {
                a = num;
                b = this;
              }

              for (var i = 0; i < b.length; i++) {
                this.words[i] = a.words[i] ^ b.words[i];
              }

              if (this !== a) {
                for (; i < a.length; i++) {
                  this.words[i] = a.words[i];
                }
              }

              this.length = a.length;

              return this.strip();
            };

            BN.prototype.ixor = function ixor(num) {
              assert((this.negative | num.negative) === 0);
              return this.iuxor(num);
            };

            // Xor `num` with `this`
            BN.prototype.xor = function xor(num) {
              if (this.length > num.length) return this.clone().ixor(num);
              return num.clone().ixor(this);
            };

            BN.prototype.uxor = function uxor(num) {
              if (this.length > num.length) return this.clone().iuxor(num);
              return num.clone().iuxor(this);
            };

            // Not ``this`` with ``width`` bitwidth
            BN.prototype.inotn = function inotn(width) {
              assert(typeof width === 'number' && width >= 0);

              var bytesNeeded = Math.ceil(width / 26) | 0;
              var bitsLeft = width % 26;

              // Extend the buffer with leading zeroes
              this._expand(bytesNeeded);

              if (bitsLeft > 0) {
                bytesNeeded--;
              }

              // Handle complete words
              for (var i = 0; i < bytesNeeded; i++) {
                this.words[i] = ~this.words[i] & 0x3ffffff;
              }

              // Handle the residue
              if (bitsLeft > 0) {
                this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
              }

              // And remove leading zeroes
              return this.strip();
            };

            BN.prototype.notn = function notn(width) {
              return this.clone().inotn(width);
            };

            // Set `bit` of `this`
            BN.prototype.setn = function setn(bit, val) {
              assert(typeof bit === 'number' && bit >= 0);

              var off = (bit / 26) | 0;
              var wbit = bit % 26;

              this._expand(off + 1);

              if (val) {
                this.words[off] = this.words[off] | (1 << wbit);
              } else {
                this.words[off] = this.words[off] & ~(1 << wbit);
              }

              return this.strip();
            };

            // Add `num` to `this` in-place
            BN.prototype.iadd = function iadd(num) {
              var r;

              // negative + positive
              if (this.negative !== 0 && num.negative === 0) {
                this.negative = 0;
                r = this.isub(num);
                this.negative ^= 1;
                return this._normSign();

                // positive + negative
              } else if (this.negative === 0 && num.negative !== 0) {
                num.negative = 0;
                r = this.isub(num);
                num.negative = 1;
                return r._normSign();
              }

              // a.length > b.length
              var a, b;
              if (this.length > num.length) {
                a = this;
                b = num;
              } else {
                a = num;
                b = this;
              }

              var carry = 0;
              for (var i = 0; i < b.length; i++) {
                r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
                this.words[i] = r & 0x3ffffff;
                carry = r >>> 26;
              }
              for (; carry !== 0 && i < a.length; i++) {
                r = (a.words[i] | 0) + carry;
                this.words[i] = r & 0x3ffffff;
                carry = r >>> 26;
              }

              this.length = a.length;
              if (carry !== 0) {
                this.words[this.length] = carry;
                this.length++;
                // Copy the rest of the words
              } else if (a !== this) {
                for (; i < a.length; i++) {
                  this.words[i] = a.words[i];
                }
              }

              return this;
            };

            // Add `num` to `this`
            BN.prototype.add = function add(num) {
              var res;
              if (num.negative !== 0 && this.negative === 0) {
                num.negative = 0;
                res = this.sub(num);
                num.negative ^= 1;
                return res;
              } else if (num.negative === 0 && this.negative !== 0) {
                this.negative = 0;
                res = num.sub(this);
                this.negative = 1;
                return res;
              }

              if (this.length > num.length) return this.clone().iadd(num);

              return num.clone().iadd(this);
            };

            // Subtract `num` from `this` in-place
            BN.prototype.isub = function isub(num) {
              // this - (-num) = this + num
              if (num.negative !== 0) {
                num.negative = 0;
                var r = this.iadd(num);
                num.negative = 1;
                return r._normSign();

                // -this - num = -(this + num)
              } else if (this.negative !== 0) {
                this.negative = 0;
                this.iadd(num);
                this.negative = 1;
                return this._normSign();
              }

              // At this point both numbers are positive
              var cmp = this.cmp(num);

              // Optimization - zeroify
              if (cmp === 0) {
                this.negative = 0;
                this.length = 1;
                this.words[0] = 0;
                return this;
              }

              // a > b
              var a, b;
              if (cmp > 0) {
                a = this;
                b = num;
              } else {
                a = num;
                b = this;
              }

              var carry = 0;
              for (var i = 0; i < b.length; i++) {
                r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
                carry = r >> 26;
                this.words[i] = r & 0x3ffffff;
              }
              for (; carry !== 0 && i < a.length; i++) {
                r = (a.words[i] | 0) + carry;
                carry = r >> 26;
                this.words[i] = r & 0x3ffffff;
              }

              // Copy rest of the words
              if (carry === 0 && i < a.length && a !== this) {
                for (; i < a.length; i++) {
                  this.words[i] = a.words[i];
                }
              }

              this.length = Math.max(this.length, i);

              if (a !== this) {
                this.negative = 1;
              }

              return this.strip();
            };

            // Subtract `num` from `this`
            BN.prototype.sub = function sub(num) {
              return this.clone().isub(num);
            };

            function smallMulTo(self, num, out) {
              out.negative = num.negative ^ self.negative;
              var len = (self.length + num.length) | 0;
              out.length = len;
              len = (len - 1) | 0;

              // Peel one iteration (compiler can't do it, because of code complexity)
              var a = self.words[0] | 0;
              var b = num.words[0] | 0;
              var r = a * b;

              var lo = r & 0x3ffffff;
              var carry = (r / 0x4000000) | 0;
              out.words[0] = lo;

              for (var k = 1; k < len; k++) {
                // Sum all words with the same `i + j = k` and accumulate `ncarry`,
                // note that ncarry could be >= 0x3ffffff
                var ncarry = carry >>> 26;
                var rword = carry & 0x3ffffff;
                var maxJ = Math.min(k, num.length - 1);
                for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                  var i = (k - j) | 0;
                  a = self.words[i] | 0;
                  b = num.words[j] | 0;
                  r = a * b + rword;
                  ncarry += (r / 0x4000000) | 0;
                  rword = r & 0x3ffffff;
                }
                out.words[k] = rword | 0;
                carry = ncarry | 0;
              }
              if (carry !== 0) {
                out.words[k] = carry | 0;
              } else {
                out.length--;
              }

              return out.strip();
            }

            // TODO(indutny): it may be reasonable to omit it for users who don't need
            // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
            // multiplication (like elliptic secp256k1).
            var comb10MulTo = function comb10MulTo(self, num, out) {
              var a = self.words;
              var b = num.words;
              var o = out.words;
              var c = 0;
              var lo;
              var mid;
              var hi;
              var a0 = a[0] | 0;
              var al0 = a0 & 0x1fff;
              var ah0 = a0 >>> 13;
              var a1 = a[1] | 0;
              var al1 = a1 & 0x1fff;
              var ah1 = a1 >>> 13;
              var a2 = a[2] | 0;
              var al2 = a2 & 0x1fff;
              var ah2 = a2 >>> 13;
              var a3 = a[3] | 0;
              var al3 = a3 & 0x1fff;
              var ah3 = a3 >>> 13;
              var a4 = a[4] | 0;
              var al4 = a4 & 0x1fff;
              var ah4 = a4 >>> 13;
              var a5 = a[5] | 0;
              var al5 = a5 & 0x1fff;
              var ah5 = a5 >>> 13;
              var a6 = a[6] | 0;
              var al6 = a6 & 0x1fff;
              var ah6 = a6 >>> 13;
              var a7 = a[7] | 0;
              var al7 = a7 & 0x1fff;
              var ah7 = a7 >>> 13;
              var a8 = a[8] | 0;
              var al8 = a8 & 0x1fff;
              var ah8 = a8 >>> 13;
              var a9 = a[9] | 0;
              var al9 = a9 & 0x1fff;
              var ah9 = a9 >>> 13;
              var b0 = b[0] | 0;
              var bl0 = b0 & 0x1fff;
              var bh0 = b0 >>> 13;
              var b1 = b[1] | 0;
              var bl1 = b1 & 0x1fff;
              var bh1 = b1 >>> 13;
              var b2 = b[2] | 0;
              var bl2 = b2 & 0x1fff;
              var bh2 = b2 >>> 13;
              var b3 = b[3] | 0;
              var bl3 = b3 & 0x1fff;
              var bh3 = b3 >>> 13;
              var b4 = b[4] | 0;
              var bl4 = b4 & 0x1fff;
              var bh4 = b4 >>> 13;
              var b5 = b[5] | 0;
              var bl5 = b5 & 0x1fff;
              var bh5 = b5 >>> 13;
              var b6 = b[6] | 0;
              var bl6 = b6 & 0x1fff;
              var bh6 = b6 >>> 13;
              var b7 = b[7] | 0;
              var bl7 = b7 & 0x1fff;
              var bh7 = b7 >>> 13;
              var b8 = b[8] | 0;
              var bl8 = b8 & 0x1fff;
              var bh8 = b8 >>> 13;
              var b9 = b[9] | 0;
              var bl9 = b9 & 0x1fff;
              var bh9 = b9 >>> 13;

              out.negative = self.negative ^ num.negative;
              out.length = 19;
              /* k = 0 */
              lo = Math.imul(al0, bl0);
              mid = Math.imul(al0, bh0);
              mid = (mid + Math.imul(ah0, bl0)) | 0;
              hi = Math.imul(ah0, bh0);
              var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
              w0 &= 0x3ffffff;
              /* k = 1 */
              lo = Math.imul(al1, bl0);
              mid = Math.imul(al1, bh0);
              mid = (mid + Math.imul(ah1, bl0)) | 0;
              hi = Math.imul(ah1, bh0);
              lo = (lo + Math.imul(al0, bl1)) | 0;
              mid = (mid + Math.imul(al0, bh1)) | 0;
              mid = (mid + Math.imul(ah0, bl1)) | 0;
              hi = (hi + Math.imul(ah0, bh1)) | 0;
              var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
              w1 &= 0x3ffffff;
              /* k = 2 */
              lo = Math.imul(al2, bl0);
              mid = Math.imul(al2, bh0);
              mid = (mid + Math.imul(ah2, bl0)) | 0;
              hi = Math.imul(ah2, bh0);
              lo = (lo + Math.imul(al1, bl1)) | 0;
              mid = (mid + Math.imul(al1, bh1)) | 0;
              mid = (mid + Math.imul(ah1, bl1)) | 0;
              hi = (hi + Math.imul(ah1, bh1)) | 0;
              lo = (lo + Math.imul(al0, bl2)) | 0;
              mid = (mid + Math.imul(al0, bh2)) | 0;
              mid = (mid + Math.imul(ah0, bl2)) | 0;
              hi = (hi + Math.imul(ah0, bh2)) | 0;
              var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
              w2 &= 0x3ffffff;
              /* k = 3 */
              lo = Math.imul(al3, bl0);
              mid = Math.imul(al3, bh0);
              mid = (mid + Math.imul(ah3, bl0)) | 0;
              hi = Math.imul(ah3, bh0);
              lo = (lo + Math.imul(al2, bl1)) | 0;
              mid = (mid + Math.imul(al2, bh1)) | 0;
              mid = (mid + Math.imul(ah2, bl1)) | 0;
              hi = (hi + Math.imul(ah2, bh1)) | 0;
              lo = (lo + Math.imul(al1, bl2)) | 0;
              mid = (mid + Math.imul(al1, bh2)) | 0;
              mid = (mid + Math.imul(ah1, bl2)) | 0;
              hi = (hi + Math.imul(ah1, bh2)) | 0;
              lo = (lo + Math.imul(al0, bl3)) | 0;
              mid = (mid + Math.imul(al0, bh3)) | 0;
              mid = (mid + Math.imul(ah0, bl3)) | 0;
              hi = (hi + Math.imul(ah0, bh3)) | 0;
              var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
              w3 &= 0x3ffffff;
              /* k = 4 */
              lo = Math.imul(al4, bl0);
              mid = Math.imul(al4, bh0);
              mid = (mid + Math.imul(ah4, bl0)) | 0;
              hi = Math.imul(ah4, bh0);
              lo = (lo + Math.imul(al3, bl1)) | 0;
              mid = (mid + Math.imul(al3, bh1)) | 0;
              mid = (mid + Math.imul(ah3, bl1)) | 0;
              hi = (hi + Math.imul(ah3, bh1)) | 0;
              lo = (lo + Math.imul(al2, bl2)) | 0;
              mid = (mid + Math.imul(al2, bh2)) | 0;
              mid = (mid + Math.imul(ah2, bl2)) | 0;
              hi = (hi + Math.imul(ah2, bh2)) | 0;
              lo = (lo + Math.imul(al1, bl3)) | 0;
              mid = (mid + Math.imul(al1, bh3)) | 0;
              mid = (mid + Math.imul(ah1, bl3)) | 0;
              hi = (hi + Math.imul(ah1, bh3)) | 0;
              lo = (lo + Math.imul(al0, bl4)) | 0;
              mid = (mid + Math.imul(al0, bh4)) | 0;
              mid = (mid + Math.imul(ah0, bl4)) | 0;
              hi = (hi + Math.imul(ah0, bh4)) | 0;
              var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
              w4 &= 0x3ffffff;
              /* k = 5 */
              lo = Math.imul(al5, bl0);
              mid = Math.imul(al5, bh0);
              mid = (mid + Math.imul(ah5, bl0)) | 0;
              hi = Math.imul(ah5, bh0);
              lo = (lo + Math.imul(al4, bl1)) | 0;
              mid = (mid + Math.imul(al4, bh1)) | 0;
              mid = (mid + Math.imul(ah4, bl1)) | 0;
              hi = (hi + Math.imul(ah4, bh1)) | 0;
              lo = (lo + Math.imul(al3, bl2)) | 0;
              mid = (mid + Math.imul(al3, bh2)) | 0;
              mid = (mid + Math.imul(ah3, bl2)) | 0;
              hi = (hi + Math.imul(ah3, bh2)) | 0;
              lo = (lo + Math.imul(al2, bl3)) | 0;
              mid = (mid + Math.imul(al2, bh3)) | 0;
              mid = (mid + Math.imul(ah2, bl3)) | 0;
              hi = (hi + Math.imul(ah2, bh3)) | 0;
              lo = (lo + Math.imul(al1, bl4)) | 0;
              mid = (mid + Math.imul(al1, bh4)) | 0;
              mid = (mid + Math.imul(ah1, bl4)) | 0;
              hi = (hi + Math.imul(ah1, bh4)) | 0;
              lo = (lo + Math.imul(al0, bl5)) | 0;
              mid = (mid + Math.imul(al0, bh5)) | 0;
              mid = (mid + Math.imul(ah0, bl5)) | 0;
              hi = (hi + Math.imul(ah0, bh5)) | 0;
              var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
              w5 &= 0x3ffffff;
              /* k = 6 */
              lo = Math.imul(al6, bl0);
              mid = Math.imul(al6, bh0);
              mid = (mid + Math.imul(ah6, bl0)) | 0;
              hi = Math.imul(ah6, bh0);
              lo = (lo + Math.imul(al5, bl1)) | 0;
              mid = (mid + Math.imul(al5, bh1)) | 0;
              mid = (mid + Math.imul(ah5, bl1)) | 0;
              hi = (hi + Math.imul(ah5, bh1)) | 0;
              lo = (lo + Math.imul(al4, bl2)) | 0;
              mid = (mid + Math.imul(al4, bh2)) | 0;
              mid = (mid + Math.imul(ah4, bl2)) | 0;
              hi = (hi + Math.imul(ah4, bh2)) | 0;
              lo = (lo + Math.imul(al3, bl3)) | 0;
              mid = (mid + Math.imul(al3, bh3)) | 0;
              mid = (mid + Math.imul(ah3, bl3)) | 0;
              hi = (hi + Math.imul(ah3, bh3)) | 0;
              lo = (lo + Math.imul(al2, bl4)) | 0;
              mid = (mid + Math.imul(al2, bh4)) | 0;
              mid = (mid + Math.imul(ah2, bl4)) | 0;
              hi = (hi + Math.imul(ah2, bh4)) | 0;
              lo = (lo + Math.imul(al1, bl5)) | 0;
              mid = (mid + Math.imul(al1, bh5)) | 0;
              mid = (mid + Math.imul(ah1, bl5)) | 0;
              hi = (hi + Math.imul(ah1, bh5)) | 0;
              lo = (lo + Math.imul(al0, bl6)) | 0;
              mid = (mid + Math.imul(al0, bh6)) | 0;
              mid = (mid + Math.imul(ah0, bl6)) | 0;
              hi = (hi + Math.imul(ah0, bh6)) | 0;
              var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
              w6 &= 0x3ffffff;
              /* k = 7 */
              lo = Math.imul(al7, bl0);
              mid = Math.imul(al7, bh0);
              mid = (mid + Math.imul(ah7, bl0)) | 0;
              hi = Math.imul(ah7, bh0);
              lo = (lo + Math.imul(al6, bl1)) | 0;
              mid = (mid + Math.imul(al6, bh1)) | 0;
              mid = (mid + Math.imul(ah6, bl1)) | 0;
              hi = (hi + Math.imul(ah6, bh1)) | 0;
              lo = (lo + Math.imul(al5, bl2)) | 0;
              mid = (mid + Math.imul(al5, bh2)) | 0;
              mid = (mid + Math.imul(ah5, bl2)) | 0;
              hi = (hi + Math.imul(ah5, bh2)) | 0;
              lo = (lo + Math.imul(al4, bl3)) | 0;
              mid = (mid + Math.imul(al4, bh3)) | 0;
              mid = (mid + Math.imul(ah4, bl3)) | 0;
              hi = (hi + Math.imul(ah4, bh3)) | 0;
              lo = (lo + Math.imul(al3, bl4)) | 0;
              mid = (mid + Math.imul(al3, bh4)) | 0;
              mid = (mid + Math.imul(ah3, bl4)) | 0;
              hi = (hi + Math.imul(ah3, bh4)) | 0;
              lo = (lo + Math.imul(al2, bl5)) | 0;
              mid = (mid + Math.imul(al2, bh5)) | 0;
              mid = (mid + Math.imul(ah2, bl5)) | 0;
              hi = (hi + Math.imul(ah2, bh5)) | 0;
              lo = (lo + Math.imul(al1, bl6)) | 0;
              mid = (mid + Math.imul(al1, bh6)) | 0;
              mid = (mid + Math.imul(ah1, bl6)) | 0;
              hi = (hi + Math.imul(ah1, bh6)) | 0;
              lo = (lo + Math.imul(al0, bl7)) | 0;
              mid = (mid + Math.imul(al0, bh7)) | 0;
              mid = (mid + Math.imul(ah0, bl7)) | 0;
              hi = (hi + Math.imul(ah0, bh7)) | 0;
              var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
              w7 &= 0x3ffffff;
              /* k = 8 */
              lo = Math.imul(al8, bl0);
              mid = Math.imul(al8, bh0);
              mid = (mid + Math.imul(ah8, bl0)) | 0;
              hi = Math.imul(ah8, bh0);
              lo = (lo + Math.imul(al7, bl1)) | 0;
              mid = (mid + Math.imul(al7, bh1)) | 0;
              mid = (mid + Math.imul(ah7, bl1)) | 0;
              hi = (hi + Math.imul(ah7, bh1)) | 0;
              lo = (lo + Math.imul(al6, bl2)) | 0;
              mid = (mid + Math.imul(al6, bh2)) | 0;
              mid = (mid + Math.imul(ah6, bl2)) | 0;
              hi = (hi + Math.imul(ah6, bh2)) | 0;
              lo = (lo + Math.imul(al5, bl3)) | 0;
              mid = (mid + Math.imul(al5, bh3)) | 0;
              mid = (mid + Math.imul(ah5, bl3)) | 0;
              hi = (hi + Math.imul(ah5, bh3)) | 0;
              lo = (lo + Math.imul(al4, bl4)) | 0;
              mid = (mid + Math.imul(al4, bh4)) | 0;
              mid = (mid + Math.imul(ah4, bl4)) | 0;
              hi = (hi + Math.imul(ah4, bh4)) | 0;
              lo = (lo + Math.imul(al3, bl5)) | 0;
              mid = (mid + Math.imul(al3, bh5)) | 0;
              mid = (mid + Math.imul(ah3, bl5)) | 0;
              hi = (hi + Math.imul(ah3, bh5)) | 0;
              lo = (lo + Math.imul(al2, bl6)) | 0;
              mid = (mid + Math.imul(al2, bh6)) | 0;
              mid = (mid + Math.imul(ah2, bl6)) | 0;
              hi = (hi + Math.imul(ah2, bh6)) | 0;
              lo = (lo + Math.imul(al1, bl7)) | 0;
              mid = (mid + Math.imul(al1, bh7)) | 0;
              mid = (mid + Math.imul(ah1, bl7)) | 0;
              hi = (hi + Math.imul(ah1, bh7)) | 0;
              lo = (lo + Math.imul(al0, bl8)) | 0;
              mid = (mid + Math.imul(al0, bh8)) | 0;
              mid = (mid + Math.imul(ah0, bl8)) | 0;
              hi = (hi + Math.imul(ah0, bh8)) | 0;
              var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
              w8 &= 0x3ffffff;
              /* k = 9 */
              lo = Math.imul(al9, bl0);
              mid = Math.imul(al9, bh0);
              mid = (mid + Math.imul(ah9, bl0)) | 0;
              hi = Math.imul(ah9, bh0);
              lo = (lo + Math.imul(al8, bl1)) | 0;
              mid = (mid + Math.imul(al8, bh1)) | 0;
              mid = (mid + Math.imul(ah8, bl1)) | 0;
              hi = (hi + Math.imul(ah8, bh1)) | 0;
              lo = (lo + Math.imul(al7, bl2)) | 0;
              mid = (mid + Math.imul(al7, bh2)) | 0;
              mid = (mid + Math.imul(ah7, bl2)) | 0;
              hi = (hi + Math.imul(ah7, bh2)) | 0;
              lo = (lo + Math.imul(al6, bl3)) | 0;
              mid = (mid + Math.imul(al6, bh3)) | 0;
              mid = (mid + Math.imul(ah6, bl3)) | 0;
              hi = (hi + Math.imul(ah6, bh3)) | 0;
              lo = (lo + Math.imul(al5, bl4)) | 0;
              mid = (mid + Math.imul(al5, bh4)) | 0;
              mid = (mid + Math.imul(ah5, bl4)) | 0;
              hi = (hi + Math.imul(ah5, bh4)) | 0;
              lo = (lo + Math.imul(al4, bl5)) | 0;
              mid = (mid + Math.imul(al4, bh5)) | 0;
              mid = (mid + Math.imul(ah4, bl5)) | 0;
              hi = (hi + Math.imul(ah4, bh5)) | 0;
              lo = (lo + Math.imul(al3, bl6)) | 0;
              mid = (mid + Math.imul(al3, bh6)) | 0;
              mid = (mid + Math.imul(ah3, bl6)) | 0;
              hi = (hi + Math.imul(ah3, bh6)) | 0;
              lo = (lo + Math.imul(al2, bl7)) | 0;
              mid = (mid + Math.imul(al2, bh7)) | 0;
              mid = (mid + Math.imul(ah2, bl7)) | 0;
              hi = (hi + Math.imul(ah2, bh7)) | 0;
              lo = (lo + Math.imul(al1, bl8)) | 0;
              mid = (mid + Math.imul(al1, bh8)) | 0;
              mid = (mid + Math.imul(ah1, bl8)) | 0;
              hi = (hi + Math.imul(ah1, bh8)) | 0;
              lo = (lo + Math.imul(al0, bl9)) | 0;
              mid = (mid + Math.imul(al0, bh9)) | 0;
              mid = (mid + Math.imul(ah0, bl9)) | 0;
              hi = (hi + Math.imul(ah0, bh9)) | 0;
              var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
              w9 &= 0x3ffffff;
              /* k = 10 */
              lo = Math.imul(al9, bl1);
              mid = Math.imul(al9, bh1);
              mid = (mid + Math.imul(ah9, bl1)) | 0;
              hi = Math.imul(ah9, bh1);
              lo = (lo + Math.imul(al8, bl2)) | 0;
              mid = (mid + Math.imul(al8, bh2)) | 0;
              mid = (mid + Math.imul(ah8, bl2)) | 0;
              hi = (hi + Math.imul(ah8, bh2)) | 0;
              lo = (lo + Math.imul(al7, bl3)) | 0;
              mid = (mid + Math.imul(al7, bh3)) | 0;
              mid = (mid + Math.imul(ah7, bl3)) | 0;
              hi = (hi + Math.imul(ah7, bh3)) | 0;
              lo = (lo + Math.imul(al6, bl4)) | 0;
              mid = (mid + Math.imul(al6, bh4)) | 0;
              mid = (mid + Math.imul(ah6, bl4)) | 0;
              hi = (hi + Math.imul(ah6, bh4)) | 0;
              lo = (lo + Math.imul(al5, bl5)) | 0;
              mid = (mid + Math.imul(al5, bh5)) | 0;
              mid = (mid + Math.imul(ah5, bl5)) | 0;
              hi = (hi + Math.imul(ah5, bh5)) | 0;
              lo = (lo + Math.imul(al4, bl6)) | 0;
              mid = (mid + Math.imul(al4, bh6)) | 0;
              mid = (mid + Math.imul(ah4, bl6)) | 0;
              hi = (hi + Math.imul(ah4, bh6)) | 0;
              lo = (lo + Math.imul(al3, bl7)) | 0;
              mid = (mid + Math.imul(al3, bh7)) | 0;
              mid = (mid + Math.imul(ah3, bl7)) | 0;
              hi = (hi + Math.imul(ah3, bh7)) | 0;
              lo = (lo + Math.imul(al2, bl8)) | 0;
              mid = (mid + Math.imul(al2, bh8)) | 0;
              mid = (mid + Math.imul(ah2, bl8)) | 0;
              hi = (hi + Math.imul(ah2, bh8)) | 0;
              lo = (lo + Math.imul(al1, bl9)) | 0;
              mid = (mid + Math.imul(al1, bh9)) | 0;
              mid = (mid + Math.imul(ah1, bl9)) | 0;
              hi = (hi + Math.imul(ah1, bh9)) | 0;
              var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
              w10 &= 0x3ffffff;
              /* k = 11 */
              lo = Math.imul(al9, bl2);
              mid = Math.imul(al9, bh2);
              mid = (mid + Math.imul(ah9, bl2)) | 0;
              hi = Math.imul(ah9, bh2);
              lo = (lo + Math.imul(al8, bl3)) | 0;
              mid = (mid + Math.imul(al8, bh3)) | 0;
              mid = (mid + Math.imul(ah8, bl3)) | 0;
              hi = (hi + Math.imul(ah8, bh3)) | 0;
              lo = (lo + Math.imul(al7, bl4)) | 0;
              mid = (mid + Math.imul(al7, bh4)) | 0;
              mid = (mid + Math.imul(ah7, bl4)) | 0;
              hi = (hi + Math.imul(ah7, bh4)) | 0;
              lo = (lo + Math.imul(al6, bl5)) | 0;
              mid = (mid + Math.imul(al6, bh5)) | 0;
              mid = (mid + Math.imul(ah6, bl5)) | 0;
              hi = (hi + Math.imul(ah6, bh5)) | 0;
              lo = (lo + Math.imul(al5, bl6)) | 0;
              mid = (mid + Math.imul(al5, bh6)) | 0;
              mid = (mid + Math.imul(ah5, bl6)) | 0;
              hi = (hi + Math.imul(ah5, bh6)) | 0;
              lo = (lo + Math.imul(al4, bl7)) | 0;
              mid = (mid + Math.imul(al4, bh7)) | 0;
              mid = (mid + Math.imul(ah4, bl7)) | 0;
              hi = (hi + Math.imul(ah4, bh7)) | 0;
              lo = (lo + Math.imul(al3, bl8)) | 0;
              mid = (mid + Math.imul(al3, bh8)) | 0;
              mid = (mid + Math.imul(ah3, bl8)) | 0;
              hi = (hi + Math.imul(ah3, bh8)) | 0;
              lo = (lo + Math.imul(al2, bl9)) | 0;
              mid = (mid + Math.imul(al2, bh9)) | 0;
              mid = (mid + Math.imul(ah2, bl9)) | 0;
              hi = (hi + Math.imul(ah2, bh9)) | 0;
              var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
              w11 &= 0x3ffffff;
              /* k = 12 */
              lo = Math.imul(al9, bl3);
              mid = Math.imul(al9, bh3);
              mid = (mid + Math.imul(ah9, bl3)) | 0;
              hi = Math.imul(ah9, bh3);
              lo = (lo + Math.imul(al8, bl4)) | 0;
              mid = (mid + Math.imul(al8, bh4)) | 0;
              mid = (mid + Math.imul(ah8, bl4)) | 0;
              hi = (hi + Math.imul(ah8, bh4)) | 0;
              lo = (lo + Math.imul(al7, bl5)) | 0;
              mid = (mid + Math.imul(al7, bh5)) | 0;
              mid = (mid + Math.imul(ah7, bl5)) | 0;
              hi = (hi + Math.imul(ah7, bh5)) | 0;
              lo = (lo + Math.imul(al6, bl6)) | 0;
              mid = (mid + Math.imul(al6, bh6)) | 0;
              mid = (mid + Math.imul(ah6, bl6)) | 0;
              hi = (hi + Math.imul(ah6, bh6)) | 0;
              lo = (lo + Math.imul(al5, bl7)) | 0;
              mid = (mid + Math.imul(al5, bh7)) | 0;
              mid = (mid + Math.imul(ah5, bl7)) | 0;
              hi = (hi + Math.imul(ah5, bh7)) | 0;
              lo = (lo + Math.imul(al4, bl8)) | 0;
              mid = (mid + Math.imul(al4, bh8)) | 0;
              mid = (mid + Math.imul(ah4, bl8)) | 0;
              hi = (hi + Math.imul(ah4, bh8)) | 0;
              lo = (lo + Math.imul(al3, bl9)) | 0;
              mid = (mid + Math.imul(al3, bh9)) | 0;
              mid = (mid + Math.imul(ah3, bl9)) | 0;
              hi = (hi + Math.imul(ah3, bh9)) | 0;
              var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
              w12 &= 0x3ffffff;
              /* k = 13 */
              lo = Math.imul(al9, bl4);
              mid = Math.imul(al9, bh4);
              mid = (mid + Math.imul(ah9, bl4)) | 0;
              hi = Math.imul(ah9, bh4);
              lo = (lo + Math.imul(al8, bl5)) | 0;
              mid = (mid + Math.imul(al8, bh5)) | 0;
              mid = (mid + Math.imul(ah8, bl5)) | 0;
              hi = (hi + Math.imul(ah8, bh5)) | 0;
              lo = (lo + Math.imul(al7, bl6)) | 0;
              mid = (mid + Math.imul(al7, bh6)) | 0;
              mid = (mid + Math.imul(ah7, bl6)) | 0;
              hi = (hi + Math.imul(ah7, bh6)) | 0;
              lo = (lo + Math.imul(al6, bl7)) | 0;
              mid = (mid + Math.imul(al6, bh7)) | 0;
              mid = (mid + Math.imul(ah6, bl7)) | 0;
              hi = (hi + Math.imul(ah6, bh7)) | 0;
              lo = (lo + Math.imul(al5, bl8)) | 0;
              mid = (mid + Math.imul(al5, bh8)) | 0;
              mid = (mid + Math.imul(ah5, bl8)) | 0;
              hi = (hi + Math.imul(ah5, bh8)) | 0;
              lo = (lo + Math.imul(al4, bl9)) | 0;
              mid = (mid + Math.imul(al4, bh9)) | 0;
              mid = (mid + Math.imul(ah4, bl9)) | 0;
              hi = (hi + Math.imul(ah4, bh9)) | 0;
              var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
              w13 &= 0x3ffffff;
              /* k = 14 */
              lo = Math.imul(al9, bl5);
              mid = Math.imul(al9, bh5);
              mid = (mid + Math.imul(ah9, bl5)) | 0;
              hi = Math.imul(ah9, bh5);
              lo = (lo + Math.imul(al8, bl6)) | 0;
              mid = (mid + Math.imul(al8, bh6)) | 0;
              mid = (mid + Math.imul(ah8, bl6)) | 0;
              hi = (hi + Math.imul(ah8, bh6)) | 0;
              lo = (lo + Math.imul(al7, bl7)) | 0;
              mid = (mid + Math.imul(al7, bh7)) | 0;
              mid = (mid + Math.imul(ah7, bl7)) | 0;
              hi = (hi + Math.imul(ah7, bh7)) | 0;
              lo = (lo + Math.imul(al6, bl8)) | 0;
              mid = (mid + Math.imul(al6, bh8)) | 0;
              mid = (mid + Math.imul(ah6, bl8)) | 0;
              hi = (hi + Math.imul(ah6, bh8)) | 0;
              lo = (lo + Math.imul(al5, bl9)) | 0;
              mid = (mid + Math.imul(al5, bh9)) | 0;
              mid = (mid + Math.imul(ah5, bl9)) | 0;
              hi = (hi + Math.imul(ah5, bh9)) | 0;
              var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
              w14 &= 0x3ffffff;
              /* k = 15 */
              lo = Math.imul(al9, bl6);
              mid = Math.imul(al9, bh6);
              mid = (mid + Math.imul(ah9, bl6)) | 0;
              hi = Math.imul(ah9, bh6);
              lo = (lo + Math.imul(al8, bl7)) | 0;
              mid = (mid + Math.imul(al8, bh7)) | 0;
              mid = (mid + Math.imul(ah8, bl7)) | 0;
              hi = (hi + Math.imul(ah8, bh7)) | 0;
              lo = (lo + Math.imul(al7, bl8)) | 0;
              mid = (mid + Math.imul(al7, bh8)) | 0;
              mid = (mid + Math.imul(ah7, bl8)) | 0;
              hi = (hi + Math.imul(ah7, bh8)) | 0;
              lo = (lo + Math.imul(al6, bl9)) | 0;
              mid = (mid + Math.imul(al6, bh9)) | 0;
              mid = (mid + Math.imul(ah6, bl9)) | 0;
              hi = (hi + Math.imul(ah6, bh9)) | 0;
              var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
              w15 &= 0x3ffffff;
              /* k = 16 */
              lo = Math.imul(al9, bl7);
              mid = Math.imul(al9, bh7);
              mid = (mid + Math.imul(ah9, bl7)) | 0;
              hi = Math.imul(ah9, bh7);
              lo = (lo + Math.imul(al8, bl8)) | 0;
              mid = (mid + Math.imul(al8, bh8)) | 0;
              mid = (mid + Math.imul(ah8, bl8)) | 0;
              hi = (hi + Math.imul(ah8, bh8)) | 0;
              lo = (lo + Math.imul(al7, bl9)) | 0;
              mid = (mid + Math.imul(al7, bh9)) | 0;
              mid = (mid + Math.imul(ah7, bl9)) | 0;
              hi = (hi + Math.imul(ah7, bh9)) | 0;
              var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
              w16 &= 0x3ffffff;
              /* k = 17 */
              lo = Math.imul(al9, bl8);
              mid = Math.imul(al9, bh8);
              mid = (mid + Math.imul(ah9, bl8)) | 0;
              hi = Math.imul(ah9, bh8);
              lo = (lo + Math.imul(al8, bl9)) | 0;
              mid = (mid + Math.imul(al8, bh9)) | 0;
              mid = (mid + Math.imul(ah8, bl9)) | 0;
              hi = (hi + Math.imul(ah8, bh9)) | 0;
              var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
              w17 &= 0x3ffffff;
              /* k = 18 */
              lo = Math.imul(al9, bl9);
              mid = Math.imul(al9, bh9);
              mid = (mid + Math.imul(ah9, bl9)) | 0;
              hi = Math.imul(ah9, bh9);
              var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
              w18 &= 0x3ffffff;
              o[0] = w0;
              o[1] = w1;
              o[2] = w2;
              o[3] = w3;
              o[4] = w4;
              o[5] = w5;
              o[6] = w6;
              o[7] = w7;
              o[8] = w8;
              o[9] = w9;
              o[10] = w10;
              o[11] = w11;
              o[12] = w12;
              o[13] = w13;
              o[14] = w14;
              o[15] = w15;
              o[16] = w16;
              o[17] = w17;
              o[18] = w18;
              if (c !== 0) {
                o[19] = c;
                out.length++;
              }
              return out;
            };

            // Polyfill comb
            if (!Math.imul) {
              comb10MulTo = smallMulTo;
            }

            function bigMulTo(self, num, out) {
              out.negative = num.negative ^ self.negative;
              out.length = self.length + num.length;

              var carry = 0;
              var hncarry = 0;
              for (var k = 0; k < out.length - 1; k++) {
                // Sum all words with the same `i + j = k` and accumulate `ncarry`,
                // note that ncarry could be >= 0x3ffffff
                var ncarry = hncarry;
                hncarry = 0;
                var rword = carry & 0x3ffffff;
                var maxJ = Math.min(k, num.length - 1);
                for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                  var i = k - j;
                  var a = self.words[i] | 0;
                  var b = num.words[j] | 0;
                  var r = a * b;

                  var lo = r & 0x3ffffff;
                  ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
                  lo = (lo + rword) | 0;
                  rword = lo & 0x3ffffff;
                  ncarry = (ncarry + (lo >>> 26)) | 0;

                  hncarry += ncarry >>> 26;
                  ncarry &= 0x3ffffff;
                }
                out.words[k] = rword;
                carry = ncarry;
                ncarry = hncarry;
              }
              if (carry !== 0) {
                out.words[k] = carry;
              } else {
                out.length--;
              }

              return out.strip();
            }

            function jumboMulTo(self, num, out) {
              var fftm = new FFTM();
              return fftm.mulp(self, num, out);
            }

            BN.prototype.mulTo = function mulTo(num, out) {
              var res;
              var len = this.length + num.length;
              if (this.length === 10 && num.length === 10) {
                res = comb10MulTo(this, num, out);
              } else if (len < 63) {
                res = smallMulTo(this, num, out);
              } else if (len < 1024) {
                res = bigMulTo(this, num, out);
              } else {
                res = jumboMulTo(this, num, out);
              }

              return res;
            };

            // Cooley-Tukey algorithm for FFT
            // slightly revisited to rely on looping instead of recursion

            function FFTM(x, y) {
              this.x = x;
              this.y = y;
            }

            FFTM.prototype.makeRBT = function makeRBT(N) {
              var t = new Array(N);
              var l = BN.prototype._countBits(N) - 1;
              for (var i = 0; i < N; i++) {
                t[i] = this.revBin(i, l, N);
              }

              return t;
            };

            // Returns binary-reversed representation of `x`
            FFTM.prototype.revBin = function revBin(x, l, N) {
              if (x === 0 || x === N - 1) return x;

              var rb = 0;
              for (var i = 0; i < l; i++) {
                rb |= (x & 1) << (l - i - 1);
                x >>= 1;
              }

              return rb;
            };

            // Performs "tweedling" phase, therefore 'emulating'
            // behaviour of the recursive algorithm
            FFTM.prototype.permute = function permute(
              rbt,
              rws,
              iws,
              rtws,
              itws,
              N
            ) {
              for (var i = 0; i < N; i++) {
                rtws[i] = rws[rbt[i]];
                itws[i] = iws[rbt[i]];
              }
            };

            FFTM.prototype.transform = function transform(
              rws,
              iws,
              rtws,
              itws,
              N,
              rbt
            ) {
              this.permute(rbt, rws, iws, rtws, itws, N);

              for (var s = 1; s < N; s <<= 1) {
                var l = s << 1;

                var rtwdf = Math.cos((2 * Math.PI) / l);
                var itwdf = Math.sin((2 * Math.PI) / l);

                for (var p = 0; p < N; p += l) {
                  var rtwdf_ = rtwdf;
                  var itwdf_ = itwdf;

                  for (var j = 0; j < s; j++) {
                    var re = rtws[p + j];
                    var ie = itws[p + j];

                    var ro = rtws[p + j + s];
                    var io = itws[p + j + s];

                    var rx = rtwdf_ * ro - itwdf_ * io;

                    io = rtwdf_ * io + itwdf_ * ro;
                    ro = rx;

                    rtws[p + j] = re + ro;
                    itws[p + j] = ie + io;

                    rtws[p + j + s] = re - ro;
                    itws[p + j + s] = ie - io;

                    /* jshint maxdepth : false */
                    if (j !== l) {
                      rx = rtwdf * rtwdf_ - itwdf * itwdf_;

                      itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                      rtwdf_ = rx;
                    }
                  }
                }
              }
            };

            FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
              var N = Math.max(m, n) | 1;
              var odd = N & 1;
              var i = 0;
              for (N = (N / 2) | 0; N; N = N >>> 1) {
                i++;
              }

              return 1 << (i + 1 + odd);
            };

            FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
              if (N <= 1) return;

              for (var i = 0; i < N / 2; i++) {
                var t = rws[i];

                rws[i] = rws[N - i - 1];
                rws[N - i - 1] = t;

                t = iws[i];

                iws[i] = -iws[N - i - 1];
                iws[N - i - 1] = -t;
              }
            };

            FFTM.prototype.normalize13b = function normalize13b(ws, N) {
              var carry = 0;
              for (var i = 0; i < N / 2; i++) {
                var w =
                  Math.round(ws[2 * i + 1] / N) * 0x2000 +
                  Math.round(ws[2 * i] / N) +
                  carry;

                ws[i] = w & 0x3ffffff;

                if (w < 0x4000000) {
                  carry = 0;
                } else {
                  carry = (w / 0x4000000) | 0;
                }
              }

              return ws;
            };

            FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
              var carry = 0;
              for (var i = 0; i < len; i++) {
                carry = carry + (ws[i] | 0);

                rws[2 * i] = carry & 0x1fff;
                carry = carry >>> 13;
                rws[2 * i + 1] = carry & 0x1fff;
                carry = carry >>> 13;
              }

              // Pad with zeroes
              for (i = 2 * len; i < N; ++i) {
                rws[i] = 0;
              }

              assert(carry === 0);
              assert((carry & ~0x1fff) === 0);
            };

            FFTM.prototype.stub = function stub(N) {
              var ph = new Array(N);
              for (var i = 0; i < N; i++) {
                ph[i] = 0;
              }

              return ph;
            };

            FFTM.prototype.mulp = function mulp(x, y, out) {
              var N = 2 * this.guessLen13b(x.length, y.length);

              var rbt = this.makeRBT(N);

              var _ = this.stub(N);

              var rws = new Array(N);
              var rwst = new Array(N);
              var iwst = new Array(N);

              var nrws = new Array(N);
              var nrwst = new Array(N);
              var niwst = new Array(N);

              var rmws = out.words;
              rmws.length = N;

              this.convert13b(x.words, x.length, rws, N);
              this.convert13b(y.words, y.length, nrws, N);

              this.transform(rws, _, rwst, iwst, N, rbt);
              this.transform(nrws, _, nrwst, niwst, N, rbt);

              for (var i = 0; i < N; i++) {
                var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
                iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
                rwst[i] = rx;
              }

              this.conjugate(rwst, iwst, N);
              this.transform(rwst, iwst, rmws, _, N, rbt);
              this.conjugate(rmws, _, N);
              this.normalize13b(rmws, N);

              out.negative = x.negative ^ y.negative;
              out.length = x.length + y.length;
              return out.strip();
            };

            // Multiply `this` by `num`
            BN.prototype.mul = function mul(num) {
              var out = new BN(null);
              out.words = new Array(this.length + num.length);
              return this.mulTo(num, out);
            };

            // Multiply employing FFT
            BN.prototype.mulf = function mulf(num) {
              var out = new BN(null);
              out.words = new Array(this.length + num.length);
              return jumboMulTo(this, num, out);
            };

            // In-place Multiplication
            BN.prototype.imul = function imul(num) {
              return this.clone().mulTo(num, this);
            };

            BN.prototype.imuln = function imuln(num) {
              assert(typeof num === 'number');
              assert(num < 0x4000000);

              // Carry
              var carry = 0;
              for (var i = 0; i < this.length; i++) {
                var w = (this.words[i] | 0) * num;
                var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
                carry >>= 26;
                carry += (w / 0x4000000) | 0;
                // NOTE: lo is 27bit maximum
                carry += lo >>> 26;
                this.words[i] = lo & 0x3ffffff;
              }

              if (carry !== 0) {
                this.words[i] = carry;
                this.length++;
              }

              return this;
            };

            BN.prototype.muln = function muln(num) {
              return this.clone().imuln(num);
            };

            // `this` * `this`
            BN.prototype.sqr = function sqr() {
              return this.mul(this);
            };

            // `this` * `this` in-place
            BN.prototype.isqr = function isqr() {
              return this.imul(this.clone());
            };

            // Math.pow(`this`, `num`)
            BN.prototype.pow = function pow(num) {
              var w = toBitArray(num);
              if (w.length === 0) return new BN(1);

              // Skip leading zeroes
              var res = this;
              for (var i = 0; i < w.length; i++, res = res.sqr()) {
                if (w[i] !== 0) break;
              }

              if (++i < w.length) {
                for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
                  if (w[i] === 0) continue;

                  res = res.mul(q);
                }
              }

              return res;
            };

            // Shift-left in-place
            BN.prototype.iushln = function iushln(bits) {
              assert(typeof bits === 'number' && bits >= 0);
              var r = bits % 26;
              var s = (bits - r) / 26;
              var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
              var i;

              if (r !== 0) {
                var carry = 0;

                for (i = 0; i < this.length; i++) {
                  var newCarry = this.words[i] & carryMask;
                  var c = ((this.words[i] | 0) - newCarry) << r;
                  this.words[i] = c | carry;
                  carry = newCarry >>> (26 - r);
                }

                if (carry) {
                  this.words[i] = carry;
                  this.length++;
                }
              }

              if (s !== 0) {
                for (i = this.length - 1; i >= 0; i--) {
                  this.words[i + s] = this.words[i];
                }

                for (i = 0; i < s; i++) {
                  this.words[i] = 0;
                }

                this.length += s;
              }

              return this.strip();
            };

            BN.prototype.ishln = function ishln(bits) {
              // TODO(indutny): implement me
              assert(this.negative === 0);
              return this.iushln(bits);
            };

            // Shift-right in-place
            // NOTE: `hint` is a lowest bit before trailing zeroes
            // NOTE: if `extended` is present - it will be filled with destroyed bits
            BN.prototype.iushrn = function iushrn(bits, hint, extended) {
              assert(typeof bits === 'number' && bits >= 0);
              var h;
              if (hint) {
                h = (hint - (hint % 26)) / 26;
              } else {
                h = 0;
              }

              var r = bits % 26;
              var s = Math.min((bits - r) / 26, this.length);
              var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
              var maskedWords = extended;

              h -= s;
              h = Math.max(0, h);

              // Extended mode, copy masked part
              if (maskedWords) {
                for (var i = 0; i < s; i++) {
                  maskedWords.words[i] = this.words[i];
                }
                maskedWords.length = s;
              }

              if (s === 0) {
                // No-op, we should not move anything at all
              } else if (this.length > s) {
                this.length -= s;
                for (i = 0; i < this.length; i++) {
                  this.words[i] = this.words[i + s];
                }
              } else {
                this.words[0] = 0;
                this.length = 1;
              }

              var carry = 0;
              for (
                i = this.length - 1;
                i >= 0 && (carry !== 0 || i >= h);
                i--
              ) {
                var word = this.words[i] | 0;
                this.words[i] = (carry << (26 - r)) | (word >>> r);
                carry = word & mask;
              }

              // Push carried bits as a mask
              if (maskedWords && carry !== 0) {
                maskedWords.words[maskedWords.length++] = carry;
              }

              if (this.length === 0) {
                this.words[0] = 0;
                this.length = 1;
              }

              return this.strip();
            };

            BN.prototype.ishrn = function ishrn(bits, hint, extended) {
              // TODO(indutny): implement me
              assert(this.negative === 0);
              return this.iushrn(bits, hint, extended);
            };

            // Shift-left
            BN.prototype.shln = function shln(bits) {
              return this.clone().ishln(bits);
            };

            BN.prototype.ushln = function ushln(bits) {
              return this.clone().iushln(bits);
            };

            // Shift-right
            BN.prototype.shrn = function shrn(bits) {
              return this.clone().ishrn(bits);
            };

            BN.prototype.ushrn = function ushrn(bits) {
              return this.clone().iushrn(bits);
            };

            // Test if n bit is set
            BN.prototype.testn = function testn(bit) {
              assert(typeof bit === 'number' && bit >= 0);
              var r = bit % 26;
              var s = (bit - r) / 26;
              var q = 1 << r;

              // Fast case: bit is much higher than all existing words
              if (this.length <= s) return false;

              // Check bit and return
              var w = this.words[s];

              return !!(w & q);
            };

            // Return only lowers bits of number (in-place)
            BN.prototype.imaskn = function imaskn(bits) {
              assert(typeof bits === 'number' && bits >= 0);
              var r = bits % 26;
              var s = (bits - r) / 26;

              assert(
                this.negative === 0,
                'imaskn works only with positive numbers'
              );

              if (this.length <= s) {
                return this;
              }

              if (r !== 0) {
                s++;
              }
              this.length = Math.min(s, this.length);

              if (r !== 0) {
                var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
                this.words[this.length - 1] &= mask;
              }

              return this.strip();
            };

            // Return only lowers bits of number
            BN.prototype.maskn = function maskn(bits) {
              return this.clone().imaskn(bits);
            };

            // Add plain number `num` to `this`
            BN.prototype.iaddn = function iaddn(num) {
              assert(typeof num === 'number');
              assert(num < 0x4000000);
              if (num < 0) return this.isubn(-num);

              // Possible sign change
              if (this.negative !== 0) {
                if (this.length === 1 && (this.words[0] | 0) < num) {
                  this.words[0] = num - (this.words[0] | 0);
                  this.negative = 0;
                  return this;
                }

                this.negative = 0;
                this.isubn(num);
                this.negative = 1;
                return this;
              }

              // Add without checks
              return this._iaddn(num);
            };

            BN.prototype._iaddn = function _iaddn(num) {
              this.words[0] += num;

              // Carry
              for (
                var i = 0;
                i < this.length && this.words[i] >= 0x4000000;
                i++
              ) {
                this.words[i] -= 0x4000000;
                if (i === this.length - 1) {
                  this.words[i + 1] = 1;
                } else {
                  this.words[i + 1]++;
                }
              }
              this.length = Math.max(this.length, i + 1);

              return this;
            };

            // Subtract plain number `num` from `this`
            BN.prototype.isubn = function isubn(num) {
              assert(typeof num === 'number');
              assert(num < 0x4000000);
              if (num < 0) return this.iaddn(-num);

              if (this.negative !== 0) {
                this.negative = 0;
                this.iaddn(num);
                this.negative = 1;
                return this;
              }

              this.words[0] -= num;

              if (this.length === 1 && this.words[0] < 0) {
                this.words[0] = -this.words[0];
                this.negative = 1;
              } else {
                // Carry
                for (var i = 0; i < this.length && this.words[i] < 0; i++) {
                  this.words[i] += 0x4000000;
                  this.words[i + 1] -= 1;
                }
              }

              return this.strip();
            };

            BN.prototype.addn = function addn(num) {
              return this.clone().iaddn(num);
            };

            BN.prototype.subn = function subn(num) {
              return this.clone().isubn(num);
            };

            BN.prototype.iabs = function iabs() {
              this.negative = 0;

              return this;
            };

            BN.prototype.abs = function abs() {
              return this.clone().iabs();
            };

            BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
              var len = num.length + shift;
              var i;

              this._expand(len);

              var w;
              var carry = 0;
              for (i = 0; i < num.length; i++) {
                w = (this.words[i + shift] | 0) + carry;
                var right = (num.words[i] | 0) * mul;
                w -= right & 0x3ffffff;
                carry = (w >> 26) - ((right / 0x4000000) | 0);
                this.words[i + shift] = w & 0x3ffffff;
              }
              for (; i < this.length - shift; i++) {
                w = (this.words[i + shift] | 0) + carry;
                carry = w >> 26;
                this.words[i + shift] = w & 0x3ffffff;
              }

              if (carry === 0) return this.strip();

              // Subtraction overflow
              assert(carry === -1);
              carry = 0;
              for (i = 0; i < this.length; i++) {
                w = -(this.words[i] | 0) + carry;
                carry = w >> 26;
                this.words[i] = w & 0x3ffffff;
              }
              this.negative = 1;

              return this.strip();
            };

            BN.prototype._wordDiv = function _wordDiv(num, mode) {
              var shift = this.length - num.length;

              var a = this.clone();
              var b = num;

              // Normalize
              var bhi = b.words[b.length - 1] | 0;
              var bhiBits = this._countBits(bhi);
              shift = 26 - bhiBits;
              if (shift !== 0) {
                b = b.ushln(shift);
                a.iushln(shift);
                bhi = b.words[b.length - 1] | 0;
              }

              // Initialize quotient
              var m = a.length - b.length;
              var q;

              if (mode !== 'mod') {
                q = new BN(null);
                q.length = m + 1;
                q.words = new Array(q.length);
                for (var i = 0; i < q.length; i++) {
                  q.words[i] = 0;
                }
              }

              var diff = a.clone()._ishlnsubmul(b, 1, m);
              if (diff.negative === 0) {
                a = diff;
                if (q) {
                  q.words[m] = 1;
                }
              }

              for (var j = m - 1; j >= 0; j--) {
                var qj =
                  (a.words[b.length + j] | 0) * 0x4000000 +
                  (a.words[b.length + j - 1] | 0);

                // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
                // (0x7ffffff)
                qj = Math.min((qj / bhi) | 0, 0x3ffffff);

                a._ishlnsubmul(b, qj, j);
                while (a.negative !== 0) {
                  qj--;
                  a.negative = 0;
                  a._ishlnsubmul(b, 1, j);
                  if (!a.isZero()) {
                    a.negative ^= 1;
                  }
                }
                if (q) {
                  q.words[j] = qj;
                }
              }
              if (q) {
                q.strip();
              }
              a.strip();

              // Denormalize
              if (mode !== 'div' && shift !== 0) {
                a.iushrn(shift);
              }

              return {
                div: q || null,
                mod: a,
              };
            };

            // NOTE: 1) `mode` can be set to `mod` to request mod only,
            //       to `div` to request div only, or be absent to
            //       request both div & mod
            //       2) `positive` is true if unsigned mod is requested
            BN.prototype.divmod = function divmod(num, mode, positive) {
              assert(!num.isZero());

              if (this.isZero()) {
                return {
                  div: new BN(0),
                  mod: new BN(0),
                };
              }

              var div, mod, res;
              if (this.negative !== 0 && num.negative === 0) {
                res = this.neg().divmod(num, mode);

                if (mode !== 'mod') {
                  div = res.div.neg();
                }

                if (mode !== 'div') {
                  mod = res.mod.neg();
                  if (positive && mod.negative !== 0) {
                    mod.iadd(num);
                  }
                }

                return {
                  div: div,
                  mod: mod,
                };
              }

              if (this.negative === 0 && num.negative !== 0) {
                res = this.divmod(num.neg(), mode);

                if (mode !== 'mod') {
                  div = res.div.neg();
                }

                return {
                  div: div,
                  mod: res.mod,
                };
              }

              if ((this.negative & num.negative) !== 0) {
                res = this.neg().divmod(num.neg(), mode);

                if (mode !== 'div') {
                  mod = res.mod.neg();
                  if (positive && mod.negative !== 0) {
                    mod.isub(num);
                  }
                }

                return {
                  div: res.div,
                  mod: mod,
                };
              }

              // Both numbers are positive at this point

              // Strip both numbers to approximate shift value
              if (num.length > this.length || this.cmp(num) < 0) {
                return {
                  div: new BN(0),
                  mod: this,
                };
              }

              // Very short reduction
              if (num.length === 1) {
                if (mode === 'div') {
                  return {
                    div: this.divn(num.words[0]),
                    mod: null,
                  };
                }

                if (mode === 'mod') {
                  return {
                    div: null,
                    mod: new BN(this.modn(num.words[0])),
                  };
                }

                return {
                  div: this.divn(num.words[0]),
                  mod: new BN(this.modn(num.words[0])),
                };
              }

              return this._wordDiv(num, mode);
            };

            // Find `this` / `num`
            BN.prototype.div = function div(num) {
              return this.divmod(num, 'div', false).div;
            };

            // Find `this` % `num`
            BN.prototype.mod = function mod(num) {
              return this.divmod(num, 'mod', false).mod;
            };

            BN.prototype.umod = function umod(num) {
              return this.divmod(num, 'mod', true).mod;
            };

            // Find Round(`this` / `num`)
            BN.prototype.divRound = function divRound(num) {
              var dm = this.divmod(num);

              // Fast case - exact division
              if (dm.mod.isZero()) return dm.div;

              var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

              var half = num.ushrn(1);
              var r2 = num.andln(1);
              var cmp = mod.cmp(half);

              // Round down
              if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;

              // Round up
              return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
            };

            BN.prototype.modn = function modn(num) {
              assert(num <= 0x3ffffff);
              var p = (1 << 26) % num;

              var acc = 0;
              for (var i = this.length - 1; i >= 0; i--) {
                acc = (p * acc + (this.words[i] | 0)) % num;
              }

              return acc;
            };

            // In-place division by number
            BN.prototype.idivn = function idivn(num) {
              assert(num <= 0x3ffffff);

              var carry = 0;
              for (var i = this.length - 1; i >= 0; i--) {
                var w = (this.words[i] | 0) + carry * 0x4000000;
                this.words[i] = (w / num) | 0;
                carry = w % num;
              }

              return this.strip();
            };

            BN.prototype.divn = function divn(num) {
              return this.clone().idivn(num);
            };

            BN.prototype.egcd = function egcd(p) {
              assert(p.negative === 0);
              assert(!p.isZero());

              var x = this;
              var y = p.clone();

              if (x.negative !== 0) {
                x = x.umod(p);
              } else {
                x = x.clone();
              }

              // A * x + B * y = x
              var A = new BN(1);
              var B = new BN(0);

              // C * x + D * y = y
              var C = new BN(0);
              var D = new BN(1);

              var g = 0;

              while (x.isEven() && y.isEven()) {
                x.iushrn(1);
                y.iushrn(1);
                ++g;
              }

              var yp = y.clone();
              var xp = x.clone();

              while (!x.isZero()) {
                for (
                  var i = 0, im = 1;
                  (x.words[0] & im) === 0 && i < 26;
                  ++i, im <<= 1
                );
                if (i > 0) {
                  x.iushrn(i);
                  while (i-- > 0) {
                    if (A.isOdd() || B.isOdd()) {
                      A.iadd(yp);
                      B.isub(xp);
                    }

                    A.iushrn(1);
                    B.iushrn(1);
                  }
                }

                for (
                  var j = 0, jm = 1;
                  (y.words[0] & jm) === 0 && j < 26;
                  ++j, jm <<= 1
                );
                if (j > 0) {
                  y.iushrn(j);
                  while (j-- > 0) {
                    if (C.isOdd() || D.isOdd()) {
                      C.iadd(yp);
                      D.isub(xp);
                    }

                    C.iushrn(1);
                    D.iushrn(1);
                  }
                }

                if (x.cmp(y) >= 0) {
                  x.isub(y);
                  A.isub(C);
                  B.isub(D);
                } else {
                  y.isub(x);
                  C.isub(A);
                  D.isub(B);
                }
              }

              return {
                a: C,
                b: D,
                gcd: y.iushln(g),
              };
            };

            // This is reduced incarnation of the binary EEA
            // above, designated to invert members of the
            // _prime_ fields F(p) at a maximal speed
            BN.prototype._invmp = function _invmp(p) {
              assert(p.negative === 0);
              assert(!p.isZero());

              var a = this;
              var b = p.clone();

              if (a.negative !== 0) {
                a = a.umod(p);
              } else {
                a = a.clone();
              }

              var x1 = new BN(1);
              var x2 = new BN(0);

              var delta = b.clone();

              while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
                for (
                  var i = 0, im = 1;
                  (a.words[0] & im) === 0 && i < 26;
                  ++i, im <<= 1
                );
                if (i > 0) {
                  a.iushrn(i);
                  while (i-- > 0) {
                    if (x1.isOdd()) {
                      x1.iadd(delta);
                    }

                    x1.iushrn(1);
                  }
                }

                for (
                  var j = 0, jm = 1;
                  (b.words[0] & jm) === 0 && j < 26;
                  ++j, jm <<= 1
                );
                if (j > 0) {
                  b.iushrn(j);
                  while (j-- > 0) {
                    if (x2.isOdd()) {
                      x2.iadd(delta);
                    }

                    x2.iushrn(1);
                  }
                }

                if (a.cmp(b) >= 0) {
                  a.isub(b);
                  x1.isub(x2);
                } else {
                  b.isub(a);
                  x2.isub(x1);
                }
              }

              var res;
              if (a.cmpn(1) === 0) {
                res = x1;
              } else {
                res = x2;
              }

              if (res.cmpn(0) < 0) {
                res.iadd(p);
              }

              return res;
            };

            BN.prototype.gcd = function gcd(num) {
              if (this.isZero()) return num.abs();
              if (num.isZero()) return this.abs();

              var a = this.clone();
              var b = num.clone();
              a.negative = 0;
              b.negative = 0;

              // Remove common factor of two
              for (var shift = 0; a.isEven() && b.isEven(); shift++) {
                a.iushrn(1);
                b.iushrn(1);
              }

              do {
                while (a.isEven()) {
                  a.iushrn(1);
                }
                while (b.isEven()) {
                  b.iushrn(1);
                }

                var r = a.cmp(b);
                if (r < 0) {
                  // Swap `a` and `b` to make `a` always bigger than `b`
                  var t = a;
                  a = b;
                  b = t;
                } else if (r === 0 || b.cmpn(1) === 0) {
                  break;
                }

                a.isub(b);
              } while (true);

              return b.iushln(shift);
            };

            // Invert number in the field F(num)
            BN.prototype.invm = function invm(num) {
              return this.egcd(num).a.umod(num);
            };

            BN.prototype.isEven = function isEven() {
              return (this.words[0] & 1) === 0;
            };

            BN.prototype.isOdd = function isOdd() {
              return (this.words[0] & 1) === 1;
            };

            // And first word and num
            BN.prototype.andln = function andln(num) {
              return this.words[0] & num;
            };

            // Increment at the bit position in-line
            BN.prototype.bincn = function bincn(bit) {
              assert(typeof bit === 'number');
              var r = bit % 26;
              var s = (bit - r) / 26;
              var q = 1 << r;

              // Fast case: bit is much higher than all existing words
              if (this.length <= s) {
                this._expand(s + 1);
                this.words[s] |= q;
                return this;
              }

              // Add bit and propagate, if needed
              var carry = q;
              for (var i = s; carry !== 0 && i < this.length; i++) {
                var w = this.words[i] | 0;
                w += carry;
                carry = w >>> 26;
                w &= 0x3ffffff;
                this.words[i] = w;
              }
              if (carry !== 0) {
                this.words[i] = carry;
                this.length++;
              }
              return this;
            };

            BN.prototype.isZero = function isZero() {
              return this.length === 1 && this.words[0] === 0;
            };

            BN.prototype.cmpn = function cmpn(num) {
              var negative = num < 0;

              if (this.negative !== 0 && !negative) return -1;
              if (this.negative === 0 && negative) return 1;

              this.strip();

              var res;
              if (this.length > 1) {
                res = 1;
              } else {
                if (negative) {
                  num = -num;
                }

                assert(num <= 0x3ffffff, 'Number is too big');

                var w = this.words[0] | 0;
                res = w === num ? 0 : w < num ? -1 : 1;
              }
              if (this.negative !== 0) return -res | 0;
              return res;
            };

            // Compare two numbers and return:
            // 1 - if `this` > `num`
            // 0 - if `this` == `num`
            // -1 - if `this` < `num`
            BN.prototype.cmp = function cmp(num) {
              if (this.negative !== 0 && num.negative === 0) return -1;
              if (this.negative === 0 && num.negative !== 0) return 1;

              var res = this.ucmp(num);
              if (this.negative !== 0) return -res | 0;
              return res;
            };

            // Unsigned comparison
            BN.prototype.ucmp = function ucmp(num) {
              // At this point both numbers have the same sign
              if (this.length > num.length) return 1;
              if (this.length < num.length) return -1;

              var res = 0;
              for (var i = this.length - 1; i >= 0; i--) {
                var a = this.words[i] | 0;
                var b = num.words[i] | 0;

                if (a === b) continue;
                if (a < b) {
                  res = -1;
                } else if (a > b) {
                  res = 1;
                }
                break;
              }
              return res;
            };

            BN.prototype.gtn = function gtn(num) {
              return this.cmpn(num) === 1;
            };

            BN.prototype.gt = function gt(num) {
              return this.cmp(num) === 1;
            };

            BN.prototype.gten = function gten(num) {
              return this.cmpn(num) >= 0;
            };

            BN.prototype.gte = function gte(num) {
              return this.cmp(num) >= 0;
            };

            BN.prototype.ltn = function ltn(num) {
              return this.cmpn(num) === -1;
            };

            BN.prototype.lt = function lt(num) {
              return this.cmp(num) === -1;
            };

            BN.prototype.lten = function lten(num) {
              return this.cmpn(num) <= 0;
            };

            BN.prototype.lte = function lte(num) {
              return this.cmp(num) <= 0;
            };

            BN.prototype.eqn = function eqn(num) {
              return this.cmpn(num) === 0;
            };

            BN.prototype.eq = function eq(num) {
              return this.cmp(num) === 0;
            };

            //
            // A reduce context, could be using montgomery or something better, depending
            // on the `m` itself.
            //
            BN.red = function red(num) {
              return new Red(num);
            };

            BN.prototype.toRed = function toRed(ctx) {
              assert(!this.red, 'Already a number in reduction context');
              assert(this.negative === 0, 'red works only with positives');
              return ctx.convertTo(this)._forceRed(ctx);
            };

            BN.prototype.fromRed = function fromRed() {
              assert(
                this.red,
                'fromRed works only with numbers in reduction context'
              );
              return this.red.convertFrom(this);
            };

            BN.prototype._forceRed = function _forceRed(ctx) {
              this.red = ctx;
              return this;
            };

            BN.prototype.forceRed = function forceRed(ctx) {
              assert(!this.red, 'Already a number in reduction context');
              return this._forceRed(ctx);
            };

            BN.prototype.redAdd = function redAdd(num) {
              assert(this.red, 'redAdd works only with red numbers');
              return this.red.add(this, num);
            };

            BN.prototype.redIAdd = function redIAdd(num) {
              assert(this.red, 'redIAdd works only with red numbers');
              return this.red.iadd(this, num);
            };

            BN.prototype.redSub = function redSub(num) {
              assert(this.red, 'redSub works only with red numbers');
              return this.red.sub(this, num);
            };

            BN.prototype.redISub = function redISub(num) {
              assert(this.red, 'redISub works only with red numbers');
              return this.red.isub(this, num);
            };

            BN.prototype.redShl = function redShl(num) {
              assert(this.red, 'redShl works only with red numbers');
              return this.red.shl(this, num);
            };

            BN.prototype.redMul = function redMul(num) {
              assert(this.red, 'redMul works only with red numbers');
              this.red._verify2(this, num);
              return this.red.mul(this, num);
            };

            BN.prototype.redIMul = function redIMul(num) {
              assert(this.red, 'redMul works only with red numbers');
              this.red._verify2(this, num);
              return this.red.imul(this, num);
            };

            BN.prototype.redSqr = function redSqr() {
              assert(this.red, 'redSqr works only with red numbers');
              this.red._verify1(this);
              return this.red.sqr(this);
            };

            BN.prototype.redISqr = function redISqr() {
              assert(this.red, 'redISqr works only with red numbers');
              this.red._verify1(this);
              return this.red.isqr(this);
            };

            // Square root over p
            BN.prototype.redSqrt = function redSqrt() {
              assert(this.red, 'redSqrt works only with red numbers');
              this.red._verify1(this);
              return this.red.sqrt(this);
            };

            BN.prototype.redInvm = function redInvm() {
              assert(this.red, 'redInvm works only with red numbers');
              this.red._verify1(this);
              return this.red.invm(this);
            };

            // Return negative clone of `this` % `red modulo`
            BN.prototype.redNeg = function redNeg() {
              assert(this.red, 'redNeg works only with red numbers');
              this.red._verify1(this);
              return this.red.neg(this);
            };

            BN.prototype.redPow = function redPow(num) {
              assert(this.red && !num.red, 'redPow(normalNum)');
              this.red._verify1(this);
              return this.red.pow(this, num);
            };

            // Prime numbers with efficient reduction
            var primes = {
              k256: null,
              p224: null,
              p192: null,
              p25519: null,
            };

            // Pseudo-Mersenne prime
            function MPrime(name, p) {
              // P = 2 ^ N - K
              this.name = name;
              this.p = new BN(p, 16);
              this.n = this.p.bitLength();
              this.k = new BN(1).iushln(this.n).isub(this.p);

              this.tmp = this._tmp();
            }

            MPrime.prototype._tmp = function _tmp() {
              var tmp = new BN(null);
              tmp.words = new Array(Math.ceil(this.n / 13));
              return tmp;
            };

            MPrime.prototype.ireduce = function ireduce(num) {
              // Assumes that `num` is less than `P^2`
              // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
              var r = num;
              var rlen;

              do {
                this.split(r, this.tmp);
                r = this.imulK(r);
                r = r.iadd(this.tmp);
                rlen = r.bitLength();
              } while (rlen > this.n);

              var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
              if (cmp === 0) {
                r.words[0] = 0;
                r.length = 1;
              } else if (cmp > 0) {
                r.isub(this.p);
              } else {
                if (r.strip !== undefined) {
                  // r is BN v4 instance
                  r.strip();
                } else {
                  // r is BN v5 instance
                  r._strip();
                }
              }

              return r;
            };

            MPrime.prototype.split = function split(input, out) {
              input.iushrn(this.n, 0, out);
            };

            MPrime.prototype.imulK = function imulK(num) {
              return num.imul(this.k);
            };

            function K256() {
              MPrime.call(
                this,
                'k256',
                'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f'
              );
            }
            inherits(K256, MPrime);

            K256.prototype.split = function split(input, output) {
              // 256 = 9 * 26 + 22
              var mask = 0x3fffff;

              var outLen = Math.min(input.length, 9);
              for (var i = 0; i < outLen; i++) {
                output.words[i] = input.words[i];
              }
              output.length = outLen;

              if (input.length <= 9) {
                input.words[0] = 0;
                input.length = 1;
                return;
              }

              // Shift by 9 limbs
              var prev = input.words[9];
              output.words[output.length++] = prev & mask;

              for (i = 10; i < input.length; i++) {
                var next = input.words[i] | 0;
                input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
                prev = next;
              }
              prev >>>= 22;
              input.words[i - 10] = prev;
              if (prev === 0 && input.length > 10) {
                input.length -= 10;
              } else {
                input.length -= 9;
              }
            };

            K256.prototype.imulK = function imulK(num) {
              // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
              num.words[num.length] = 0;
              num.words[num.length + 1] = 0;
              num.length += 2;

              // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
              var lo = 0;
              for (var i = 0; i < num.length; i++) {
                var w = num.words[i] | 0;
                lo += w * 0x3d1;
                num.words[i] = lo & 0x3ffffff;
                lo = w * 0x40 + ((lo / 0x4000000) | 0);
              }

              // Fast length reduction
              if (num.words[num.length - 1] === 0) {
                num.length--;
                if (num.words[num.length - 1] === 0) {
                  num.length--;
                }
              }
              return num;
            };

            function P224() {
              MPrime.call(
                this,
                'p224',
                'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001'
              );
            }
            inherits(P224, MPrime);

            function P192() {
              MPrime.call(
                this,
                'p192',
                'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff'
              );
            }
            inherits(P192, MPrime);

            function P25519() {
              // 2 ^ 255 - 19
              MPrime.call(
                this,
                '25519',
                '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed'
              );
            }
            inherits(P25519, MPrime);

            P25519.prototype.imulK = function imulK(num) {
              // K = 0x13
              var carry = 0;
              for (var i = 0; i < num.length; i++) {
                var hi = (num.words[i] | 0) * 0x13 + carry;
                var lo = hi & 0x3ffffff;
                hi >>>= 26;

                num.words[i] = lo;
                carry = hi;
              }
              if (carry !== 0) {
                num.words[num.length++] = carry;
              }
              return num;
            };

            // Exported mostly for testing purposes, use plain name instead
            BN._prime = function prime(name) {
              // Cached version of prime
              if (primes[name]) return primes[name];

              var prime;
              if (name === 'k256') {
                prime = new K256();
              } else if (name === 'p224') {
                prime = new P224();
              } else if (name === 'p192') {
                prime = new P192();
              } else if (name === 'p25519') {
                prime = new P25519();
              } else {
                throw new Error('Unknown prime ' + name);
              }
              primes[name] = prime;

              return prime;
            };

            //
            // Base reduction engine
            //
            function Red(m) {
              if (typeof m === 'string') {
                var prime = BN._prime(m);
                this.m = prime.p;
                this.prime = prime;
              } else {
                assert(m.gtn(1), 'modulus must be greater than 1');
                this.m = m;
                this.prime = null;
              }
            }

            Red.prototype._verify1 = function _verify1(a) {
              assert(a.negative === 0, 'red works only with positives');
              assert(a.red, 'red works only with red numbers');
            };

            Red.prototype._verify2 = function _verify2(a, b) {
              assert(
                (a.negative | b.negative) === 0,
                'red works only with positives'
              );
              assert(
                a.red && a.red === b.red,
                'red works only with red numbers'
              );
            };

            Red.prototype.imod = function imod(a) {
              if (this.prime) return this.prime.ireduce(a)._forceRed(this);
              return a.umod(this.m)._forceRed(this);
            };

            Red.prototype.neg = function neg(a) {
              if (a.isZero()) {
                return a.clone();
              }

              return this.m.sub(a)._forceRed(this);
            };

            Red.prototype.add = function add(a, b) {
              this._verify2(a, b);

              var res = a.add(b);
              if (res.cmp(this.m) >= 0) {
                res.isub(this.m);
              }
              return res._forceRed(this);
            };

            Red.prototype.iadd = function iadd(a, b) {
              this._verify2(a, b);

              var res = a.iadd(b);
              if (res.cmp(this.m) >= 0) {
                res.isub(this.m);
              }
              return res;
            };

            Red.prototype.sub = function sub(a, b) {
              this._verify2(a, b);

              var res = a.sub(b);
              if (res.cmpn(0) < 0) {
                res.iadd(this.m);
              }
              return res._forceRed(this);
            };

            Red.prototype.isub = function isub(a, b) {
              this._verify2(a, b);

              var res = a.isub(b);
              if (res.cmpn(0) < 0) {
                res.iadd(this.m);
              }
              return res;
            };

            Red.prototype.shl = function shl(a, num) {
              this._verify1(a);
              return this.imod(a.ushln(num));
            };

            Red.prototype.imul = function imul(a, b) {
              this._verify2(a, b);
              return this.imod(a.imul(b));
            };

            Red.prototype.mul = function mul(a, b) {
              this._verify2(a, b);
              return this.imod(a.mul(b));
            };

            Red.prototype.isqr = function isqr(a) {
              return this.imul(a, a.clone());
            };

            Red.prototype.sqr = function sqr(a) {
              return this.mul(a, a);
            };

            Red.prototype.sqrt = function sqrt(a) {
              if (a.isZero()) return a.clone();

              var mod3 = this.m.andln(3);
              assert(mod3 % 2 === 1);

              // Fast case
              if (mod3 === 3) {
                var pow = this.m.add(new BN(1)).iushrn(2);
                return this.pow(a, pow);
              }

              // Tonelli-Shanks algorithm (Totally unoptimized and slow)
              //
              // Find Q and S, that Q * 2 ^ S = (P - 1)
              var q = this.m.subn(1);
              var s = 0;
              while (!q.isZero() && q.andln(1) === 0) {
                s++;
                q.iushrn(1);
              }
              assert(!q.isZero());

              var one = new BN(1).toRed(this);
              var nOne = one.redNeg();

              // Find quadratic non-residue
              // NOTE: Max is such because of generalized Riemann hypothesis.
              var lpow = this.m.subn(1).iushrn(1);
              var z = this.m.bitLength();
              z = new BN(2 * z * z).toRed(this);

              while (this.pow(z, lpow).cmp(nOne) !== 0) {
                z.redIAdd(nOne);
              }

              var c = this.pow(z, q);
              var r = this.pow(a, q.addn(1).iushrn(1));
              var t = this.pow(a, q);
              var m = s;
              while (t.cmp(one) !== 0) {
                var tmp = t;
                for (var i = 0; tmp.cmp(one) !== 0; i++) {
                  tmp = tmp.redSqr();
                }
                assert(i < m);
                var b = this.pow(c, new BN(1).iushln(m - i - 1));

                r = r.redMul(b);
                c = b.redSqr();
                t = t.redMul(c);
                m = i;
              }

              return r;
            };

            Red.prototype.invm = function invm(a) {
              var inv = a._invmp(this.m);
              if (inv.negative !== 0) {
                inv.negative = 0;
                return this.imod(inv).redNeg();
              } else {
                return this.imod(inv);
              }
            };

            Red.prototype.pow = function pow(a, num) {
              if (num.isZero()) return new BN(1).toRed(this);
              if (num.cmpn(1) === 0) return a.clone();

              var windowSize = 4;
              var wnd = new Array(1 << windowSize);
              wnd[0] = new BN(1).toRed(this);
              wnd[1] = a;
              for (var i = 2; i < wnd.length; i++) {
                wnd[i] = this.mul(wnd[i - 1], a);
              }

              var res = wnd[0];
              var current = 0;
              var currentLen = 0;
              var start = num.bitLength() % 26;
              if (start === 0) {
                start = 26;
              }

              for (i = num.length - 1; i >= 0; i--) {
                var word = num.words[i];
                for (var j = start - 1; j >= 0; j--) {
                  var bit = (word >> j) & 1;
                  if (res !== wnd[0]) {
                    res = this.sqr(res);
                  }

                  if (bit === 0 && current === 0) {
                    currentLen = 0;
                    continue;
                  }

                  current <<= 1;
                  current |= bit;
                  currentLen++;
                  if (currentLen !== windowSize && (i !== 0 || j !== 0))
                    continue;

                  res = this.mul(res, wnd[current]);
                  currentLen = 0;
                  current = 0;
                }
                start = 26;
              }

              return res;
            };

            Red.prototype.convertTo = function convertTo(num) {
              var r = num.umod(this.m);

              return r === num ? r.clone() : r;
            };

            Red.prototype.convertFrom = function convertFrom(num) {
              var res = num.clone();
              res.red = null;
              return res;
            };

            //
            // Montgomery method engine
            //

            BN.mont = function mont(num) {
              return new Mont(num);
            };

            function Mont(m) {
              Red.call(this, m);

              this.shift = this.m.bitLength();
              if (this.shift % 26 !== 0) {
                this.shift += 26 - (this.shift % 26);
              }

              this.r = new BN(1).iushln(this.shift);
              this.r2 = this.imod(this.r.sqr());
              this.rinv = this.r._invmp(this.m);

              this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
              this.minv = this.minv.umod(this.r);
              this.minv = this.r.sub(this.minv);
            }
            inherits(Mont, Red);

            Mont.prototype.convertTo = function convertTo(num) {
              return this.imod(num.ushln(this.shift));
            };

            Mont.prototype.convertFrom = function convertFrom(num) {
              var r = this.imod(num.mul(this.rinv));
              r.red = null;
              return r;
            };

            Mont.prototype.imul = function imul(a, b) {
              if (a.isZero() || b.isZero()) {
                a.words[0] = 0;
                a.length = 1;
                return a;
              }

              var t = a.imul(b);
              var c = t
                .maskn(this.shift)
                .mul(this.minv)
                .imaskn(this.shift)
                .mul(this.m);
              var u = t.isub(c).iushrn(this.shift);
              var res = u;

              if (u.cmp(this.m) >= 0) {
                res = u.isub(this.m);
              } else if (u.cmpn(0) < 0) {
                res = u.iadd(this.m);
              }

              return res._forceRed(this);
            };

            Mont.prototype.mul = function mul(a, b) {
              if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

              var t = a.mul(b);
              var c = t
                .maskn(this.shift)
                .mul(this.minv)
                .imaskn(this.shift)
                .mul(this.m);
              var u = t.isub(c).iushrn(this.shift);
              var res = u;
              if (u.cmp(this.m) >= 0) {
                res = u.isub(this.m);
              } else if (u.cmpn(0) < 0) {
                res = u.iadd(this.m);
              }

              return res._forceRed(this);
            };

            Mont.prototype.invm = function invm(a) {
              // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
              var res = this.imod(a._invmp(this.m).mul(this.r2));
              return res._forceRed(this);
            };
          })(false || module, this);

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/module.js */ '../node_modules/webpack/buildin/module.js'
          )(module)
        ));

        /***/
      },

    /***/ '../node_modules/elliptic/lib/elliptic.js':
      /*!************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic.js ***!
  \************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var elliptic = exports;

        elliptic.version = __webpack_require__(
          /*! ../package.json */ '../node_modules/elliptic/package.json'
        ).version;
        elliptic.utils = __webpack_require__(
          /*! ./elliptic/utils */ '../node_modules/elliptic/lib/elliptic/utils.js'
        );
        elliptic.rand = __webpack_require__(
          /*! brorand */ '../node_modules/brorand/index.js'
        );
        elliptic.curve = __webpack_require__(
          /*! ./elliptic/curve */ '../node_modules/elliptic/lib/elliptic/curve/index.js'
        );
        elliptic.curves = __webpack_require__(
          /*! ./elliptic/curves */ '../node_modules/elliptic/lib/elliptic/curves.js'
        );

        // Protocols
        elliptic.ec = __webpack_require__(
          /*! ./elliptic/ec */ '../node_modules/elliptic/lib/elliptic/ec/index.js'
        );
        elliptic.eddsa = __webpack_require__(
          /*! ./elliptic/eddsa */ '../node_modules/elliptic/lib/elliptic/eddsa/index.js'
        );

        /***/
      },

    /***/ '../node_modules/elliptic/lib/elliptic/curve/base.js':
      /*!***********************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/curve/base.js ***!
  \***********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var BN = __webpack_require__(
          /*! bn.js */ '../node_modules/elliptic/node_modules/bn.js/lib/bn.js'
        );
        var utils = __webpack_require__(
          /*! ../utils */ '../node_modules/elliptic/lib/elliptic/utils.js'
        );
        var getNAF = utils.getNAF;
        var getJSF = utils.getJSF;
        var assert = utils.assert;

        function BaseCurve(type, conf) {
          this.type = type;
          this.p = new BN(conf.p, 16);

          // Use Montgomery, when there is no fast reduction for the prime
          this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);

          // Useful for many curves
          this.zero = new BN(0).toRed(this.red);
          this.one = new BN(1).toRed(this.red);
          this.two = new BN(2).toRed(this.red);

          // Curve configuration, optional
          this.n = conf.n && new BN(conf.n, 16);
          this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

          // Temporary arrays
          this._wnafT1 = new Array(4);
          this._wnafT2 = new Array(4);
          this._wnafT3 = new Array(4);
          this._wnafT4 = new Array(4);

          this._bitLength = this.n ? this.n.bitLength() : 0;

          // Generalized Greg Maxwell's trick
          var adjustCount = this.n && this.p.div(this.n);
          if (!adjustCount || adjustCount.cmpn(100) > 0) {
            this.redN = null;
          } else {
            this._maxwellTrick = true;
            this.redN = this.n.toRed(this.red);
          }
        }
        module.exports = BaseCurve;

        BaseCurve.prototype.point = function point() {
          throw new Error('Not implemented');
        };

        BaseCurve.prototype.validate = function validate() {
          throw new Error('Not implemented');
        };

        BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
          assert(p.precomputed);
          var doubles = p._getDoubles();

          var naf = getNAF(k, 1, this._bitLength);
          var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
          I /= 3;

          // Translate into more windowed form
          var repr = [];
          for (var j = 0; j < naf.length; j += doubles.step) {
            var nafW = 0;
            for (var k = j + doubles.step - 1; k >= j; k--)
              nafW = (nafW << 1) + naf[k];
            repr.push(nafW);
          }

          var a = this.jpoint(null, null, null);
          var b = this.jpoint(null, null, null);
          for (var i = I; i > 0; i--) {
            for (var j = 0; j < repr.length; j++) {
              var nafW = repr[j];
              if (nafW === i) b = b.mixedAdd(doubles.points[j]);
              else if (nafW === -i) b = b.mixedAdd(doubles.points[j].neg());
            }
            a = a.add(b);
          }
          return a.toP();
        };

        BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
          var w = 4;

          // Precompute window
          var nafPoints = p._getNAFPoints(w);
          w = nafPoints.wnd;
          var wnd = nafPoints.points;

          // Get NAF form
          var naf = getNAF(k, w, this._bitLength);

          // Add `this`*(N+1) for every w-NAF index
          var acc = this.jpoint(null, null, null);
          for (var i = naf.length - 1; i >= 0; i--) {
            // Count zeroes
            for (var k = 0; i >= 0 && naf[i] === 0; i--) k++;
            if (i >= 0) k++;
            acc = acc.dblp(k);

            if (i < 0) break;
            var z = naf[i];
            assert(z !== 0);
            if (p.type === 'affine') {
              // J +- P
              if (z > 0) acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
              else acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
            } else {
              // J +- J
              if (z > 0) acc = acc.add(wnd[(z - 1) >> 1]);
              else acc = acc.add(wnd[(-z - 1) >> 1].neg());
            }
          }
          return p.type === 'affine' ? acc.toP() : acc;
        };

        BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(
          defW,
          points,
          coeffs,
          len,
          jacobianResult
        ) {
          var wndWidth = this._wnafT1;
          var wnd = this._wnafT2;
          var naf = this._wnafT3;

          // Fill all arrays
          var max = 0;
          for (var i = 0; i < len; i++) {
            var p = points[i];
            var nafPoints = p._getNAFPoints(defW);
            wndWidth[i] = nafPoints.wnd;
            wnd[i] = nafPoints.points;
          }

          // Comb small window NAFs
          for (var i = len - 1; i >= 1; i -= 2) {
            var a = i - 1;
            var b = i;
            if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
              naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);
              naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);
              max = Math.max(naf[a].length, max);
              max = Math.max(naf[b].length, max);
              continue;
            }

            var comb = [
              points[a] /* 1 */,
              null /* 3 */,
              null /* 5 */,
              points[b] /* 7 */,
            ];

            // Try to avoid Projective points, if possible
            if (points[a].y.cmp(points[b].y) === 0) {
              comb[1] = points[a].add(points[b]);
              comb[2] = points[a].toJ().mixedAdd(points[b].neg());
            } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
              comb[1] = points[a].toJ().mixedAdd(points[b]);
              comb[2] = points[a].add(points[b].neg());
            } else {
              comb[1] = points[a].toJ().mixedAdd(points[b]);
              comb[2] = points[a].toJ().mixedAdd(points[b].neg());
            }

            var index = [
              -3 /* -1 -1 */,
              -1 /* -1 0 */,
              -5 /* -1 1 */,
              -7 /* 0 -1 */,
              0 /* 0 0 */,
              7 /* 0 1 */,
              5 /* 1 -1 */,
              1 /* 1 0 */,
              3 /* 1 1 */,
            ];

            var jsf = getJSF(coeffs[a], coeffs[b]);
            max = Math.max(jsf[0].length, max);
            naf[a] = new Array(max);
            naf[b] = new Array(max);
            for (var j = 0; j < max; j++) {
              var ja = jsf[0][j] | 0;
              var jb = jsf[1][j] | 0;

              naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
              naf[b][j] = 0;
              wnd[a] = comb;
            }
          }

          var acc = this.jpoint(null, null, null);
          var tmp = this._wnafT4;
          for (var i = max; i >= 0; i--) {
            var k = 0;

            while (i >= 0) {
              var zero = true;
              for (var j = 0; j < len; j++) {
                tmp[j] = naf[j][i] | 0;
                if (tmp[j] !== 0) zero = false;
              }
              if (!zero) break;
              k++;
              i--;
            }
            if (i >= 0) k++;
            acc = acc.dblp(k);
            if (i < 0) break;

            for (var j = 0; j < len; j++) {
              var z = tmp[j];
              var p;
              if (z === 0) continue;
              else if (z > 0) p = wnd[j][(z - 1) >> 1];
              else if (z < 0) p = wnd[j][(-z - 1) >> 1].neg();

              if (p.type === 'affine') acc = acc.mixedAdd(p);
              else acc = acc.add(p);
            }
          }
          // Zeroify references
          for (var i = 0; i < len; i++) wnd[i] = null;

          if (jacobianResult) return acc;
          else return acc.toP();
        };

        function BasePoint(curve, type) {
          this.curve = curve;
          this.type = type;
          this.precomputed = null;
        }
        BaseCurve.BasePoint = BasePoint;

        BasePoint.prototype.eq = function eq(/*other*/) {
          throw new Error('Not implemented');
        };

        BasePoint.prototype.validate = function validate() {
          return this.curve.validate(this);
        };

        BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
          bytes = utils.toArray(bytes, enc);

          var len = this.p.byteLength();

          // uncompressed, hybrid-odd, hybrid-even
          if (
            (bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
            bytes.length - 1 === 2 * len
          ) {
            if (bytes[0] === 0x06) assert(bytes[bytes.length - 1] % 2 === 0);
            else if (bytes[0] === 0x07)
              assert(bytes[bytes.length - 1] % 2 === 1);

            var res = this.point(
              bytes.slice(1, 1 + len),
              bytes.slice(1 + len, 1 + 2 * len)
            );

            return res;
          } else if (
            (bytes[0] === 0x02 || bytes[0] === 0x03) &&
            bytes.length - 1 === len
          ) {
            return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
          }
          throw new Error('Unknown point format');
        };

        BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
          return this.encode(enc, true);
        };

        BasePoint.prototype._encode = function _encode(compact) {
          var len = this.curve.p.byteLength();
          var x = this.getX().toArray('be', len);

          if (compact) return [this.getY().isEven() ? 0x02 : 0x03].concat(x);

          return [0x04].concat(x, this.getY().toArray('be', len));
        };

        BasePoint.prototype.encode = function encode(enc, compact) {
          return utils.encode(this._encode(compact), enc);
        };

        BasePoint.prototype.precompute = function precompute(power) {
          if (this.precomputed) return this;

          var precomputed = {
            doubles: null,
            naf: null,
            beta: null,
          };
          precomputed.naf = this._getNAFPoints(8);
          precomputed.doubles = this._getDoubles(4, power);
          precomputed.beta = this._getBeta();
          this.precomputed = precomputed;

          return this;
        };

        BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
          if (!this.precomputed) return false;

          var doubles = this.precomputed.doubles;
          if (!doubles) return false;

          return (
            doubles.points.length >=
            Math.ceil((k.bitLength() + 1) / doubles.step)
          );
        };

        BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
          if (this.precomputed && this.precomputed.doubles)
            return this.precomputed.doubles;

          var doubles = [this];
          var acc = this;
          for (var i = 0; i < power; i += step) {
            for (var j = 0; j < step; j++) acc = acc.dbl();
            doubles.push(acc);
          }
          return {
            step: step,
            points: doubles,
          };
        };

        BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
          if (this.precomputed && this.precomputed.naf)
            return this.precomputed.naf;

          var res = [this];
          var max = (1 << wnd) - 1;
          var dbl = max === 1 ? null : this.dbl();
          for (var i = 1; i < max; i++) res[i] = res[i - 1].add(dbl);
          return {
            wnd: wnd,
            points: res,
          };
        };

        BasePoint.prototype._getBeta = function _getBeta() {
          return null;
        };

        BasePoint.prototype.dblp = function dblp(k) {
          var r = this;
          for (var i = 0; i < k; i++) r = r.dbl();
          return r;
        };

        /***/
      },

    /***/ '../node_modules/elliptic/lib/elliptic/curve/edwards.js':
      /*!**************************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/curve/edwards.js ***!
  \**************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(
          /*! ../utils */ '../node_modules/elliptic/lib/elliptic/utils.js'
        );
        var BN = __webpack_require__(
          /*! bn.js */ '../node_modules/elliptic/node_modules/bn.js/lib/bn.js'
        );
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );
        var Base = __webpack_require__(
          /*! ./base */ '../node_modules/elliptic/lib/elliptic/curve/base.js'
        );

        var assert = utils.assert;

        function EdwardsCurve(conf) {
          // NOTE: Important as we are creating point in Base.call()
          this.twisted = (conf.a | 0) !== 1;
          this.mOneA = this.twisted && (conf.a | 0) === -1;
          this.extended = this.mOneA;

          Base.call(this, 'edwards', conf);

          this.a = new BN(conf.a, 16).umod(this.red.m);
          this.a = this.a.toRed(this.red);
          this.c = new BN(conf.c, 16).toRed(this.red);
          this.c2 = this.c.redSqr();
          this.d = new BN(conf.d, 16).toRed(this.red);
          this.dd = this.d.redAdd(this.d);

          assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
          this.oneC = (conf.c | 0) === 1;
        }
        inherits(EdwardsCurve, Base);
        module.exports = EdwardsCurve;

        EdwardsCurve.prototype._mulA = function _mulA(num) {
          if (this.mOneA) return num.redNeg();
          else return this.a.redMul(num);
        };

        EdwardsCurve.prototype._mulC = function _mulC(num) {
          if (this.oneC) return num;
          else return this.c.redMul(num);
        };

        // Just for compatibility with Short curve
        EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
          return this.point(x, y, z, t);
        };

        EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
          x = new BN(x, 16);
          if (!x.red) x = x.toRed(this.red);

          var x2 = x.redSqr();
          var rhs = this.c2.redSub(this.a.redMul(x2));
          var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

          var y2 = rhs.redMul(lhs.redInvm());
          var y = y2.redSqrt();
          if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
            throw new Error('invalid point');

          var isOdd = y.fromRed().isOdd();
          if ((odd && !isOdd) || (!odd && isOdd)) y = y.redNeg();

          return this.point(x, y);
        };

        EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
          y = new BN(y, 16);
          if (!y.red) y = y.toRed(this.red);

          // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)
          var y2 = y.redSqr();
          var lhs = y2.redSub(this.c2);
          var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);
          var x2 = lhs.redMul(rhs.redInvm());

          if (x2.cmp(this.zero) === 0) {
            if (odd) throw new Error('invalid point');
            else return this.point(this.zero, y);
          }

          var x = x2.redSqrt();
          if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
            throw new Error('invalid point');

          if (x.fromRed().isOdd() !== odd) x = x.redNeg();

          return this.point(x, y);
        };

        EdwardsCurve.prototype.validate = function validate(point) {
          if (point.isInfinity()) return true;

          // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
          point.normalize();

          var x2 = point.x.redSqr();
          var y2 = point.y.redSqr();
          var lhs = x2.redMul(this.a).redAdd(y2);
          var rhs = this.c2.redMul(
            this.one.redAdd(this.d.redMul(x2).redMul(y2))
          );

          return lhs.cmp(rhs) === 0;
        };

        function Point(curve, x, y, z, t) {
          Base.BasePoint.call(this, curve, 'projective');
          if (x === null && y === null && z === null) {
            this.x = this.curve.zero;
            this.y = this.curve.one;
            this.z = this.curve.one;
            this.t = this.curve.zero;
            this.zOne = true;
          } else {
            this.x = new BN(x, 16);
            this.y = new BN(y, 16);
            this.z = z ? new BN(z, 16) : this.curve.one;
            this.t = t && new BN(t, 16);
            if (!this.x.red) this.x = this.x.toRed(this.curve.red);
            if (!this.y.red) this.y = this.y.toRed(this.curve.red);
            if (!this.z.red) this.z = this.z.toRed(this.curve.red);
            if (this.t && !this.t.red) this.t = this.t.toRed(this.curve.red);
            this.zOne = this.z === this.curve.one;

            // Use extended coordinates
            if (this.curve.extended && !this.t) {
              this.t = this.x.redMul(this.y);
              if (!this.zOne) this.t = this.t.redMul(this.z.redInvm());
            }
          }
        }
        inherits(Point, Base.BasePoint);

        EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
          return Point.fromJSON(this, obj);
        };

        EdwardsCurve.prototype.point = function point(x, y, z, t) {
          return new Point(this, x, y, z, t);
        };

        Point.fromJSON = function fromJSON(curve, obj) {
          return new Point(curve, obj[0], obj[1], obj[2]);
        };

        Point.prototype.inspect = function inspect() {
          if (this.isInfinity()) return '<EC Point Infinity>';
          return (
            '<EC Point x: ' +
            this.x.fromRed().toString(16, 2) +
            ' y: ' +
            this.y.fromRed().toString(16, 2) +
            ' z: ' +
            this.z.fromRed().toString(16, 2) +
            '>'
          );
        };

        Point.prototype.isInfinity = function isInfinity() {
          // XXX This code assumes that zero is always zero in red
          return (
            this.x.cmpn(0) === 0 &&
            (this.y.cmp(this.z) === 0 ||
              (this.zOne && this.y.cmp(this.curve.c) === 0))
          );
        };

        Point.prototype._extDbl = function _extDbl() {
          // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
          //     #doubling-dbl-2008-hwcd
          // 4M + 4S

          // A = X1^2
          var a = this.x.redSqr();
          // B = Y1^2
          var b = this.y.redSqr();
          // C = 2 * Z1^2
          var c = this.z.redSqr();
          c = c.redIAdd(c);
          // D = a * A
          var d = this.curve._mulA(a);
          // E = (X1 + Y1)^2 - A - B
          var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
          // G = D + B
          var g = d.redAdd(b);
          // F = G - C
          var f = g.redSub(c);
          // H = D - B
          var h = d.redSub(b);
          // X3 = E * F
          var nx = e.redMul(f);
          // Y3 = G * H
          var ny = g.redMul(h);
          // T3 = E * H
          var nt = e.redMul(h);
          // Z3 = F * G
          var nz = f.redMul(g);
          return this.curve.point(nx, ny, nz, nt);
        };

        Point.prototype._projDbl = function _projDbl() {
          // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
          //     #doubling-dbl-2008-bbjlp
          //     #doubling-dbl-2007-bl
          // and others
          // Generally 3M + 4S or 2M + 4S

          // B = (X1 + Y1)^2
          var b = this.x.redAdd(this.y).redSqr();
          // C = X1^2
          var c = this.x.redSqr();
          // D = Y1^2
          var d = this.y.redSqr();

          var nx;
          var ny;
          var nz;
          if (this.curve.twisted) {
            // E = a * C
            var e = this.curve._mulA(c);
            // F = E + D
            var f = e.redAdd(d);
            if (this.zOne) {
              // X3 = (B - C - D) * (F - 2)
              nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
              // Y3 = F * (E - D)
              ny = f.redMul(e.redSub(d));
              // Z3 = F^2 - 2 * F
              nz = f.redSqr().redSub(f).redSub(f);
            } else {
              // H = Z1^2
              var h = this.z.redSqr();
              // J = F - 2 * H
              var j = f.redSub(h).redISub(h);
              // X3 = (B-C-D)*J
              nx = b.redSub(c).redISub(d).redMul(j);
              // Y3 = F * (E - D)
              ny = f.redMul(e.redSub(d));
              // Z3 = F * J
              nz = f.redMul(j);
            }
          } else {
            // E = C + D
            var e = c.redAdd(d);
            // H = (c * Z1)^2
            var h = this.curve._mulC(this.z).redSqr();
            // J = E - 2 * H
            var j = e.redSub(h).redSub(h);
            // X3 = c * (B - E) * J
            nx = this.curve._mulC(b.redISub(e)).redMul(j);
            // Y3 = c * E * (C - D)
            ny = this.curve._mulC(e).redMul(c.redISub(d));
            // Z3 = E * J
            nz = e.redMul(j);
          }
          return this.curve.point(nx, ny, nz);
        };

        Point.prototype.dbl = function dbl() {
          if (this.isInfinity()) return this;

          // Double in extended coordinates
          if (this.curve.extended) return this._extDbl();
          else return this._projDbl();
        };

        Point.prototype._extAdd = function _extAdd(p) {
          // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
          //     #addition-add-2008-hwcd-3
          // 8M

          // A = (Y1 - X1) * (Y2 - X2)
          var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
          // B = (Y1 + X1) * (Y2 + X2)
          var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
          // C = T1 * k * T2
          var c = this.t.redMul(this.curve.dd).redMul(p.t);
          // D = Z1 * 2 * Z2
          var d = this.z.redMul(p.z.redAdd(p.z));
          // E = B - A
          var e = b.redSub(a);
          // F = D - C
          var f = d.redSub(c);
          // G = D + C
          var g = d.redAdd(c);
          // H = B + A
          var h = b.redAdd(a);
          // X3 = E * F
          var nx = e.redMul(f);
          // Y3 = G * H
          var ny = g.redMul(h);
          // T3 = E * H
          var nt = e.redMul(h);
          // Z3 = F * G
          var nz = f.redMul(g);
          return this.curve.point(nx, ny, nz, nt);
        };

        Point.prototype._projAdd = function _projAdd(p) {
          // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
          //     #addition-add-2008-bbjlp
          //     #addition-add-2007-bl
          // 10M + 1S

          // A = Z1 * Z2
          var a = this.z.redMul(p.z);
          // B = A^2
          var b = a.redSqr();
          // C = X1 * X2
          var c = this.x.redMul(p.x);
          // D = Y1 * Y2
          var d = this.y.redMul(p.y);
          // E = d * C * D
          var e = this.curve.d.redMul(c).redMul(d);
          // F = B - E
          var f = b.redSub(e);
          // G = B + E
          var g = b.redAdd(e);
          // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
          var tmp = this.x
            .redAdd(this.y)
            .redMul(p.x.redAdd(p.y))
            .redISub(c)
            .redISub(d);
          var nx = a.redMul(f).redMul(tmp);
          var ny;
          var nz;
          if (this.curve.twisted) {
            // Y3 = A * G * (D - a * C)
            ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
            // Z3 = F * G
            nz = f.redMul(g);
          } else {
            // Y3 = A * G * (D - C)
            ny = a.redMul(g).redMul(d.redSub(c));
            // Z3 = c * F * G
            nz = this.curve._mulC(f).redMul(g);
          }
          return this.curve.point(nx, ny, nz);
        };

        Point.prototype.add = function add(p) {
          if (this.isInfinity()) return p;
          if (p.isInfinity()) return this;

          if (this.curve.extended) return this._extAdd(p);
          else return this._projAdd(p);
        };

        Point.prototype.mul = function mul(k) {
          if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);
          else return this.curve._wnafMul(this, k);
        };

        Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
          return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, false);
        };

        Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
          return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, true);
        };

        Point.prototype.normalize = function normalize() {
          if (this.zOne) return this;

          // Normalize coordinates
          var zi = this.z.redInvm();
          this.x = this.x.redMul(zi);
          this.y = this.y.redMul(zi);
          if (this.t) this.t = this.t.redMul(zi);
          this.z = this.curve.one;
          this.zOne = true;
          return this;
        };

        Point.prototype.neg = function neg() {
          return this.curve.point(
            this.x.redNeg(),
            this.y,
            this.z,
            this.t && this.t.redNeg()
          );
        };

        Point.prototype.getX = function getX() {
          this.normalize();
          return this.x.fromRed();
        };

        Point.prototype.getY = function getY() {
          this.normalize();
          return this.y.fromRed();
        };

        Point.prototype.eq = function eq(other) {
          return (
            this === other ||
            (this.getX().cmp(other.getX()) === 0 &&
              this.getY().cmp(other.getY()) === 0)
          );
        };

        Point.prototype.eqXToP = function eqXToP(x) {
          var rx = x.toRed(this.curve.red).redMul(this.z);
          if (this.x.cmp(rx) === 0) return true;

          var xc = x.clone();
          var t = this.curve.redN.redMul(this.z);
          for (;;) {
            xc.iadd(this.curve.n);
            if (xc.cmp(this.curve.p) >= 0) return false;

            rx.redIAdd(t);
            if (this.x.cmp(rx) === 0) return true;
          }
        };

        // Compatibility with BaseCurve
        Point.prototype.toP = Point.prototype.normalize;
        Point.prototype.mixedAdd = Point.prototype.add;

        /***/
      },

    /***/ '../node_modules/elliptic/lib/elliptic/curve/index.js':
      /*!************************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/curve/index.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var curve = exports;

        curve.base = __webpack_require__(
          /*! ./base */ '../node_modules/elliptic/lib/elliptic/curve/base.js'
        );
        curve.short = __webpack_require__(
          /*! ./short */ '../node_modules/elliptic/lib/elliptic/curve/short.js'
        );
        curve.mont = __webpack_require__(
          /*! ./mont */ '../node_modules/elliptic/lib/elliptic/curve/mont.js'
        );
        curve.edwards = __webpack_require__(
          /*! ./edwards */ '../node_modules/elliptic/lib/elliptic/curve/edwards.js'
        );

        /***/
      },

    /***/ '../node_modules/elliptic/lib/elliptic/curve/mont.js':
      /*!***********************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/curve/mont.js ***!
  \***********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var BN = __webpack_require__(
          /*! bn.js */ '../node_modules/elliptic/node_modules/bn.js/lib/bn.js'
        );
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );
        var Base = __webpack_require__(
          /*! ./base */ '../node_modules/elliptic/lib/elliptic/curve/base.js'
        );

        var utils = __webpack_require__(
          /*! ../utils */ '../node_modules/elliptic/lib/elliptic/utils.js'
        );

        function MontCurve(conf) {
          Base.call(this, 'mont', conf);

          this.a = new BN(conf.a, 16).toRed(this.red);
          this.b = new BN(conf.b, 16).toRed(this.red);
          this.i4 = new BN(4).toRed(this.red).redInvm();
          this.two = new BN(2).toRed(this.red);
          this.a24 = this.i4.redMul(this.a.redAdd(this.two));
        }
        inherits(MontCurve, Base);
        module.exports = MontCurve;

        MontCurve.prototype.validate = function validate(point) {
          var x = point.normalize().x;
          var x2 = x.redSqr();
          var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
          var y = rhs.redSqrt();

          return y.redSqr().cmp(rhs) === 0;
        };

        function Point(curve, x, z) {
          Base.BasePoint.call(this, curve, 'projective');
          if (x === null && z === null) {
            this.x = this.curve.one;
            this.z = this.curve.zero;
          } else {
            this.x = new BN(x, 16);
            this.z = new BN(z, 16);
            if (!this.x.red) this.x = this.x.toRed(this.curve.red);
            if (!this.z.red) this.z = this.z.toRed(this.curve.red);
          }
        }
        inherits(Point, Base.BasePoint);

        MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
          return this.point(utils.toArray(bytes, enc), 1);
        };

        MontCurve.prototype.point = function point(x, z) {
          return new Point(this, x, z);
        };

        MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
          return Point.fromJSON(this, obj);
        };

        Point.prototype.precompute = function precompute() {
          // No-op
        };

        Point.prototype._encode = function _encode() {
          return this.getX().toArray('be', this.curve.p.byteLength());
        };

        Point.fromJSON = function fromJSON(curve, obj) {
          return new Point(curve, obj[0], obj[1] || curve.one);
        };

        Point.prototype.inspect = function inspect() {
          if (this.isInfinity()) return '<EC Point Infinity>';
          return (
            '<EC Point x: ' +
            this.x.fromRed().toString(16, 2) +
            ' z: ' +
            this.z.fromRed().toString(16, 2) +
            '>'
          );
        };

        Point.prototype.isInfinity = function isInfinity() {
          // XXX This code assumes that zero is always zero in red
          return this.z.cmpn(0) === 0;
        };

        Point.prototype.dbl = function dbl() {
          // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
          // 2M + 2S + 4A

          // A = X1 + Z1
          var a = this.x.redAdd(this.z);
          // AA = A^2
          var aa = a.redSqr();
          // B = X1 - Z1
          var b = this.x.redSub(this.z);
          // BB = B^2
          var bb = b.redSqr();
          // C = AA - BB
          var c = aa.redSub(bb);
          // X3 = AA * BB
          var nx = aa.redMul(bb);
          // Z3 = C * (BB + A24 * C)
          var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
          return this.curve.point(nx, nz);
        };

        Point.prototype.add = function add() {
          throw new Error('Not supported on Montgomery curve');
        };

        Point.prototype.diffAdd = function diffAdd(p, diff) {
          // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
          // 4M + 2S + 6A

          // A = X2 + Z2
          var a = this.x.redAdd(this.z);
          // B = X2 - Z2
          var b = this.x.redSub(this.z);
          // C = X3 + Z3
          var c = p.x.redAdd(p.z);
          // D = X3 - Z3
          var d = p.x.redSub(p.z);
          // DA = D * A
          var da = d.redMul(a);
          // CB = C * B
          var cb = c.redMul(b);
          // X5 = Z1 * (DA + CB)^2
          var nx = diff.z.redMul(da.redAdd(cb).redSqr());
          // Z5 = X1 * (DA - CB)^2
          var nz = diff.x.redMul(da.redISub(cb).redSqr());
          return this.curve.point(nx, nz);
        };

        Point.prototype.mul = function mul(k) {
          var t = k.clone();
          var a = this; // (N / 2) * Q + Q
          var b = this.curve.point(null, null); // (N / 2) * Q
          var c = this; // Q

          for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
            bits.push(t.andln(1));

          for (var i = bits.length - 1; i >= 0; i--) {
            if (bits[i] === 0) {
              // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
              a = a.diffAdd(b, c);
              // N * Q = 2 * ((N / 2) * Q + Q))
              b = b.dbl();
            } else {
              // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
              b = a.diffAdd(b, c);
              // N * Q + Q = 2 * ((N / 2) * Q + Q)
              a = a.dbl();
            }
          }
          return b;
        };

        Point.prototype.mulAdd = function mulAdd() {
          throw new Error('Not supported on Montgomery curve');
        };

        Point.prototype.jumlAdd = function jumlAdd() {
          throw new Error('Not supported on Montgomery curve');
        };

        Point.prototype.eq = function eq(other) {
          return this.getX().cmp(other.getX()) === 0;
        };

        Point.prototype.normalize = function normalize() {
          this.x = this.x.redMul(this.z.redInvm());
          this.z = this.curve.one;
          return this;
        };

        Point.prototype.getX = function getX() {
          // Normalize coordinates
          this.normalize();

          return this.x.fromRed();
        };

        /***/
      },

    /***/ '../node_modules/elliptic/lib/elliptic/curve/short.js':
      /*!************************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/curve/short.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(
          /*! ../utils */ '../node_modules/elliptic/lib/elliptic/utils.js'
        );
        var BN = __webpack_require__(
          /*! bn.js */ '../node_modules/elliptic/node_modules/bn.js/lib/bn.js'
        );
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );
        var Base = __webpack_require__(
          /*! ./base */ '../node_modules/elliptic/lib/elliptic/curve/base.js'
        );

        var assert = utils.assert;

        function ShortCurve(conf) {
          Base.call(this, 'short', conf);

          this.a = new BN(conf.a, 16).toRed(this.red);
          this.b = new BN(conf.b, 16).toRed(this.red);
          this.tinv = this.two.redInvm();

          this.zeroA = this.a.fromRed().cmpn(0) === 0;
          this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

          // If the curve is endomorphic, precalculate beta and lambda
          this.endo = this._getEndomorphism(conf);
          this._endoWnafT1 = new Array(4);
          this._endoWnafT2 = new Array(4);
        }
        inherits(ShortCurve, Base);
        module.exports = ShortCurve;

        ShortCurve.prototype._getEndomorphism = function _getEndomorphism(
          conf
        ) {
          // No efficient endomorphism
          if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1) return;

          // Compute beta and lambda, that lambda * P = (beta * Px; Py)
          var beta;
          var lambda;
          if (conf.beta) {
            beta = new BN(conf.beta, 16).toRed(this.red);
          } else {
            var betas = this._getEndoRoots(this.p);
            // Choose the smallest beta
            beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
            beta = beta.toRed(this.red);
          }
          if (conf.lambda) {
            lambda = new BN(conf.lambda, 16);
          } else {
            // Choose the lambda that is matching selected beta
            var lambdas = this._getEndoRoots(this.n);
            if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
              lambda = lambdas[0];
            } else {
              lambda = lambdas[1];
              assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
            }
          }

          // Get basis vectors, used for balanced length-two representation
          var basis;
          if (conf.basis) {
            basis = conf.basis.map(function (vec) {
              return {
                a: new BN(vec.a, 16),
                b: new BN(vec.b, 16),
              };
            });
          } else {
            basis = this._getEndoBasis(lambda);
          }

          return {
            beta: beta,
            lambda: lambda,
            basis: basis,
          };
        };

        ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
          // Find roots of for x^2 + x + 1 in F
          // Root = (-1 +- Sqrt(-3)) / 2
          //
          var red = num === this.p ? this.red : BN.mont(num);
          var tinv = new BN(2).toRed(red).redInvm();
          var ntinv = tinv.redNeg();

          var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);

          var l1 = ntinv.redAdd(s).fromRed();
          var l2 = ntinv.redSub(s).fromRed();
          return [l1, l2];
        };

        ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
          // aprxSqrt >= sqrt(this.n)
          var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

          // 3.74
          // Run EGCD, until r(L + 1) < aprxSqrt
          var u = lambda;
          var v = this.n.clone();
          var x1 = new BN(1);
          var y1 = new BN(0);
          var x2 = new BN(0);
          var y2 = new BN(1);

          // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
          var a0;
          var b0;
          // First vector
          var a1;
          var b1;
          // Second vector
          var a2;
          var b2;

          var prevR;
          var i = 0;
          var r;
          var x;
          while (u.cmpn(0) !== 0) {
            var q = v.div(u);
            r = v.sub(q.mul(u));
            x = x2.sub(q.mul(x1));
            var y = y2.sub(q.mul(y1));

            if (!a1 && r.cmp(aprxSqrt) < 0) {
              a0 = prevR.neg();
              b0 = x1;
              a1 = r.neg();
              b1 = x;
            } else if (a1 && ++i === 2) {
              break;
            }
            prevR = r;

            v = u;
            u = r;
            x2 = x1;
            x1 = x;
            y2 = y1;
            y1 = y;
          }
          a2 = r.neg();
          b2 = x;

          var len1 = a1.sqr().add(b1.sqr());
          var len2 = a2.sqr().add(b2.sqr());
          if (len2.cmp(len1) >= 0) {
            a2 = a0;
            b2 = b0;
          }

          // Normalize signs
          if (a1.negative) {
            a1 = a1.neg();
            b1 = b1.neg();
          }
          if (a2.negative) {
            a2 = a2.neg();
            b2 = b2.neg();
          }

          return [
            { a: a1, b: b1 },
            { a: a2, b: b2 },
          ];
        };

        ShortCurve.prototype._endoSplit = function _endoSplit(k) {
          var basis = this.endo.basis;
          var v1 = basis[0];
          var v2 = basis[1];

          var c1 = v2.b.mul(k).divRound(this.n);
          var c2 = v1.b.neg().mul(k).divRound(this.n);

          var p1 = c1.mul(v1.a);
          var p2 = c2.mul(v2.a);
          var q1 = c1.mul(v1.b);
          var q2 = c2.mul(v2.b);

          // Calculate answer
          var k1 = k.sub(p1).sub(p2);
          var k2 = q1.add(q2).neg();
          return { k1: k1, k2: k2 };
        };

        ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
          x = new BN(x, 16);
          if (!x.red) x = x.toRed(this.red);

          var y2 = x
            .redSqr()
            .redMul(x)
            .redIAdd(x.redMul(this.a))
            .redIAdd(this.b);
          var y = y2.redSqrt();
          if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
            throw new Error('invalid point');

          // XXX Is there any way to tell if the number is odd without converting it
          // to non-red form?
          var isOdd = y.fromRed().isOdd();
          if ((odd && !isOdd) || (!odd && isOdd)) y = y.redNeg();

          return this.point(x, y);
        };

        ShortCurve.prototype.validate = function validate(point) {
          if (point.inf) return true;

          var x = point.x;
          var y = point.y;

          var ax = this.a.redMul(x);
          var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
          return y.redSqr().redISub(rhs).cmpn(0) === 0;
        };

        ShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(
          points,
          coeffs,
          jacobianResult
        ) {
          var npoints = this._endoWnafT1;
          var ncoeffs = this._endoWnafT2;
          for (var i = 0; i < points.length; i++) {
            var split = this._endoSplit(coeffs[i]);
            var p = points[i];
            var beta = p._getBeta();

            if (split.k1.negative) {
              split.k1.ineg();
              p = p.neg(true);
            }
            if (split.k2.negative) {
              split.k2.ineg();
              beta = beta.neg(true);
            }

            npoints[i * 2] = p;
            npoints[i * 2 + 1] = beta;
            ncoeffs[i * 2] = split.k1;
            ncoeffs[i * 2 + 1] = split.k2;
          }
          var res = this._wnafMulAdd(
            1,
            npoints,
            ncoeffs,
            i * 2,
            jacobianResult
          );

          // Clean-up references to points and coefficients
          for (var j = 0; j < i * 2; j++) {
            npoints[j] = null;
            ncoeffs[j] = null;
          }
          return res;
        };

        function Point(curve, x, y, isRed) {
          Base.BasePoint.call(this, curve, 'affine');
          if (x === null && y === null) {
            this.x = null;
            this.y = null;
            this.inf = true;
          } else {
            this.x = new BN(x, 16);
            this.y = new BN(y, 16);
            // Force redgomery representation when loading from JSON
            if (isRed) {
              this.x.forceRed(this.curve.red);
              this.y.forceRed(this.curve.red);
            }
            if (!this.x.red) this.x = this.x.toRed(this.curve.red);
            if (!this.y.red) this.y = this.y.toRed(this.curve.red);
            this.inf = false;
          }
        }
        inherits(Point, Base.BasePoint);

        ShortCurve.prototype.point = function point(x, y, isRed) {
          return new Point(this, x, y, isRed);
        };

        ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
          return Point.fromJSON(this, obj, red);
        };

        Point.prototype._getBeta = function _getBeta() {
          if (!this.curve.endo) return;

          var pre = this.precomputed;
          if (pre && pre.beta) return pre.beta;

          var beta = this.curve.point(
            this.x.redMul(this.curve.endo.beta),
            this.y
          );
          if (pre) {
            var curve = this.curve;
            var endoMul = function (p) {
              return curve.point(p.x.redMul(curve.endo.beta), p.y);
            };
            pre.beta = beta;
            beta.precomputed = {
              beta: null,
              naf: pre.naf && {
                wnd: pre.naf.wnd,
                points: pre.naf.points.map(endoMul),
              },
              doubles: pre.doubles && {
                step: pre.doubles.step,
                points: pre.doubles.points.map(endoMul),
              },
            };
          }
          return beta;
        };

        Point.prototype.toJSON = function toJSON() {
          if (!this.precomputed) return [this.x, this.y];

          return [
            this.x,
            this.y,
            this.precomputed && {
              doubles: this.precomputed.doubles && {
                step: this.precomputed.doubles.step,
                points: this.precomputed.doubles.points.slice(1),
              },
              naf: this.precomputed.naf && {
                wnd: this.precomputed.naf.wnd,
                points: this.precomputed.naf.points.slice(1),
              },
            },
          ];
        };

        Point.fromJSON = function fromJSON(curve, obj, red) {
          if (typeof obj === 'string') obj = JSON.parse(obj);
          var res = curve.point(obj[0], obj[1], red);
          if (!obj[2]) return res;

          function obj2point(obj) {
            return curve.point(obj[0], obj[1], red);
          }

          var pre = obj[2];
          res.precomputed = {
            beta: null,
            doubles: pre.doubles && {
              step: pre.doubles.step,
              points: [res].concat(pre.doubles.points.map(obj2point)),
            },
            naf: pre.naf && {
              wnd: pre.naf.wnd,
              points: [res].concat(pre.naf.points.map(obj2point)),
            },
          };
          return res;
        };

        Point.prototype.inspect = function inspect() {
          if (this.isInfinity()) return '<EC Point Infinity>';
          return (
            '<EC Point x: ' +
            this.x.fromRed().toString(16, 2) +
            ' y: ' +
            this.y.fromRed().toString(16, 2) +
            '>'
          );
        };

        Point.prototype.isInfinity = function isInfinity() {
          return this.inf;
        };

        Point.prototype.add = function add(p) {
          // O + P = P
          if (this.inf) return p;

          // P + O = P
          if (p.inf) return this;

          // P + P = 2P
          if (this.eq(p)) return this.dbl();

          // P + (-P) = O
          if (this.neg().eq(p)) return this.curve.point(null, null);

          // P + Q = O
          if (this.x.cmp(p.x) === 0) return this.curve.point(null, null);

          var c = this.y.redSub(p.y);
          if (c.cmpn(0) !== 0) c = c.redMul(this.x.redSub(p.x).redInvm());
          var nx = c.redSqr().redISub(this.x).redISub(p.x);
          var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
          return this.curve.point(nx, ny);
        };

        Point.prototype.dbl = function dbl() {
          if (this.inf) return this;

          // 2P = O
          var ys1 = this.y.redAdd(this.y);
          if (ys1.cmpn(0) === 0) return this.curve.point(null, null);

          var a = this.curve.a;

          var x2 = this.x.redSqr();
          var dyinv = ys1.redInvm();
          var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

          var nx = c.redSqr().redISub(this.x.redAdd(this.x));
          var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
          return this.curve.point(nx, ny);
        };

        Point.prototype.getX = function getX() {
          return this.x.fromRed();
        };

        Point.prototype.getY = function getY() {
          return this.y.fromRed();
        };

        Point.prototype.mul = function mul(k) {
          k = new BN(k, 16);
          if (this.isInfinity()) return this;
          else if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);
          else if (this.curve.endo)
            return this.curve._endoWnafMulAdd([this], [k]);
          else return this.curve._wnafMul(this, k);
        };

        Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
          var points = [this, p2];
          var coeffs = [k1, k2];
          if (this.curve.endo)
            return this.curve._endoWnafMulAdd(points, coeffs);
          else return this.curve._wnafMulAdd(1, points, coeffs, 2);
        };

        Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
          var points = [this, p2];
          var coeffs = [k1, k2];
          if (this.curve.endo)
            return this.curve._endoWnafMulAdd(points, coeffs, true);
          else return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
        };

        Point.prototype.eq = function eq(p) {
          return (
            this === p ||
            (this.inf === p.inf &&
              (this.inf || (this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0)))
          );
        };

        Point.prototype.neg = function neg(_precompute) {
          if (this.inf) return this;

          var res = this.curve.point(this.x, this.y.redNeg());
          if (_precompute && this.precomputed) {
            var pre = this.precomputed;
            var negate = function (p) {
              return p.neg();
            };
            res.precomputed = {
              naf: pre.naf && {
                wnd: pre.naf.wnd,
                points: pre.naf.points.map(negate),
              },
              doubles: pre.doubles && {
                step: pre.doubles.step,
                points: pre.doubles.points.map(negate),
              },
            };
          }
          return res;
        };

        Point.prototype.toJ = function toJ() {
          if (this.inf) return this.curve.jpoint(null, null, null);

          var res = this.curve.jpoint(this.x, this.y, this.curve.one);
          return res;
        };

        function JPoint(curve, x, y, z) {
          Base.BasePoint.call(this, curve, 'jacobian');
          if (x === null && y === null && z === null) {
            this.x = this.curve.one;
            this.y = this.curve.one;
            this.z = new BN(0);
          } else {
            this.x = new BN(x, 16);
            this.y = new BN(y, 16);
            this.z = new BN(z, 16);
          }
          if (!this.x.red) this.x = this.x.toRed(this.curve.red);
          if (!this.y.red) this.y = this.y.toRed(this.curve.red);
          if (!this.z.red) this.z = this.z.toRed(this.curve.red);

          this.zOne = this.z === this.curve.one;
        }
        inherits(JPoint, Base.BasePoint);

        ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
          return new JPoint(this, x, y, z);
        };

        JPoint.prototype.toP = function toP() {
          if (this.isInfinity()) return this.curve.point(null, null);

          var zinv = this.z.redInvm();
          var zinv2 = zinv.redSqr();
          var ax = this.x.redMul(zinv2);
          var ay = this.y.redMul(zinv2).redMul(zinv);

          return this.curve.point(ax, ay);
        };

        JPoint.prototype.neg = function neg() {
          return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
        };

        JPoint.prototype.add = function add(p) {
          // O + P = P
          if (this.isInfinity()) return p;

          // P + O = P
          if (p.isInfinity()) return this;

          // 12M + 4S + 7A
          var pz2 = p.z.redSqr();
          var z2 = this.z.redSqr();
          var u1 = this.x.redMul(pz2);
          var u2 = p.x.redMul(z2);
          var s1 = this.y.redMul(pz2.redMul(p.z));
          var s2 = p.y.redMul(z2.redMul(this.z));

          var h = u1.redSub(u2);
          var r = s1.redSub(s2);
          if (h.cmpn(0) === 0) {
            if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);
            else return this.dbl();
          }

          var h2 = h.redSqr();
          var h3 = h2.redMul(h);
          var v = u1.redMul(h2);

          var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
          var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
          var nz = this.z.redMul(p.z).redMul(h);

          return this.curve.jpoint(nx, ny, nz);
        };

        JPoint.prototype.mixedAdd = function mixedAdd(p) {
          // O + P = P
          if (this.isInfinity()) return p.toJ();

          // P + O = P
          if (p.isInfinity()) return this;

          // 8M + 3S + 7A
          var z2 = this.z.redSqr();
          var u1 = this.x;
          var u2 = p.x.redMul(z2);
          var s1 = this.y;
          var s2 = p.y.redMul(z2).redMul(this.z);

          var h = u1.redSub(u2);
          var r = s1.redSub(s2);
          if (h.cmpn(0) === 0) {
            if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);
            else return this.dbl();
          }

          var h2 = h.redSqr();
          var h3 = h2.redMul(h);
          var v = u1.redMul(h2);

          var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
          var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
          var nz = this.z.redMul(h);

          return this.curve.jpoint(nx, ny, nz);
        };

        JPoint.prototype.dblp = function dblp(pow) {
          if (pow === 0) return this;
          if (this.isInfinity()) return this;
          if (!pow) return this.dbl();

          if (this.curve.zeroA || this.curve.threeA) {
            var r = this;
            for (var i = 0; i < pow; i++) r = r.dbl();
            return r;
          }

          // 1M + 2S + 1A + N * (4S + 5M + 8A)
          // N = 1 => 6M + 6S + 9A
          var a = this.curve.a;
          var tinv = this.curve.tinv;

          var jx = this.x;
          var jy = this.y;
          var jz = this.z;
          var jz4 = jz.redSqr().redSqr();

          // Reuse results
          var jyd = jy.redAdd(jy);
          for (var i = 0; i < pow; i++) {
            var jx2 = jx.redSqr();
            var jyd2 = jyd.redSqr();
            var jyd4 = jyd2.redSqr();
            var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

            var t1 = jx.redMul(jyd2);
            var nx = c.redSqr().redISub(t1.redAdd(t1));
            var t2 = t1.redISub(nx);
            var dny = c.redMul(t2);
            dny = dny.redIAdd(dny).redISub(jyd4);
            var nz = jyd.redMul(jz);
            if (i + 1 < pow) jz4 = jz4.redMul(jyd4);

            jx = nx;
            jz = nz;
            jyd = dny;
          }

          return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
        };

        JPoint.prototype.dbl = function dbl() {
          if (this.isInfinity()) return this;

          if (this.curve.zeroA) return this._zeroDbl();
          else if (this.curve.threeA) return this._threeDbl();
          else return this._dbl();
        };

        JPoint.prototype._zeroDbl = function _zeroDbl() {
          var nx;
          var ny;
          var nz;
          // Z = 1
          if (this.zOne) {
            // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
            //     #doubling-mdbl-2007-bl
            // 1M + 5S + 14A

            // XX = X1^2
            var xx = this.x.redSqr();
            // YY = Y1^2
            var yy = this.y.redSqr();
            // YYYY = YY^2
            var yyyy = yy.redSqr();
            // S = 2 * ((X1 + YY)^2 - XX - YYYY)
            var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
            s = s.redIAdd(s);
            // M = 3 * XX + a; a = 0
            var m = xx.redAdd(xx).redIAdd(xx);
            // T = M ^ 2 - 2*S
            var t = m.redSqr().redISub(s).redISub(s);

            // 8 * YYYY
            var yyyy8 = yyyy.redIAdd(yyyy);
            yyyy8 = yyyy8.redIAdd(yyyy8);
            yyyy8 = yyyy8.redIAdd(yyyy8);

            // X3 = T
            nx = t;
            // Y3 = M * (S - T) - 8 * YYYY
            ny = m.redMul(s.redISub(t)).redISub(yyyy8);
            // Z3 = 2*Y1
            nz = this.y.redAdd(this.y);
          } else {
            // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
            //     #doubling-dbl-2009-l
            // 2M + 5S + 13A

            // A = X1^2
            var a = this.x.redSqr();
            // B = Y1^2
            var b = this.y.redSqr();
            // C = B^2
            var c = b.redSqr();
            // D = 2 * ((X1 + B)^2 - A - C)
            var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
            d = d.redIAdd(d);
            // E = 3 * A
            var e = a.redAdd(a).redIAdd(a);
            // F = E^2
            var f = e.redSqr();

            // 8 * C
            var c8 = c.redIAdd(c);
            c8 = c8.redIAdd(c8);
            c8 = c8.redIAdd(c8);

            // X3 = F - 2 * D
            nx = f.redISub(d).redISub(d);
            // Y3 = E * (D - X3) - 8 * C
            ny = e.redMul(d.redISub(nx)).redISub(c8);
            // Z3 = 2 * Y1 * Z1
            nz = this.y.redMul(this.z);
            nz = nz.redIAdd(nz);
          }

          return this.curve.jpoint(nx, ny, nz);
        };

        JPoint.prototype._threeDbl = function _threeDbl() {
          var nx;
          var ny;
          var nz;
          // Z = 1
          if (this.zOne) {
            // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
            //     #doubling-mdbl-2007-bl
            // 1M + 5S + 15A

            // XX = X1^2
            var xx = this.x.redSqr();
            // YY = Y1^2
            var yy = this.y.redSqr();
            // YYYY = YY^2
            var yyyy = yy.redSqr();
            // S = 2 * ((X1 + YY)^2 - XX - YYYY)
            var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
            s = s.redIAdd(s);
            // M = 3 * XX + a
            var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
            // T = M^2 - 2 * S
            var t = m.redSqr().redISub(s).redISub(s);
            // X3 = T
            nx = t;
            // Y3 = M * (S - T) - 8 * YYYY
            var yyyy8 = yyyy.redIAdd(yyyy);
            yyyy8 = yyyy8.redIAdd(yyyy8);
            yyyy8 = yyyy8.redIAdd(yyyy8);
            ny = m.redMul(s.redISub(t)).redISub(yyyy8);
            // Z3 = 2 * Y1
            nz = this.y.redAdd(this.y);
          } else {
            // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
            // 3M + 5S

            // delta = Z1^2
            var delta = this.z.redSqr();
            // gamma = Y1^2
            var gamma = this.y.redSqr();
            // beta = X1 * gamma
            var beta = this.x.redMul(gamma);
            // alpha = 3 * (X1 - delta) * (X1 + delta)
            var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
            alpha = alpha.redAdd(alpha).redIAdd(alpha);
            // X3 = alpha^2 - 8 * beta
            var beta4 = beta.redIAdd(beta);
            beta4 = beta4.redIAdd(beta4);
            var beta8 = beta4.redAdd(beta4);
            nx = alpha.redSqr().redISub(beta8);
            // Z3 = (Y1 + Z1)^2 - gamma - delta
            nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
            // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
            var ggamma8 = gamma.redSqr();
            ggamma8 = ggamma8.redIAdd(ggamma8);
            ggamma8 = ggamma8.redIAdd(ggamma8);
            ggamma8 = ggamma8.redIAdd(ggamma8);
            ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
          }

          return this.curve.jpoint(nx, ny, nz);
        };

        JPoint.prototype._dbl = function _dbl() {
          var a = this.curve.a;

          // 4M + 6S + 10A
          var jx = this.x;
          var jy = this.y;
          var jz = this.z;
          var jz4 = jz.redSqr().redSqr();

          var jx2 = jx.redSqr();
          var jy2 = jy.redSqr();

          var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

          var jxd4 = jx.redAdd(jx);
          jxd4 = jxd4.redIAdd(jxd4);
          var t1 = jxd4.redMul(jy2);
          var nx = c.redSqr().redISub(t1.redAdd(t1));
          var t2 = t1.redISub(nx);

          var jyd8 = jy2.redSqr();
          jyd8 = jyd8.redIAdd(jyd8);
          jyd8 = jyd8.redIAdd(jyd8);
          jyd8 = jyd8.redIAdd(jyd8);
          var ny = c.redMul(t2).redISub(jyd8);
          var nz = jy.redAdd(jy).redMul(jz);

          return this.curve.jpoint(nx, ny, nz);
        };

        JPoint.prototype.trpl = function trpl() {
          if (!this.curve.zeroA) return this.dbl().add(this);

          // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
          // 5M + 10S + ...

          // XX = X1^2
          var xx = this.x.redSqr();
          // YY = Y1^2
          var yy = this.y.redSqr();
          // ZZ = Z1^2
          var zz = this.z.redSqr();
          // YYYY = YY^2
          var yyyy = yy.redSqr();
          // M = 3 * XX + a * ZZ2; a = 0
          var m = xx.redAdd(xx).redIAdd(xx);
          // MM = M^2
          var mm = m.redSqr();
          // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
          var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
          e = e.redIAdd(e);
          e = e.redAdd(e).redIAdd(e);
          e = e.redISub(mm);
          // EE = E^2
          var ee = e.redSqr();
          // T = 16*YYYY
          var t = yyyy.redIAdd(yyyy);
          t = t.redIAdd(t);
          t = t.redIAdd(t);
          t = t.redIAdd(t);
          // U = (M + E)^2 - MM - EE - T
          var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
          // X3 = 4 * (X1 * EE - 4 * YY * U)
          var yyu4 = yy.redMul(u);
          yyu4 = yyu4.redIAdd(yyu4);
          yyu4 = yyu4.redIAdd(yyu4);
          var nx = this.x.redMul(ee).redISub(yyu4);
          nx = nx.redIAdd(nx);
          nx = nx.redIAdd(nx);
          // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
          var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
          ny = ny.redIAdd(ny);
          ny = ny.redIAdd(ny);
          ny = ny.redIAdd(ny);
          // Z3 = (Z1 + E)^2 - ZZ - EE
          var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

          return this.curve.jpoint(nx, ny, nz);
        };

        JPoint.prototype.mul = function mul(k, kbase) {
          k = new BN(k, kbase);

          return this.curve._wnafMul(this, k);
        };

        JPoint.prototype.eq = function eq(p) {
          if (p.type === 'affine') return this.eq(p.toJ());

          if (this === p) return true;

          // x1 * z2^2 == x2 * z1^2
          var z2 = this.z.redSqr();
          var pz2 = p.z.redSqr();
          if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
            return false;

          // y1 * z2^3 == y2 * z1^3
          var z3 = z2.redMul(this.z);
          var pz3 = pz2.redMul(p.z);
          return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
        };

        JPoint.prototype.eqXToP = function eqXToP(x) {
          var zs = this.z.redSqr();
          var rx = x.toRed(this.curve.red).redMul(zs);
          if (this.x.cmp(rx) === 0) return true;

          var xc = x.clone();
          var t = this.curve.redN.redMul(zs);
          for (;;) {
            xc.iadd(this.curve.n);
            if (xc.cmp(this.curve.p) >= 0) return false;

            rx.redIAdd(t);
            if (this.x.cmp(rx) === 0) return true;
          }
        };

        JPoint.prototype.inspect = function inspect() {
          if (this.isInfinity()) return '<EC JPoint Infinity>';
          return (
            '<EC JPoint x: ' +
            this.x.toString(16, 2) +
            ' y: ' +
            this.y.toString(16, 2) +
            ' z: ' +
            this.z.toString(16, 2) +
            '>'
          );
        };

        JPoint.prototype.isInfinity = function isInfinity() {
          // XXX This code assumes that zero is always zero in red
          return this.z.cmpn(0) === 0;
        };

        /***/
      },

    /***/ '../node_modules/elliptic/lib/elliptic/curves.js':
      /*!*******************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/curves.js ***!
  \*******************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var curves = exports;

        var hash = __webpack_require__(
          /*! hash.js */ '../node_modules/hash.js/lib/hash.js'
        );
        var curve = __webpack_require__(
          /*! ./curve */ '../node_modules/elliptic/lib/elliptic/curve/index.js'
        );
        var utils = __webpack_require__(
          /*! ./utils */ '../node_modules/elliptic/lib/elliptic/utils.js'
        );

        var assert = utils.assert;

        function PresetCurve(options) {
          if (options.type === 'short') this.curve = new curve.short(options);
          else if (options.type === 'edwards')
            this.curve = new curve.edwards(options);
          else this.curve = new curve.mont(options);
          this.g = this.curve.g;
          this.n = this.curve.n;
          this.hash = options.hash;

          assert(this.g.validate(), 'Invalid curve');
          assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
        }
        curves.PresetCurve = PresetCurve;

        function defineCurve(name, options) {
          Object.defineProperty(curves, name, {
            configurable: true,
            enumerable: true,
            get: function () {
              var curve = new PresetCurve(options);
              Object.defineProperty(curves, name, {
                configurable: true,
                enumerable: true,
                value: curve,
              });
              return curve;
            },
          });
        }

        defineCurve('p192', {
          type: 'short',
          prime: 'p192',
          p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
          a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
          b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
          n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
          hash: hash.sha256,
          gRed: false,
          g: [
            '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
            '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',
          ],
        });

        defineCurve('p224', {
          type: 'short',
          prime: 'p224',
          p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
          a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
          b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
          n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
          hash: hash.sha256,
          gRed: false,
          g: [
            'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
            'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',
          ],
        });

        defineCurve('p256', {
          type: 'short',
          prime: null,
          p:
            'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
          a:
            'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
          b:
            '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
          n:
            'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
          hash: hash.sha256,
          gRed: false,
          g: [
            '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
            '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',
          ],
        });

        defineCurve('p384', {
          type: 'short',
          prime: null,
          p:
            'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
            'fffffffe ffffffff 00000000 00000000 ffffffff',
          a:
            'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
            'fffffffe ffffffff 00000000 00000000 fffffffc',
          b:
            'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
            '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
          n:
            'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
            'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
          hash: hash.sha384,
          gRed: false,
          g: [
            'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
              '5502f25d bf55296c 3a545e38 72760ab7',
            '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
              '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',
          ],
        });

        defineCurve('p521', {
          type: 'short',
          prime: null,
          p:
            '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
            'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
            'ffffffff ffffffff ffffffff ffffffff ffffffff',
          a:
            '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
            'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
            'ffffffff ffffffff ffffffff ffffffff fffffffc',
          b:
            '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
            '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
            '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
          n:
            '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
            'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
            'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
          hash: hash.sha512,
          gRed: false,
          g: [
            '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
              '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
              'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
            '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
              '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
              '3fad0761 353c7086 a272c240 88be9476 9fd16650',
          ],
        });

        defineCurve('curve25519', {
          type: 'mont',
          prime: 'p25519',
          p:
            '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
          a: '76d06',
          b: '1',
          n:
            '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
          hash: hash.sha256,
          gRed: false,
          g: ['9'],
        });

        defineCurve('ed25519', {
          type: 'edwards',
          prime: 'p25519',
          p:
            '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
          a: '-1',
          c: '1',
          // -121665 * (121666^(-1)) (mod P)
          d:
            '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
          n:
            '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
          hash: hash.sha256,
          gRed: false,
          g: [
            '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

            // 4/5
            '6666666666666666666666666666666666666666666666666666666666666658',
          ],
        });

        var pre;
        try {
          pre = __webpack_require__(
            /*! ./precomputed/secp256k1 */ '../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js'
          );
        } catch (e) {
          pre = undefined;
        }

        defineCurve('secp256k1', {
          type: 'short',
          prime: 'k256',
          p:
            'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
          a: '0',
          b: '7',
          n:
            'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
          h: '1',
          hash: hash.sha256,

          // Precomputed endomorphism
          beta:
            '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
          lambda:
            '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
          basis: [
            {
              a: '3086d221a7d46bcde86c90e49284eb15',
              b: '-e4437ed6010e88286f547fa90abfe4c3',
            },
            {
              a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
              b: '3086d221a7d46bcde86c90e49284eb15',
            },
          ],

          gRed: false,
          g: [
            '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
            '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
            pre,
          ],
        });

        /***/
      },

    /***/ '../node_modules/elliptic/lib/elliptic/ec/index.js':
      /*!*********************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/ec/index.js ***!
  \*********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var BN = __webpack_require__(
          /*! bn.js */ '../node_modules/elliptic/node_modules/bn.js/lib/bn.js'
        );
        var HmacDRBG = __webpack_require__(
          /*! hmac-drbg */ '../node_modules/hmac-drbg/lib/hmac-drbg.js'
        );
        var utils = __webpack_require__(
          /*! ../utils */ '../node_modules/elliptic/lib/elliptic/utils.js'
        );
        var curves = __webpack_require__(
          /*! ../curves */ '../node_modules/elliptic/lib/elliptic/curves.js'
        );
        var rand = __webpack_require__(
          /*! brorand */ '../node_modules/brorand/index.js'
        );
        var assert = utils.assert;

        var KeyPair = __webpack_require__(
          /*! ./key */ '../node_modules/elliptic/lib/elliptic/ec/key.js'
        );
        var Signature = __webpack_require__(
          /*! ./signature */ '../node_modules/elliptic/lib/elliptic/ec/signature.js'
        );

        function EC(options) {
          if (!(this instanceof EC)) return new EC(options);

          // Shortcut `elliptic.ec(curve-name)`
          if (typeof options === 'string') {
            assert(curves.hasOwnProperty(options), 'Unknown curve ' + options);

            options = curves[options];
          }

          // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
          if (options instanceof curves.PresetCurve)
            options = { curve: options };

          this.curve = options.curve.curve;
          this.n = this.curve.n;
          this.nh = this.n.ushrn(1);
          this.g = this.curve.g;

          // Point on curve
          this.g = options.curve.g;
          this.g.precompute(options.curve.n.bitLength() + 1);

          // Hash for function for DRBG
          this.hash = options.hash || options.curve.hash;
        }
        module.exports = EC;

        EC.prototype.keyPair = function keyPair(options) {
          return new KeyPair(this, options);
        };

        EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
          return KeyPair.fromPrivate(this, priv, enc);
        };

        EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
          return KeyPair.fromPublic(this, pub, enc);
        };

        EC.prototype.genKeyPair = function genKeyPair(options) {
          if (!options) options = {};

          // Instantiate Hmac_DRBG
          var drbg = new HmacDRBG({
            hash: this.hash,
            pers: options.pers,
            persEnc: options.persEnc || 'utf8',
            entropy: options.entropy || rand(this.hash.hmacStrength),
            entropyEnc: (options.entropy && options.entropyEnc) || 'utf8',
            nonce: this.n.toArray(),
          });

          var bytes = this.n.byteLength();
          var ns2 = this.n.sub(new BN(2));
          do {
            var priv = new BN(drbg.generate(bytes));
            if (priv.cmp(ns2) > 0) continue;

            priv.iaddn(1);
            return this.keyFromPrivate(priv);
          } while (true);
        };

        EC.prototype._truncateToN = function truncateToN(msg, truncOnly) {
          var delta = msg.byteLength() * 8 - this.n.bitLength();
          if (delta > 0) msg = msg.ushrn(delta);
          if (!truncOnly && msg.cmp(this.n) >= 0) return msg.sub(this.n);
          else return msg;
        };

        EC.prototype.sign = function sign(msg, key, enc, options) {
          if (typeof enc === 'object') {
            options = enc;
            enc = null;
          }
          if (!options) options = {};

          key = this.keyFromPrivate(key, enc);
          msg = this._truncateToN(new BN(msg, 16));

          // Zero-extend key to provide enough entropy
          var bytes = this.n.byteLength();
          var bkey = key.getPrivate().toArray('be', bytes);

          // Zero-extend nonce to have the same byte size as N
          var nonce = msg.toArray('be', bytes);

          // Instantiate Hmac_DRBG
          var drbg = new HmacDRBG({
            hash: this.hash,
            entropy: bkey,
            nonce: nonce,
            pers: options.pers,
            persEnc: options.persEnc || 'utf8',
          });

          // Number of bytes to generate
          var ns1 = this.n.sub(new BN(1));

          for (var iter = 0; true; iter++) {
            var k = options.k
              ? options.k(iter)
              : new BN(drbg.generate(this.n.byteLength()));
            k = this._truncateToN(k, true);
            if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;

            var kp = this.g.mul(k);
            if (kp.isInfinity()) continue;

            var kpX = kp.getX();
            var r = kpX.umod(this.n);
            if (r.cmpn(0) === 0) continue;

            var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
            s = s.umod(this.n);
            if (s.cmpn(0) === 0) continue;

            var recoveryParam =
              (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0);

            // Use complement of `s`, if it is > `n / 2`
            if (options.canonical && s.cmp(this.nh) > 0) {
              s = this.n.sub(s);
              recoveryParam ^= 1;
            }

            return new Signature({ r: r, s: s, recoveryParam: recoveryParam });
          }
        };

        EC.prototype.verify = function verify(msg, signature, key, enc) {
          msg = this._truncateToN(new BN(msg, 16));
          key = this.keyFromPublic(key, enc);
          signature = new Signature(signature, 'hex');

          // Perform primitive values validation
          var r = signature.r;
          var s = signature.s;
          if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;
          if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false;

          // Validate signature
          var sinv = s.invm(this.n);
          var u1 = sinv.mul(msg).umod(this.n);
          var u2 = sinv.mul(r).umod(this.n);

          if (!this.curve._maxwellTrick) {
            var p = this.g.mulAdd(u1, key.getPublic(), u2);
            if (p.isInfinity()) return false;

            return p.getX().umod(this.n).cmp(r) === 0;
          }

          // NOTE: Greg Maxwell's trick, inspired by:
          // https://git.io/vad3K

          var p = this.g.jmulAdd(u1, key.getPublic(), u2);
          if (p.isInfinity()) return false;

          // Compare `p.x` of Jacobian point with `r`,
          // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
          // inverse of `p.z^2`
          return p.eqXToP(r);
        };

        EC.prototype.recoverPubKey = function (msg, signature, j, enc) {
          assert((3 & j) === j, 'The recovery param is more than two bits');
          signature = new Signature(signature, enc);

          var n = this.n;
          var e = new BN(msg);
          var r = signature.r;
          var s = signature.s;

          // A set LSB signifies that the y-coordinate is odd
          var isYOdd = j & 1;
          var isSecondKey = j >> 1;
          if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
            throw new Error('Unable to find sencond key candinate');

          // 1.1. Let x = r + jn.
          if (isSecondKey)
            r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
          else r = this.curve.pointFromX(r, isYOdd);

          var rInv = signature.r.invm(n);
          var s1 = n.sub(e).mul(rInv).umod(n);
          var s2 = s.mul(rInv).umod(n);

          // 1.6.1 Compute Q = r^-1 (sR -  eG)
          //               Q = r^-1 (sR + -eG)
          return this.g.mulAdd(s1, r, s2);
        };

        EC.prototype.getKeyRecoveryParam = function (e, signature, Q, enc) {
          signature = new Signature(signature, enc);
          if (signature.recoveryParam !== null) return signature.recoveryParam;

          for (var i = 0; i < 4; i++) {
            var Qprime;
            try {
              Qprime = this.recoverPubKey(e, signature, i);
            } catch (e) {
              continue;
            }

            if (Qprime.eq(Q)) return i;
          }
          throw new Error('Unable to find valid recovery factor');
        };

        /***/
      },

    /***/ '../node_modules/elliptic/lib/elliptic/ec/key.js':
      /*!*******************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/ec/key.js ***!
  \*******************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var BN = __webpack_require__(
          /*! bn.js */ '../node_modules/elliptic/node_modules/bn.js/lib/bn.js'
        );
        var utils = __webpack_require__(
          /*! ../utils */ '../node_modules/elliptic/lib/elliptic/utils.js'
        );
        var assert = utils.assert;

        function KeyPair(ec, options) {
          this.ec = ec;
          this.priv = null;
          this.pub = null;

          // KeyPair(ec, { priv: ..., pub: ... })
          if (options.priv) this._importPrivate(options.priv, options.privEnc);
          if (options.pub) this._importPublic(options.pub, options.pubEnc);
        }
        module.exports = KeyPair;

        KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
          if (pub instanceof KeyPair) return pub;

          return new KeyPair(ec, {
            pub: pub,
            pubEnc: enc,
          });
        };

        KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
          if (priv instanceof KeyPair) return priv;

          return new KeyPair(ec, {
            priv: priv,
            privEnc: enc,
          });
        };

        KeyPair.prototype.validate = function validate() {
          var pub = this.getPublic();

          if (pub.isInfinity())
            return { result: false, reason: 'Invalid public key' };
          if (!pub.validate())
            return { result: false, reason: 'Public key is not a point' };
          if (!pub.mul(this.ec.curve.n).isInfinity())
            return { result: false, reason: 'Public key * N != O' };

          return { result: true, reason: null };
        };

        KeyPair.prototype.getPublic = function getPublic(compact, enc) {
          // compact is optional argument
          if (typeof compact === 'string') {
            enc = compact;
            compact = null;
          }

          if (!this.pub) this.pub = this.ec.g.mul(this.priv);

          if (!enc) return this.pub;

          return this.pub.encode(enc, compact);
        };

        KeyPair.prototype.getPrivate = function getPrivate(enc) {
          if (enc === 'hex') return this.priv.toString(16, 2);
          else return this.priv;
        };

        KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
          this.priv = new BN(key, enc || 16);

          // Ensure that the priv won't be bigger than n, otherwise we may fail
          // in fixed multiplication method
          this.priv = this.priv.umod(this.ec.curve.n);
        };

        KeyPair.prototype._importPublic = function _importPublic(key, enc) {
          if (key.x || key.y) {
            // Montgomery points only have an `x` coordinate.
            // Weierstrass/Edwards points on the other hand have both `x` and
            // `y` coordinates.
            if (this.ec.curve.type === 'mont') {
              assert(key.x, 'Need x coordinate');
            } else if (
              this.ec.curve.type === 'short' ||
              this.ec.curve.type === 'edwards'
            ) {
              assert(key.x && key.y, 'Need both x and y coordinate');
            }
            this.pub = this.ec.curve.point(key.x, key.y);
            return;
          }
          this.pub = this.ec.curve.decodePoint(key, enc);
        };

        // ECDH
        KeyPair.prototype.derive = function derive(pub) {
          return pub.mul(this.priv).getX();
        };

        // ECDSA
        KeyPair.prototype.sign = function sign(msg, enc, options) {
          return this.ec.sign(msg, this, enc, options);
        };

        KeyPair.prototype.verify = function verify(msg, signature) {
          return this.ec.verify(msg, signature, this);
        };

        KeyPair.prototype.inspect = function inspect() {
          return (
            '<Key priv: ' +
            (this.priv && this.priv.toString(16, 2)) +
            ' pub: ' +
            (this.pub && this.pub.inspect()) +
            ' >'
          );
        };

        /***/
      },

    /***/ '../node_modules/elliptic/lib/elliptic/ec/signature.js':
      /*!*************************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/ec/signature.js ***!
  \*************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var BN = __webpack_require__(
          /*! bn.js */ '../node_modules/elliptic/node_modules/bn.js/lib/bn.js'
        );

        var utils = __webpack_require__(
          /*! ../utils */ '../node_modules/elliptic/lib/elliptic/utils.js'
        );
        var assert = utils.assert;

        function Signature(options, enc) {
          if (options instanceof Signature) return options;

          if (this._importDER(options, enc)) return;

          assert(options.r && options.s, 'Signature without r or s');
          this.r = new BN(options.r, 16);
          this.s = new BN(options.s, 16);
          if (options.recoveryParam === undefined) this.recoveryParam = null;
          else this.recoveryParam = options.recoveryParam;
        }
        module.exports = Signature;

        function Position() {
          this.place = 0;
        }

        function getLength(buf, p) {
          var initial = buf[p.place++];
          if (!(initial & 0x80)) {
            return initial;
          }
          var octetLen = initial & 0xf;

          // Indefinite length or overflow
          if (octetLen === 0 || octetLen > 4) {
            return false;
          }

          var val = 0;
          for (var i = 0, off = p.place; i < octetLen; i++, off++) {
            val <<= 8;
            val |= buf[off];
            val >>>= 0;
          }

          // Leading zeroes
          if (val <= 0x7f) {
            return false;
          }

          p.place = off;
          return val;
        }

        function rmPadding(buf) {
          var i = 0;
          var len = buf.length - 1;
          while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
            i++;
          }
          if (i === 0) {
            return buf;
          }
          return buf.slice(i);
        }

        Signature.prototype._importDER = function _importDER(data, enc) {
          data = utils.toArray(data, enc);
          var p = new Position();
          if (data[p.place++] !== 0x30) {
            return false;
          }
          var len = getLength(data, p);
          if (len === false) {
            return false;
          }
          if (len + p.place !== data.length) {
            return false;
          }
          if (data[p.place++] !== 0x02) {
            return false;
          }
          var rlen = getLength(data, p);
          if (rlen === false) {
            return false;
          }
          var r = data.slice(p.place, rlen + p.place);
          p.place += rlen;
          if (data[p.place++] !== 0x02) {
            return false;
          }
          var slen = getLength(data, p);
          if (slen === false) {
            return false;
          }
          if (data.length !== slen + p.place) {
            return false;
          }
          var s = data.slice(p.place, slen + p.place);
          if (r[0] === 0) {
            if (r[1] & 0x80) {
              r = r.slice(1);
            } else {
              // Leading zeroes
              return false;
            }
          }
          if (s[0] === 0) {
            if (s[1] & 0x80) {
              s = s.slice(1);
            } else {
              // Leading zeroes
              return false;
            }
          }

          this.r = new BN(r);
          this.s = new BN(s);
          this.recoveryParam = null;

          return true;
        };

        function constructLength(arr, len) {
          if (len < 0x80) {
            arr.push(len);
            return;
          }
          var octets = 1 + ((Math.log(len) / Math.LN2) >>> 3);
          arr.push(octets | 0x80);
          while (--octets) {
            arr.push((len >>> (octets << 3)) & 0xff);
          }
          arr.push(len);
        }

        Signature.prototype.toDER = function toDER(enc) {
          var r = this.r.toArray();
          var s = this.s.toArray();

          // Pad values
          if (r[0] & 0x80) r = [0].concat(r);
          // Pad values
          if (s[0] & 0x80) s = [0].concat(s);

          r = rmPadding(r);
          s = rmPadding(s);

          while (!s[0] && !(s[1] & 0x80)) {
            s = s.slice(1);
          }
          var arr = [0x02];
          constructLength(arr, r.length);
          arr = arr.concat(r);
          arr.push(0x02);
          constructLength(arr, s.length);
          var backHalf = arr.concat(s);
          var res = [0x30];
          constructLength(res, backHalf.length);
          res = res.concat(backHalf);
          return utils.encode(res, enc);
        };

        /***/
      },

    /***/ '../node_modules/elliptic/lib/elliptic/eddsa/index.js':
      /*!************************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/eddsa/index.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var hash = __webpack_require__(
          /*! hash.js */ '../node_modules/hash.js/lib/hash.js'
        );
        var curves = __webpack_require__(
          /*! ../curves */ '../node_modules/elliptic/lib/elliptic/curves.js'
        );
        var utils = __webpack_require__(
          /*! ../utils */ '../node_modules/elliptic/lib/elliptic/utils.js'
        );
        var assert = utils.assert;
        var parseBytes = utils.parseBytes;
        var KeyPair = __webpack_require__(
          /*! ./key */ '../node_modules/elliptic/lib/elliptic/eddsa/key.js'
        );
        var Signature = __webpack_require__(
          /*! ./signature */ '../node_modules/elliptic/lib/elliptic/eddsa/signature.js'
        );

        function EDDSA(curve) {
          assert(curve === 'ed25519', 'only tested with ed25519 so far');

          if (!(this instanceof EDDSA)) return new EDDSA(curve);

          var curve = curves[curve].curve;
          this.curve = curve;
          this.g = curve.g;
          this.g.precompute(curve.n.bitLength() + 1);

          this.pointClass = curve.point().constructor;
          this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
          this.hash = hash.sha512;
        }

        module.exports = EDDSA;

        /**
         * @param {Array|String} message - message bytes
         * @param {Array|String|KeyPair} secret - secret bytes or a keypair
         * @returns {Signature} - signature
         */
        EDDSA.prototype.sign = function sign(message, secret) {
          message = parseBytes(message);
          var key = this.keyFromSecret(secret);
          var r = this.hashInt(key.messagePrefix(), message);
          var R = this.g.mul(r);
          var Rencoded = this.encodePoint(R);
          var s_ = this.hashInt(Rencoded, key.pubBytes(), message).mul(
            key.priv()
          );
          var S = r.add(s_).umod(this.curve.n);
          return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
        };

        /**
         * @param {Array} message - message bytes
         * @param {Array|String|Signature} sig - sig bytes
         * @param {Array|String|Point|KeyPair} pub - public key
         * @returns {Boolean} - true if public key matches sig of message
         */
        EDDSA.prototype.verify = function verify(message, sig, pub) {
          message = parseBytes(message);
          sig = this.makeSignature(sig);
          var key = this.keyFromPublic(pub);
          var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
          var SG = this.g.mul(sig.S());
          var RplusAh = sig.R().add(key.pub().mul(h));
          return RplusAh.eq(SG);
        };

        EDDSA.prototype.hashInt = function hashInt() {
          var hash = this.hash();
          for (var i = 0; i < arguments.length; i++) hash.update(arguments[i]);
          return utils.intFromLE(hash.digest()).umod(this.curve.n);
        };

        EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
          return KeyPair.fromPublic(this, pub);
        };

        EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
          return KeyPair.fromSecret(this, secret);
        };

        EDDSA.prototype.makeSignature = function makeSignature(sig) {
          if (sig instanceof Signature) return sig;
          return new Signature(this, sig);
        };

        /**
         * * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
         *
         * EDDSA defines methods for encoding and decoding points and integers. These are
         * helper convenience methods, that pass along to utility functions implied
         * parameters.
         *
         */
        EDDSA.prototype.encodePoint = function encodePoint(point) {
          var enc = point.getY().toArray('le', this.encodingLength);
          enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
          return enc;
        };

        EDDSA.prototype.decodePoint = function decodePoint(bytes) {
          bytes = utils.parseBytes(bytes);

          var lastIx = bytes.length - 1;
          var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
          var xIsOdd = (bytes[lastIx] & 0x80) !== 0;

          var y = utils.intFromLE(normed);
          return this.curve.pointFromY(y, xIsOdd);
        };

        EDDSA.prototype.encodeInt = function encodeInt(num) {
          return num.toArray('le', this.encodingLength);
        };

        EDDSA.prototype.decodeInt = function decodeInt(bytes) {
          return utils.intFromLE(bytes);
        };

        EDDSA.prototype.isPoint = function isPoint(val) {
          return val instanceof this.pointClass;
        };

        /***/
      },

    /***/ '../node_modules/elliptic/lib/elliptic/eddsa/key.js':
      /*!**********************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/eddsa/key.js ***!
  \**********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(
          /*! ../utils */ '../node_modules/elliptic/lib/elliptic/utils.js'
        );
        var assert = utils.assert;
        var parseBytes = utils.parseBytes;
        var cachedProperty = utils.cachedProperty;

        /**
         * @param {EDDSA} eddsa - instance
         * @param {Object} params - public/private key parameters
         *
         * @param {Array<Byte>} [params.secret] - secret seed bytes
         * @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
         * @param {Array<Byte>} [params.pub] - public key point encoded as bytes
         *
         */
        function KeyPair(eddsa, params) {
          this.eddsa = eddsa;
          this._secret = parseBytes(params.secret);
          if (eddsa.isPoint(params.pub)) this._pub = params.pub;
          else this._pubBytes = parseBytes(params.pub);
        }

        KeyPair.fromPublic = function fromPublic(eddsa, pub) {
          if (pub instanceof KeyPair) return pub;
          return new KeyPair(eddsa, { pub: pub });
        };

        KeyPair.fromSecret = function fromSecret(eddsa, secret) {
          if (secret instanceof KeyPair) return secret;
          return new KeyPair(eddsa, { secret: secret });
        };

        KeyPair.prototype.secret = function secret() {
          return this._secret;
        };

        cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
          return this.eddsa.encodePoint(this.pub());
        });

        cachedProperty(KeyPair, 'pub', function pub() {
          if (this._pubBytes) return this.eddsa.decodePoint(this._pubBytes);
          return this.eddsa.g.mul(this.priv());
        });

        cachedProperty(KeyPair, 'privBytes', function privBytes() {
          var eddsa = this.eddsa;
          var hash = this.hash();
          var lastIx = eddsa.encodingLength - 1;

          var a = hash.slice(0, eddsa.encodingLength);
          a[0] &= 248;
          a[lastIx] &= 127;
          a[lastIx] |= 64;

          return a;
        });

        cachedProperty(KeyPair, 'priv', function priv() {
          return this.eddsa.decodeInt(this.privBytes());
        });

        cachedProperty(KeyPair, 'hash', function hash() {
          return this.eddsa.hash().update(this.secret()).digest();
        });

        cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
          return this.hash().slice(this.eddsa.encodingLength);
        });

        KeyPair.prototype.sign = function sign(message) {
          assert(this._secret, 'KeyPair can only verify');
          return this.eddsa.sign(message, this);
        };

        KeyPair.prototype.verify = function verify(message, sig) {
          return this.eddsa.verify(message, sig, this);
        };

        KeyPair.prototype.getSecret = function getSecret(enc) {
          assert(this._secret, 'KeyPair is public only');
          return utils.encode(this.secret(), enc);
        };

        KeyPair.prototype.getPublic = function getPublic(enc) {
          return utils.encode(this.pubBytes(), enc);
        };

        module.exports = KeyPair;

        /***/
      },

    /***/ '../node_modules/elliptic/lib/elliptic/eddsa/signature.js':
      /*!****************************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/eddsa/signature.js ***!
  \****************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var BN = __webpack_require__(
          /*! bn.js */ '../node_modules/elliptic/node_modules/bn.js/lib/bn.js'
        );
        var utils = __webpack_require__(
          /*! ../utils */ '../node_modules/elliptic/lib/elliptic/utils.js'
        );
        var assert = utils.assert;
        var cachedProperty = utils.cachedProperty;
        var parseBytes = utils.parseBytes;

        /**
         * @param {EDDSA} eddsa - eddsa instance
         * @param {Array<Bytes>|Object} sig -
         * @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
         * @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
         * @param {Array<Bytes>} [sig.Rencoded] - R point encoded
         * @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
         */
        function Signature(eddsa, sig) {
          this.eddsa = eddsa;

          if (typeof sig !== 'object') sig = parseBytes(sig);

          if (Array.isArray(sig)) {
            sig = {
              R: sig.slice(0, eddsa.encodingLength),
              S: sig.slice(eddsa.encodingLength),
            };
          }

          assert(sig.R && sig.S, 'Signature without R or S');

          if (eddsa.isPoint(sig.R)) this._R = sig.R;
          if (sig.S instanceof BN) this._S = sig.S;

          this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
          this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
        }

        cachedProperty(Signature, 'S', function S() {
          return this.eddsa.decodeInt(this.Sencoded());
        });

        cachedProperty(Signature, 'R', function R() {
          return this.eddsa.decodePoint(this.Rencoded());
        });

        cachedProperty(Signature, 'Rencoded', function Rencoded() {
          return this.eddsa.encodePoint(this.R());
        });

        cachedProperty(Signature, 'Sencoded', function Sencoded() {
          return this.eddsa.encodeInt(this.S());
        });

        Signature.prototype.toBytes = function toBytes() {
          return this.Rencoded().concat(this.Sencoded());
        };

        Signature.prototype.toHex = function toHex() {
          return utils.encode(this.toBytes(), 'hex').toUpperCase();
        };

        module.exports = Signature;

        /***/
      },

    /***/ '../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js':
      /*!**********************************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js ***!
  \**********************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        module.exports = {
          doubles: {
            step: 4,
            points: [
              [
                'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
                'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',
              ],
              [
                '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
                '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',
              ],
              [
                '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
                'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',
              ],
              [
                '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
                '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',
              ],
              [
                '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
                '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',
              ],
              [
                '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
                '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',
              ],
              [
                'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
                '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',
              ],
              [
                '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
                'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',
              ],
              [
                'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
                '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',
              ],
              [
                'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
                'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',
              ],
              [
                'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
                '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',
              ],
              [
                '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
                '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',
              ],
              [
                '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
                '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',
              ],
              [
                '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
                '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',
              ],
              [
                '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
                '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',
              ],
              [
                '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
                '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',
              ],
              [
                '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
                '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',
              ],
              [
                '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
                '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',
              ],
              [
                '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
                'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',
              ],
              [
                'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
                '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',
              ],
              [
                'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
                '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',
              ],
              [
                '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
                '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',
              ],
              [
                '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
                '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',
              ],
              [
                'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
                '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',
              ],
              [
                '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
                'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',
              ],
              [
                'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
                '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',
              ],
              [
                'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
                'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',
              ],
              [
                'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
                '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',
              ],
              [
                'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
                'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',
              ],
              [
                'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
                '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',
              ],
              [
                '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
                'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',
              ],
              [
                '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
                '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',
              ],
              [
                'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
                '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',
              ],
              [
                '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
                'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',
              ],
              [
                'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
                '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',
              ],
              [
                'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
                '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',
              ],
              [
                'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
                'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',
              ],
              [
                '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
                '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',
              ],
              [
                '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
                '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',
              ],
              [
                '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
                'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',
              ],
              [
                '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
                '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',
              ],
              [
                'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
                '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',
              ],
              [
                '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
                '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',
              ],
              [
                '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
                'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',
              ],
              [
                '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
                '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',
              ],
              [
                'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
                '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',
              ],
              [
                '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
                'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',
              ],
              [
                'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
                'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',
              ],
              [
                'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
                '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',
              ],
              [
                '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
                'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',
              ],
              [
                '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
                'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',
              ],
              [
                'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
                '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',
              ],
              [
                'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
                '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',
              ],
              [
                'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
                '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',
              ],
              [
                '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
                'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',
              ],
              [
                '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
                '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',
              ],
              [
                'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
                'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',
              ],
              [
                '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
                'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',
              ],
              [
                '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
                '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',
              ],
              [
                '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
                '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',
              ],
              [
                'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
                'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',
              ],
              [
                '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
                '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',
              ],
              [
                '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
                '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',
              ],
              [
                'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
                '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',
              ],
              [
                'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
                'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',
              ],
            ],
          },
          naf: {
            wnd: 7,
            points: [
              [
                'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
                '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',
              ],
              [
                '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
                'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',
              ],
              [
                '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
                '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',
              ],
              [
                'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
                'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',
              ],
              [
                '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
                'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',
              ],
              [
                'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
                'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',
              ],
              [
                'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
                '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',
              ],
              [
                'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
                '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',
              ],
              [
                '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
                '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',
              ],
              [
                '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
                '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',
              ],
              [
                '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
                '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',
              ],
              [
                '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
                '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',
              ],
              [
                'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
                'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',
              ],
              [
                'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
                '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',
              ],
              [
                '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
                'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',
              ],
              [
                '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
                'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',
              ],
              [
                '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
                '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',
              ],
              [
                '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
                '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',
              ],
              [
                '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
                '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',
              ],
              [
                '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
                'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',
              ],
              [
                'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
                'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',
              ],
              [
                '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
                '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',
              ],
              [
                '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
                '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',
              ],
              [
                'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
                'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',
              ],
              [
                '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
                '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',
              ],
              [
                'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
                'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',
              ],
              [
                'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
                'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',
              ],
              [
                '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
                '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',
              ],
              [
                '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
                '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',
              ],
              [
                '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
                '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',
              ],
              [
                'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
                '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',
              ],
              [
                '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
                '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',
              ],
              [
                'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
                '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',
              ],
              [
                '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
                'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',
              ],
              [
                '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
                'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',
              ],
              [
                'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
                'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',
              ],
              [
                '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
                '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',
              ],
              [
                '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
                'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',
              ],
              [
                'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
                'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',
              ],
              [
                '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
                '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',
              ],
              [
                '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
                'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',
              ],
              [
                '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
                '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',
              ],
              [
                '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
                'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',
              ],
              [
                'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
                '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',
              ],
              [
                '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
                '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',
              ],
              [
                '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
                'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',
              ],
              [
                '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
                'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',
              ],
              [
                'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
                'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',
              ],
              [
                'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
                'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',
              ],
              [
                '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
                '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',
              ],
              [
                '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
                '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',
              ],
              [
                'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
                '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',
              ],
              [
                'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
                'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',
              ],
              [
                '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
                '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',
              ],
              [
                '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
                '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',
              ],
              [
                'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
                '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',
              ],
              [
                '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
                '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',
              ],
              [
                'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
                'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',
              ],
              [
                '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
                'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',
              ],
              [
                '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
                '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',
              ],
              [
                'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
                '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',
              ],
              [
                'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
                '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',
              ],
              [
                '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
                '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',
              ],
              [
                '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
                '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',
              ],
              [
                '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
                'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',
              ],
              [
                '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
                'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',
              ],
              [
                '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
                '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',
              ],
              [
                '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
                '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',
              ],
              [
                '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
                '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',
              ],
              [
                '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
                'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',
              ],
              [
                'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
                'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',
              ],
              [
                '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
                'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',
              ],
              [
                'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
                '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',
              ],
              [
                'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
                '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',
              ],
              [
                'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
                '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',
              ],
              [
                'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
                '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',
              ],
              [
                '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
                'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',
              ],
              [
                '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
                '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',
              ],
              [
                '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
                'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',
              ],
              [
                'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
                'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',
              ],
              [
                'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
                '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',
              ],
              [
                'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
                'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',
              ],
              [
                'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
                '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',
              ],
              [
                '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
                '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',
              ],
              [
                'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
                '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',
              ],
              [
                'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
                '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',
              ],
              [
                '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
                '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',
              ],
              [
                '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
                'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',
              ],
              [
                'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
                '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',
              ],
              [
                'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
                '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',
              ],
              [
                'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
                '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',
              ],
              [
                '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
                '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',
              ],
              [
                'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
                'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',
              ],
              [
                '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
                'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',
              ],
              [
                'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
                'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',
              ],
              [
                'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
                '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',
              ],
              [
                '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
                'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',
              ],
              [
                'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
                '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',
              ],
              [
                'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
                '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',
              ],
              [
                'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
                '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',
              ],
              [
                '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
                'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',
              ],
              [
                '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
                'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',
              ],
              [
                'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
                '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',
              ],
              [
                '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
                'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',
              ],
              [
                '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
                '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',
              ],
              [
                '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
                'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',
              ],
              [
                'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
                'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',
              ],
              [
                '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
                'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',
              ],
              [
                '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
                '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',
              ],
              [
                '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
                'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',
              ],
              [
                '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
                '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',
              ],
              [
                'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
                'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',
              ],
              [
                '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
                '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',
              ],
              [
                'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
                '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',
              ],
              [
                '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
                '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',
              ],
              [
                'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
                'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',
              ],
              [
                'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
                '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',
              ],
              [
                'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
                'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',
              ],
              [
                '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
                'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',
              ],
              [
                '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
                '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',
              ],
              [
                '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
                'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',
              ],
              [
                '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
                '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',
              ],
              [
                '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
                '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',
              ],
              [
                '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
                'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',
              ],
              [
                '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
                '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',
              ],
              [
                '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
                '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',
              ],
              [
                '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
                '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',
              ],
            ],
          },
        };

        /***/
      },

    /***/ '../node_modules/elliptic/lib/elliptic/utils.js':
      /*!******************************************************!*\
  !*** ../node_modules/elliptic/lib/elliptic/utils.js ***!
  \******************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var utils = exports;
        var BN = __webpack_require__(
          /*! bn.js */ '../node_modules/elliptic/node_modules/bn.js/lib/bn.js'
        );
        var minAssert = __webpack_require__(
          /*! minimalistic-assert */ '../node_modules/minimalistic-assert/index.js'
        );
        var minUtils = __webpack_require__(
          /*! minimalistic-crypto-utils */ '../node_modules/minimalistic-crypto-utils/lib/utils.js'
        );

        utils.assert = minAssert;
        utils.toArray = minUtils.toArray;
        utils.zero2 = minUtils.zero2;
        utils.toHex = minUtils.toHex;
        utils.encode = minUtils.encode;

        // Represent num in a w-NAF form
        function getNAF(num, w, bits) {
          var naf = new Array(Math.max(num.bitLength(), bits) + 1);
          naf.fill(0);

          var ws = 1 << (w + 1);
          var k = num.clone();

          for (var i = 0; i < naf.length; i++) {
            var z;
            var mod = k.andln(ws - 1);
            if (k.isOdd()) {
              if (mod > (ws >> 1) - 1) z = (ws >> 1) - mod;
              else z = mod;
              k.isubn(z);
            } else {
              z = 0;
            }

            naf[i] = z;
            k.iushrn(1);
          }

          return naf;
        }
        utils.getNAF = getNAF;

        // Represent k1, k2 in a Joint Sparse Form
        function getJSF(k1, k2) {
          var jsf = [[], []];

          k1 = k1.clone();
          k2 = k2.clone();
          var d1 = 0;
          var d2 = 0;
          while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {
            // First phase
            var m14 = (k1.andln(3) + d1) & 3;
            var m24 = (k2.andln(3) + d2) & 3;
            if (m14 === 3) m14 = -1;
            if (m24 === 3) m24 = -1;
            var u1;
            if ((m14 & 1) === 0) {
              u1 = 0;
            } else {
              var m8 = (k1.andln(7) + d1) & 7;
              if ((m8 === 3 || m8 === 5) && m24 === 2) u1 = -m14;
              else u1 = m14;
            }
            jsf[0].push(u1);

            var u2;
            if ((m24 & 1) === 0) {
              u2 = 0;
            } else {
              var m8 = (k2.andln(7) + d2) & 7;
              if ((m8 === 3 || m8 === 5) && m14 === 2) u2 = -m24;
              else u2 = m24;
            }
            jsf[1].push(u2);

            // Second phase
            if (2 * d1 === u1 + 1) d1 = 1 - d1;
            if (2 * d2 === u2 + 1) d2 = 1 - d2;
            k1.iushrn(1);
            k2.iushrn(1);
          }

          return jsf;
        }
        utils.getJSF = getJSF;

        function cachedProperty(obj, name, computer) {
          var key = '_' + name;
          obj.prototype[name] = function cachedProperty() {
            return this[key] !== undefined
              ? this[key]
              : (this[key] = computer.call(this));
          };
        }
        utils.cachedProperty = cachedProperty;

        function parseBytes(bytes) {
          return typeof bytes === 'string'
            ? utils.toArray(bytes, 'hex')
            : bytes;
        }
        utils.parseBytes = parseBytes;

        function intFromLE(bytes) {
          return new BN(bytes, 'hex', 'le');
        }
        utils.intFromLE = intFromLE;

        /***/
      },

    /***/ '../node_modules/elliptic/node_modules/bn.js/lib/bn.js':
      /*!*************************************************************!*\
  !*** ../node_modules/elliptic/node_modules/bn.js/lib/bn.js ***!
  \*************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function (module) {
          (function (module, exports) {
            'use strict';

            // Utils
            function assert(val, msg) {
              if (!val) throw new Error(msg || 'Assertion failed');
            }

            // Could use `inherits` module, but don't want to move from single file
            // architecture yet.
            function inherits(ctor, superCtor) {
              ctor.super_ = superCtor;
              var TempCtor = function () {};
              TempCtor.prototype = superCtor.prototype;
              ctor.prototype = new TempCtor();
              ctor.prototype.constructor = ctor;
            }

            // BN

            function BN(number, base, endian) {
              if (BN.isBN(number)) {
                return number;
              }

              this.negative = 0;
              this.words = null;
              this.length = 0;

              // Reduction context
              this.red = null;

              if (number !== null) {
                if (base === 'le' || base === 'be') {
                  endian = base;
                  base = 10;
                }

                this._init(number || 0, base || 10, endian || 'be');
              }
            }
            if (typeof module === 'object') {
              module.exports = BN;
            } else {
              exports.BN = BN;
            }

            BN.BN = BN;
            BN.wordSize = 26;

            var Buffer;
            try {
              Buffer = __webpack_require__(/*! buffer */ 11).Buffer;
            } catch (e) {}

            BN.isBN = function isBN(num) {
              if (num instanceof BN) {
                return true;
              }

              return (
                num !== null &&
                typeof num === 'object' &&
                num.constructor.wordSize === BN.wordSize &&
                Array.isArray(num.words)
              );
            };

            BN.max = function max(left, right) {
              if (left.cmp(right) > 0) return left;
              return right;
            };

            BN.min = function min(left, right) {
              if (left.cmp(right) < 0) return left;
              return right;
            };

            BN.prototype._init = function init(number, base, endian) {
              if (typeof number === 'number') {
                return this._initNumber(number, base, endian);
              }

              if (typeof number === 'object') {
                return this._initArray(number, base, endian);
              }

              if (base === 'hex') {
                base = 16;
              }
              assert(base === (base | 0) && base >= 2 && base <= 36);

              number = number.toString().replace(/\s+/g, '');
              var start = 0;
              if (number[0] === '-') {
                start++;
              }

              if (base === 16) {
                this._parseHex(number, start);
              } else {
                this._parseBase(number, base, start);
              }

              if (number[0] === '-') {
                this.negative = 1;
              }

              this.strip();

              if (endian !== 'le') return;

              this._initArray(this.toArray(), base, endian);
            };

            BN.prototype._initNumber = function _initNumber(
              number,
              base,
              endian
            ) {
              if (number < 0) {
                this.negative = 1;
                number = -number;
              }
              if (number < 0x4000000) {
                this.words = [number & 0x3ffffff];
                this.length = 1;
              } else if (number < 0x10000000000000) {
                this.words = [
                  number & 0x3ffffff,
                  (number / 0x4000000) & 0x3ffffff,
                ];
                this.length = 2;
              } else {
                assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
                this.words = [
                  number & 0x3ffffff,
                  (number / 0x4000000) & 0x3ffffff,
                  1,
                ];
                this.length = 3;
              }

              if (endian !== 'le') return;

              // Reverse the bytes
              this._initArray(this.toArray(), base, endian);
            };

            BN.prototype._initArray = function _initArray(
              number,
              base,
              endian
            ) {
              // Perhaps a Uint8Array
              assert(typeof number.length === 'number');
              if (number.length <= 0) {
                this.words = [0];
                this.length = 1;
                return this;
              }

              this.length = Math.ceil(number.length / 3);
              this.words = new Array(this.length);
              for (var i = 0; i < this.length; i++) {
                this.words[i] = 0;
              }

              var j, w;
              var off = 0;
              if (endian === 'be') {
                for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
                  w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
                  this.words[j] |= (w << off) & 0x3ffffff;
                  this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
                  off += 24;
                  if (off >= 26) {
                    off -= 26;
                    j++;
                  }
                }
              } else if (endian === 'le') {
                for (i = 0, j = 0; i < number.length; i += 3) {
                  w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
                  this.words[j] |= (w << off) & 0x3ffffff;
                  this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
                  off += 24;
                  if (off >= 26) {
                    off -= 26;
                    j++;
                  }
                }
              }
              return this.strip();
            };

            function parseHex(str, start, end) {
              var r = 0;
              var len = Math.min(str.length, end);
              for (var i = start; i < len; i++) {
                var c = str.charCodeAt(i) - 48;

                r <<= 4;

                // 'a' - 'f'
                if (c >= 49 && c <= 54) {
                  r |= c - 49 + 0xa;

                  // 'A' - 'F'
                } else if (c >= 17 && c <= 22) {
                  r |= c - 17 + 0xa;

                  // '0' - '9'
                } else {
                  r |= c & 0xf;
                }
              }
              return r;
            }

            BN.prototype._parseHex = function _parseHex(number, start) {
              // Create possibly bigger array to ensure that it fits the number
              this.length = Math.ceil((number.length - start) / 6);
              this.words = new Array(this.length);
              for (var i = 0; i < this.length; i++) {
                this.words[i] = 0;
              }

              var j, w;
              // Scan 24-bit chunks and add them to the number
              var off = 0;
              for (i = number.length - 6, j = 0; i >= start; i -= 6) {
                w = parseHex(number, i, i + 6);
                this.words[j] |= (w << off) & 0x3ffffff;
                // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
                this.words[j + 1] |= (w >>> (26 - off)) & 0x3fffff;
                off += 24;
                if (off >= 26) {
                  off -= 26;
                  j++;
                }
              }
              if (i + 6 !== start) {
                w = parseHex(number, start, i + 6);
                this.words[j] |= (w << off) & 0x3ffffff;
                this.words[j + 1] |= (w >>> (26 - off)) & 0x3fffff;
              }
              this.strip();
            };

            function parseBase(str, start, end, mul) {
              var r = 0;
              var len = Math.min(str.length, end);
              for (var i = start; i < len; i++) {
                var c = str.charCodeAt(i) - 48;

                r *= mul;

                // 'a'
                if (c >= 49) {
                  r += c - 49 + 0xa;

                  // 'A'
                } else if (c >= 17) {
                  r += c - 17 + 0xa;

                  // '0' - '9'
                } else {
                  r += c;
                }
              }
              return r;
            }

            BN.prototype._parseBase = function _parseBase(number, base, start) {
              // Initialize as zero
              this.words = [0];
              this.length = 1;

              // Find length of limb in base
              for (
                var limbLen = 0, limbPow = 1;
                limbPow <= 0x3ffffff;
                limbPow *= base
              ) {
                limbLen++;
              }
              limbLen--;
              limbPow = (limbPow / base) | 0;

              var total = number.length - start;
              var mod = total % limbLen;
              var end = Math.min(total, total - mod) + start;

              var word = 0;
              for (var i = start; i < end; i += limbLen) {
                word = parseBase(number, i, i + limbLen, base);

                this.imuln(limbPow);
                if (this.words[0] + word < 0x4000000) {
                  this.words[0] += word;
                } else {
                  this._iaddn(word);
                }
              }

              if (mod !== 0) {
                var pow = 1;
                word = parseBase(number, i, number.length, base);

                for (i = 0; i < mod; i++) {
                  pow *= base;
                }

                this.imuln(pow);
                if (this.words[0] + word < 0x4000000) {
                  this.words[0] += word;
                } else {
                  this._iaddn(word);
                }
              }
            };

            BN.prototype.copy = function copy(dest) {
              dest.words = new Array(this.length);
              for (var i = 0; i < this.length; i++) {
                dest.words[i] = this.words[i];
              }
              dest.length = this.length;
              dest.negative = this.negative;
              dest.red = this.red;
            };

            BN.prototype.clone = function clone() {
              var r = new BN(null);
              this.copy(r);
              return r;
            };

            BN.prototype._expand = function _expand(size) {
              while (this.length < size) {
                this.words[this.length++] = 0;
              }
              return this;
            };

            // Remove leading `0` from `this`
            BN.prototype.strip = function strip() {
              while (this.length > 1 && this.words[this.length - 1] === 0) {
                this.length--;
              }
              return this._normSign();
            };

            BN.prototype._normSign = function _normSign() {
              // -0 = 0
              if (this.length === 1 && this.words[0] === 0) {
                this.negative = 0;
              }
              return this;
            };

            BN.prototype.inspect = function inspect() {
              return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
            };

            /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

            var zeros = [
              '',
              '0',
              '00',
              '000',
              '0000',
              '00000',
              '000000',
              '0000000',
              '00000000',
              '000000000',
              '0000000000',
              '00000000000',
              '000000000000',
              '0000000000000',
              '00000000000000',
              '000000000000000',
              '0000000000000000',
              '00000000000000000',
              '000000000000000000',
              '0000000000000000000',
              '00000000000000000000',
              '000000000000000000000',
              '0000000000000000000000',
              '00000000000000000000000',
              '000000000000000000000000',
              '0000000000000000000000000',
            ];

            var groupSizes = [
              0,
              0,
              25,
              16,
              12,
              11,
              10,
              9,
              8,
              8,
              7,
              7,
              7,
              7,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
            ];

            var groupBases = [
              0,
              0,
              33554432,
              43046721,
              16777216,
              48828125,
              60466176,
              40353607,
              16777216,
              43046721,
              10000000,
              19487171,
              35831808,
              62748517,
              7529536,
              11390625,
              16777216,
              24137569,
              34012224,
              47045881,
              64000000,
              4084101,
              5153632,
              6436343,
              7962624,
              9765625,
              11881376,
              14348907,
              17210368,
              20511149,
              24300000,
              28629151,
              33554432,
              39135393,
              45435424,
              52521875,
              60466176,
            ];

            BN.prototype.toString = function toString(base, padding) {
              base = base || 10;
              padding = padding | 0 || 1;

              var out;
              if (base === 16 || base === 'hex') {
                out = '';
                var off = 0;
                var carry = 0;
                for (var i = 0; i < this.length; i++) {
                  var w = this.words[i];
                  var word = (((w << off) | carry) & 0xffffff).toString(16);
                  carry = (w >>> (24 - off)) & 0xffffff;
                  if (carry !== 0 || i !== this.length - 1) {
                    out = zeros[6 - word.length] + word + out;
                  } else {
                    out = word + out;
                  }
                  off += 2;
                  if (off >= 26) {
                    off -= 26;
                    i--;
                  }
                }
                if (carry !== 0) {
                  out = carry.toString(16) + out;
                }
                while (out.length % padding !== 0) {
                  out = '0' + out;
                }
                if (this.negative !== 0) {
                  out = '-' + out;
                }
                return out;
              }

              if (base === (base | 0) && base >= 2 && base <= 36) {
                // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
                var groupSize = groupSizes[base];
                // var groupBase = Math.pow(base, groupSize);
                var groupBase = groupBases[base];
                out = '';
                var c = this.clone();
                c.negative = 0;
                while (!c.isZero()) {
                  var r = c.modn(groupBase).toString(base);
                  c = c.idivn(groupBase);

                  if (!c.isZero()) {
                    out = zeros[groupSize - r.length] + r + out;
                  } else {
                    out = r + out;
                  }
                }
                if (this.isZero()) {
                  out = '0' + out;
                }
                while (out.length % padding !== 0) {
                  out = '0' + out;
                }
                if (this.negative !== 0) {
                  out = '-' + out;
                }
                return out;
              }

              assert(false, 'Base should be between 2 and 36');
            };

            BN.prototype.toNumber = function toNumber() {
              var ret = this.words[0];
              if (this.length === 2) {
                ret += this.words[1] * 0x4000000;
              } else if (this.length === 3 && this.words[2] === 0x01) {
                // NOTE: at this stage it is known that the top bit is set
                ret += 0x10000000000000 + this.words[1] * 0x4000000;
              } else if (this.length > 2) {
                assert(false, 'Number can only safely store up to 53 bits');
              }
              return this.negative !== 0 ? -ret : ret;
            };

            BN.prototype.toJSON = function toJSON() {
              return this.toString(16);
            };

            BN.prototype.toBuffer = function toBuffer(endian, length) {
              assert(typeof Buffer !== 'undefined');
              return this.toArrayLike(Buffer, endian, length);
            };

            BN.prototype.toArray = function toArray(endian, length) {
              return this.toArrayLike(Array, endian, length);
            };

            BN.prototype.toArrayLike = function toArrayLike(
              ArrayType,
              endian,
              length
            ) {
              var byteLength = this.byteLength();
              var reqLength = length || Math.max(1, byteLength);
              assert(
                byteLength <= reqLength,
                'byte array longer than desired length'
              );
              assert(reqLength > 0, 'Requested array length <= 0');

              this.strip();
              var littleEndian = endian === 'le';
              var res = new ArrayType(reqLength);

              var b, i;
              var q = this.clone();
              if (!littleEndian) {
                // Assume big-endian
                for (i = 0; i < reqLength - byteLength; i++) {
                  res[i] = 0;
                }

                for (i = 0; !q.isZero(); i++) {
                  b = q.andln(0xff);
                  q.iushrn(8);

                  res[reqLength - i - 1] = b;
                }
              } else {
                for (i = 0; !q.isZero(); i++) {
                  b = q.andln(0xff);
                  q.iushrn(8);

                  res[i] = b;
                }

                for (; i < reqLength; i++) {
                  res[i] = 0;
                }
              }

              return res;
            };

            if (Math.clz32) {
              BN.prototype._countBits = function _countBits(w) {
                return 32 - Math.clz32(w);
              };
            } else {
              BN.prototype._countBits = function _countBits(w) {
                var t = w;
                var r = 0;
                if (t >= 0x1000) {
                  r += 13;
                  t >>>= 13;
                }
                if (t >= 0x40) {
                  r += 7;
                  t >>>= 7;
                }
                if (t >= 0x8) {
                  r += 4;
                  t >>>= 4;
                }
                if (t >= 0x02) {
                  r += 2;
                  t >>>= 2;
                }
                return r + t;
              };
            }

            BN.prototype._zeroBits = function _zeroBits(w) {
              // Short-cut
              if (w === 0) return 26;

              var t = w;
              var r = 0;
              if ((t & 0x1fff) === 0) {
                r += 13;
                t >>>= 13;
              }
              if ((t & 0x7f) === 0) {
                r += 7;
                t >>>= 7;
              }
              if ((t & 0xf) === 0) {
                r += 4;
                t >>>= 4;
              }
              if ((t & 0x3) === 0) {
                r += 2;
                t >>>= 2;
              }
              if ((t & 0x1) === 0) {
                r++;
              }
              return r;
            };

            // Return number of used bits in a BN
            BN.prototype.bitLength = function bitLength() {
              var w = this.words[this.length - 1];
              var hi = this._countBits(w);
              return (this.length - 1) * 26 + hi;
            };

            function toBitArray(num) {
              var w = new Array(num.bitLength());

              for (var bit = 0; bit < w.length; bit++) {
                var off = (bit / 26) | 0;
                var wbit = bit % 26;

                w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
              }

              return w;
            }

            // Number of trailing zero bits
            BN.prototype.zeroBits = function zeroBits() {
              if (this.isZero()) return 0;

              var r = 0;
              for (var i = 0; i < this.length; i++) {
                var b = this._zeroBits(this.words[i]);
                r += b;
                if (b !== 26) break;
              }
              return r;
            };

            BN.prototype.byteLength = function byteLength() {
              return Math.ceil(this.bitLength() / 8);
            };

            BN.prototype.toTwos = function toTwos(width) {
              if (this.negative !== 0) {
                return this.abs().inotn(width).iaddn(1);
              }
              return this.clone();
            };

            BN.prototype.fromTwos = function fromTwos(width) {
              if (this.testn(width - 1)) {
                return this.notn(width).iaddn(1).ineg();
              }
              return this.clone();
            };

            BN.prototype.isNeg = function isNeg() {
              return this.negative !== 0;
            };

            // Return negative clone of `this`
            BN.prototype.neg = function neg() {
              return this.clone().ineg();
            };

            BN.prototype.ineg = function ineg() {
              if (!this.isZero()) {
                this.negative ^= 1;
              }

              return this;
            };

            // Or `num` with `this` in-place
            BN.prototype.iuor = function iuor(num) {
              while (this.length < num.length) {
                this.words[this.length++] = 0;
              }

              for (var i = 0; i < num.length; i++) {
                this.words[i] = this.words[i] | num.words[i];
              }

              return this.strip();
            };

            BN.prototype.ior = function ior(num) {
              assert((this.negative | num.negative) === 0);
              return this.iuor(num);
            };

            // Or `num` with `this`
            BN.prototype.or = function or(num) {
              if (this.length > num.length) return this.clone().ior(num);
              return num.clone().ior(this);
            };

            BN.prototype.uor = function uor(num) {
              if (this.length > num.length) return this.clone().iuor(num);
              return num.clone().iuor(this);
            };

            // And `num` with `this` in-place
            BN.prototype.iuand = function iuand(num) {
              // b = min-length(num, this)
              var b;
              if (this.length > num.length) {
                b = num;
              } else {
                b = this;
              }

              for (var i = 0; i < b.length; i++) {
                this.words[i] = this.words[i] & num.words[i];
              }

              this.length = b.length;

              return this.strip();
            };

            BN.prototype.iand = function iand(num) {
              assert((this.negative | num.negative) === 0);
              return this.iuand(num);
            };

            // And `num` with `this`
            BN.prototype.and = function and(num) {
              if (this.length > num.length) return this.clone().iand(num);
              return num.clone().iand(this);
            };

            BN.prototype.uand = function uand(num) {
              if (this.length > num.length) return this.clone().iuand(num);
              return num.clone().iuand(this);
            };

            // Xor `num` with `this` in-place
            BN.prototype.iuxor = function iuxor(num) {
              // a.length > b.length
              var a;
              var b;
              if (this.length > num.length) {
                a = this;
                b = num;
              } else {
                a = num;
                b = this;
              }

              for (var i = 0; i < b.length; i++) {
                this.words[i] = a.words[i] ^ b.words[i];
              }

              if (this !== a) {
                for (; i < a.length; i++) {
                  this.words[i] = a.words[i];
                }
              }

              this.length = a.length;

              return this.strip();
            };

            BN.prototype.ixor = function ixor(num) {
              assert((this.negative | num.negative) === 0);
              return this.iuxor(num);
            };

            // Xor `num` with `this`
            BN.prototype.xor = function xor(num) {
              if (this.length > num.length) return this.clone().ixor(num);
              return num.clone().ixor(this);
            };

            BN.prototype.uxor = function uxor(num) {
              if (this.length > num.length) return this.clone().iuxor(num);
              return num.clone().iuxor(this);
            };

            // Not ``this`` with ``width`` bitwidth
            BN.prototype.inotn = function inotn(width) {
              assert(typeof width === 'number' && width >= 0);

              var bytesNeeded = Math.ceil(width / 26) | 0;
              var bitsLeft = width % 26;

              // Extend the buffer with leading zeroes
              this._expand(bytesNeeded);

              if (bitsLeft > 0) {
                bytesNeeded--;
              }

              // Handle complete words
              for (var i = 0; i < bytesNeeded; i++) {
                this.words[i] = ~this.words[i] & 0x3ffffff;
              }

              // Handle the residue
              if (bitsLeft > 0) {
                this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
              }

              // And remove leading zeroes
              return this.strip();
            };

            BN.prototype.notn = function notn(width) {
              return this.clone().inotn(width);
            };

            // Set `bit` of `this`
            BN.prototype.setn = function setn(bit, val) {
              assert(typeof bit === 'number' && bit >= 0);

              var off = (bit / 26) | 0;
              var wbit = bit % 26;

              this._expand(off + 1);

              if (val) {
                this.words[off] = this.words[off] | (1 << wbit);
              } else {
                this.words[off] = this.words[off] & ~(1 << wbit);
              }

              return this.strip();
            };

            // Add `num` to `this` in-place
            BN.prototype.iadd = function iadd(num) {
              var r;

              // negative + positive
              if (this.negative !== 0 && num.negative === 0) {
                this.negative = 0;
                r = this.isub(num);
                this.negative ^= 1;
                return this._normSign();

                // positive + negative
              } else if (this.negative === 0 && num.negative !== 0) {
                num.negative = 0;
                r = this.isub(num);
                num.negative = 1;
                return r._normSign();
              }

              // a.length > b.length
              var a, b;
              if (this.length > num.length) {
                a = this;
                b = num;
              } else {
                a = num;
                b = this;
              }

              var carry = 0;
              for (var i = 0; i < b.length; i++) {
                r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
                this.words[i] = r & 0x3ffffff;
                carry = r >>> 26;
              }
              for (; carry !== 0 && i < a.length; i++) {
                r = (a.words[i] | 0) + carry;
                this.words[i] = r & 0x3ffffff;
                carry = r >>> 26;
              }

              this.length = a.length;
              if (carry !== 0) {
                this.words[this.length] = carry;
                this.length++;
                // Copy the rest of the words
              } else if (a !== this) {
                for (; i < a.length; i++) {
                  this.words[i] = a.words[i];
                }
              }

              return this;
            };

            // Add `num` to `this`
            BN.prototype.add = function add(num) {
              var res;
              if (num.negative !== 0 && this.negative === 0) {
                num.negative = 0;
                res = this.sub(num);
                num.negative ^= 1;
                return res;
              } else if (num.negative === 0 && this.negative !== 0) {
                this.negative = 0;
                res = num.sub(this);
                this.negative = 1;
                return res;
              }

              if (this.length > num.length) return this.clone().iadd(num);

              return num.clone().iadd(this);
            };

            // Subtract `num` from `this` in-place
            BN.prototype.isub = function isub(num) {
              // this - (-num) = this + num
              if (num.negative !== 0) {
                num.negative = 0;
                var r = this.iadd(num);
                num.negative = 1;
                return r._normSign();

                // -this - num = -(this + num)
              } else if (this.negative !== 0) {
                this.negative = 0;
                this.iadd(num);
                this.negative = 1;
                return this._normSign();
              }

              // At this point both numbers are positive
              var cmp = this.cmp(num);

              // Optimization - zeroify
              if (cmp === 0) {
                this.negative = 0;
                this.length = 1;
                this.words[0] = 0;
                return this;
              }

              // a > b
              var a, b;
              if (cmp > 0) {
                a = this;
                b = num;
              } else {
                a = num;
                b = this;
              }

              var carry = 0;
              for (var i = 0; i < b.length; i++) {
                r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
                carry = r >> 26;
                this.words[i] = r & 0x3ffffff;
              }
              for (; carry !== 0 && i < a.length; i++) {
                r = (a.words[i] | 0) + carry;
                carry = r >> 26;
                this.words[i] = r & 0x3ffffff;
              }

              // Copy rest of the words
              if (carry === 0 && i < a.length && a !== this) {
                for (; i < a.length; i++) {
                  this.words[i] = a.words[i];
                }
              }

              this.length = Math.max(this.length, i);

              if (a !== this) {
                this.negative = 1;
              }

              return this.strip();
            };

            // Subtract `num` from `this`
            BN.prototype.sub = function sub(num) {
              return this.clone().isub(num);
            };

            function smallMulTo(self, num, out) {
              out.negative = num.negative ^ self.negative;
              var len = (self.length + num.length) | 0;
              out.length = len;
              len = (len - 1) | 0;

              // Peel one iteration (compiler can't do it, because of code complexity)
              var a = self.words[0] | 0;
              var b = num.words[0] | 0;
              var r = a * b;

              var lo = r & 0x3ffffff;
              var carry = (r / 0x4000000) | 0;
              out.words[0] = lo;

              for (var k = 1; k < len; k++) {
                // Sum all words with the same `i + j = k` and accumulate `ncarry`,
                // note that ncarry could be >= 0x3ffffff
                var ncarry = carry >>> 26;
                var rword = carry & 0x3ffffff;
                var maxJ = Math.min(k, num.length - 1);
                for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                  var i = (k - j) | 0;
                  a = self.words[i] | 0;
                  b = num.words[j] | 0;
                  r = a * b + rword;
                  ncarry += (r / 0x4000000) | 0;
                  rword = r & 0x3ffffff;
                }
                out.words[k] = rword | 0;
                carry = ncarry | 0;
              }
              if (carry !== 0) {
                out.words[k] = carry | 0;
              } else {
                out.length--;
              }

              return out.strip();
            }

            // TODO(indutny): it may be reasonable to omit it for users who don't need
            // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
            // multiplication (like elliptic secp256k1).
            var comb10MulTo = function comb10MulTo(self, num, out) {
              var a = self.words;
              var b = num.words;
              var o = out.words;
              var c = 0;
              var lo;
              var mid;
              var hi;
              var a0 = a[0] | 0;
              var al0 = a0 & 0x1fff;
              var ah0 = a0 >>> 13;
              var a1 = a[1] | 0;
              var al1 = a1 & 0x1fff;
              var ah1 = a1 >>> 13;
              var a2 = a[2] | 0;
              var al2 = a2 & 0x1fff;
              var ah2 = a2 >>> 13;
              var a3 = a[3] | 0;
              var al3 = a3 & 0x1fff;
              var ah3 = a3 >>> 13;
              var a4 = a[4] | 0;
              var al4 = a4 & 0x1fff;
              var ah4 = a4 >>> 13;
              var a5 = a[5] | 0;
              var al5 = a5 & 0x1fff;
              var ah5 = a5 >>> 13;
              var a6 = a[6] | 0;
              var al6 = a6 & 0x1fff;
              var ah6 = a6 >>> 13;
              var a7 = a[7] | 0;
              var al7 = a7 & 0x1fff;
              var ah7 = a7 >>> 13;
              var a8 = a[8] | 0;
              var al8 = a8 & 0x1fff;
              var ah8 = a8 >>> 13;
              var a9 = a[9] | 0;
              var al9 = a9 & 0x1fff;
              var ah9 = a9 >>> 13;
              var b0 = b[0] | 0;
              var bl0 = b0 & 0x1fff;
              var bh0 = b0 >>> 13;
              var b1 = b[1] | 0;
              var bl1 = b1 & 0x1fff;
              var bh1 = b1 >>> 13;
              var b2 = b[2] | 0;
              var bl2 = b2 & 0x1fff;
              var bh2 = b2 >>> 13;
              var b3 = b[3] | 0;
              var bl3 = b3 & 0x1fff;
              var bh3 = b3 >>> 13;
              var b4 = b[4] | 0;
              var bl4 = b4 & 0x1fff;
              var bh4 = b4 >>> 13;
              var b5 = b[5] | 0;
              var bl5 = b5 & 0x1fff;
              var bh5 = b5 >>> 13;
              var b6 = b[6] | 0;
              var bl6 = b6 & 0x1fff;
              var bh6 = b6 >>> 13;
              var b7 = b[7] | 0;
              var bl7 = b7 & 0x1fff;
              var bh7 = b7 >>> 13;
              var b8 = b[8] | 0;
              var bl8 = b8 & 0x1fff;
              var bh8 = b8 >>> 13;
              var b9 = b[9] | 0;
              var bl9 = b9 & 0x1fff;
              var bh9 = b9 >>> 13;

              out.negative = self.negative ^ num.negative;
              out.length = 19;
              /* k = 0 */
              lo = Math.imul(al0, bl0);
              mid = Math.imul(al0, bh0);
              mid = (mid + Math.imul(ah0, bl0)) | 0;
              hi = Math.imul(ah0, bh0);
              var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
              w0 &= 0x3ffffff;
              /* k = 1 */
              lo = Math.imul(al1, bl0);
              mid = Math.imul(al1, bh0);
              mid = (mid + Math.imul(ah1, bl0)) | 0;
              hi = Math.imul(ah1, bh0);
              lo = (lo + Math.imul(al0, bl1)) | 0;
              mid = (mid + Math.imul(al0, bh1)) | 0;
              mid = (mid + Math.imul(ah0, bl1)) | 0;
              hi = (hi + Math.imul(ah0, bh1)) | 0;
              var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
              w1 &= 0x3ffffff;
              /* k = 2 */
              lo = Math.imul(al2, bl0);
              mid = Math.imul(al2, bh0);
              mid = (mid + Math.imul(ah2, bl0)) | 0;
              hi = Math.imul(ah2, bh0);
              lo = (lo + Math.imul(al1, bl1)) | 0;
              mid = (mid + Math.imul(al1, bh1)) | 0;
              mid = (mid + Math.imul(ah1, bl1)) | 0;
              hi = (hi + Math.imul(ah1, bh1)) | 0;
              lo = (lo + Math.imul(al0, bl2)) | 0;
              mid = (mid + Math.imul(al0, bh2)) | 0;
              mid = (mid + Math.imul(ah0, bl2)) | 0;
              hi = (hi + Math.imul(ah0, bh2)) | 0;
              var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
              w2 &= 0x3ffffff;
              /* k = 3 */
              lo = Math.imul(al3, bl0);
              mid = Math.imul(al3, bh0);
              mid = (mid + Math.imul(ah3, bl0)) | 0;
              hi = Math.imul(ah3, bh0);
              lo = (lo + Math.imul(al2, bl1)) | 0;
              mid = (mid + Math.imul(al2, bh1)) | 0;
              mid = (mid + Math.imul(ah2, bl1)) | 0;
              hi = (hi + Math.imul(ah2, bh1)) | 0;
              lo = (lo + Math.imul(al1, bl2)) | 0;
              mid = (mid + Math.imul(al1, bh2)) | 0;
              mid = (mid + Math.imul(ah1, bl2)) | 0;
              hi = (hi + Math.imul(ah1, bh2)) | 0;
              lo = (lo + Math.imul(al0, bl3)) | 0;
              mid = (mid + Math.imul(al0, bh3)) | 0;
              mid = (mid + Math.imul(ah0, bl3)) | 0;
              hi = (hi + Math.imul(ah0, bh3)) | 0;
              var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
              w3 &= 0x3ffffff;
              /* k = 4 */
              lo = Math.imul(al4, bl0);
              mid = Math.imul(al4, bh0);
              mid = (mid + Math.imul(ah4, bl0)) | 0;
              hi = Math.imul(ah4, bh0);
              lo = (lo + Math.imul(al3, bl1)) | 0;
              mid = (mid + Math.imul(al3, bh1)) | 0;
              mid = (mid + Math.imul(ah3, bl1)) | 0;
              hi = (hi + Math.imul(ah3, bh1)) | 0;
              lo = (lo + Math.imul(al2, bl2)) | 0;
              mid = (mid + Math.imul(al2, bh2)) | 0;
              mid = (mid + Math.imul(ah2, bl2)) | 0;
              hi = (hi + Math.imul(ah2, bh2)) | 0;
              lo = (lo + Math.imul(al1, bl3)) | 0;
              mid = (mid + Math.imul(al1, bh3)) | 0;
              mid = (mid + Math.imul(ah1, bl3)) | 0;
              hi = (hi + Math.imul(ah1, bh3)) | 0;
              lo = (lo + Math.imul(al0, bl4)) | 0;
              mid = (mid + Math.imul(al0, bh4)) | 0;
              mid = (mid + Math.imul(ah0, bl4)) | 0;
              hi = (hi + Math.imul(ah0, bh4)) | 0;
              var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
              w4 &= 0x3ffffff;
              /* k = 5 */
              lo = Math.imul(al5, bl0);
              mid = Math.imul(al5, bh0);
              mid = (mid + Math.imul(ah5, bl0)) | 0;
              hi = Math.imul(ah5, bh0);
              lo = (lo + Math.imul(al4, bl1)) | 0;
              mid = (mid + Math.imul(al4, bh1)) | 0;
              mid = (mid + Math.imul(ah4, bl1)) | 0;
              hi = (hi + Math.imul(ah4, bh1)) | 0;
              lo = (lo + Math.imul(al3, bl2)) | 0;
              mid = (mid + Math.imul(al3, bh2)) | 0;
              mid = (mid + Math.imul(ah3, bl2)) | 0;
              hi = (hi + Math.imul(ah3, bh2)) | 0;
              lo = (lo + Math.imul(al2, bl3)) | 0;
              mid = (mid + Math.imul(al2, bh3)) | 0;
              mid = (mid + Math.imul(ah2, bl3)) | 0;
              hi = (hi + Math.imul(ah2, bh3)) | 0;
              lo = (lo + Math.imul(al1, bl4)) | 0;
              mid = (mid + Math.imul(al1, bh4)) | 0;
              mid = (mid + Math.imul(ah1, bl4)) | 0;
              hi = (hi + Math.imul(ah1, bh4)) | 0;
              lo = (lo + Math.imul(al0, bl5)) | 0;
              mid = (mid + Math.imul(al0, bh5)) | 0;
              mid = (mid + Math.imul(ah0, bl5)) | 0;
              hi = (hi + Math.imul(ah0, bh5)) | 0;
              var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
              w5 &= 0x3ffffff;
              /* k = 6 */
              lo = Math.imul(al6, bl0);
              mid = Math.imul(al6, bh0);
              mid = (mid + Math.imul(ah6, bl0)) | 0;
              hi = Math.imul(ah6, bh0);
              lo = (lo + Math.imul(al5, bl1)) | 0;
              mid = (mid + Math.imul(al5, bh1)) | 0;
              mid = (mid + Math.imul(ah5, bl1)) | 0;
              hi = (hi + Math.imul(ah5, bh1)) | 0;
              lo = (lo + Math.imul(al4, bl2)) | 0;
              mid = (mid + Math.imul(al4, bh2)) | 0;
              mid = (mid + Math.imul(ah4, bl2)) | 0;
              hi = (hi + Math.imul(ah4, bh2)) | 0;
              lo = (lo + Math.imul(al3, bl3)) | 0;
              mid = (mid + Math.imul(al3, bh3)) | 0;
              mid = (mid + Math.imul(ah3, bl3)) | 0;
              hi = (hi + Math.imul(ah3, bh3)) | 0;
              lo = (lo + Math.imul(al2, bl4)) | 0;
              mid = (mid + Math.imul(al2, bh4)) | 0;
              mid = (mid + Math.imul(ah2, bl4)) | 0;
              hi = (hi + Math.imul(ah2, bh4)) | 0;
              lo = (lo + Math.imul(al1, bl5)) | 0;
              mid = (mid + Math.imul(al1, bh5)) | 0;
              mid = (mid + Math.imul(ah1, bl5)) | 0;
              hi = (hi + Math.imul(ah1, bh5)) | 0;
              lo = (lo + Math.imul(al0, bl6)) | 0;
              mid = (mid + Math.imul(al0, bh6)) | 0;
              mid = (mid + Math.imul(ah0, bl6)) | 0;
              hi = (hi + Math.imul(ah0, bh6)) | 0;
              var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
              w6 &= 0x3ffffff;
              /* k = 7 */
              lo = Math.imul(al7, bl0);
              mid = Math.imul(al7, bh0);
              mid = (mid + Math.imul(ah7, bl0)) | 0;
              hi = Math.imul(ah7, bh0);
              lo = (lo + Math.imul(al6, bl1)) | 0;
              mid = (mid + Math.imul(al6, bh1)) | 0;
              mid = (mid + Math.imul(ah6, bl1)) | 0;
              hi = (hi + Math.imul(ah6, bh1)) | 0;
              lo = (lo + Math.imul(al5, bl2)) | 0;
              mid = (mid + Math.imul(al5, bh2)) | 0;
              mid = (mid + Math.imul(ah5, bl2)) | 0;
              hi = (hi + Math.imul(ah5, bh2)) | 0;
              lo = (lo + Math.imul(al4, bl3)) | 0;
              mid = (mid + Math.imul(al4, bh3)) | 0;
              mid = (mid + Math.imul(ah4, bl3)) | 0;
              hi = (hi + Math.imul(ah4, bh3)) | 0;
              lo = (lo + Math.imul(al3, bl4)) | 0;
              mid = (mid + Math.imul(al3, bh4)) | 0;
              mid = (mid + Math.imul(ah3, bl4)) | 0;
              hi = (hi + Math.imul(ah3, bh4)) | 0;
              lo = (lo + Math.imul(al2, bl5)) | 0;
              mid = (mid + Math.imul(al2, bh5)) | 0;
              mid = (mid + Math.imul(ah2, bl5)) | 0;
              hi = (hi + Math.imul(ah2, bh5)) | 0;
              lo = (lo + Math.imul(al1, bl6)) | 0;
              mid = (mid + Math.imul(al1, bh6)) | 0;
              mid = (mid + Math.imul(ah1, bl6)) | 0;
              hi = (hi + Math.imul(ah1, bh6)) | 0;
              lo = (lo + Math.imul(al0, bl7)) | 0;
              mid = (mid + Math.imul(al0, bh7)) | 0;
              mid = (mid + Math.imul(ah0, bl7)) | 0;
              hi = (hi + Math.imul(ah0, bh7)) | 0;
              var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
              w7 &= 0x3ffffff;
              /* k = 8 */
              lo = Math.imul(al8, bl0);
              mid = Math.imul(al8, bh0);
              mid = (mid + Math.imul(ah8, bl0)) | 0;
              hi = Math.imul(ah8, bh0);
              lo = (lo + Math.imul(al7, bl1)) | 0;
              mid = (mid + Math.imul(al7, bh1)) | 0;
              mid = (mid + Math.imul(ah7, bl1)) | 0;
              hi = (hi + Math.imul(ah7, bh1)) | 0;
              lo = (lo + Math.imul(al6, bl2)) | 0;
              mid = (mid + Math.imul(al6, bh2)) | 0;
              mid = (mid + Math.imul(ah6, bl2)) | 0;
              hi = (hi + Math.imul(ah6, bh2)) | 0;
              lo = (lo + Math.imul(al5, bl3)) | 0;
              mid = (mid + Math.imul(al5, bh3)) | 0;
              mid = (mid + Math.imul(ah5, bl3)) | 0;
              hi = (hi + Math.imul(ah5, bh3)) | 0;
              lo = (lo + Math.imul(al4, bl4)) | 0;
              mid = (mid + Math.imul(al4, bh4)) | 0;
              mid = (mid + Math.imul(ah4, bl4)) | 0;
              hi = (hi + Math.imul(ah4, bh4)) | 0;
              lo = (lo + Math.imul(al3, bl5)) | 0;
              mid = (mid + Math.imul(al3, bh5)) | 0;
              mid = (mid + Math.imul(ah3, bl5)) | 0;
              hi = (hi + Math.imul(ah3, bh5)) | 0;
              lo = (lo + Math.imul(al2, bl6)) | 0;
              mid = (mid + Math.imul(al2, bh6)) | 0;
              mid = (mid + Math.imul(ah2, bl6)) | 0;
              hi = (hi + Math.imul(ah2, bh6)) | 0;
              lo = (lo + Math.imul(al1, bl7)) | 0;
              mid = (mid + Math.imul(al1, bh7)) | 0;
              mid = (mid + Math.imul(ah1, bl7)) | 0;
              hi = (hi + Math.imul(ah1, bh7)) | 0;
              lo = (lo + Math.imul(al0, bl8)) | 0;
              mid = (mid + Math.imul(al0, bh8)) | 0;
              mid = (mid + Math.imul(ah0, bl8)) | 0;
              hi = (hi + Math.imul(ah0, bh8)) | 0;
              var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
              w8 &= 0x3ffffff;
              /* k = 9 */
              lo = Math.imul(al9, bl0);
              mid = Math.imul(al9, bh0);
              mid = (mid + Math.imul(ah9, bl0)) | 0;
              hi = Math.imul(ah9, bh0);
              lo = (lo + Math.imul(al8, bl1)) | 0;
              mid = (mid + Math.imul(al8, bh1)) | 0;
              mid = (mid + Math.imul(ah8, bl1)) | 0;
              hi = (hi + Math.imul(ah8, bh1)) | 0;
              lo = (lo + Math.imul(al7, bl2)) | 0;
              mid = (mid + Math.imul(al7, bh2)) | 0;
              mid = (mid + Math.imul(ah7, bl2)) | 0;
              hi = (hi + Math.imul(ah7, bh2)) | 0;
              lo = (lo + Math.imul(al6, bl3)) | 0;
              mid = (mid + Math.imul(al6, bh3)) | 0;
              mid = (mid + Math.imul(ah6, bl3)) | 0;
              hi = (hi + Math.imul(ah6, bh3)) | 0;
              lo = (lo + Math.imul(al5, bl4)) | 0;
              mid = (mid + Math.imul(al5, bh4)) | 0;
              mid = (mid + Math.imul(ah5, bl4)) | 0;
              hi = (hi + Math.imul(ah5, bh4)) | 0;
              lo = (lo + Math.imul(al4, bl5)) | 0;
              mid = (mid + Math.imul(al4, bh5)) | 0;
              mid = (mid + Math.imul(ah4, bl5)) | 0;
              hi = (hi + Math.imul(ah4, bh5)) | 0;
              lo = (lo + Math.imul(al3, bl6)) | 0;
              mid = (mid + Math.imul(al3, bh6)) | 0;
              mid = (mid + Math.imul(ah3, bl6)) | 0;
              hi = (hi + Math.imul(ah3, bh6)) | 0;
              lo = (lo + Math.imul(al2, bl7)) | 0;
              mid = (mid + Math.imul(al2, bh7)) | 0;
              mid = (mid + Math.imul(ah2, bl7)) | 0;
              hi = (hi + Math.imul(ah2, bh7)) | 0;
              lo = (lo + Math.imul(al1, bl8)) | 0;
              mid = (mid + Math.imul(al1, bh8)) | 0;
              mid = (mid + Math.imul(ah1, bl8)) | 0;
              hi = (hi + Math.imul(ah1, bh8)) | 0;
              lo = (lo + Math.imul(al0, bl9)) | 0;
              mid = (mid + Math.imul(al0, bh9)) | 0;
              mid = (mid + Math.imul(ah0, bl9)) | 0;
              hi = (hi + Math.imul(ah0, bh9)) | 0;
              var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
              w9 &= 0x3ffffff;
              /* k = 10 */
              lo = Math.imul(al9, bl1);
              mid = Math.imul(al9, bh1);
              mid = (mid + Math.imul(ah9, bl1)) | 0;
              hi = Math.imul(ah9, bh1);
              lo = (lo + Math.imul(al8, bl2)) | 0;
              mid = (mid + Math.imul(al8, bh2)) | 0;
              mid = (mid + Math.imul(ah8, bl2)) | 0;
              hi = (hi + Math.imul(ah8, bh2)) | 0;
              lo = (lo + Math.imul(al7, bl3)) | 0;
              mid = (mid + Math.imul(al7, bh3)) | 0;
              mid = (mid + Math.imul(ah7, bl3)) | 0;
              hi = (hi + Math.imul(ah7, bh3)) | 0;
              lo = (lo + Math.imul(al6, bl4)) | 0;
              mid = (mid + Math.imul(al6, bh4)) | 0;
              mid = (mid + Math.imul(ah6, bl4)) | 0;
              hi = (hi + Math.imul(ah6, bh4)) | 0;
              lo = (lo + Math.imul(al5, bl5)) | 0;
              mid = (mid + Math.imul(al5, bh5)) | 0;
              mid = (mid + Math.imul(ah5, bl5)) | 0;
              hi = (hi + Math.imul(ah5, bh5)) | 0;
              lo = (lo + Math.imul(al4, bl6)) | 0;
              mid = (mid + Math.imul(al4, bh6)) | 0;
              mid = (mid + Math.imul(ah4, bl6)) | 0;
              hi = (hi + Math.imul(ah4, bh6)) | 0;
              lo = (lo + Math.imul(al3, bl7)) | 0;
              mid = (mid + Math.imul(al3, bh7)) | 0;
              mid = (mid + Math.imul(ah3, bl7)) | 0;
              hi = (hi + Math.imul(ah3, bh7)) | 0;
              lo = (lo + Math.imul(al2, bl8)) | 0;
              mid = (mid + Math.imul(al2, bh8)) | 0;
              mid = (mid + Math.imul(ah2, bl8)) | 0;
              hi = (hi + Math.imul(ah2, bh8)) | 0;
              lo = (lo + Math.imul(al1, bl9)) | 0;
              mid = (mid + Math.imul(al1, bh9)) | 0;
              mid = (mid + Math.imul(ah1, bl9)) | 0;
              hi = (hi + Math.imul(ah1, bh9)) | 0;
              var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
              w10 &= 0x3ffffff;
              /* k = 11 */
              lo = Math.imul(al9, bl2);
              mid = Math.imul(al9, bh2);
              mid = (mid + Math.imul(ah9, bl2)) | 0;
              hi = Math.imul(ah9, bh2);
              lo = (lo + Math.imul(al8, bl3)) | 0;
              mid = (mid + Math.imul(al8, bh3)) | 0;
              mid = (mid + Math.imul(ah8, bl3)) | 0;
              hi = (hi + Math.imul(ah8, bh3)) | 0;
              lo = (lo + Math.imul(al7, bl4)) | 0;
              mid = (mid + Math.imul(al7, bh4)) | 0;
              mid = (mid + Math.imul(ah7, bl4)) | 0;
              hi = (hi + Math.imul(ah7, bh4)) | 0;
              lo = (lo + Math.imul(al6, bl5)) | 0;
              mid = (mid + Math.imul(al6, bh5)) | 0;
              mid = (mid + Math.imul(ah6, bl5)) | 0;
              hi = (hi + Math.imul(ah6, bh5)) | 0;
              lo = (lo + Math.imul(al5, bl6)) | 0;
              mid = (mid + Math.imul(al5, bh6)) | 0;
              mid = (mid + Math.imul(ah5, bl6)) | 0;
              hi = (hi + Math.imul(ah5, bh6)) | 0;
              lo = (lo + Math.imul(al4, bl7)) | 0;
              mid = (mid + Math.imul(al4, bh7)) | 0;
              mid = (mid + Math.imul(ah4, bl7)) | 0;
              hi = (hi + Math.imul(ah4, bh7)) | 0;
              lo = (lo + Math.imul(al3, bl8)) | 0;
              mid = (mid + Math.imul(al3, bh8)) | 0;
              mid = (mid + Math.imul(ah3, bl8)) | 0;
              hi = (hi + Math.imul(ah3, bh8)) | 0;
              lo = (lo + Math.imul(al2, bl9)) | 0;
              mid = (mid + Math.imul(al2, bh9)) | 0;
              mid = (mid + Math.imul(ah2, bl9)) | 0;
              hi = (hi + Math.imul(ah2, bh9)) | 0;
              var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
              w11 &= 0x3ffffff;
              /* k = 12 */
              lo = Math.imul(al9, bl3);
              mid = Math.imul(al9, bh3);
              mid = (mid + Math.imul(ah9, bl3)) | 0;
              hi = Math.imul(ah9, bh3);
              lo = (lo + Math.imul(al8, bl4)) | 0;
              mid = (mid + Math.imul(al8, bh4)) | 0;
              mid = (mid + Math.imul(ah8, bl4)) | 0;
              hi = (hi + Math.imul(ah8, bh4)) | 0;
              lo = (lo + Math.imul(al7, bl5)) | 0;
              mid = (mid + Math.imul(al7, bh5)) | 0;
              mid = (mid + Math.imul(ah7, bl5)) | 0;
              hi = (hi + Math.imul(ah7, bh5)) | 0;
              lo = (lo + Math.imul(al6, bl6)) | 0;
              mid = (mid + Math.imul(al6, bh6)) | 0;
              mid = (mid + Math.imul(ah6, bl6)) | 0;
              hi = (hi + Math.imul(ah6, bh6)) | 0;
              lo = (lo + Math.imul(al5, bl7)) | 0;
              mid = (mid + Math.imul(al5, bh7)) | 0;
              mid = (mid + Math.imul(ah5, bl7)) | 0;
              hi = (hi + Math.imul(ah5, bh7)) | 0;
              lo = (lo + Math.imul(al4, bl8)) | 0;
              mid = (mid + Math.imul(al4, bh8)) | 0;
              mid = (mid + Math.imul(ah4, bl8)) | 0;
              hi = (hi + Math.imul(ah4, bh8)) | 0;
              lo = (lo + Math.imul(al3, bl9)) | 0;
              mid = (mid + Math.imul(al3, bh9)) | 0;
              mid = (mid + Math.imul(ah3, bl9)) | 0;
              hi = (hi + Math.imul(ah3, bh9)) | 0;
              var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
              w12 &= 0x3ffffff;
              /* k = 13 */
              lo = Math.imul(al9, bl4);
              mid = Math.imul(al9, bh4);
              mid = (mid + Math.imul(ah9, bl4)) | 0;
              hi = Math.imul(ah9, bh4);
              lo = (lo + Math.imul(al8, bl5)) | 0;
              mid = (mid + Math.imul(al8, bh5)) | 0;
              mid = (mid + Math.imul(ah8, bl5)) | 0;
              hi = (hi + Math.imul(ah8, bh5)) | 0;
              lo = (lo + Math.imul(al7, bl6)) | 0;
              mid = (mid + Math.imul(al7, bh6)) | 0;
              mid = (mid + Math.imul(ah7, bl6)) | 0;
              hi = (hi + Math.imul(ah7, bh6)) | 0;
              lo = (lo + Math.imul(al6, bl7)) | 0;
              mid = (mid + Math.imul(al6, bh7)) | 0;
              mid = (mid + Math.imul(ah6, bl7)) | 0;
              hi = (hi + Math.imul(ah6, bh7)) | 0;
              lo = (lo + Math.imul(al5, bl8)) | 0;
              mid = (mid + Math.imul(al5, bh8)) | 0;
              mid = (mid + Math.imul(ah5, bl8)) | 0;
              hi = (hi + Math.imul(ah5, bh8)) | 0;
              lo = (lo + Math.imul(al4, bl9)) | 0;
              mid = (mid + Math.imul(al4, bh9)) | 0;
              mid = (mid + Math.imul(ah4, bl9)) | 0;
              hi = (hi + Math.imul(ah4, bh9)) | 0;
              var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
              w13 &= 0x3ffffff;
              /* k = 14 */
              lo = Math.imul(al9, bl5);
              mid = Math.imul(al9, bh5);
              mid = (mid + Math.imul(ah9, bl5)) | 0;
              hi = Math.imul(ah9, bh5);
              lo = (lo + Math.imul(al8, bl6)) | 0;
              mid = (mid + Math.imul(al8, bh6)) | 0;
              mid = (mid + Math.imul(ah8, bl6)) | 0;
              hi = (hi + Math.imul(ah8, bh6)) | 0;
              lo = (lo + Math.imul(al7, bl7)) | 0;
              mid = (mid + Math.imul(al7, bh7)) | 0;
              mid = (mid + Math.imul(ah7, bl7)) | 0;
              hi = (hi + Math.imul(ah7, bh7)) | 0;
              lo = (lo + Math.imul(al6, bl8)) | 0;
              mid = (mid + Math.imul(al6, bh8)) | 0;
              mid = (mid + Math.imul(ah6, bl8)) | 0;
              hi = (hi + Math.imul(ah6, bh8)) | 0;
              lo = (lo + Math.imul(al5, bl9)) | 0;
              mid = (mid + Math.imul(al5, bh9)) | 0;
              mid = (mid + Math.imul(ah5, bl9)) | 0;
              hi = (hi + Math.imul(ah5, bh9)) | 0;
              var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
              w14 &= 0x3ffffff;
              /* k = 15 */
              lo = Math.imul(al9, bl6);
              mid = Math.imul(al9, bh6);
              mid = (mid + Math.imul(ah9, bl6)) | 0;
              hi = Math.imul(ah9, bh6);
              lo = (lo + Math.imul(al8, bl7)) | 0;
              mid = (mid + Math.imul(al8, bh7)) | 0;
              mid = (mid + Math.imul(ah8, bl7)) | 0;
              hi = (hi + Math.imul(ah8, bh7)) | 0;
              lo = (lo + Math.imul(al7, bl8)) | 0;
              mid = (mid + Math.imul(al7, bh8)) | 0;
              mid = (mid + Math.imul(ah7, bl8)) | 0;
              hi = (hi + Math.imul(ah7, bh8)) | 0;
              lo = (lo + Math.imul(al6, bl9)) | 0;
              mid = (mid + Math.imul(al6, bh9)) | 0;
              mid = (mid + Math.imul(ah6, bl9)) | 0;
              hi = (hi + Math.imul(ah6, bh9)) | 0;
              var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
              w15 &= 0x3ffffff;
              /* k = 16 */
              lo = Math.imul(al9, bl7);
              mid = Math.imul(al9, bh7);
              mid = (mid + Math.imul(ah9, bl7)) | 0;
              hi = Math.imul(ah9, bh7);
              lo = (lo + Math.imul(al8, bl8)) | 0;
              mid = (mid + Math.imul(al8, bh8)) | 0;
              mid = (mid + Math.imul(ah8, bl8)) | 0;
              hi = (hi + Math.imul(ah8, bh8)) | 0;
              lo = (lo + Math.imul(al7, bl9)) | 0;
              mid = (mid + Math.imul(al7, bh9)) | 0;
              mid = (mid + Math.imul(ah7, bl9)) | 0;
              hi = (hi + Math.imul(ah7, bh9)) | 0;
              var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
              w16 &= 0x3ffffff;
              /* k = 17 */
              lo = Math.imul(al9, bl8);
              mid = Math.imul(al9, bh8);
              mid = (mid + Math.imul(ah9, bl8)) | 0;
              hi = Math.imul(ah9, bh8);
              lo = (lo + Math.imul(al8, bl9)) | 0;
              mid = (mid + Math.imul(al8, bh9)) | 0;
              mid = (mid + Math.imul(ah8, bl9)) | 0;
              hi = (hi + Math.imul(ah8, bh9)) | 0;
              var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
              w17 &= 0x3ffffff;
              /* k = 18 */
              lo = Math.imul(al9, bl9);
              mid = Math.imul(al9, bh9);
              mid = (mid + Math.imul(ah9, bl9)) | 0;
              hi = Math.imul(ah9, bh9);
              var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
              w18 &= 0x3ffffff;
              o[0] = w0;
              o[1] = w1;
              o[2] = w2;
              o[3] = w3;
              o[4] = w4;
              o[5] = w5;
              o[6] = w6;
              o[7] = w7;
              o[8] = w8;
              o[9] = w9;
              o[10] = w10;
              o[11] = w11;
              o[12] = w12;
              o[13] = w13;
              o[14] = w14;
              o[15] = w15;
              o[16] = w16;
              o[17] = w17;
              o[18] = w18;
              if (c !== 0) {
                o[19] = c;
                out.length++;
              }
              return out;
            };

            // Polyfill comb
            if (!Math.imul) {
              comb10MulTo = smallMulTo;
            }

            function bigMulTo(self, num, out) {
              out.negative = num.negative ^ self.negative;
              out.length = self.length + num.length;

              var carry = 0;
              var hncarry = 0;
              for (var k = 0; k < out.length - 1; k++) {
                // Sum all words with the same `i + j = k` and accumulate `ncarry`,
                // note that ncarry could be >= 0x3ffffff
                var ncarry = hncarry;
                hncarry = 0;
                var rword = carry & 0x3ffffff;
                var maxJ = Math.min(k, num.length - 1);
                for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                  var i = k - j;
                  var a = self.words[i] | 0;
                  var b = num.words[j] | 0;
                  var r = a * b;

                  var lo = r & 0x3ffffff;
                  ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
                  lo = (lo + rword) | 0;
                  rword = lo & 0x3ffffff;
                  ncarry = (ncarry + (lo >>> 26)) | 0;

                  hncarry += ncarry >>> 26;
                  ncarry &= 0x3ffffff;
                }
                out.words[k] = rword;
                carry = ncarry;
                ncarry = hncarry;
              }
              if (carry !== 0) {
                out.words[k] = carry;
              } else {
                out.length--;
              }

              return out.strip();
            }

            function jumboMulTo(self, num, out) {
              var fftm = new FFTM();
              return fftm.mulp(self, num, out);
            }

            BN.prototype.mulTo = function mulTo(num, out) {
              var res;
              var len = this.length + num.length;
              if (this.length === 10 && num.length === 10) {
                res = comb10MulTo(this, num, out);
              } else if (len < 63) {
                res = smallMulTo(this, num, out);
              } else if (len < 1024) {
                res = bigMulTo(this, num, out);
              } else {
                res = jumboMulTo(this, num, out);
              }

              return res;
            };

            // Cooley-Tukey algorithm for FFT
            // slightly revisited to rely on looping instead of recursion

            function FFTM(x, y) {
              this.x = x;
              this.y = y;
            }

            FFTM.prototype.makeRBT = function makeRBT(N) {
              var t = new Array(N);
              var l = BN.prototype._countBits(N) - 1;
              for (var i = 0; i < N; i++) {
                t[i] = this.revBin(i, l, N);
              }

              return t;
            };

            // Returns binary-reversed representation of `x`
            FFTM.prototype.revBin = function revBin(x, l, N) {
              if (x === 0 || x === N - 1) return x;

              var rb = 0;
              for (var i = 0; i < l; i++) {
                rb |= (x & 1) << (l - i - 1);
                x >>= 1;
              }

              return rb;
            };

            // Performs "tweedling" phase, therefore 'emulating'
            // behaviour of the recursive algorithm
            FFTM.prototype.permute = function permute(
              rbt,
              rws,
              iws,
              rtws,
              itws,
              N
            ) {
              for (var i = 0; i < N; i++) {
                rtws[i] = rws[rbt[i]];
                itws[i] = iws[rbt[i]];
              }
            };

            FFTM.prototype.transform = function transform(
              rws,
              iws,
              rtws,
              itws,
              N,
              rbt
            ) {
              this.permute(rbt, rws, iws, rtws, itws, N);

              for (var s = 1; s < N; s <<= 1) {
                var l = s << 1;

                var rtwdf = Math.cos((2 * Math.PI) / l);
                var itwdf = Math.sin((2 * Math.PI) / l);

                for (var p = 0; p < N; p += l) {
                  var rtwdf_ = rtwdf;
                  var itwdf_ = itwdf;

                  for (var j = 0; j < s; j++) {
                    var re = rtws[p + j];
                    var ie = itws[p + j];

                    var ro = rtws[p + j + s];
                    var io = itws[p + j + s];

                    var rx = rtwdf_ * ro - itwdf_ * io;

                    io = rtwdf_ * io + itwdf_ * ro;
                    ro = rx;

                    rtws[p + j] = re + ro;
                    itws[p + j] = ie + io;

                    rtws[p + j + s] = re - ro;
                    itws[p + j + s] = ie - io;

                    /* jshint maxdepth : false */
                    if (j !== l) {
                      rx = rtwdf * rtwdf_ - itwdf * itwdf_;

                      itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                      rtwdf_ = rx;
                    }
                  }
                }
              }
            };

            FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
              var N = Math.max(m, n) | 1;
              var odd = N & 1;
              var i = 0;
              for (N = (N / 2) | 0; N; N = N >>> 1) {
                i++;
              }

              return 1 << (i + 1 + odd);
            };

            FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
              if (N <= 1) return;

              for (var i = 0; i < N / 2; i++) {
                var t = rws[i];

                rws[i] = rws[N - i - 1];
                rws[N - i - 1] = t;

                t = iws[i];

                iws[i] = -iws[N - i - 1];
                iws[N - i - 1] = -t;
              }
            };

            FFTM.prototype.normalize13b = function normalize13b(ws, N) {
              var carry = 0;
              for (var i = 0; i < N / 2; i++) {
                var w =
                  Math.round(ws[2 * i + 1] / N) * 0x2000 +
                  Math.round(ws[2 * i] / N) +
                  carry;

                ws[i] = w & 0x3ffffff;

                if (w < 0x4000000) {
                  carry = 0;
                } else {
                  carry = (w / 0x4000000) | 0;
                }
              }

              return ws;
            };

            FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
              var carry = 0;
              for (var i = 0; i < len; i++) {
                carry = carry + (ws[i] | 0);

                rws[2 * i] = carry & 0x1fff;
                carry = carry >>> 13;
                rws[2 * i + 1] = carry & 0x1fff;
                carry = carry >>> 13;
              }

              // Pad with zeroes
              for (i = 2 * len; i < N; ++i) {
                rws[i] = 0;
              }

              assert(carry === 0);
              assert((carry & ~0x1fff) === 0);
            };

            FFTM.prototype.stub = function stub(N) {
              var ph = new Array(N);
              for (var i = 0; i < N; i++) {
                ph[i] = 0;
              }

              return ph;
            };

            FFTM.prototype.mulp = function mulp(x, y, out) {
              var N = 2 * this.guessLen13b(x.length, y.length);

              var rbt = this.makeRBT(N);

              var _ = this.stub(N);

              var rws = new Array(N);
              var rwst = new Array(N);
              var iwst = new Array(N);

              var nrws = new Array(N);
              var nrwst = new Array(N);
              var niwst = new Array(N);

              var rmws = out.words;
              rmws.length = N;

              this.convert13b(x.words, x.length, rws, N);
              this.convert13b(y.words, y.length, nrws, N);

              this.transform(rws, _, rwst, iwst, N, rbt);
              this.transform(nrws, _, nrwst, niwst, N, rbt);

              for (var i = 0; i < N; i++) {
                var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
                iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
                rwst[i] = rx;
              }

              this.conjugate(rwst, iwst, N);
              this.transform(rwst, iwst, rmws, _, N, rbt);
              this.conjugate(rmws, _, N);
              this.normalize13b(rmws, N);

              out.negative = x.negative ^ y.negative;
              out.length = x.length + y.length;
              return out.strip();
            };

            // Multiply `this` by `num`
            BN.prototype.mul = function mul(num) {
              var out = new BN(null);
              out.words = new Array(this.length + num.length);
              return this.mulTo(num, out);
            };

            // Multiply employing FFT
            BN.prototype.mulf = function mulf(num) {
              var out = new BN(null);
              out.words = new Array(this.length + num.length);
              return jumboMulTo(this, num, out);
            };

            // In-place Multiplication
            BN.prototype.imul = function imul(num) {
              return this.clone().mulTo(num, this);
            };

            BN.prototype.imuln = function imuln(num) {
              assert(typeof num === 'number');
              assert(num < 0x4000000);

              // Carry
              var carry = 0;
              for (var i = 0; i < this.length; i++) {
                var w = (this.words[i] | 0) * num;
                var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
                carry >>= 26;
                carry += (w / 0x4000000) | 0;
                // NOTE: lo is 27bit maximum
                carry += lo >>> 26;
                this.words[i] = lo & 0x3ffffff;
              }

              if (carry !== 0) {
                this.words[i] = carry;
                this.length++;
              }

              return this;
            };

            BN.prototype.muln = function muln(num) {
              return this.clone().imuln(num);
            };

            // `this` * `this`
            BN.prototype.sqr = function sqr() {
              return this.mul(this);
            };

            // `this` * `this` in-place
            BN.prototype.isqr = function isqr() {
              return this.imul(this.clone());
            };

            // Math.pow(`this`, `num`)
            BN.prototype.pow = function pow(num) {
              var w = toBitArray(num);
              if (w.length === 0) return new BN(1);

              // Skip leading zeroes
              var res = this;
              for (var i = 0; i < w.length; i++, res = res.sqr()) {
                if (w[i] !== 0) break;
              }

              if (++i < w.length) {
                for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
                  if (w[i] === 0) continue;

                  res = res.mul(q);
                }
              }

              return res;
            };

            // Shift-left in-place
            BN.prototype.iushln = function iushln(bits) {
              assert(typeof bits === 'number' && bits >= 0);
              var r = bits % 26;
              var s = (bits - r) / 26;
              var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
              var i;

              if (r !== 0) {
                var carry = 0;

                for (i = 0; i < this.length; i++) {
                  var newCarry = this.words[i] & carryMask;
                  var c = ((this.words[i] | 0) - newCarry) << r;
                  this.words[i] = c | carry;
                  carry = newCarry >>> (26 - r);
                }

                if (carry) {
                  this.words[i] = carry;
                  this.length++;
                }
              }

              if (s !== 0) {
                for (i = this.length - 1; i >= 0; i--) {
                  this.words[i + s] = this.words[i];
                }

                for (i = 0; i < s; i++) {
                  this.words[i] = 0;
                }

                this.length += s;
              }

              return this.strip();
            };

            BN.prototype.ishln = function ishln(bits) {
              // TODO(indutny): implement me
              assert(this.negative === 0);
              return this.iushln(bits);
            };

            // Shift-right in-place
            // NOTE: `hint` is a lowest bit before trailing zeroes
            // NOTE: if `extended` is present - it will be filled with destroyed bits
            BN.prototype.iushrn = function iushrn(bits, hint, extended) {
              assert(typeof bits === 'number' && bits >= 0);
              var h;
              if (hint) {
                h = (hint - (hint % 26)) / 26;
              } else {
                h = 0;
              }

              var r = bits % 26;
              var s = Math.min((bits - r) / 26, this.length);
              var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
              var maskedWords = extended;

              h -= s;
              h = Math.max(0, h);

              // Extended mode, copy masked part
              if (maskedWords) {
                for (var i = 0; i < s; i++) {
                  maskedWords.words[i] = this.words[i];
                }
                maskedWords.length = s;
              }

              if (s === 0) {
                // No-op, we should not move anything at all
              } else if (this.length > s) {
                this.length -= s;
                for (i = 0; i < this.length; i++) {
                  this.words[i] = this.words[i + s];
                }
              } else {
                this.words[0] = 0;
                this.length = 1;
              }

              var carry = 0;
              for (
                i = this.length - 1;
                i >= 0 && (carry !== 0 || i >= h);
                i--
              ) {
                var word = this.words[i] | 0;
                this.words[i] = (carry << (26 - r)) | (word >>> r);
                carry = word & mask;
              }

              // Push carried bits as a mask
              if (maskedWords && carry !== 0) {
                maskedWords.words[maskedWords.length++] = carry;
              }

              if (this.length === 0) {
                this.words[0] = 0;
                this.length = 1;
              }

              return this.strip();
            };

            BN.prototype.ishrn = function ishrn(bits, hint, extended) {
              // TODO(indutny): implement me
              assert(this.negative === 0);
              return this.iushrn(bits, hint, extended);
            };

            // Shift-left
            BN.prototype.shln = function shln(bits) {
              return this.clone().ishln(bits);
            };

            BN.prototype.ushln = function ushln(bits) {
              return this.clone().iushln(bits);
            };

            // Shift-right
            BN.prototype.shrn = function shrn(bits) {
              return this.clone().ishrn(bits);
            };

            BN.prototype.ushrn = function ushrn(bits) {
              return this.clone().iushrn(bits);
            };

            // Test if n bit is set
            BN.prototype.testn = function testn(bit) {
              assert(typeof bit === 'number' && bit >= 0);
              var r = bit % 26;
              var s = (bit - r) / 26;
              var q = 1 << r;

              // Fast case: bit is much higher than all existing words
              if (this.length <= s) return false;

              // Check bit and return
              var w = this.words[s];

              return !!(w & q);
            };

            // Return only lowers bits of number (in-place)
            BN.prototype.imaskn = function imaskn(bits) {
              assert(typeof bits === 'number' && bits >= 0);
              var r = bits % 26;
              var s = (bits - r) / 26;

              assert(
                this.negative === 0,
                'imaskn works only with positive numbers'
              );

              if (this.length <= s) {
                return this;
              }

              if (r !== 0) {
                s++;
              }
              this.length = Math.min(s, this.length);

              if (r !== 0) {
                var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
                this.words[this.length - 1] &= mask;
              }

              return this.strip();
            };

            // Return only lowers bits of number
            BN.prototype.maskn = function maskn(bits) {
              return this.clone().imaskn(bits);
            };

            // Add plain number `num` to `this`
            BN.prototype.iaddn = function iaddn(num) {
              assert(typeof num === 'number');
              assert(num < 0x4000000);
              if (num < 0) return this.isubn(-num);

              // Possible sign change
              if (this.negative !== 0) {
                if (this.length === 1 && (this.words[0] | 0) < num) {
                  this.words[0] = num - (this.words[0] | 0);
                  this.negative = 0;
                  return this;
                }

                this.negative = 0;
                this.isubn(num);
                this.negative = 1;
                return this;
              }

              // Add without checks
              return this._iaddn(num);
            };

            BN.prototype._iaddn = function _iaddn(num) {
              this.words[0] += num;

              // Carry
              for (
                var i = 0;
                i < this.length && this.words[i] >= 0x4000000;
                i++
              ) {
                this.words[i] -= 0x4000000;
                if (i === this.length - 1) {
                  this.words[i + 1] = 1;
                } else {
                  this.words[i + 1]++;
                }
              }
              this.length = Math.max(this.length, i + 1);

              return this;
            };

            // Subtract plain number `num` from `this`
            BN.prototype.isubn = function isubn(num) {
              assert(typeof num === 'number');
              assert(num < 0x4000000);
              if (num < 0) return this.iaddn(-num);

              if (this.negative !== 0) {
                this.negative = 0;
                this.iaddn(num);
                this.negative = 1;
                return this;
              }

              this.words[0] -= num;

              if (this.length === 1 && this.words[0] < 0) {
                this.words[0] = -this.words[0];
                this.negative = 1;
              } else {
                // Carry
                for (var i = 0; i < this.length && this.words[i] < 0; i++) {
                  this.words[i] += 0x4000000;
                  this.words[i + 1] -= 1;
                }
              }

              return this.strip();
            };

            BN.prototype.addn = function addn(num) {
              return this.clone().iaddn(num);
            };

            BN.prototype.subn = function subn(num) {
              return this.clone().isubn(num);
            };

            BN.prototype.iabs = function iabs() {
              this.negative = 0;

              return this;
            };

            BN.prototype.abs = function abs() {
              return this.clone().iabs();
            };

            BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
              var len = num.length + shift;
              var i;

              this._expand(len);

              var w;
              var carry = 0;
              for (i = 0; i < num.length; i++) {
                w = (this.words[i + shift] | 0) + carry;
                var right = (num.words[i] | 0) * mul;
                w -= right & 0x3ffffff;
                carry = (w >> 26) - ((right / 0x4000000) | 0);
                this.words[i + shift] = w & 0x3ffffff;
              }
              for (; i < this.length - shift; i++) {
                w = (this.words[i + shift] | 0) + carry;
                carry = w >> 26;
                this.words[i + shift] = w & 0x3ffffff;
              }

              if (carry === 0) return this.strip();

              // Subtraction overflow
              assert(carry === -1);
              carry = 0;
              for (i = 0; i < this.length; i++) {
                w = -(this.words[i] | 0) + carry;
                carry = w >> 26;
                this.words[i] = w & 0x3ffffff;
              }
              this.negative = 1;

              return this.strip();
            };

            BN.prototype._wordDiv = function _wordDiv(num, mode) {
              var shift = this.length - num.length;

              var a = this.clone();
              var b = num;

              // Normalize
              var bhi = b.words[b.length - 1] | 0;
              var bhiBits = this._countBits(bhi);
              shift = 26 - bhiBits;
              if (shift !== 0) {
                b = b.ushln(shift);
                a.iushln(shift);
                bhi = b.words[b.length - 1] | 0;
              }

              // Initialize quotient
              var m = a.length - b.length;
              var q;

              if (mode !== 'mod') {
                q = new BN(null);
                q.length = m + 1;
                q.words = new Array(q.length);
                for (var i = 0; i < q.length; i++) {
                  q.words[i] = 0;
                }
              }

              var diff = a.clone()._ishlnsubmul(b, 1, m);
              if (diff.negative === 0) {
                a = diff;
                if (q) {
                  q.words[m] = 1;
                }
              }

              for (var j = m - 1; j >= 0; j--) {
                var qj =
                  (a.words[b.length + j] | 0) * 0x4000000 +
                  (a.words[b.length + j - 1] | 0);

                // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
                // (0x7ffffff)
                qj = Math.min((qj / bhi) | 0, 0x3ffffff);

                a._ishlnsubmul(b, qj, j);
                while (a.negative !== 0) {
                  qj--;
                  a.negative = 0;
                  a._ishlnsubmul(b, 1, j);
                  if (!a.isZero()) {
                    a.negative ^= 1;
                  }
                }
                if (q) {
                  q.words[j] = qj;
                }
              }
              if (q) {
                q.strip();
              }
              a.strip();

              // Denormalize
              if (mode !== 'div' && shift !== 0) {
                a.iushrn(shift);
              }

              return {
                div: q || null,
                mod: a,
              };
            };

            // NOTE: 1) `mode` can be set to `mod` to request mod only,
            //       to `div` to request div only, or be absent to
            //       request both div & mod
            //       2) `positive` is true if unsigned mod is requested
            BN.prototype.divmod = function divmod(num, mode, positive) {
              assert(!num.isZero());

              if (this.isZero()) {
                return {
                  div: new BN(0),
                  mod: new BN(0),
                };
              }

              var div, mod, res;
              if (this.negative !== 0 && num.negative === 0) {
                res = this.neg().divmod(num, mode);

                if (mode !== 'mod') {
                  div = res.div.neg();
                }

                if (mode !== 'div') {
                  mod = res.mod.neg();
                  if (positive && mod.negative !== 0) {
                    mod.iadd(num);
                  }
                }

                return {
                  div: div,
                  mod: mod,
                };
              }

              if (this.negative === 0 && num.negative !== 0) {
                res = this.divmod(num.neg(), mode);

                if (mode !== 'mod') {
                  div = res.div.neg();
                }

                return {
                  div: div,
                  mod: res.mod,
                };
              }

              if ((this.negative & num.negative) !== 0) {
                res = this.neg().divmod(num.neg(), mode);

                if (mode !== 'div') {
                  mod = res.mod.neg();
                  if (positive && mod.negative !== 0) {
                    mod.isub(num);
                  }
                }

                return {
                  div: res.div,
                  mod: mod,
                };
              }

              // Both numbers are positive at this point

              // Strip both numbers to approximate shift value
              if (num.length > this.length || this.cmp(num) < 0) {
                return {
                  div: new BN(0),
                  mod: this,
                };
              }

              // Very short reduction
              if (num.length === 1) {
                if (mode === 'div') {
                  return {
                    div: this.divn(num.words[0]),
                    mod: null,
                  };
                }

                if (mode === 'mod') {
                  return {
                    div: null,
                    mod: new BN(this.modn(num.words[0])),
                  };
                }

                return {
                  div: this.divn(num.words[0]),
                  mod: new BN(this.modn(num.words[0])),
                };
              }

              return this._wordDiv(num, mode);
            };

            // Find `this` / `num`
            BN.prototype.div = function div(num) {
              return this.divmod(num, 'div', false).div;
            };

            // Find `this` % `num`
            BN.prototype.mod = function mod(num) {
              return this.divmod(num, 'mod', false).mod;
            };

            BN.prototype.umod = function umod(num) {
              return this.divmod(num, 'mod', true).mod;
            };

            // Find Round(`this` / `num`)
            BN.prototype.divRound = function divRound(num) {
              var dm = this.divmod(num);

              // Fast case - exact division
              if (dm.mod.isZero()) return dm.div;

              var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

              var half = num.ushrn(1);
              var r2 = num.andln(1);
              var cmp = mod.cmp(half);

              // Round down
              if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;

              // Round up
              return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
            };

            BN.prototype.modn = function modn(num) {
              assert(num <= 0x3ffffff);
              var p = (1 << 26) % num;

              var acc = 0;
              for (var i = this.length - 1; i >= 0; i--) {
                acc = (p * acc + (this.words[i] | 0)) % num;
              }

              return acc;
            };

            // In-place division by number
            BN.prototype.idivn = function idivn(num) {
              assert(num <= 0x3ffffff);

              var carry = 0;
              for (var i = this.length - 1; i >= 0; i--) {
                var w = (this.words[i] | 0) + carry * 0x4000000;
                this.words[i] = (w / num) | 0;
                carry = w % num;
              }

              return this.strip();
            };

            BN.prototype.divn = function divn(num) {
              return this.clone().idivn(num);
            };

            BN.prototype.egcd = function egcd(p) {
              assert(p.negative === 0);
              assert(!p.isZero());

              var x = this;
              var y = p.clone();

              if (x.negative !== 0) {
                x = x.umod(p);
              } else {
                x = x.clone();
              }

              // A * x + B * y = x
              var A = new BN(1);
              var B = new BN(0);

              // C * x + D * y = y
              var C = new BN(0);
              var D = new BN(1);

              var g = 0;

              while (x.isEven() && y.isEven()) {
                x.iushrn(1);
                y.iushrn(1);
                ++g;
              }

              var yp = y.clone();
              var xp = x.clone();

              while (!x.isZero()) {
                for (
                  var i = 0, im = 1;
                  (x.words[0] & im) === 0 && i < 26;
                  ++i, im <<= 1
                );
                if (i > 0) {
                  x.iushrn(i);
                  while (i-- > 0) {
                    if (A.isOdd() || B.isOdd()) {
                      A.iadd(yp);
                      B.isub(xp);
                    }

                    A.iushrn(1);
                    B.iushrn(1);
                  }
                }

                for (
                  var j = 0, jm = 1;
                  (y.words[0] & jm) === 0 && j < 26;
                  ++j, jm <<= 1
                );
                if (j > 0) {
                  y.iushrn(j);
                  while (j-- > 0) {
                    if (C.isOdd() || D.isOdd()) {
                      C.iadd(yp);
                      D.isub(xp);
                    }

                    C.iushrn(1);
                    D.iushrn(1);
                  }
                }

                if (x.cmp(y) >= 0) {
                  x.isub(y);
                  A.isub(C);
                  B.isub(D);
                } else {
                  y.isub(x);
                  C.isub(A);
                  D.isub(B);
                }
              }

              return {
                a: C,
                b: D,
                gcd: y.iushln(g),
              };
            };

            // This is reduced incarnation of the binary EEA
            // above, designated to invert members of the
            // _prime_ fields F(p) at a maximal speed
            BN.prototype._invmp = function _invmp(p) {
              assert(p.negative === 0);
              assert(!p.isZero());

              var a = this;
              var b = p.clone();

              if (a.negative !== 0) {
                a = a.umod(p);
              } else {
                a = a.clone();
              }

              var x1 = new BN(1);
              var x2 = new BN(0);

              var delta = b.clone();

              while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
                for (
                  var i = 0, im = 1;
                  (a.words[0] & im) === 0 && i < 26;
                  ++i, im <<= 1
                );
                if (i > 0) {
                  a.iushrn(i);
                  while (i-- > 0) {
                    if (x1.isOdd()) {
                      x1.iadd(delta);
                    }

                    x1.iushrn(1);
                  }
                }

                for (
                  var j = 0, jm = 1;
                  (b.words[0] & jm) === 0 && j < 26;
                  ++j, jm <<= 1
                );
                if (j > 0) {
                  b.iushrn(j);
                  while (j-- > 0) {
                    if (x2.isOdd()) {
                      x2.iadd(delta);
                    }

                    x2.iushrn(1);
                  }
                }

                if (a.cmp(b) >= 0) {
                  a.isub(b);
                  x1.isub(x2);
                } else {
                  b.isub(a);
                  x2.isub(x1);
                }
              }

              var res;
              if (a.cmpn(1) === 0) {
                res = x1;
              } else {
                res = x2;
              }

              if (res.cmpn(0) < 0) {
                res.iadd(p);
              }

              return res;
            };

            BN.prototype.gcd = function gcd(num) {
              if (this.isZero()) return num.abs();
              if (num.isZero()) return this.abs();

              var a = this.clone();
              var b = num.clone();
              a.negative = 0;
              b.negative = 0;

              // Remove common factor of two
              for (var shift = 0; a.isEven() && b.isEven(); shift++) {
                a.iushrn(1);
                b.iushrn(1);
              }

              do {
                while (a.isEven()) {
                  a.iushrn(1);
                }
                while (b.isEven()) {
                  b.iushrn(1);
                }

                var r = a.cmp(b);
                if (r < 0) {
                  // Swap `a` and `b` to make `a` always bigger than `b`
                  var t = a;
                  a = b;
                  b = t;
                } else if (r === 0 || b.cmpn(1) === 0) {
                  break;
                }

                a.isub(b);
              } while (true);

              return b.iushln(shift);
            };

            // Invert number in the field F(num)
            BN.prototype.invm = function invm(num) {
              return this.egcd(num).a.umod(num);
            };

            BN.prototype.isEven = function isEven() {
              return (this.words[0] & 1) === 0;
            };

            BN.prototype.isOdd = function isOdd() {
              return (this.words[0] & 1) === 1;
            };

            // And first word and num
            BN.prototype.andln = function andln(num) {
              return this.words[0] & num;
            };

            // Increment at the bit position in-line
            BN.prototype.bincn = function bincn(bit) {
              assert(typeof bit === 'number');
              var r = bit % 26;
              var s = (bit - r) / 26;
              var q = 1 << r;

              // Fast case: bit is much higher than all existing words
              if (this.length <= s) {
                this._expand(s + 1);
                this.words[s] |= q;
                return this;
              }

              // Add bit and propagate, if needed
              var carry = q;
              for (var i = s; carry !== 0 && i < this.length; i++) {
                var w = this.words[i] | 0;
                w += carry;
                carry = w >>> 26;
                w &= 0x3ffffff;
                this.words[i] = w;
              }
              if (carry !== 0) {
                this.words[i] = carry;
                this.length++;
              }
              return this;
            };

            BN.prototype.isZero = function isZero() {
              return this.length === 1 && this.words[0] === 0;
            };

            BN.prototype.cmpn = function cmpn(num) {
              var negative = num < 0;

              if (this.negative !== 0 && !negative) return -1;
              if (this.negative === 0 && negative) return 1;

              this.strip();

              var res;
              if (this.length > 1) {
                res = 1;
              } else {
                if (negative) {
                  num = -num;
                }

                assert(num <= 0x3ffffff, 'Number is too big');

                var w = this.words[0] | 0;
                res = w === num ? 0 : w < num ? -1 : 1;
              }
              if (this.negative !== 0) return -res | 0;
              return res;
            };

            // Compare two numbers and return:
            // 1 - if `this` > `num`
            // 0 - if `this` == `num`
            // -1 - if `this` < `num`
            BN.prototype.cmp = function cmp(num) {
              if (this.negative !== 0 && num.negative === 0) return -1;
              if (this.negative === 0 && num.negative !== 0) return 1;

              var res = this.ucmp(num);
              if (this.negative !== 0) return -res | 0;
              return res;
            };

            // Unsigned comparison
            BN.prototype.ucmp = function ucmp(num) {
              // At this point both numbers have the same sign
              if (this.length > num.length) return 1;
              if (this.length < num.length) return -1;

              var res = 0;
              for (var i = this.length - 1; i >= 0; i--) {
                var a = this.words[i] | 0;
                var b = num.words[i] | 0;

                if (a === b) continue;
                if (a < b) {
                  res = -1;
                } else if (a > b) {
                  res = 1;
                }
                break;
              }
              return res;
            };

            BN.prototype.gtn = function gtn(num) {
              return this.cmpn(num) === 1;
            };

            BN.prototype.gt = function gt(num) {
              return this.cmp(num) === 1;
            };

            BN.prototype.gten = function gten(num) {
              return this.cmpn(num) >= 0;
            };

            BN.prototype.gte = function gte(num) {
              return this.cmp(num) >= 0;
            };

            BN.prototype.ltn = function ltn(num) {
              return this.cmpn(num) === -1;
            };

            BN.prototype.lt = function lt(num) {
              return this.cmp(num) === -1;
            };

            BN.prototype.lten = function lten(num) {
              return this.cmpn(num) <= 0;
            };

            BN.prototype.lte = function lte(num) {
              return this.cmp(num) <= 0;
            };

            BN.prototype.eqn = function eqn(num) {
              return this.cmpn(num) === 0;
            };

            BN.prototype.eq = function eq(num) {
              return this.cmp(num) === 0;
            };

            //
            // A reduce context, could be using montgomery or something better, depending
            // on the `m` itself.
            //
            BN.red = function red(num) {
              return new Red(num);
            };

            BN.prototype.toRed = function toRed(ctx) {
              assert(!this.red, 'Already a number in reduction context');
              assert(this.negative === 0, 'red works only with positives');
              return ctx.convertTo(this)._forceRed(ctx);
            };

            BN.prototype.fromRed = function fromRed() {
              assert(
                this.red,
                'fromRed works only with numbers in reduction context'
              );
              return this.red.convertFrom(this);
            };

            BN.prototype._forceRed = function _forceRed(ctx) {
              this.red = ctx;
              return this;
            };

            BN.prototype.forceRed = function forceRed(ctx) {
              assert(!this.red, 'Already a number in reduction context');
              return this._forceRed(ctx);
            };

            BN.prototype.redAdd = function redAdd(num) {
              assert(this.red, 'redAdd works only with red numbers');
              return this.red.add(this, num);
            };

            BN.prototype.redIAdd = function redIAdd(num) {
              assert(this.red, 'redIAdd works only with red numbers');
              return this.red.iadd(this, num);
            };

            BN.prototype.redSub = function redSub(num) {
              assert(this.red, 'redSub works only with red numbers');
              return this.red.sub(this, num);
            };

            BN.prototype.redISub = function redISub(num) {
              assert(this.red, 'redISub works only with red numbers');
              return this.red.isub(this, num);
            };

            BN.prototype.redShl = function redShl(num) {
              assert(this.red, 'redShl works only with red numbers');
              return this.red.shl(this, num);
            };

            BN.prototype.redMul = function redMul(num) {
              assert(this.red, 'redMul works only with red numbers');
              this.red._verify2(this, num);
              return this.red.mul(this, num);
            };

            BN.prototype.redIMul = function redIMul(num) {
              assert(this.red, 'redMul works only with red numbers');
              this.red._verify2(this, num);
              return this.red.imul(this, num);
            };

            BN.prototype.redSqr = function redSqr() {
              assert(this.red, 'redSqr works only with red numbers');
              this.red._verify1(this);
              return this.red.sqr(this);
            };

            BN.prototype.redISqr = function redISqr() {
              assert(this.red, 'redISqr works only with red numbers');
              this.red._verify1(this);
              return this.red.isqr(this);
            };

            // Square root over p
            BN.prototype.redSqrt = function redSqrt() {
              assert(this.red, 'redSqrt works only with red numbers');
              this.red._verify1(this);
              return this.red.sqrt(this);
            };

            BN.prototype.redInvm = function redInvm() {
              assert(this.red, 'redInvm works only with red numbers');
              this.red._verify1(this);
              return this.red.invm(this);
            };

            // Return negative clone of `this` % `red modulo`
            BN.prototype.redNeg = function redNeg() {
              assert(this.red, 'redNeg works only with red numbers');
              this.red._verify1(this);
              return this.red.neg(this);
            };

            BN.prototype.redPow = function redPow(num) {
              assert(this.red && !num.red, 'redPow(normalNum)');
              this.red._verify1(this);
              return this.red.pow(this, num);
            };

            // Prime numbers with efficient reduction
            var primes = {
              k256: null,
              p224: null,
              p192: null,
              p25519: null,
            };

            // Pseudo-Mersenne prime
            function MPrime(name, p) {
              // P = 2 ^ N - K
              this.name = name;
              this.p = new BN(p, 16);
              this.n = this.p.bitLength();
              this.k = new BN(1).iushln(this.n).isub(this.p);

              this.tmp = this._tmp();
            }

            MPrime.prototype._tmp = function _tmp() {
              var tmp = new BN(null);
              tmp.words = new Array(Math.ceil(this.n / 13));
              return tmp;
            };

            MPrime.prototype.ireduce = function ireduce(num) {
              // Assumes that `num` is less than `P^2`
              // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
              var r = num;
              var rlen;

              do {
                this.split(r, this.tmp);
                r = this.imulK(r);
                r = r.iadd(this.tmp);
                rlen = r.bitLength();
              } while (rlen > this.n);

              var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
              if (cmp === 0) {
                r.words[0] = 0;
                r.length = 1;
              } else if (cmp > 0) {
                r.isub(this.p);
              } else {
                if (r.strip !== undefined) {
                  // r is BN v4 instance
                  r.strip();
                } else {
                  // r is BN v5 instance
                  r._strip();
                }
              }

              return r;
            };

            MPrime.prototype.split = function split(input, out) {
              input.iushrn(this.n, 0, out);
            };

            MPrime.prototype.imulK = function imulK(num) {
              return num.imul(this.k);
            };

            function K256() {
              MPrime.call(
                this,
                'k256',
                'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f'
              );
            }
            inherits(K256, MPrime);

            K256.prototype.split = function split(input, output) {
              // 256 = 9 * 26 + 22
              var mask = 0x3fffff;

              var outLen = Math.min(input.length, 9);
              for (var i = 0; i < outLen; i++) {
                output.words[i] = input.words[i];
              }
              output.length = outLen;

              if (input.length <= 9) {
                input.words[0] = 0;
                input.length = 1;
                return;
              }

              // Shift by 9 limbs
              var prev = input.words[9];
              output.words[output.length++] = prev & mask;

              for (i = 10; i < input.length; i++) {
                var next = input.words[i] | 0;
                input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
                prev = next;
              }
              prev >>>= 22;
              input.words[i - 10] = prev;
              if (prev === 0 && input.length > 10) {
                input.length -= 10;
              } else {
                input.length -= 9;
              }
            };

            K256.prototype.imulK = function imulK(num) {
              // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
              num.words[num.length] = 0;
              num.words[num.length + 1] = 0;
              num.length += 2;

              // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
              var lo = 0;
              for (var i = 0; i < num.length; i++) {
                var w = num.words[i] | 0;
                lo += w * 0x3d1;
                num.words[i] = lo & 0x3ffffff;
                lo = w * 0x40 + ((lo / 0x4000000) | 0);
              }

              // Fast length reduction
              if (num.words[num.length - 1] === 0) {
                num.length--;
                if (num.words[num.length - 1] === 0) {
                  num.length--;
                }
              }
              return num;
            };

            function P224() {
              MPrime.call(
                this,
                'p224',
                'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001'
              );
            }
            inherits(P224, MPrime);

            function P192() {
              MPrime.call(
                this,
                'p192',
                'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff'
              );
            }
            inherits(P192, MPrime);

            function P25519() {
              // 2 ^ 255 - 19
              MPrime.call(
                this,
                '25519',
                '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed'
              );
            }
            inherits(P25519, MPrime);

            P25519.prototype.imulK = function imulK(num) {
              // K = 0x13
              var carry = 0;
              for (var i = 0; i < num.length; i++) {
                var hi = (num.words[i] | 0) * 0x13 + carry;
                var lo = hi & 0x3ffffff;
                hi >>>= 26;

                num.words[i] = lo;
                carry = hi;
              }
              if (carry !== 0) {
                num.words[num.length++] = carry;
              }
              return num;
            };

            // Exported mostly for testing purposes, use plain name instead
            BN._prime = function prime(name) {
              // Cached version of prime
              if (primes[name]) return primes[name];

              var prime;
              if (name === 'k256') {
                prime = new K256();
              } else if (name === 'p224') {
                prime = new P224();
              } else if (name === 'p192') {
                prime = new P192();
              } else if (name === 'p25519') {
                prime = new P25519();
              } else {
                throw new Error('Unknown prime ' + name);
              }
              primes[name] = prime;

              return prime;
            };

            //
            // Base reduction engine
            //
            function Red(m) {
              if (typeof m === 'string') {
                var prime = BN._prime(m);
                this.m = prime.p;
                this.prime = prime;
              } else {
                assert(m.gtn(1), 'modulus must be greater than 1');
                this.m = m;
                this.prime = null;
              }
            }

            Red.prototype._verify1 = function _verify1(a) {
              assert(a.negative === 0, 'red works only with positives');
              assert(a.red, 'red works only with red numbers');
            };

            Red.prototype._verify2 = function _verify2(a, b) {
              assert(
                (a.negative | b.negative) === 0,
                'red works only with positives'
              );
              assert(
                a.red && a.red === b.red,
                'red works only with red numbers'
              );
            };

            Red.prototype.imod = function imod(a) {
              if (this.prime) return this.prime.ireduce(a)._forceRed(this);
              return a.umod(this.m)._forceRed(this);
            };

            Red.prototype.neg = function neg(a) {
              if (a.isZero()) {
                return a.clone();
              }

              return this.m.sub(a)._forceRed(this);
            };

            Red.prototype.add = function add(a, b) {
              this._verify2(a, b);

              var res = a.add(b);
              if (res.cmp(this.m) >= 0) {
                res.isub(this.m);
              }
              return res._forceRed(this);
            };

            Red.prototype.iadd = function iadd(a, b) {
              this._verify2(a, b);

              var res = a.iadd(b);
              if (res.cmp(this.m) >= 0) {
                res.isub(this.m);
              }
              return res;
            };

            Red.prototype.sub = function sub(a, b) {
              this._verify2(a, b);

              var res = a.sub(b);
              if (res.cmpn(0) < 0) {
                res.iadd(this.m);
              }
              return res._forceRed(this);
            };

            Red.prototype.isub = function isub(a, b) {
              this._verify2(a, b);

              var res = a.isub(b);
              if (res.cmpn(0) < 0) {
                res.iadd(this.m);
              }
              return res;
            };

            Red.prototype.shl = function shl(a, num) {
              this._verify1(a);
              return this.imod(a.ushln(num));
            };

            Red.prototype.imul = function imul(a, b) {
              this._verify2(a, b);
              return this.imod(a.imul(b));
            };

            Red.prototype.mul = function mul(a, b) {
              this._verify2(a, b);
              return this.imod(a.mul(b));
            };

            Red.prototype.isqr = function isqr(a) {
              return this.imul(a, a.clone());
            };

            Red.prototype.sqr = function sqr(a) {
              return this.mul(a, a);
            };

            Red.prototype.sqrt = function sqrt(a) {
              if (a.isZero()) return a.clone();

              var mod3 = this.m.andln(3);
              assert(mod3 % 2 === 1);

              // Fast case
              if (mod3 === 3) {
                var pow = this.m.add(new BN(1)).iushrn(2);
                return this.pow(a, pow);
              }

              // Tonelli-Shanks algorithm (Totally unoptimized and slow)
              //
              // Find Q and S, that Q * 2 ^ S = (P - 1)
              var q = this.m.subn(1);
              var s = 0;
              while (!q.isZero() && q.andln(1) === 0) {
                s++;
                q.iushrn(1);
              }
              assert(!q.isZero());

              var one = new BN(1).toRed(this);
              var nOne = one.redNeg();

              // Find quadratic non-residue
              // NOTE: Max is such because of generalized Riemann hypothesis.
              var lpow = this.m.subn(1).iushrn(1);
              var z = this.m.bitLength();
              z = new BN(2 * z * z).toRed(this);

              while (this.pow(z, lpow).cmp(nOne) !== 0) {
                z.redIAdd(nOne);
              }

              var c = this.pow(z, q);
              var r = this.pow(a, q.addn(1).iushrn(1));
              var t = this.pow(a, q);
              var m = s;
              while (t.cmp(one) !== 0) {
                var tmp = t;
                for (var i = 0; tmp.cmp(one) !== 0; i++) {
                  tmp = tmp.redSqr();
                }
                assert(i < m);
                var b = this.pow(c, new BN(1).iushln(m - i - 1));

                r = r.redMul(b);
                c = b.redSqr();
                t = t.redMul(c);
                m = i;
              }

              return r;
            };

            Red.prototype.invm = function invm(a) {
              var inv = a._invmp(this.m);
              if (inv.negative !== 0) {
                inv.negative = 0;
                return this.imod(inv).redNeg();
              } else {
                return this.imod(inv);
              }
            };

            Red.prototype.pow = function pow(a, num) {
              if (num.isZero()) return new BN(1).toRed(this);
              if (num.cmpn(1) === 0) return a.clone();

              var windowSize = 4;
              var wnd = new Array(1 << windowSize);
              wnd[0] = new BN(1).toRed(this);
              wnd[1] = a;
              for (var i = 2; i < wnd.length; i++) {
                wnd[i] = this.mul(wnd[i - 1], a);
              }

              var res = wnd[0];
              var current = 0;
              var currentLen = 0;
              var start = num.bitLength() % 26;
              if (start === 0) {
                start = 26;
              }

              for (i = num.length - 1; i >= 0; i--) {
                var word = num.words[i];
                for (var j = start - 1; j >= 0; j--) {
                  var bit = (word >> j) & 1;
                  if (res !== wnd[0]) {
                    res = this.sqr(res);
                  }

                  if (bit === 0 && current === 0) {
                    currentLen = 0;
                    continue;
                  }

                  current <<= 1;
                  current |= bit;
                  currentLen++;
                  if (currentLen !== windowSize && (i !== 0 || j !== 0))
                    continue;

                  res = this.mul(res, wnd[current]);
                  currentLen = 0;
                  current = 0;
                }
                start = 26;
              }

              return res;
            };

            Red.prototype.convertTo = function convertTo(num) {
              var r = num.umod(this.m);

              return r === num ? r.clone() : r;
            };

            Red.prototype.convertFrom = function convertFrom(num) {
              var res = num.clone();
              res.red = null;
              return res;
            };

            //
            // Montgomery method engine
            //

            BN.mont = function mont(num) {
              return new Mont(num);
            };

            function Mont(m) {
              Red.call(this, m);

              this.shift = this.m.bitLength();
              if (this.shift % 26 !== 0) {
                this.shift += 26 - (this.shift % 26);
              }

              this.r = new BN(1).iushln(this.shift);
              this.r2 = this.imod(this.r.sqr());
              this.rinv = this.r._invmp(this.m);

              this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
              this.minv = this.minv.umod(this.r);
              this.minv = this.r.sub(this.minv);
            }
            inherits(Mont, Red);

            Mont.prototype.convertTo = function convertTo(num) {
              return this.imod(num.ushln(this.shift));
            };

            Mont.prototype.convertFrom = function convertFrom(num) {
              var r = this.imod(num.mul(this.rinv));
              r.red = null;
              return r;
            };

            Mont.prototype.imul = function imul(a, b) {
              if (a.isZero() || b.isZero()) {
                a.words[0] = 0;
                a.length = 1;
                return a;
              }

              var t = a.imul(b);
              var c = t
                .maskn(this.shift)
                .mul(this.minv)
                .imaskn(this.shift)
                .mul(this.m);
              var u = t.isub(c).iushrn(this.shift);
              var res = u;

              if (u.cmp(this.m) >= 0) {
                res = u.isub(this.m);
              } else if (u.cmpn(0) < 0) {
                res = u.iadd(this.m);
              }

              return res._forceRed(this);
            };

            Mont.prototype.mul = function mul(a, b) {
              if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

              var t = a.mul(b);
              var c = t
                .maskn(this.shift)
                .mul(this.minv)
                .imaskn(this.shift)
                .mul(this.m);
              var u = t.isub(c).iushrn(this.shift);
              var res = u;
              if (u.cmp(this.m) >= 0) {
                res = u.isub(this.m);
              } else if (u.cmpn(0) < 0) {
                res = u.iadd(this.m);
              }

              return res._forceRed(this);
            };

            Mont.prototype.invm = function invm(a) {
              // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
              var res = this.imod(a._invmp(this.m).mul(this.r2));
              return res._forceRed(this);
            };
          })(false || module, this);

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/module.js */ '../node_modules/webpack/buildin/module.js'
          )(module)
        ));

        /***/
      },

    /***/ '../node_modules/elliptic/package.json':
      /*!*********************************************!*\
  !*** ../node_modules/elliptic/package.json ***!
  \*********************************************/
      /*! exports provided: _from, _id, _inBundle, _integrity, _location, _phantomChildren, _requested, _requiredBy, _resolved, _shasum, _spec, _where, author, bugs, bundleDependencies, dependencies, deprecated, description, devDependencies, files, homepage, keywords, license, main, name, repository, scripts, version, default */
      /***/ function (module) {
        module.exports = JSON.parse(
          '{"_from":"elliptic@^6.5.2","_id":"elliptic@6.5.3","_inBundle":false,"_integrity":"sha512-IMqzv5wNQf+E6aHeIqATs0tOLeOTwj1QKbRcS3jBbYkl5oLAserA8yJTT7/VyHUYG91PRmPyeQDObKLPpeS4dw==","_location":"/elliptic","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"elliptic@^6.5.2","name":"elliptic","escapedName":"elliptic","rawSpec":"^6.5.2","saveSpec":null,"fetchSpec":"^6.5.2"},"_requiredBy":["/browserify-sign","/create-ecdh"],"_resolved":"https://registry.npmjs.org/elliptic/-/elliptic-6.5.3.tgz","_shasum":"cb59eb2efdaf73a0bd78ccd7015a62ad6e0f93d6","_spec":"elliptic@^6.5.2","_where":"D:\\\\My projects\\\\boyfriend\\\\boyfriend\\\\node_modules\\\\browserify-sign","author":{"name":"Fedor Indutny","email":"fedor@indutny.com"},"bugs":{"url":"https://github.com/indutny/elliptic/issues"},"bundleDependencies":false,"dependencies":{"bn.js":"^4.4.0","brorand":"^1.0.1","hash.js":"^1.0.0","hmac-drbg":"^1.0.0","inherits":"^2.0.1","minimalistic-assert":"^1.0.0","minimalistic-crypto-utils":"^1.0.0"},"deprecated":false,"description":"EC cryptography","devDependencies":{"brfs":"^1.4.3","coveralls":"^3.0.8","grunt":"^1.0.4","grunt-browserify":"^5.0.0","grunt-cli":"^1.2.0","grunt-contrib-connect":"^1.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^1.0.1","grunt-mocha-istanbul":"^3.0.1","grunt-saucelabs":"^9.0.1","istanbul":"^0.4.2","jscs":"^3.0.7","jshint":"^2.10.3","mocha":"^6.2.2"},"files":["lib"],"homepage":"https://github.com/indutny/elliptic","keywords":["EC","Elliptic","curve","Cryptography"],"license":"MIT","main":"lib/elliptic.js","name":"elliptic","repository":{"type":"git","url":"git+ssh://git@github.com/indutny/elliptic.git"},"scripts":{"jscs":"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js","jshint":"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js","lint":"npm run jscs && npm run jshint","test":"npm run lint && npm run unit","unit":"istanbul test _mocha --reporter=spec test/index.js","version":"grunt dist && git add dist/"},"version":"6.5.3"}'
        );

        /***/
      },

    /***/ '../node_modules/events/events.js':
      /*!****************************************!*\
  !*** ../node_modules/events/events.js ***!
  \****************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        var R = typeof Reflect === 'object' ? Reflect : null;
        var ReflectApply =
          R && typeof R.apply === 'function'
            ? R.apply
            : function ReflectApply(target, receiver, args) {
                return Function.prototype.apply.call(target, receiver, args);
              };

        var ReflectOwnKeys;
        if (R && typeof R.ownKeys === 'function') {
          ReflectOwnKeys = R.ownKeys;
        } else if (Object.getOwnPropertySymbols) {
          ReflectOwnKeys = function ReflectOwnKeys(target) {
            return Object.getOwnPropertyNames(target).concat(
              Object.getOwnPropertySymbols(target)
            );
          };
        } else {
          ReflectOwnKeys = function ReflectOwnKeys(target) {
            return Object.getOwnPropertyNames(target);
          };
        }

        function ProcessEmitWarning(warning) {
          if (console && console.warn) console.warn(warning);
        }

        var NumberIsNaN =
          Number.isNaN ||
          function NumberIsNaN(value) {
            return value !== value;
          };

        function EventEmitter() {
          EventEmitter.init.call(this);
        }
        module.exports = EventEmitter;

        // Backwards-compat with node 0.10.x
        EventEmitter.EventEmitter = EventEmitter;

        EventEmitter.prototype._events = undefined;
        EventEmitter.prototype._eventsCount = 0;
        EventEmitter.prototype._maxListeners = undefined;

        // By default EventEmitters will print a warning if more than 10 listeners are
        // added to it. This is a useful default which helps finding memory leaks.
        var defaultMaxListeners = 10;

        function checkListener(listener) {
          if (typeof listener !== 'function') {
            throw new TypeError(
              'The "listener" argument must be of type Function. Received type ' +
                typeof listener
            );
          }
        }

        Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
          enumerable: true,
          get: function () {
            return defaultMaxListeners;
          },
          set: function (arg) {
            if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
              throw new RangeError(
                'The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' +
                  arg +
                  '.'
              );
            }
            defaultMaxListeners = arg;
          },
        });

        EventEmitter.init = function () {
          if (
            this._events === undefined ||
            this._events === Object.getPrototypeOf(this)._events
          ) {
            this._events = Object.create(null);
            this._eventsCount = 0;
          }

          this._maxListeners = this._maxListeners || undefined;
        };

        // Obviously not all Emitters should be limited to 10. This function allows
        // that to be increased. Set to zero for unlimited.
        EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
          if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
            throw new RangeError(
              'The value of "n" is out of range. It must be a non-negative number. Received ' +
                n +
                '.'
            );
          }
          this._maxListeners = n;
          return this;
        };

        function _getMaxListeners(that) {
          if (that._maxListeners === undefined)
            return EventEmitter.defaultMaxListeners;
          return that._maxListeners;
        }

        EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
          return _getMaxListeners(this);
        };

        EventEmitter.prototype.emit = function emit(type) {
          var args = [];
          for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
          var doError = type === 'error';

          var events = this._events;
          if (events !== undefined)
            doError = doError && events.error === undefined;
          else if (!doError) return false;

          // If there is no 'error' event listener then throw.
          if (doError) {
            var er;
            if (args.length > 0) er = args[0];
            if (er instanceof Error) {
              // Note: The comments on the `throw` lines are intentional, they show
              // up in Node's output if this results in an unhandled exception.
              throw er; // Unhandled 'error' event
            }
            // At least give some kind of context to the user
            var err = new Error(
              'Unhandled error.' + (er ? ' (' + er.message + ')' : '')
            );
            err.context = er;
            throw err; // Unhandled 'error' event
          }

          var handler = events[type];

          if (handler === undefined) return false;

          if (typeof handler === 'function') {
            ReflectApply(handler, this, args);
          } else {
            var len = handler.length;
            var listeners = arrayClone(handler, len);
            for (var i = 0; i < len; ++i)
              ReflectApply(listeners[i], this, args);
          }

          return true;
        };

        function _addListener(target, type, listener, prepend) {
          var m;
          var events;
          var existing;

          checkListener(listener);

          events = target._events;
          if (events === undefined) {
            events = target._events = Object.create(null);
            target._eventsCount = 0;
          } else {
            // To avoid recursion in the case that type === "newListener"! Before
            // adding it to the listeners, first emit "newListener".
            if (events.newListener !== undefined) {
              target.emit(
                'newListener',
                type,
                listener.listener ? listener.listener : listener
              );

              // Re-assign `events` because a newListener handler could have caused the
              // this._events to be assigned to a new object
              events = target._events;
            }
            existing = events[type];
          }

          if (existing === undefined) {
            // Optimize the case of one listener. Don't need the extra array object.
            existing = events[type] = listener;
            ++target._eventsCount;
          } else {
            if (typeof existing === 'function') {
              // Adding the second element, need to change to array.
              existing = events[type] = prepend
                ? [listener, existing]
                : [existing, listener];
              // If we've already got an array, just append.
            } else if (prepend) {
              existing.unshift(listener);
            } else {
              existing.push(listener);
            }

            // Check for listener leak
            m = _getMaxListeners(target);
            if (m > 0 && existing.length > m && !existing.warned) {
              existing.warned = true;
              // No error code for this since it is a Warning
              // eslint-disable-next-line no-restricted-syntax
              var w = new Error(
                'Possible EventEmitter memory leak detected. ' +
                  existing.length +
                  ' ' +
                  String(type) +
                  ' listeners ' +
                  'added. Use emitter.setMaxListeners() to ' +
                  'increase limit'
              );
              w.name = 'MaxListenersExceededWarning';
              w.emitter = target;
              w.type = type;
              w.count = existing.length;
              ProcessEmitWarning(w);
            }
          }

          return target;
        }

        EventEmitter.prototype.addListener = function addListener(
          type,
          listener
        ) {
          return _addListener(this, type, listener, false);
        };

        EventEmitter.prototype.on = EventEmitter.prototype.addListener;

        EventEmitter.prototype.prependListener = function prependListener(
          type,
          listener
        ) {
          return _addListener(this, type, listener, true);
        };

        function onceWrapper() {
          if (!this.fired) {
            this.target.removeListener(this.type, this.wrapFn);
            this.fired = true;
            if (arguments.length === 0) return this.listener.call(this.target);
            return this.listener.apply(this.target, arguments);
          }
        }

        function _onceWrap(target, type, listener) {
          var state = {
            fired: false,
            wrapFn: undefined,
            target: target,
            type: type,
            listener: listener,
          };
          var wrapped = onceWrapper.bind(state);
          wrapped.listener = listener;
          state.wrapFn = wrapped;
          return wrapped;
        }

        EventEmitter.prototype.once = function once(type, listener) {
          checkListener(listener);
          this.on(type, _onceWrap(this, type, listener));
          return this;
        };

        EventEmitter.prototype.prependOnceListener = function prependOnceListener(
          type,
          listener
        ) {
          checkListener(listener);
          this.prependListener(type, _onceWrap(this, type, listener));
          return this;
        };

        // Emits a 'removeListener' event if and only if the listener was removed.
        EventEmitter.prototype.removeListener = function removeListener(
          type,
          listener
        ) {
          var list, events, position, i, originalListener;

          checkListener(listener);

          events = this._events;
          if (events === undefined) return this;

          list = events[type];
          if (list === undefined) return this;

          if (list === listener || list.listener === listener) {
            if (--this._eventsCount === 0) this._events = Object.create(null);
            else {
              delete events[type];
              if (events.removeListener)
                this.emit('removeListener', type, list.listener || listener);
            }
          } else if (typeof list !== 'function') {
            position = -1;

            for (i = list.length - 1; i >= 0; i--) {
              if (list[i] === listener || list[i].listener === listener) {
                originalListener = list[i].listener;
                position = i;
                break;
              }
            }

            if (position < 0) return this;

            if (position === 0) list.shift();
            else {
              spliceOne(list, position);
            }

            if (list.length === 1) events[type] = list[0];

            if (events.removeListener !== undefined)
              this.emit('removeListener', type, originalListener || listener);
          }

          return this;
        };

        EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

        EventEmitter.prototype.removeAllListeners = function removeAllListeners(
          type
        ) {
          var listeners, events, i;

          events = this._events;
          if (events === undefined) return this;

          // not listening for removeListener, no need to emit
          if (events.removeListener === undefined) {
            if (arguments.length === 0) {
              this._events = Object.create(null);
              this._eventsCount = 0;
            } else if (events[type] !== undefined) {
              if (--this._eventsCount === 0) this._events = Object.create(null);
              else delete events[type];
            }
            return this;
          }

          // emit removeListener for all listeners on all events
          if (arguments.length === 0) {
            var keys = Object.keys(events);
            var key;
            for (i = 0; i < keys.length; ++i) {
              key = keys[i];
              if (key === 'removeListener') continue;
              this.removeAllListeners(key);
            }
            this.removeAllListeners('removeListener');
            this._events = Object.create(null);
            this._eventsCount = 0;
            return this;
          }

          listeners = events[type];

          if (typeof listeners === 'function') {
            this.removeListener(type, listeners);
          } else if (listeners !== undefined) {
            // LIFO order
            for (i = listeners.length - 1; i >= 0; i--) {
              this.removeListener(type, listeners[i]);
            }
          }

          return this;
        };

        function _listeners(target, type, unwrap) {
          var events = target._events;

          if (events === undefined) return [];

          var evlistener = events[type];
          if (evlistener === undefined) return [];

          if (typeof evlistener === 'function')
            return unwrap ? [evlistener.listener || evlistener] : [evlistener];

          return unwrap
            ? unwrapListeners(evlistener)
            : arrayClone(evlistener, evlistener.length);
        }

        EventEmitter.prototype.listeners = function listeners(type) {
          return _listeners(this, type, true);
        };

        EventEmitter.prototype.rawListeners = function rawListeners(type) {
          return _listeners(this, type, false);
        };

        EventEmitter.listenerCount = function (emitter, type) {
          if (typeof emitter.listenerCount === 'function') {
            return emitter.listenerCount(type);
          } else {
            return listenerCount.call(emitter, type);
          }
        };

        EventEmitter.prototype.listenerCount = listenerCount;
        function listenerCount(type) {
          var events = this._events;

          if (events !== undefined) {
            var evlistener = events[type];

            if (typeof evlistener === 'function') {
              return 1;
            } else if (evlistener !== undefined) {
              return evlistener.length;
            }
          }

          return 0;
        }

        EventEmitter.prototype.eventNames = function eventNames() {
          return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
        };

        function arrayClone(arr, n) {
          var copy = new Array(n);
          for (var i = 0; i < n; ++i) copy[i] = arr[i];
          return copy;
        }

        function spliceOne(list, index) {
          for (; index + 1 < list.length; index++)
            list[index] = list[index + 1];
          list.pop();
        }

        function unwrapListeners(arr) {
          var ret = new Array(arr.length);
          for (var i = 0; i < ret.length; ++i) {
            ret[i] = arr[i].listener || arr[i];
          }
          return ret;
        }

        /***/
      },

    /***/ '../node_modules/evp_bytestokey/index.js':
      /*!***********************************************!*\
  !*** ../node_modules/evp_bytestokey/index.js ***!
  \***********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;
        var MD5 = __webpack_require__(
          /*! md5.js */ '../node_modules/md5.js/index.js'
        );

        /* eslint-disable camelcase */
        function EVP_BytesToKey(password, salt, keyBits, ivLen) {
          if (!Buffer.isBuffer(password))
            password = Buffer.from(password, 'binary');
          if (salt) {
            if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary');
            if (salt.length !== 8)
              throw new RangeError('salt should be Buffer with 8 byte length');
          }

          var keyLen = keyBits / 8;
          var key = Buffer.alloc(keyLen);
          var iv = Buffer.alloc(ivLen || 0);
          var tmp = Buffer.alloc(0);

          while (keyLen > 0 || ivLen > 0) {
            var hash = new MD5();
            hash.update(tmp);
            hash.update(password);
            if (salt) hash.update(salt);
            tmp = hash.digest();

            var used = 0;

            if (keyLen > 0) {
              var keyStart = key.length - keyLen;
              used = Math.min(keyLen, tmp.length);
              tmp.copy(key, keyStart, 0, used);
              keyLen -= used;
            }

            if (used < tmp.length && ivLen > 0) {
              var ivStart = iv.length - ivLen;
              var length = Math.min(ivLen, tmp.length - used);
              tmp.copy(iv, ivStart, used, used + length);
              ivLen -= length;
            }
          }

          tmp.fill(0);
          return { key: key, iv: iv };
        }

        module.exports = EVP_BytesToKey;

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars.js':
      /*!*********************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars.js ***!
  \*********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        // istanbul ignore next

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var _handlebarsRuntime = __webpack_require__(
          /*! ./handlebars.runtime */ '../node_modules/handlebars/dist/cjs/handlebars.runtime.js'
        );

        var _handlebarsRuntime2 = _interopRequireDefault(_handlebarsRuntime);

        // Compiler imports

        var _handlebarsCompilerAst = __webpack_require__(
          /*! ./handlebars/compiler/ast */ '../node_modules/handlebars/dist/cjs/handlebars/compiler/ast.js'
        );

        var _handlebarsCompilerAst2 = _interopRequireDefault(
          _handlebarsCompilerAst
        );

        var _handlebarsCompilerBase = __webpack_require__(
          /*! ./handlebars/compiler/base */ '../node_modules/handlebars/dist/cjs/handlebars/compiler/base.js'
        );

        var _handlebarsCompilerCompiler = __webpack_require__(
          /*! ./handlebars/compiler/compiler */ '../node_modules/handlebars/dist/cjs/handlebars/compiler/compiler.js'
        );

        var _handlebarsCompilerJavascriptCompiler = __webpack_require__(
          /*! ./handlebars/compiler/javascript-compiler */ '../node_modules/handlebars/dist/cjs/handlebars/compiler/javascript-compiler.js'
        );

        var _handlebarsCompilerJavascriptCompiler2 = _interopRequireDefault(
          _handlebarsCompilerJavascriptCompiler
        );

        var _handlebarsCompilerVisitor = __webpack_require__(
          /*! ./handlebars/compiler/visitor */ '../node_modules/handlebars/dist/cjs/handlebars/compiler/visitor.js'
        );

        var _handlebarsCompilerVisitor2 = _interopRequireDefault(
          _handlebarsCompilerVisitor
        );

        var _handlebarsNoConflict = __webpack_require__(
          /*! ./handlebars/no-conflict */ '../node_modules/handlebars/dist/cjs/handlebars/no-conflict.js'
        );

        var _handlebarsNoConflict2 = _interopRequireDefault(
          _handlebarsNoConflict
        );

        var _create = _handlebarsRuntime2['default'].create;
        function create() {
          var hb = _create();

          hb.compile = function (input, options) {
            return _handlebarsCompilerCompiler.compile(input, options, hb);
          };
          hb.precompile = function (input, options) {
            return _handlebarsCompilerCompiler.precompile(input, options, hb);
          };

          hb.AST = _handlebarsCompilerAst2['default'];
          hb.Compiler = _handlebarsCompilerCompiler.Compiler;
          hb.JavaScriptCompiler =
            _handlebarsCompilerJavascriptCompiler2['default'];
          hb.Parser = _handlebarsCompilerBase.parser;
          hb.parse = _handlebarsCompilerBase.parse;
          hb.parseWithoutProcessing =
            _handlebarsCompilerBase.parseWithoutProcessing;

          return hb;
        }

        var inst = create();
        inst.create = create;

        _handlebarsNoConflict2['default'](inst);

        inst.Visitor = _handlebarsCompilerVisitor2['default'];

        inst['default'] = inst;

        exports['default'] = inst;
        module.exports = exports['default'];
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9oYW5kbGViYXJzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7aUNBQW9CLHNCQUFzQjs7Ozs7O3FDQUcxQiwyQkFBMkI7Ozs7c0NBS3BDLDRCQUE0Qjs7MENBQ1csZ0NBQWdDOztvREFDL0MsMkNBQTJDOzs7O3lDQUN0RCwrQkFBK0I7Ozs7b0NBRTVCLDBCQUEwQjs7OztBQUVqRCxJQUFJLE9BQU8sR0FBRywrQkFBUSxNQUFNLENBQUM7QUFDN0IsU0FBUyxNQUFNLEdBQUc7QUFDaEIsTUFBSSxFQUFFLEdBQUcsT0FBTyxFQUFFLENBQUM7O0FBRW5CLElBQUUsQ0FBQyxPQUFPLEdBQUcsVUFBUyxLQUFLLEVBQUUsT0FBTyxFQUFFO0FBQ3BDLFdBQU8sb0NBQVEsS0FBSyxFQUFFLE9BQU8sRUFBRSxFQUFFLENBQUMsQ0FBQztHQUNwQyxDQUFDO0FBQ0YsSUFBRSxDQUFDLFVBQVUsR0FBRyxVQUFTLEtBQUssRUFBRSxPQUFPLEVBQUU7QUFDdkMsV0FBTyx1Q0FBVyxLQUFLLEVBQUUsT0FBTyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0dBQ3ZDLENBQUM7O0FBRUYsSUFBRSxDQUFDLEdBQUcscUNBQU0sQ0FBQztBQUNiLElBQUUsQ0FBQyxRQUFRLHVDQUFXLENBQUM7QUFDdkIsSUFBRSxDQUFDLGtCQUFrQixvREFBcUIsQ0FBQztBQUMzQyxJQUFFLENBQUMsTUFBTSxpQ0FBUyxDQUFDO0FBQ25CLElBQUUsQ0FBQyxLQUFLLGdDQUFRLENBQUM7QUFDakIsSUFBRSxDQUFDLHNCQUFzQixpREFBeUIsQ0FBQzs7QUFFbkQsU0FBTyxFQUFFLENBQUM7Q0FDWDs7QUFFRCxJQUFJLElBQUksR0FBRyxNQUFNLEVBQUUsQ0FBQztBQUNwQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQzs7QUFFckIsa0NBQVcsSUFBSSxDQUFDLENBQUM7O0FBRWpCLElBQUksQ0FBQyxPQUFPLHlDQUFVLENBQUM7O0FBRXZCLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxJQUFJLENBQUM7O3FCQUVSLElBQUkiLCJmaWxlIjoiaGFuZGxlYmFycy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBydW50aW1lIGZyb20gJy4vaGFuZGxlYmFycy5ydW50aW1lJztcblxuLy8gQ29tcGlsZXIgaW1wb3J0c1xuaW1wb3J0IEFTVCBmcm9tICcuL2hhbmRsZWJhcnMvY29tcGlsZXIvYXN0JztcbmltcG9ydCB7XG4gIHBhcnNlciBhcyBQYXJzZXIsXG4gIHBhcnNlLFxuICBwYXJzZVdpdGhvdXRQcm9jZXNzaW5nXG59IGZyb20gJy4vaGFuZGxlYmFycy9jb21waWxlci9iYXNlJztcbmltcG9ydCB7IENvbXBpbGVyLCBjb21waWxlLCBwcmVjb21waWxlIH0gZnJvbSAnLi9oYW5kbGViYXJzL2NvbXBpbGVyL2NvbXBpbGVyJztcbmltcG9ydCBKYXZhU2NyaXB0Q29tcGlsZXIgZnJvbSAnLi9oYW5kbGViYXJzL2NvbXBpbGVyL2phdmFzY3JpcHQtY29tcGlsZXInO1xuaW1wb3J0IFZpc2l0b3IgZnJvbSAnLi9oYW5kbGViYXJzL2NvbXBpbGVyL3Zpc2l0b3InO1xuXG5pbXBvcnQgbm9Db25mbGljdCBmcm9tICcuL2hhbmRsZWJhcnMvbm8tY29uZmxpY3QnO1xuXG5sZXQgX2NyZWF0ZSA9IHJ1bnRpbWUuY3JlYXRlO1xuZnVuY3Rpb24gY3JlYXRlKCkge1xuICBsZXQgaGIgPSBfY3JlYXRlKCk7XG5cbiAgaGIuY29tcGlsZSA9IGZ1bmN0aW9uKGlucHV0LCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIGNvbXBpbGUoaW5wdXQsIG9wdGlvbnMsIGhiKTtcbiAgfTtcbiAgaGIucHJlY29tcGlsZSA9IGZ1bmN0aW9uKGlucHV0LCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIHByZWNvbXBpbGUoaW5wdXQsIG9wdGlvbnMsIGhiKTtcbiAgfTtcblxuICBoYi5BU1QgPSBBU1Q7XG4gIGhiLkNvbXBpbGVyID0gQ29tcGlsZXI7XG4gIGhiLkphdmFTY3JpcHRDb21waWxlciA9IEphdmFTY3JpcHRDb21waWxlcjtcbiAgaGIuUGFyc2VyID0gUGFyc2VyO1xuICBoYi5wYXJzZSA9IHBhcnNlO1xuICBoYi5wYXJzZVdpdGhvdXRQcm9jZXNzaW5nID0gcGFyc2VXaXRob3V0UHJvY2Vzc2luZztcblxuICByZXR1cm4gaGI7XG59XG5cbmxldCBpbnN0ID0gY3JlYXRlKCk7XG5pbnN0LmNyZWF0ZSA9IGNyZWF0ZTtcblxubm9Db25mbGljdChpbnN0KTtcblxuaW5zdC5WaXNpdG9yID0gVmlzaXRvcjtcblxuaW5zdFsnZGVmYXVsdCddID0gaW5zdDtcblxuZXhwb3J0IGRlZmF1bHQgaW5zdDtcbiJdfQ==

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars.runtime.js':
      /*!*****************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars.runtime.js ***!
  \*****************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        // istanbul ignore next

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // istanbul ignore next

        function _interopRequireWildcard(obj) {
          if (obj && obj.__esModule) {
            return obj;
          } else {
            var newObj = {};
            if (obj != null) {
              for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key))
                  newObj[key] = obj[key];
              }
            }
            newObj['default'] = obj;
            return newObj;
          }
        }

        var _handlebarsBase = __webpack_require__(
          /*! ./handlebars/base */ '../node_modules/handlebars/dist/cjs/handlebars/base.js'
        );

        var base = _interopRequireWildcard(_handlebarsBase);

        // Each of these augment the Handlebars object. No need to setup here.
        // (This is done to easily share code between commonjs and browse envs)

        var _handlebarsSafeString = __webpack_require__(
          /*! ./handlebars/safe-string */ '../node_modules/handlebars/dist/cjs/handlebars/safe-string.js'
        );

        var _handlebarsSafeString2 = _interopRequireDefault(
          _handlebarsSafeString
        );

        var _handlebarsException = __webpack_require__(
          /*! ./handlebars/exception */ '../node_modules/handlebars/dist/cjs/handlebars/exception.js'
        );

        var _handlebarsException2 = _interopRequireDefault(
          _handlebarsException
        );

        var _handlebarsUtils = __webpack_require__(
          /*! ./handlebars/utils */ '../node_modules/handlebars/dist/cjs/handlebars/utils.js'
        );

        var Utils = _interopRequireWildcard(_handlebarsUtils);

        var _handlebarsRuntime = __webpack_require__(
          /*! ./handlebars/runtime */ '../node_modules/handlebars/dist/cjs/handlebars/runtime.js'
        );

        var runtime = _interopRequireWildcard(_handlebarsRuntime);

        var _handlebarsNoConflict = __webpack_require__(
          /*! ./handlebars/no-conflict */ '../node_modules/handlebars/dist/cjs/handlebars/no-conflict.js'
        );

        var _handlebarsNoConflict2 = _interopRequireDefault(
          _handlebarsNoConflict
        );

        // For compatibility and usage outside of module systems, make the Handlebars object a namespace
        function create() {
          var hb = new base.HandlebarsEnvironment();

          Utils.extend(hb, base);
          hb.SafeString = _handlebarsSafeString2['default'];
          hb.Exception = _handlebarsException2['default'];
          hb.Utils = Utils;
          hb.escapeExpression = Utils.escapeExpression;

          hb.VM = runtime;
          hb.template = function (spec) {
            return runtime.template(spec, hb);
          };

          return hb;
        }

        var inst = create();
        inst.create = create;

        _handlebarsNoConflict2['default'](inst);

        inst['default'] = inst;

        exports['default'] = inst;
        module.exports = exports['default'];
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9oYW5kbGViYXJzLnJ1bnRpbWUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OEJBQXNCLG1CQUFtQjs7SUFBN0IsSUFBSTs7Ozs7b0NBSU8sMEJBQTBCOzs7O21DQUMzQix3QkFBd0I7Ozs7K0JBQ3ZCLG9CQUFvQjs7SUFBL0IsS0FBSzs7aUNBQ1Esc0JBQXNCOztJQUFuQyxPQUFPOztvQ0FFSSwwQkFBMEI7Ozs7O0FBR2pELFNBQVMsTUFBTSxHQUFHO0FBQ2hCLE1BQUksRUFBRSxHQUFHLElBQUksSUFBSSxDQUFDLHFCQUFxQixFQUFFLENBQUM7O0FBRTFDLE9BQUssQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ3ZCLElBQUUsQ0FBQyxVQUFVLG9DQUFhLENBQUM7QUFDM0IsSUFBRSxDQUFDLFNBQVMsbUNBQVksQ0FBQztBQUN6QixJQUFFLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztBQUNqQixJQUFFLENBQUMsZ0JBQWdCLEdBQUcsS0FBSyxDQUFDLGdCQUFnQixDQUFDOztBQUU3QyxJQUFFLENBQUMsRUFBRSxHQUFHLE9BQU8sQ0FBQztBQUNoQixJQUFFLENBQUMsUUFBUSxHQUFHLFVBQVMsSUFBSSxFQUFFO0FBQzNCLFdBQU8sT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7R0FDbkMsQ0FBQzs7QUFFRixTQUFPLEVBQUUsQ0FBQztDQUNYOztBQUVELElBQUksSUFBSSxHQUFHLE1BQU0sRUFBRSxDQUFDO0FBQ3BCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDOztBQUVyQixrQ0FBVyxJQUFJLENBQUMsQ0FBQzs7QUFFakIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLElBQUksQ0FBQzs7cUJBRVIsSUFBSSIsImZpbGUiOiJoYW5kbGViYXJzLnJ1bnRpbWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBiYXNlIGZyb20gJy4vaGFuZGxlYmFycy9iYXNlJztcblxuLy8gRWFjaCBvZiB0aGVzZSBhdWdtZW50IHRoZSBIYW5kbGViYXJzIG9iamVjdC4gTm8gbmVlZCB0byBzZXR1cCBoZXJlLlxuLy8gKFRoaXMgaXMgZG9uZSB0byBlYXNpbHkgc2hhcmUgY29kZSBiZXR3ZWVuIGNvbW1vbmpzIGFuZCBicm93c2UgZW52cylcbmltcG9ydCBTYWZlU3RyaW5nIGZyb20gJy4vaGFuZGxlYmFycy9zYWZlLXN0cmluZyc7XG5pbXBvcnQgRXhjZXB0aW9uIGZyb20gJy4vaGFuZGxlYmFycy9leGNlcHRpb24nO1xuaW1wb3J0ICogYXMgVXRpbHMgZnJvbSAnLi9oYW5kbGViYXJzL3V0aWxzJztcbmltcG9ydCAqIGFzIHJ1bnRpbWUgZnJvbSAnLi9oYW5kbGViYXJzL3J1bnRpbWUnO1xuXG5pbXBvcnQgbm9Db25mbGljdCBmcm9tICcuL2hhbmRsZWJhcnMvbm8tY29uZmxpY3QnO1xuXG4vLyBGb3IgY29tcGF0aWJpbGl0eSBhbmQgdXNhZ2Ugb3V0c2lkZSBvZiBtb2R1bGUgc3lzdGVtcywgbWFrZSB0aGUgSGFuZGxlYmFycyBvYmplY3QgYSBuYW1lc3BhY2VcbmZ1bmN0aW9uIGNyZWF0ZSgpIHtcbiAgbGV0IGhiID0gbmV3IGJhc2UuSGFuZGxlYmFyc0Vudmlyb25tZW50KCk7XG5cbiAgVXRpbHMuZXh0ZW5kKGhiLCBiYXNlKTtcbiAgaGIuU2FmZVN0cmluZyA9IFNhZmVTdHJpbmc7XG4gIGhiLkV4Y2VwdGlvbiA9IEV4Y2VwdGlvbjtcbiAgaGIuVXRpbHMgPSBVdGlscztcbiAgaGIuZXNjYXBlRXhwcmVzc2lvbiA9IFV0aWxzLmVzY2FwZUV4cHJlc3Npb247XG5cbiAgaGIuVk0gPSBydW50aW1lO1xuICBoYi50ZW1wbGF0ZSA9IGZ1bmN0aW9uKHNwZWMpIHtcbiAgICByZXR1cm4gcnVudGltZS50ZW1wbGF0ZShzcGVjLCBoYik7XG4gIH07XG5cbiAgcmV0dXJuIGhiO1xufVxuXG5sZXQgaW5zdCA9IGNyZWF0ZSgpO1xuaW5zdC5jcmVhdGUgPSBjcmVhdGU7XG5cbm5vQ29uZmxpY3QoaW5zdCk7XG5cbmluc3RbJ2RlZmF1bHQnXSA9IGluc3Q7XG5cbmV4cG9ydCBkZWZhdWx0IGluc3Q7XG4iXX0=

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/base.js':
      /*!**************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/base.js ***!
  \**************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        exports.HandlebarsEnvironment = HandlebarsEnvironment;
        // istanbul ignore next

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var _utils = __webpack_require__(
          /*! ./utils */ '../node_modules/handlebars/dist/cjs/handlebars/utils.js'
        );

        var _exception = __webpack_require__(
          /*! ./exception */ '../node_modules/handlebars/dist/cjs/handlebars/exception.js'
        );

        var _exception2 = _interopRequireDefault(_exception);

        var _helpers = __webpack_require__(
          /*! ./helpers */ '../node_modules/handlebars/dist/cjs/handlebars/helpers.js'
        );

        var _decorators = __webpack_require__(
          /*! ./decorators */ '../node_modules/handlebars/dist/cjs/handlebars/decorators.js'
        );

        var _logger = __webpack_require__(
          /*! ./logger */ '../node_modules/handlebars/dist/cjs/handlebars/logger.js'
        );

        var _logger2 = _interopRequireDefault(_logger);

        var _internalProtoAccess = __webpack_require__(
          /*! ./internal/proto-access */ '../node_modules/handlebars/dist/cjs/handlebars/internal/proto-access.js'
        );

        var VERSION = '4.7.6';
        exports.VERSION = VERSION;
        var COMPILER_REVISION = 8;
        exports.COMPILER_REVISION = COMPILER_REVISION;
        var LAST_COMPATIBLE_COMPILER_REVISION = 7;

        exports.LAST_COMPATIBLE_COMPILER_REVISION = LAST_COMPATIBLE_COMPILER_REVISION;
        var REVISION_CHANGES = {
          1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it
          2: '== 1.0.0-rc.3',
          3: '== 1.0.0-rc.4',
          4: '== 1.x.x',
          5: '== 2.0.0-alpha.x',
          6: '>= 2.0.0-beta.1',
          7: '>= 4.0.0 <4.3.0',
          8: '>= 4.3.0',
        };

        exports.REVISION_CHANGES = REVISION_CHANGES;
        var objectType = '[object Object]';

        function HandlebarsEnvironment(helpers, partials, decorators) {
          this.helpers = helpers || {};
          this.partials = partials || {};
          this.decorators = decorators || {};

          _helpers.registerDefaultHelpers(this);
          _decorators.registerDefaultDecorators(this);
        }

        HandlebarsEnvironment.prototype = {
          constructor: HandlebarsEnvironment,

          logger: _logger2['default'],
          log: _logger2['default'].log,

          registerHelper: function registerHelper(name, fn) {
            if (_utils.toString.call(name) === objectType) {
              if (fn) {
                throw new _exception2['default'](
                  'Arg not supported with multiple helpers'
                );
              }
              _utils.extend(this.helpers, name);
            } else {
              this.helpers[name] = fn;
            }
          },
          unregisterHelper: function unregisterHelper(name) {
            delete this.helpers[name];
          },

          registerPartial: function registerPartial(name, partial) {
            if (_utils.toString.call(name) === objectType) {
              _utils.extend(this.partials, name);
            } else {
              if (typeof partial === 'undefined') {
                throw new _exception2['default'](
                  'Attempting to register a partial called "' +
                    name +
                    '" as undefined'
                );
              }
              this.partials[name] = partial;
            }
          },
          unregisterPartial: function unregisterPartial(name) {
            delete this.partials[name];
          },

          registerDecorator: function registerDecorator(name, fn) {
            if (_utils.toString.call(name) === objectType) {
              if (fn) {
                throw new _exception2['default'](
                  'Arg not supported with multiple decorators'
                );
              }
              _utils.extend(this.decorators, name);
            } else {
              this.decorators[name] = fn;
            }
          },
          unregisterDecorator: function unregisterDecorator(name) {
            delete this.decorators[name];
          },
          /**
           * Reset the memory of illegal property accesses that have already been logged.
           * @deprecated should only be used in handlebars test-cases
           */
          resetLoggedPropertyAccesses: function resetLoggedPropertyAccesses() {
            _internalProtoAccess.resetLoggedProperties();
          },
        };

        var log = _logger2['default'].log;

        exports.log = log;
        exports.createFrame = _utils.createFrame;
        exports.logger = _logger2['default'];
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2Jhc2UuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7cUJBQThDLFNBQVM7O3lCQUNqQyxhQUFhOzs7O3VCQUNJLFdBQVc7OzBCQUNSLGNBQWM7O3NCQUNyQyxVQUFVOzs7O21DQUNTLHlCQUF5Qjs7QUFFeEQsSUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDOztBQUN4QixJQUFNLGlCQUFpQixHQUFHLENBQUMsQ0FBQzs7QUFDNUIsSUFBTSxpQ0FBaUMsR0FBRyxDQUFDLENBQUM7OztBQUU1QyxJQUFNLGdCQUFnQixHQUFHO0FBQzlCLEdBQUMsRUFBRSxhQUFhO0FBQ2hCLEdBQUMsRUFBRSxlQUFlO0FBQ2xCLEdBQUMsRUFBRSxlQUFlO0FBQ2xCLEdBQUMsRUFBRSxVQUFVO0FBQ2IsR0FBQyxFQUFFLGtCQUFrQjtBQUNyQixHQUFDLEVBQUUsaUJBQWlCO0FBQ3BCLEdBQUMsRUFBRSxpQkFBaUI7QUFDcEIsR0FBQyxFQUFFLFVBQVU7Q0FDZCxDQUFDOzs7QUFFRixJQUFNLFVBQVUsR0FBRyxpQkFBaUIsQ0FBQzs7QUFFOUIsU0FBUyxxQkFBcUIsQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRTtBQUNuRSxNQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sSUFBSSxFQUFFLENBQUM7QUFDN0IsTUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLElBQUksRUFBRSxDQUFDO0FBQy9CLE1BQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxJQUFJLEVBQUUsQ0FBQzs7QUFFbkMsa0NBQXVCLElBQUksQ0FBQyxDQUFDO0FBQzdCLHdDQUEwQixJQUFJLENBQUMsQ0FBQztDQUNqQzs7QUFFRCxxQkFBcUIsQ0FBQyxTQUFTLEdBQUc7QUFDaEMsYUFBVyxFQUFFLHFCQUFxQjs7QUFFbEMsUUFBTSxxQkFBUTtBQUNkLEtBQUcsRUFBRSxvQkFBTyxHQUFHOztBQUVmLGdCQUFjLEVBQUUsd0JBQVMsSUFBSSxFQUFFLEVBQUUsRUFBRTtBQUNqQyxRQUFJLGdCQUFTLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxVQUFVLEVBQUU7QUFDdEMsVUFBSSxFQUFFLEVBQUU7QUFDTixjQUFNLDJCQUFjLHlDQUF5QyxDQUFDLENBQUM7T0FDaEU7QUFDRCxvQkFBTyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO0tBQzVCLE1BQU07QUFDTCxVQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztLQUN6QjtHQUNGO0FBQ0Qsa0JBQWdCLEVBQUUsMEJBQVMsSUFBSSxFQUFFO0FBQy9CLFdBQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztHQUMzQjs7QUFFRCxpQkFBZSxFQUFFLHlCQUFTLElBQUksRUFBRSxPQUFPLEVBQUU7QUFDdkMsUUFBSSxnQkFBUyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssVUFBVSxFQUFFO0FBQ3RDLG9CQUFPLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUM7S0FDN0IsTUFBTTtBQUNMLFVBQUksT0FBTyxPQUFPLEtBQUssV0FBVyxFQUFFO0FBQ2xDLGNBQU0seUVBQ3dDLElBQUksb0JBQ2pELENBQUM7T0FDSDtBQUNELFVBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsT0FBTyxDQUFDO0tBQy9CO0dBQ0Y7QUFDRCxtQkFBaUIsRUFBRSwyQkFBUyxJQUFJLEVBQUU7QUFDaEMsV0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO0dBQzVCOztBQUVELG1CQUFpQixFQUFFLDJCQUFTLElBQUksRUFBRSxFQUFFLEVBQUU7QUFDcEMsUUFBSSxnQkFBUyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssVUFBVSxFQUFFO0FBQ3RDLFVBQUksRUFBRSxFQUFFO0FBQ04sY0FBTSwyQkFBYyw0Q0FBNEMsQ0FBQyxDQUFDO09BQ25FO0FBQ0Qsb0JBQU8sSUFBSSxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsQ0FBQztLQUMvQixNQUFNO0FBQ0wsVUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7S0FDNUI7R0FDRjtBQUNELHFCQUFtQixFQUFFLDZCQUFTLElBQUksRUFBRTtBQUNsQyxXQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7R0FDOUI7Ozs7O0FBS0QsNkJBQTJCLEVBQUEsdUNBQUc7QUFDNUIsZ0RBQXVCLENBQUM7R0FDekI7Q0FDRixDQUFDOztBQUVLLElBQUksR0FBRyxHQUFHLG9CQUFPLEdBQUcsQ0FBQzs7O1FBRW5CLFdBQVc7UUFBRSxNQUFNIiwiZmlsZSI6ImJhc2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVGcmFtZSwgZXh0ZW5kLCB0b1N0cmluZyB9IGZyb20gJy4vdXRpbHMnO1xuaW1wb3J0IEV4Y2VwdGlvbiBmcm9tICcuL2V4Y2VwdGlvbic7XG5pbXBvcnQgeyByZWdpc3RlckRlZmF1bHRIZWxwZXJzIH0gZnJvbSAnLi9oZWxwZXJzJztcbmltcG9ydCB7IHJlZ2lzdGVyRGVmYXVsdERlY29yYXRvcnMgfSBmcm9tICcuL2RlY29yYXRvcnMnO1xuaW1wb3J0IGxvZ2dlciBmcm9tICcuL2xvZ2dlcic7XG5pbXBvcnQgeyByZXNldExvZ2dlZFByb3BlcnRpZXMgfSBmcm9tICcuL2ludGVybmFsL3Byb3RvLWFjY2Vzcyc7XG5cbmV4cG9ydCBjb25zdCBWRVJTSU9OID0gJzQuNy42JztcbmV4cG9ydCBjb25zdCBDT01QSUxFUl9SRVZJU0lPTiA9IDg7XG5leHBvcnQgY29uc3QgTEFTVF9DT01QQVRJQkxFX0NPTVBJTEVSX1JFVklTSU9OID0gNztcblxuZXhwb3J0IGNvbnN0IFJFVklTSU9OX0NIQU5HRVMgPSB7XG4gIDE6ICc8PSAxLjAucmMuMicsIC8vIDEuMC5yYy4yIGlzIGFjdHVhbGx5IHJldjIgYnV0IGRvZXNuJ3QgcmVwb3J0IGl0XG4gIDI6ICc9PSAxLjAuMC1yYy4zJyxcbiAgMzogJz09IDEuMC4wLXJjLjQnLFxuICA0OiAnPT0gMS54LngnLFxuICA1OiAnPT0gMi4wLjAtYWxwaGEueCcsXG4gIDY6ICc+PSAyLjAuMC1iZXRhLjEnLFxuICA3OiAnPj0gNC4wLjAgPDQuMy4wJyxcbiAgODogJz49IDQuMy4wJ1xufTtcblxuY29uc3Qgb2JqZWN0VHlwZSA9ICdbb2JqZWN0IE9iamVjdF0nO1xuXG5leHBvcnQgZnVuY3Rpb24gSGFuZGxlYmFyc0Vudmlyb25tZW50KGhlbHBlcnMsIHBhcnRpYWxzLCBkZWNvcmF0b3JzKSB7XG4gIHRoaXMuaGVscGVycyA9IGhlbHBlcnMgfHwge307XG4gIHRoaXMucGFydGlhbHMgPSBwYXJ0aWFscyB8fCB7fTtcbiAgdGhpcy5kZWNvcmF0b3JzID0gZGVjb3JhdG9ycyB8fCB7fTtcblxuICByZWdpc3RlckRlZmF1bHRIZWxwZXJzKHRoaXMpO1xuICByZWdpc3RlckRlZmF1bHREZWNvcmF0b3JzKHRoaXMpO1xufVxuXG5IYW5kbGViYXJzRW52aXJvbm1lbnQucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogSGFuZGxlYmFyc0Vudmlyb25tZW50LFxuXG4gIGxvZ2dlcjogbG9nZ2VyLFxuICBsb2c6IGxvZ2dlci5sb2csXG5cbiAgcmVnaXN0ZXJIZWxwZXI6IGZ1bmN0aW9uKG5hbWUsIGZuKSB7XG4gICAgaWYgKHRvU3RyaW5nLmNhbGwobmFtZSkgPT09IG9iamVjdFR5cGUpIHtcbiAgICAgIGlmIChmbikge1xuICAgICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCdBcmcgbm90IHN1cHBvcnRlZCB3aXRoIG11bHRpcGxlIGhlbHBlcnMnKTtcbiAgICAgIH1cbiAgICAgIGV4dGVuZCh0aGlzLmhlbHBlcnMsIG5hbWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmhlbHBlcnNbbmFtZV0gPSBmbjtcbiAgICB9XG4gIH0sXG4gIHVucmVnaXN0ZXJIZWxwZXI6IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICBkZWxldGUgdGhpcy5oZWxwZXJzW25hbWVdO1xuICB9LFxuXG4gIHJlZ2lzdGVyUGFydGlhbDogZnVuY3Rpb24obmFtZSwgcGFydGlhbCkge1xuICAgIGlmICh0b1N0cmluZy5jYWxsKG5hbWUpID09PSBvYmplY3RUeXBlKSB7XG4gICAgICBleHRlbmQodGhpcy5wYXJ0aWFscywgbmFtZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICh0eXBlb2YgcGFydGlhbCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbihcbiAgICAgICAgICBgQXR0ZW1wdGluZyB0byByZWdpc3RlciBhIHBhcnRpYWwgY2FsbGVkIFwiJHtuYW1lfVwiIGFzIHVuZGVmaW5lZGBcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIHRoaXMucGFydGlhbHNbbmFtZV0gPSBwYXJ0aWFsO1xuICAgIH1cbiAgfSxcbiAgdW5yZWdpc3RlclBhcnRpYWw6IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICBkZWxldGUgdGhpcy5wYXJ0aWFsc1tuYW1lXTtcbiAgfSxcblxuICByZWdpc3RlckRlY29yYXRvcjogZnVuY3Rpb24obmFtZSwgZm4pIHtcbiAgICBpZiAodG9TdHJpbmcuY2FsbChuYW1lKSA9PT0gb2JqZWN0VHlwZSkge1xuICAgICAgaWYgKGZuKSB7XG4gICAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oJ0FyZyBub3Qgc3VwcG9ydGVkIHdpdGggbXVsdGlwbGUgZGVjb3JhdG9ycycpO1xuICAgICAgfVxuICAgICAgZXh0ZW5kKHRoaXMuZGVjb3JhdG9ycywgbmFtZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZGVjb3JhdG9yc1tuYW1lXSA9IGZuO1xuICAgIH1cbiAgfSxcbiAgdW5yZWdpc3RlckRlY29yYXRvcjogZnVuY3Rpb24obmFtZSkge1xuICAgIGRlbGV0ZSB0aGlzLmRlY29yYXRvcnNbbmFtZV07XG4gIH0sXG4gIC8qKlxuICAgKiBSZXNldCB0aGUgbWVtb3J5IG9mIGlsbGVnYWwgcHJvcGVydHkgYWNjZXNzZXMgdGhhdCBoYXZlIGFscmVhZHkgYmVlbiBsb2dnZWQuXG4gICAqIEBkZXByZWNhdGVkIHNob3VsZCBvbmx5IGJlIHVzZWQgaW4gaGFuZGxlYmFycyB0ZXN0LWNhc2VzXG4gICAqL1xuICByZXNldExvZ2dlZFByb3BlcnR5QWNjZXNzZXMoKSB7XG4gICAgcmVzZXRMb2dnZWRQcm9wZXJ0aWVzKCk7XG4gIH1cbn07XG5cbmV4cG9ydCBsZXQgbG9nID0gbG9nZ2VyLmxvZztcblxuZXhwb3J0IHsgY3JlYXRlRnJhbWUsIGxvZ2dlciB9O1xuIl19

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/compiler/ast.js':
      /*!**********************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/compiler/ast.js ***!
  \**********************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        var AST = {
          // Public API used to evaluate derived attributes regarding AST nodes
          helpers: {
            // a mustache is definitely a helper if:
            // * it is an eligible helper, and
            // * it has at least one parameter or hash segment
            helperExpression: function helperExpression(node) {
              return (
                node.type === 'SubExpression' ||
                ((node.type === 'MustacheStatement' ||
                  node.type === 'BlockStatement') &&
                  !!((node.params && node.params.length) || node.hash))
              );
            },

            scopedId: function scopedId(path) {
              return /^\.|this\b/.test(path.original);
            },

            // an ID is simple if it only has one part, and that part is not
            // `..` or `this`.
            simpleId: function simpleId(path) {
              return (
                path.parts.length === 1 &&
                !AST.helpers.scopedId(path) &&
                !path.depth
              );
            },
          },
        };

        // Must be exported as an object rather than the root of the module as the jison lexer
        // must modify the object to operate properly.
        exports['default'] = AST;
        module.exports = exports['default'];
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2NvbXBpbGVyL2FzdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxJQUFJLEdBQUcsR0FBRzs7QUFFUixTQUFPLEVBQUU7Ozs7QUFJUCxvQkFBZ0IsRUFBRSwwQkFBUyxJQUFJLEVBQUU7QUFDL0IsYUFDRSxJQUFJLENBQUMsSUFBSSxLQUFLLGVBQWUsSUFDNUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxLQUFLLG1CQUFtQixJQUNqQyxJQUFJLENBQUMsSUFBSSxLQUFLLGdCQUFnQixDQUFBLElBQzlCLENBQUMsRUFBRSxBQUFDLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLElBQUssSUFBSSxDQUFDLElBQUksQ0FBQSxBQUFDLEFBQUMsQ0FDdkQ7S0FDSDs7QUFFRCxZQUFRLEVBQUUsa0JBQVMsSUFBSSxFQUFFO0FBQ3ZCLGFBQU8sYUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQUM7S0FDekM7Ozs7QUFJRCxZQUFRLEVBQUUsa0JBQVMsSUFBSSxFQUFFO0FBQ3ZCLGFBQ0UsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUNyRTtLQUNIO0dBQ0Y7Q0FDRixDQUFDOzs7O3FCQUlhLEdBQUciLCJmaWxlIjoiYXN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsibGV0IEFTVCA9IHtcbiAgLy8gUHVibGljIEFQSSB1c2VkIHRvIGV2YWx1YXRlIGRlcml2ZWQgYXR0cmlidXRlcyByZWdhcmRpbmcgQVNUIG5vZGVzXG4gIGhlbHBlcnM6IHtcbiAgICAvLyBhIG11c3RhY2hlIGlzIGRlZmluaXRlbHkgYSBoZWxwZXIgaWY6XG4gICAgLy8gKiBpdCBpcyBhbiBlbGlnaWJsZSBoZWxwZXIsIGFuZFxuICAgIC8vICogaXQgaGFzIGF0IGxlYXN0IG9uZSBwYXJhbWV0ZXIgb3IgaGFzaCBzZWdtZW50XG4gICAgaGVscGVyRXhwcmVzc2lvbjogZnVuY3Rpb24obm9kZSkge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgbm9kZS50eXBlID09PSAnU3ViRXhwcmVzc2lvbicgfHxcbiAgICAgICAgKChub2RlLnR5cGUgPT09ICdNdXN0YWNoZVN0YXRlbWVudCcgfHxcbiAgICAgICAgICBub2RlLnR5cGUgPT09ICdCbG9ja1N0YXRlbWVudCcpICYmXG4gICAgICAgICAgISEoKG5vZGUucGFyYW1zICYmIG5vZGUucGFyYW1zLmxlbmd0aCkgfHwgbm9kZS5oYXNoKSlcbiAgICAgICk7XG4gICAgfSxcblxuICAgIHNjb3BlZElkOiBmdW5jdGlvbihwYXRoKSB7XG4gICAgICByZXR1cm4gL15cXC58dGhpc1xcYi8udGVzdChwYXRoLm9yaWdpbmFsKTtcbiAgICB9LFxuXG4gICAgLy8gYW4gSUQgaXMgc2ltcGxlIGlmIGl0IG9ubHkgaGFzIG9uZSBwYXJ0LCBhbmQgdGhhdCBwYXJ0IGlzIG5vdFxuICAgIC8vIGAuLmAgb3IgYHRoaXNgLlxuICAgIHNpbXBsZUlkOiBmdW5jdGlvbihwYXRoKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICBwYXRoLnBhcnRzLmxlbmd0aCA9PT0gMSAmJiAhQVNULmhlbHBlcnMuc2NvcGVkSWQocGF0aCkgJiYgIXBhdGguZGVwdGhcbiAgICAgICk7XG4gICAgfVxuICB9XG59O1xuXG4vLyBNdXN0IGJlIGV4cG9ydGVkIGFzIGFuIG9iamVjdCByYXRoZXIgdGhhbiB0aGUgcm9vdCBvZiB0aGUgbW9kdWxlIGFzIHRoZSBqaXNvbiBsZXhlclxuLy8gbXVzdCBtb2RpZnkgdGhlIG9iamVjdCB0byBvcGVyYXRlIHByb3Blcmx5LlxuZXhwb3J0IGRlZmF1bHQgQVNUO1xuIl19

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/compiler/base.js':
      /*!***********************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/compiler/base.js ***!
  \***********************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        exports.parseWithoutProcessing = parseWithoutProcessing;
        exports.parse = parse;
        // istanbul ignore next

        function _interopRequireWildcard(obj) {
          if (obj && obj.__esModule) {
            return obj;
          } else {
            var newObj = {};
            if (obj != null) {
              for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key))
                  newObj[key] = obj[key];
              }
            }
            newObj['default'] = obj;
            return newObj;
          }
        }

        // istanbul ignore next

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var _parser = __webpack_require__(
          /*! ./parser */ '../node_modules/handlebars/dist/cjs/handlebars/compiler/parser.js'
        );

        var _parser2 = _interopRequireDefault(_parser);

        var _whitespaceControl = __webpack_require__(
          /*! ./whitespace-control */ '../node_modules/handlebars/dist/cjs/handlebars/compiler/whitespace-control.js'
        );

        var _whitespaceControl2 = _interopRequireDefault(_whitespaceControl);

        var _helpers = __webpack_require__(
          /*! ./helpers */ '../node_modules/handlebars/dist/cjs/handlebars/compiler/helpers.js'
        );

        var Helpers = _interopRequireWildcard(_helpers);

        var _utils = __webpack_require__(
          /*! ../utils */ '../node_modules/handlebars/dist/cjs/handlebars/utils.js'
        );

        exports.parser = _parser2['default'];

        var yy = {};
        _utils.extend(yy, Helpers);

        function parseWithoutProcessing(input, options) {
          // Just return if an already-compiled AST was passed in.
          if (input.type === 'Program') {
            return input;
          }

          _parser2['default'].yy = yy;

          // Altering the shared object here, but this is ok as parser is a sync operation
          yy.locInfo = function (locInfo) {
            return new yy.SourceLocation(options && options.srcName, locInfo);
          };

          var ast = _parser2['default'].parse(input);

          return ast;
        }

        function parse(input, options) {
          var ast = parseWithoutProcessing(input, options);
          var strip = new _whitespaceControl2['default'](options);

          return strip.accept(ast);
        }
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2NvbXBpbGVyL2Jhc2UuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztzQkFBbUIsVUFBVTs7OztpQ0FDQyxzQkFBc0I7Ozs7dUJBQzNCLFdBQVc7O0lBQXhCLE9BQU87O3FCQUNJLFVBQVU7O1FBRXhCLE1BQU07O0FBRWYsSUFBSSxFQUFFLEdBQUcsRUFBRSxDQUFDO0FBQ1osY0FBTyxFQUFFLEVBQUUsT0FBTyxDQUFDLENBQUM7O0FBRWIsU0FBUyxzQkFBc0IsQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFOztBQUVyRCxNQUFJLEtBQUssQ0FBQyxJQUFJLEtBQUssU0FBUyxFQUFFO0FBQzVCLFdBQU8sS0FBSyxDQUFDO0dBQ2Q7O0FBRUQsc0JBQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQzs7O0FBR2YsSUFBRSxDQUFDLE9BQU8sR0FBRyxVQUFTLE9BQU8sRUFBRTtBQUM3QixXQUFPLElBQUksRUFBRSxDQUFDLGNBQWMsQ0FBQyxPQUFPLElBQUksT0FBTyxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztHQUNuRSxDQUFDOztBQUVGLE1BQUksR0FBRyxHQUFHLG9CQUFPLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQzs7QUFFOUIsU0FBTyxHQUFHLENBQUM7Q0FDWjs7QUFFTSxTQUFTLEtBQUssQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFO0FBQ3BDLE1BQUksR0FBRyxHQUFHLHNCQUFzQixDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztBQUNqRCxNQUFJLEtBQUssR0FBRyxtQ0FBc0IsT0FBTyxDQUFDLENBQUM7O0FBRTNDLFNBQU8sS0FBSyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztDQUMxQiIsImZpbGUiOiJiYXNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBhcnNlciBmcm9tICcuL3BhcnNlcic7XG5pbXBvcnQgV2hpdGVzcGFjZUNvbnRyb2wgZnJvbSAnLi93aGl0ZXNwYWNlLWNvbnRyb2wnO1xuaW1wb3J0ICogYXMgSGVscGVycyBmcm9tICcuL2hlbHBlcnMnO1xuaW1wb3J0IHsgZXh0ZW5kIH0gZnJvbSAnLi4vdXRpbHMnO1xuXG5leHBvcnQgeyBwYXJzZXIgfTtcblxubGV0IHl5ID0ge307XG5leHRlbmQoeXksIEhlbHBlcnMpO1xuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VXaXRob3V0UHJvY2Vzc2luZyhpbnB1dCwgb3B0aW9ucykge1xuICAvLyBKdXN0IHJldHVybiBpZiBhbiBhbHJlYWR5LWNvbXBpbGVkIEFTVCB3YXMgcGFzc2VkIGluLlxuICBpZiAoaW5wdXQudHlwZSA9PT0gJ1Byb2dyYW0nKSB7XG4gICAgcmV0dXJuIGlucHV0O1xuICB9XG5cbiAgcGFyc2VyLnl5ID0geXk7XG5cbiAgLy8gQWx0ZXJpbmcgdGhlIHNoYXJlZCBvYmplY3QgaGVyZSwgYnV0IHRoaXMgaXMgb2sgYXMgcGFyc2VyIGlzIGEgc3luYyBvcGVyYXRpb25cbiAgeXkubG9jSW5mbyA9IGZ1bmN0aW9uKGxvY0luZm8pIHtcbiAgICByZXR1cm4gbmV3IHl5LlNvdXJjZUxvY2F0aW9uKG9wdGlvbnMgJiYgb3B0aW9ucy5zcmNOYW1lLCBsb2NJbmZvKTtcbiAgfTtcblxuICBsZXQgYXN0ID0gcGFyc2VyLnBhcnNlKGlucHV0KTtcblxuICByZXR1cm4gYXN0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2UoaW5wdXQsIG9wdGlvbnMpIHtcbiAgbGV0IGFzdCA9IHBhcnNlV2l0aG91dFByb2Nlc3NpbmcoaW5wdXQsIG9wdGlvbnMpO1xuICBsZXQgc3RyaXAgPSBuZXcgV2hpdGVzcGFjZUNvbnRyb2wob3B0aW9ucyk7XG5cbiAgcmV0dXJuIHN0cmlwLmFjY2VwdChhc3QpO1xufVxuIl19

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/compiler/code-gen.js':
      /*!***************************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/compiler/code-gen.js ***!
  \***************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* global define */

        exports.__esModule = true;

        var _utils = __webpack_require__(
          /*! ../utils */ '../node_modules/handlebars/dist/cjs/handlebars/utils.js'
        );

        var SourceNode = undefined;

        try {
          /* istanbul ignore next */
          if (false) {
            var SourceMap;
          }
        } catch (err) {}
        /* NOP */

        /* istanbul ignore if: tested but not covered in istanbul due to dist build  */
        if (!SourceNode) {
          SourceNode = function (line, column, srcFile, chunks) {
            this.src = '';
            if (chunks) {
              this.add(chunks);
            }
          };
          /* istanbul ignore next */
          SourceNode.prototype = {
            add: function add(chunks) {
              if (_utils.isArray(chunks)) {
                chunks = chunks.join('');
              }
              this.src += chunks;
            },
            prepend: function prepend(chunks) {
              if (_utils.isArray(chunks)) {
                chunks = chunks.join('');
              }
              this.src = chunks + this.src;
            },
            toStringWithSourceMap: function toStringWithSourceMap() {
              return { code: this.toString() };
            },
            toString: function toString() {
              return this.src;
            },
          };
        }

        function castChunk(chunk, codeGen, loc) {
          if (_utils.isArray(chunk)) {
            var ret = [];

            for (var i = 0, len = chunk.length; i < len; i++) {
              ret.push(codeGen.wrap(chunk[i], loc));
            }
            return ret;
          } else if (typeof chunk === 'boolean' || typeof chunk === 'number') {
            // Handle primitives that the SourceNode will throw up on
            return chunk + '';
          }
          return chunk;
        }

        function CodeGen(srcFile) {
          this.srcFile = srcFile;
          this.source = [];
        }

        CodeGen.prototype = {
          isEmpty: function isEmpty() {
            return !this.source.length;
          },
          prepend: function prepend(source, loc) {
            this.source.unshift(this.wrap(source, loc));
          },
          push: function push(source, loc) {
            this.source.push(this.wrap(source, loc));
          },

          merge: function merge() {
            var source = this.empty();
            this.each(function (line) {
              source.add(['  ', line, '\n']);
            });
            return source;
          },

          each: function each(iter) {
            for (var i = 0, len = this.source.length; i < len; i++) {
              iter(this.source[i]);
            }
          },

          empty: function empty() {
            var loc = this.currentLocation || { start: {} };
            return new SourceNode(
              loc.start.line,
              loc.start.column,
              this.srcFile
            );
          },
          wrap: function wrap(chunk) {
            var loc =
              arguments.length <= 1 || arguments[1] === undefined
                ? this.currentLocation || { start: {} }
                : arguments[1];

            if (chunk instanceof SourceNode) {
              return chunk;
            }

            chunk = castChunk(chunk, this, loc);

            return new SourceNode(
              loc.start.line,
              loc.start.column,
              this.srcFile,
              chunk
            );
          },

          functionCall: function functionCall(fn, type, params) {
            params = this.generateList(params);
            return this.wrap([fn, type ? '.' + type + '(' : '(', params, ')']);
          },

          quotedString: function quotedString(str) {
            return (
              '"' +
              (str + '')
                .replace(/\\/g, '\\\\')
                .replace(/"/g, '\\"')
                .replace(/\n/g, '\\n')
                .replace(/\r/g, '\\r')
                .replace(/\u2028/g, '\\u2028') // Per Ecma-262 7.3 + 7.8.4
                .replace(/\u2029/g, '\\u2029') +
              '"'
            );
          },

          objectLiteral: function objectLiteral(obj) {
            // istanbul ignore next

            var _this = this;

            var pairs = [];

            Object.keys(obj).forEach(function (key) {
              var value = castChunk(obj[key], _this);
              if (value !== 'undefined') {
                pairs.push([_this.quotedString(key), ':', value]);
              }
            });

            var ret = this.generateList(pairs);
            ret.prepend('{');
            ret.add('}');
            return ret;
          },

          generateList: function generateList(entries) {
            var ret = this.empty();

            for (var i = 0, len = entries.length; i < len; i++) {
              if (i) {
                ret.add(',');
              }

              ret.add(castChunk(entries[i], this));
            }

            return ret;
          },

          generateArray: function generateArray(entries) {
            var ret = this.generateList(entries);
            ret.prepend('[');
            ret.add(']');

            return ret;
          },
        };

        exports['default'] = CodeGen;
        module.exports = exports['default'];
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/compiler/compiler.js':
      /*!***************************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/compiler/compiler.js ***!
  \***************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* eslint-disable new-cap */

        exports.__esModule = true;
        exports.Compiler = Compiler;
        exports.precompile = precompile;
        exports.compile = compile;
        // istanbul ignore next

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var _exception = __webpack_require__(
          /*! ../exception */ '../node_modules/handlebars/dist/cjs/handlebars/exception.js'
        );

        var _exception2 = _interopRequireDefault(_exception);

        var _utils = __webpack_require__(
          /*! ../utils */ '../node_modules/handlebars/dist/cjs/handlebars/utils.js'
        );

        var _ast = __webpack_require__(
          /*! ./ast */ '../node_modules/handlebars/dist/cjs/handlebars/compiler/ast.js'
        );

        var _ast2 = _interopRequireDefault(_ast);

        var slice = [].slice;

        function Compiler() {}

        // the foundHelper register will disambiguate helper lookup from finding a
        // function in a context. This is necessary for mustache compatibility, which
        // requires that context functions in blocks are evaluated by blockHelperMissing,
        // and then proceed as if the resulting value was provided to blockHelperMissing.

        Compiler.prototype = {
          compiler: Compiler,

          equals: function equals(other) {
            var len = this.opcodes.length;
            if (other.opcodes.length !== len) {
              return false;
            }

            for (var i = 0; i < len; i++) {
              var opcode = this.opcodes[i],
                otherOpcode = other.opcodes[i];
              if (
                opcode.opcode !== otherOpcode.opcode ||
                !argEquals(opcode.args, otherOpcode.args)
              ) {
                return false;
              }
            }

            // We know that length is the same between the two arrays because they are directly tied
            // to the opcode behavior above.
            len = this.children.length;
            for (var i = 0; i < len; i++) {
              if (!this.children[i].equals(other.children[i])) {
                return false;
              }
            }

            return true;
          },

          guid: 0,

          compile: function compile(program, options) {
            this.sourceNode = [];
            this.opcodes = [];
            this.children = [];
            this.options = options;
            this.stringParams = options.stringParams;
            this.trackIds = options.trackIds;

            options.blockParams = options.blockParams || [];

            options.knownHelpers = _utils.extend(
              Object.create(null),
              {
                helperMissing: true,
                blockHelperMissing: true,
                each: true,
                if: true,
                unless: true,
                with: true,
                log: true,
                lookup: true,
              },
              options.knownHelpers
            );

            return this.accept(program);
          },

          compileProgram: function compileProgram(program) {
            var childCompiler = new this.compiler(),
              // eslint-disable-line new-cap
              result = childCompiler.compile(program, this.options),
              guid = this.guid++;

            this.usePartial = this.usePartial || result.usePartial;

            this.children[guid] = result;
            this.useDepths = this.useDepths || result.useDepths;

            return guid;
          },

          accept: function accept(node) {
            /* istanbul ignore next: Sanity code */
            if (!this[node.type]) {
              throw new _exception2['default'](
                'Unknown type: ' + node.type,
                node
              );
            }

            this.sourceNode.unshift(node);
            var ret = this[node.type](node);
            this.sourceNode.shift();
            return ret;
          },

          Program: function Program(program) {
            this.options.blockParams.unshift(program.blockParams);

            var body = program.body,
              bodyLength = body.length;
            for (var i = 0; i < bodyLength; i++) {
              this.accept(body[i]);
            }

            this.options.blockParams.shift();

            this.isSimple = bodyLength === 1;
            this.blockParams = program.blockParams
              ? program.blockParams.length
              : 0;

            return this;
          },

          BlockStatement: function BlockStatement(block) {
            transformLiteralToPath(block);

            var program = block.program,
              inverse = block.inverse;

            program = program && this.compileProgram(program);
            inverse = inverse && this.compileProgram(inverse);

            var type = this.classifySexpr(block);

            if (type === 'helper') {
              this.helperSexpr(block, program, inverse);
            } else if (type === 'simple') {
              this.simpleSexpr(block);

              // now that the simple mustache is resolved, we need to
              // evaluate it by executing `blockHelperMissing`
              this.opcode('pushProgram', program);
              this.opcode('pushProgram', inverse);
              this.opcode('emptyHash');
              this.opcode('blockValue', block.path.original);
            } else {
              this.ambiguousSexpr(block, program, inverse);

              // now that the simple mustache is resolved, we need to
              // evaluate it by executing `blockHelperMissing`
              this.opcode('pushProgram', program);
              this.opcode('pushProgram', inverse);
              this.opcode('emptyHash');
              this.opcode('ambiguousBlockValue');
            }

            this.opcode('append');
          },

          DecoratorBlock: function DecoratorBlock(decorator) {
            var program =
              decorator.program && this.compileProgram(decorator.program);
            var params = this.setupFullMustacheParams(
                decorator,
                program,
                undefined
              ),
              path = decorator.path;

            this.useDecorators = true;
            this.opcode('registerDecorator', params.length, path.original);
          },

          PartialStatement: function PartialStatement(partial) {
            this.usePartial = true;

            var program = partial.program;
            if (program) {
              program = this.compileProgram(partial.program);
            }

            var params = partial.params;
            if (params.length > 1) {
              throw new _exception2['default'](
                'Unsupported number of partial arguments: ' + params.length,
                partial
              );
            } else if (!params.length) {
              if (this.options.explicitPartialContext) {
                this.opcode('pushLiteral', 'undefined');
              } else {
                params.push({ type: 'PathExpression', parts: [], depth: 0 });
              }
            }

            var partialName = partial.name.original,
              isDynamic = partial.name.type === 'SubExpression';
            if (isDynamic) {
              this.accept(partial.name);
            }

            this.setupFullMustacheParams(partial, program, undefined, true);

            var indent = partial.indent || '';
            if (this.options.preventIndent && indent) {
              this.opcode('appendContent', indent);
              indent = '';
            }

            this.opcode('invokePartial', isDynamic, partialName, indent);
            this.opcode('append');
          },
          PartialBlockStatement: function PartialBlockStatement(partialBlock) {
            this.PartialStatement(partialBlock);
          },

          MustacheStatement: function MustacheStatement(mustache) {
            this.SubExpression(mustache);

            if (mustache.escaped && !this.options.noEscape) {
              this.opcode('appendEscaped');
            } else {
              this.opcode('append');
            }
          },
          Decorator: function Decorator(decorator) {
            this.DecoratorBlock(decorator);
          },

          ContentStatement: function ContentStatement(content) {
            if (content.value) {
              this.opcode('appendContent', content.value);
            }
          },

          CommentStatement: function CommentStatement() {},

          SubExpression: function SubExpression(sexpr) {
            transformLiteralToPath(sexpr);
            var type = this.classifySexpr(sexpr);

            if (type === 'simple') {
              this.simpleSexpr(sexpr);
            } else if (type === 'helper') {
              this.helperSexpr(sexpr);
            } else {
              this.ambiguousSexpr(sexpr);
            }
          },
          ambiguousSexpr: function ambiguousSexpr(sexpr, program, inverse) {
            var path = sexpr.path,
              name = path.parts[0],
              isBlock = program != null || inverse != null;

            this.opcode('getContext', path.depth);

            this.opcode('pushProgram', program);
            this.opcode('pushProgram', inverse);

            path.strict = true;
            this.accept(path);

            this.opcode('invokeAmbiguous', name, isBlock);
          },

          simpleSexpr: function simpleSexpr(sexpr) {
            var path = sexpr.path;
            path.strict = true;
            this.accept(path);
            this.opcode('resolvePossibleLambda');
          },

          helperSexpr: function helperSexpr(sexpr, program, inverse) {
            var params = this.setupFullMustacheParams(sexpr, program, inverse),
              path = sexpr.path,
              name = path.parts[0];

            if (this.options.knownHelpers[name]) {
              this.opcode('invokeKnownHelper', params.length, name);
            } else if (this.options.knownHelpersOnly) {
              throw new _exception2['default'](
                'You specified knownHelpersOnly, but used the unknown helper ' +
                  name,
                sexpr
              );
            } else {
              path.strict = true;
              path.falsy = true;

              this.accept(path);
              this.opcode(
                'invokeHelper',
                params.length,
                path.original,
                _ast2['default'].helpers.simpleId(path)
              );
            }
          },

          PathExpression: function PathExpression(path) {
            this.addDepth(path.depth);
            this.opcode('getContext', path.depth);

            var name = path.parts[0],
              scoped = _ast2['default'].helpers.scopedId(path),
              blockParamId =
                !path.depth && !scoped && this.blockParamIndex(name);

            if (blockParamId) {
              this.opcode('lookupBlockParam', blockParamId, path.parts);
            } else if (!name) {
              // Context reference, i.e. `{{foo .}}` or `{{foo ..}}`
              this.opcode('pushContext');
            } else if (path.data) {
              this.options.data = true;
              this.opcode('lookupData', path.depth, path.parts, path.strict);
            } else {
              this.opcode(
                'lookupOnContext',
                path.parts,
                path.falsy,
                path.strict,
                scoped
              );
            }
          },

          StringLiteral: function StringLiteral(string) {
            this.opcode('pushString', string.value);
          },

          NumberLiteral: function NumberLiteral(number) {
            this.opcode('pushLiteral', number.value);
          },

          BooleanLiteral: function BooleanLiteral(bool) {
            this.opcode('pushLiteral', bool.value);
          },

          UndefinedLiteral: function UndefinedLiteral() {
            this.opcode('pushLiteral', 'undefined');
          },

          NullLiteral: function NullLiteral() {
            this.opcode('pushLiteral', 'null');
          },

          Hash: function Hash(hash) {
            var pairs = hash.pairs,
              i = 0,
              l = pairs.length;

            this.opcode('pushHash');

            for (; i < l; i++) {
              this.pushParam(pairs[i].value);
            }
            while (i--) {
              this.opcode('assignToHash', pairs[i].key);
            }
            this.opcode('popHash');
          },

          // HELPERS
          opcode: function opcode(name) {
            this.opcodes.push({
              opcode: name,
              args: slice.call(arguments, 1),
              loc: this.sourceNode[0].loc,
            });
          },

          addDepth: function addDepth(depth) {
            if (!depth) {
              return;
            }

            this.useDepths = true;
          },

          classifySexpr: function classifySexpr(sexpr) {
            var isSimple = _ast2['default'].helpers.simpleId(sexpr.path);

            var isBlockParam =
              isSimple && !!this.blockParamIndex(sexpr.path.parts[0]);

            // a mustache is an eligible helper if:
            // * its id is simple (a single part, not `this` or `..`)
            var isHelper =
              !isBlockParam && _ast2['default'].helpers.helperExpression(sexpr);

            // if a mustache is an eligible helper but not a definite
            // helper, it is ambiguous, and will be resolved in a later
            // pass or at runtime.
            var isEligible = !isBlockParam && (isHelper || isSimple);

            // if ambiguous, we can possibly resolve the ambiguity now
            // An eligible helper is one that does not have a complex path, i.e. `this.foo`, `../foo` etc.
            if (isEligible && !isHelper) {
              var _name = sexpr.path.parts[0],
                options = this.options;
              if (options.knownHelpers[_name]) {
                isHelper = true;
              } else if (options.knownHelpersOnly) {
                isEligible = false;
              }
            }

            if (isHelper) {
              return 'helper';
            } else if (isEligible) {
              return 'ambiguous';
            } else {
              return 'simple';
            }
          },

          pushParams: function pushParams(params) {
            for (var i = 0, l = params.length; i < l; i++) {
              this.pushParam(params[i]);
            }
          },

          pushParam: function pushParam(val) {
            var value = val.value != null ? val.value : val.original || '';

            if (this.stringParams) {
              if (value.replace) {
                value = value.replace(/^(\.?\.\/)*/g, '').replace(/\//g, '.');
              }

              if (val.depth) {
                this.addDepth(val.depth);
              }
              this.opcode('getContext', val.depth || 0);
              this.opcode('pushStringParam', value, val.type);

              if (val.type === 'SubExpression') {
                // SubExpressions get evaluated and passed in
                // in string params mode.
                this.accept(val);
              }
            } else {
              if (this.trackIds) {
                var blockParamIndex = undefined;
                if (
                  val.parts &&
                  !_ast2['default'].helpers.scopedId(val) &&
                  !val.depth
                ) {
                  blockParamIndex = this.blockParamIndex(val.parts[0]);
                }
                if (blockParamIndex) {
                  var blockParamChild = val.parts.slice(1).join('.');
                  this.opcode(
                    'pushId',
                    'BlockParam',
                    blockParamIndex,
                    blockParamChild
                  );
                } else {
                  value = val.original || value;
                  if (value.replace) {
                    value = value
                      .replace(/^this(?:\.|$)/, '')
                      .replace(/^\.\//, '')
                      .replace(/^\.$/, '');
                  }

                  this.opcode('pushId', val.type, value);
                }
              }
              this.accept(val);
            }
          },

          setupFullMustacheParams: function setupFullMustacheParams(
            sexpr,
            program,
            inverse,
            omitEmpty
          ) {
            var params = sexpr.params;
            this.pushParams(params);

            this.opcode('pushProgram', program);
            this.opcode('pushProgram', inverse);

            if (sexpr.hash) {
              this.accept(sexpr.hash);
            } else {
              this.opcode('emptyHash', omitEmpty);
            }

            return params;
          },

          blockParamIndex: function blockParamIndex(name) {
            for (
              var depth = 0, len = this.options.blockParams.length;
              depth < len;
              depth++
            ) {
              var blockParams = this.options.blockParams[depth],
                param = blockParams && _utils.indexOf(blockParams, name);
              if (blockParams && param >= 0) {
                return [depth, param];
              }
            }
          },
        };

        function precompile(input, options, env) {
          if (
            input == null ||
            (typeof input !== 'string' && input.type !== 'Program')
          ) {
            throw new _exception2['default'](
              'You must pass a string or Handlebars AST to Handlebars.precompile. You passed ' +
                input
            );
          }

          options = options || {};
          if (!('data' in options)) {
            options.data = true;
          }
          if (options.compat) {
            options.useDepths = true;
          }

          var ast = env.parse(input, options),
            environment = new env.Compiler().compile(ast, options);
          return new env.JavaScriptCompiler().compile(environment, options);
        }

        function compile(input, options, env) {
          if (options === undefined) options = {};

          if (
            input == null ||
            (typeof input !== 'string' && input.type !== 'Program')
          ) {
            throw new _exception2['default'](
              'You must pass a string or Handlebars AST to Handlebars.compile. You passed ' +
                input
            );
          }

          options = _utils.extend({}, options);
          if (!('data' in options)) {
            options.data = true;
          }
          if (options.compat) {
            options.useDepths = true;
          }

          var compiled = undefined;

          function compileInput() {
            var ast = env.parse(input, options),
              environment = new env.Compiler().compile(ast, options),
              templateSpec = new env.JavaScriptCompiler().compile(
                environment,
                options,
                undefined,
                true
              );
            return env.template(templateSpec);
          }

          // Template is only compiled on first use and cached after that point.
          function ret(context, execOptions) {
            if (!compiled) {
              compiled = compileInput();
            }
            return compiled.call(this, context, execOptions);
          }
          ret._setup = function (setupOptions) {
            if (!compiled) {
              compiled = compileInput();
            }
            return compiled._setup(setupOptions);
          };
          ret._child = function (i, data, blockParams, depths) {
            if (!compiled) {
              compiled = compileInput();
            }
            return compiled._child(i, data, blockParams, depths);
          };
          return ret;
        }

        function argEquals(a, b) {
          if (a === b) {
            return true;
          }

          if (_utils.isArray(a) && _utils.isArray(b) && a.length === b.length) {
            for (var i = 0; i < a.length; i++) {
              if (!argEquals(a[i], b[i])) {
                return false;
              }
            }
            return true;
          }
        }

        function transformLiteralToPath(sexpr) {
          if (!sexpr.path.parts) {
            var literal = sexpr.path;
            // Casting to string here to make false and 0 literal values play nicely with the rest
            // of the system.
            sexpr.path = {
              type: 'PathExpression',
              data: false,
              depth: 0,
              parts: [literal.original + ''],
              original: literal.original + '',
              loc: literal.loc,
            };
          }
        }
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/compiler/helpers.js':
      /*!**************************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/compiler/helpers.js ***!
  \**************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        exports.SourceLocation = SourceLocation;
        exports.id = id;
        exports.stripFlags = stripFlags;
        exports.stripComment = stripComment;
        exports.preparePath = preparePath;
        exports.prepareMustache = prepareMustache;
        exports.prepareRawBlock = prepareRawBlock;
        exports.prepareBlock = prepareBlock;
        exports.prepareProgram = prepareProgram;
        exports.preparePartialBlock = preparePartialBlock;
        // istanbul ignore next

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var _exception = __webpack_require__(
          /*! ../exception */ '../node_modules/handlebars/dist/cjs/handlebars/exception.js'
        );

        var _exception2 = _interopRequireDefault(_exception);

        function validateClose(open, close) {
          close = close.path ? close.path.original : close;

          if (open.path.original !== close) {
            var errorNode = { loc: open.path.loc };

            throw new _exception2['default'](
              open.path.original + " doesn't match " + close,
              errorNode
            );
          }
        }

        function SourceLocation(source, locInfo) {
          this.source = source;
          this.start = {
            line: locInfo.first_line,
            column: locInfo.first_column,
          };
          this.end = {
            line: locInfo.last_line,
            column: locInfo.last_column,
          };
        }

        function id(token) {
          if (/^\[.*\]$/.test(token)) {
            return token.substring(1, token.length - 1);
          } else {
            return token;
          }
        }

        function stripFlags(open, close) {
          return {
            open: open.charAt(2) === '~',
            close: close.charAt(close.length - 3) === '~',
          };
        }

        function stripComment(comment) {
          return comment.replace(/^\{\{~?!-?-?/, '').replace(/-?-?~?\}\}$/, '');
        }

        function preparePath(data, parts, loc) {
          loc = this.locInfo(loc);

          var original = data ? '@' : '',
            dig = [],
            depth = 0;

          for (var i = 0, l = parts.length; i < l; i++) {
            var part = parts[i].part,
              // If we have [] syntax then we do not treat path references as operators,
              // i.e. foo.[this] resolves to approximately context.foo['this']
              isLiteral = parts[i].original !== part;
            original += (parts[i].separator || '') + part;

            if (
              !isLiteral &&
              (part === '..' || part === '.' || part === 'this')
            ) {
              if (dig.length > 0) {
                throw new _exception2['default']('Invalid path: ' + original, {
                  loc: loc,
                });
              } else if (part === '..') {
                depth++;
              }
            } else {
              dig.push(part);
            }
          }

          return {
            type: 'PathExpression',
            data: data,
            depth: depth,
            parts: dig,
            original: original,
            loc: loc,
          };
        }

        function prepareMustache(path, params, hash, open, strip, locInfo) {
          // Must use charAt to support IE pre-10
          var escapeFlag = open.charAt(3) || open.charAt(2),
            escaped = escapeFlag !== '{' && escapeFlag !== '&';

          var decorator = /\*/.test(open);
          return {
            type: decorator ? 'Decorator' : 'MustacheStatement',
            path: path,
            params: params,
            hash: hash,
            escaped: escaped,
            strip: strip,
            loc: this.locInfo(locInfo),
          };
        }

        function prepareRawBlock(openRawBlock, contents, close, locInfo) {
          validateClose(openRawBlock, close);

          locInfo = this.locInfo(locInfo);
          var program = {
            type: 'Program',
            body: contents,
            strip: {},
            loc: locInfo,
          };

          return {
            type: 'BlockStatement',
            path: openRawBlock.path,
            params: openRawBlock.params,
            hash: openRawBlock.hash,
            program: program,
            openStrip: {},
            inverseStrip: {},
            closeStrip: {},
            loc: locInfo,
          };
        }

        function prepareBlock(
          openBlock,
          program,
          inverseAndProgram,
          close,
          inverted,
          locInfo
        ) {
          if (close && close.path) {
            validateClose(openBlock, close);
          }

          var decorator = /\*/.test(openBlock.open);

          program.blockParams = openBlock.blockParams;

          var inverse = undefined,
            inverseStrip = undefined;

          if (inverseAndProgram) {
            if (decorator) {
              throw new _exception2['default'](
                'Unexpected inverse block on decorator',
                inverseAndProgram
              );
            }

            if (inverseAndProgram.chain) {
              inverseAndProgram.program.body[0].closeStrip = close.strip;
            }

            inverseStrip = inverseAndProgram.strip;
            inverse = inverseAndProgram.program;
          }

          if (inverted) {
            inverted = inverse;
            inverse = program;
            program = inverted;
          }

          return {
            type: decorator ? 'DecoratorBlock' : 'BlockStatement',
            path: openBlock.path,
            params: openBlock.params,
            hash: openBlock.hash,
            program: program,
            inverse: inverse,
            openStrip: openBlock.strip,
            inverseStrip: inverseStrip,
            closeStrip: close && close.strip,
            loc: this.locInfo(locInfo),
          };
        }

        function prepareProgram(statements, loc) {
          if (!loc && statements.length) {
            var firstLoc = statements[0].loc,
              lastLoc = statements[statements.length - 1].loc;

            /* istanbul ignore else */
            if (firstLoc && lastLoc) {
              loc = {
                source: firstLoc.source,
                start: {
                  line: firstLoc.start.line,
                  column: firstLoc.start.column,
                },
                end: {
                  line: lastLoc.end.line,
                  column: lastLoc.end.column,
                },
              };
            }
          }

          return {
            type: 'Program',
            body: statements,
            strip: {},
            loc: loc,
          };
        }

        function preparePartialBlock(open, program, close, locInfo) {
          validateClose(open, close);

          return {
            type: 'PartialBlockStatement',
            name: open.path,
            params: open.params,
            hash: open.hash,
            program: program,
            openStrip: open.strip,
            closeStrip: close && close.strip,
            loc: this.locInfo(locInfo),
          };
        }
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/compiler/javascript-compiler.js':
      /*!**************************************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/compiler/javascript-compiler.js ***!
  \**************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        // istanbul ignore next

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var _base = __webpack_require__(
          /*! ../base */ '../node_modules/handlebars/dist/cjs/handlebars/base.js'
        );

        var _exception = __webpack_require__(
          /*! ../exception */ '../node_modules/handlebars/dist/cjs/handlebars/exception.js'
        );

        var _exception2 = _interopRequireDefault(_exception);

        var _utils = __webpack_require__(
          /*! ../utils */ '../node_modules/handlebars/dist/cjs/handlebars/utils.js'
        );

        var _codeGen = __webpack_require__(
          /*! ./code-gen */ '../node_modules/handlebars/dist/cjs/handlebars/compiler/code-gen.js'
        );

        var _codeGen2 = _interopRequireDefault(_codeGen);

        function Literal(value) {
          this.value = value;
        }

        function JavaScriptCompiler() {}

        JavaScriptCompiler.prototype = {
          // PUBLIC API: You can override these methods in a subclass to provide
          // alternative compiled forms for name lookup and buffering semantics
          nameLookup: function nameLookup(parent, name /*,  type */) {
            return this.internalNameLookup(parent, name);
          },
          depthedLookup: function depthedLookup(name) {
            return [
              this.aliasable('container.lookup'),
              '(depths, "',
              name,
              '")',
            ];
          },

          compilerInfo: function compilerInfo() {
            var revision = _base.COMPILER_REVISION,
              versions = _base.REVISION_CHANGES[revision];
            return [revision, versions];
          },

          appendToBuffer: function appendToBuffer(source, location, explicit) {
            // Force a source as this simplifies the merge logic.
            if (!_utils.isArray(source)) {
              source = [source];
            }
            source = this.source.wrap(source, location);

            if (this.environment.isSimple) {
              return ['return ', source, ';'];
            } else if (explicit) {
              // This is a case where the buffer operation occurs as a child of another
              // construct, generally braces. We have to explicitly output these buffer
              // operations to ensure that the emitted code goes in the correct location.
              return ['buffer += ', source, ';'];
            } else {
              source.appendToBuffer = true;
              return source;
            }
          },

          initializeBuffer: function initializeBuffer() {
            return this.quotedString('');
          },
          // END PUBLIC API
          internalNameLookup: function internalNameLookup(parent, name) {
            this.lookupPropertyFunctionIsUsed = true;
            return ['lookupProperty(', parent, ',', JSON.stringify(name), ')'];
          },

          lookupPropertyFunctionIsUsed: false,

          compile: function compile(environment, options, context, asObject) {
            this.environment = environment;
            this.options = options;
            this.stringParams = this.options.stringParams;
            this.trackIds = this.options.trackIds;
            this.precompile = !asObject;

            this.name = this.environment.name;
            this.isChild = !!context;
            this.context = context || {
              decorators: [],
              programs: [],
              environments: [],
            };

            this.preamble();

            this.stackSlot = 0;
            this.stackVars = [];
            this.aliases = {};
            this.registers = { list: [] };
            this.hashes = [];
            this.compileStack = [];
            this.inlineStack = [];
            this.blockParams = [];

            this.compileChildren(environment, options);

            this.useDepths =
              this.useDepths ||
              environment.useDepths ||
              environment.useDecorators ||
              this.options.compat;
            this.useBlockParams =
              this.useBlockParams || environment.useBlockParams;

            var opcodes = environment.opcodes,
              opcode = undefined,
              firstLoc = undefined,
              i = undefined,
              l = undefined;

            for (i = 0, l = opcodes.length; i < l; i++) {
              opcode = opcodes[i];

              this.source.currentLocation = opcode.loc;
              firstLoc = firstLoc || opcode.loc;
              this[opcode.opcode].apply(this, opcode.args);
            }

            // Flush any trailing content that might be pending.
            this.source.currentLocation = firstLoc;
            this.pushSource('');

            /* istanbul ignore next */
            if (
              this.stackSlot ||
              this.inlineStack.length ||
              this.compileStack.length
            ) {
              throw new _exception2['default'](
                'Compile completed with content left on stack'
              );
            }

            if (!this.decorators.isEmpty()) {
              this.useDecorators = true;

              this.decorators.prepend([
                'var decorators = container.decorators, ',
                this.lookupPropertyFunctionVarDeclaration(),
                ';\n',
              ]);
              this.decorators.push('return fn;');

              if (asObject) {
                this.decorators = Function.apply(this, [
                  'fn',
                  'props',
                  'container',
                  'depth0',
                  'data',
                  'blockParams',
                  'depths',
                  this.decorators.merge(),
                ]);
              } else {
                this.decorators.prepend(
                  'function(fn, props, container, depth0, data, blockParams, depths) {\n'
                );
                this.decorators.push('}\n');
                this.decorators = this.decorators.merge();
              }
            } else {
              this.decorators = undefined;
            }

            var fn = this.createFunctionContext(asObject);
            if (!this.isChild) {
              var ret = {
                compiler: this.compilerInfo(),
                main: fn,
              };

              if (this.decorators) {
                ret.main_d = this.decorators; // eslint-disable-line camelcase
                ret.useDecorators = true;
              }

              var _context = this.context;
              var programs = _context.programs;
              var decorators = _context.decorators;

              for (i = 0, l = programs.length; i < l; i++) {
                if (programs[i]) {
                  ret[i] = programs[i];
                  if (decorators[i]) {
                    ret[i + '_d'] = decorators[i];
                    ret.useDecorators = true;
                  }
                }
              }

              if (this.environment.usePartial) {
                ret.usePartial = true;
              }
              if (this.options.data) {
                ret.useData = true;
              }
              if (this.useDepths) {
                ret.useDepths = true;
              }
              if (this.useBlockParams) {
                ret.useBlockParams = true;
              }
              if (this.options.compat) {
                ret.compat = true;
              }

              if (!asObject) {
                ret.compiler = JSON.stringify(ret.compiler);

                this.source.currentLocation = { start: { line: 1, column: 0 } };
                ret = this.objectLiteral(ret);

                if (options.srcName) {
                  ret = ret.toStringWithSourceMap({ file: options.destName });
                  ret.map = ret.map && ret.map.toString();
                } else {
                  ret = ret.toString();
                }
              } else {
                ret.compilerOptions = this.options;
              }

              return ret;
            } else {
              return fn;
            }
          },

          preamble: function preamble() {
            // track the last context pushed into place to allow skipping the
            // getContext opcode when it would be a noop
            this.lastContext = 0;
            this.source = new _codeGen2['default'](this.options.srcName);
            this.decorators = new _codeGen2['default'](this.options.srcName);
          },

          createFunctionContext: function createFunctionContext(asObject) {
            // istanbul ignore next

            var _this = this;

            var varDeclarations = '';

            var locals = this.stackVars.concat(this.registers.list);
            if (locals.length > 0) {
              varDeclarations += ', ' + locals.join(', ');
            }

            // Generate minimizer alias mappings
            //
            // When using true SourceNodes, this will update all references to the given alias
            // as the source nodes are reused in situ. For the non-source node compilation mode,
            // aliases will not be used, but this case is already being run on the client and
            // we aren't concern about minimizing the template size.
            var aliasCount = 0;
            Object.keys(this.aliases).forEach(function (alias) {
              var node = _this.aliases[alias];
              if (node.children && node.referenceCount > 1) {
                varDeclarations += ', alias' + ++aliasCount + '=' + alias;
                node.children[0] = 'alias' + aliasCount;
              }
            });

            if (this.lookupPropertyFunctionIsUsed) {
              varDeclarations +=
                ', ' + this.lookupPropertyFunctionVarDeclaration();
            }

            var params = ['container', 'depth0', 'helpers', 'partials', 'data'];

            if (this.useBlockParams || this.useDepths) {
              params.push('blockParams');
            }
            if (this.useDepths) {
              params.push('depths');
            }

            // Perform a second pass over the output to merge content when possible
            var source = this.mergeSource(varDeclarations);

            if (asObject) {
              params.push(source);

              return Function.apply(this, params);
            } else {
              return this.source.wrap([
                'function(',
                params.join(','),
                ') {\n  ',
                source,
                '}',
              ]);
            }
          },
          mergeSource: function mergeSource(varDeclarations) {
            var isSimple = this.environment.isSimple,
              appendOnly = !this.forceBuffer,
              appendFirst = undefined,
              sourceSeen = undefined,
              bufferStart = undefined,
              bufferEnd = undefined;
            this.source.each(function (line) {
              if (line.appendToBuffer) {
                if (bufferStart) {
                  line.prepend('  + ');
                } else {
                  bufferStart = line;
                }
                bufferEnd = line;
              } else {
                if (bufferStart) {
                  if (!sourceSeen) {
                    appendFirst = true;
                  } else {
                    bufferStart.prepend('buffer += ');
                  }
                  bufferEnd.add(';');
                  bufferStart = bufferEnd = undefined;
                }

                sourceSeen = true;
                if (!isSimple) {
                  appendOnly = false;
                }
              }
            });

            if (appendOnly) {
              if (bufferStart) {
                bufferStart.prepend('return ');
                bufferEnd.add(';');
              } else if (!sourceSeen) {
                this.source.push('return "";');
              }
            } else {
              varDeclarations +=
                ', buffer = ' + (appendFirst ? '' : this.initializeBuffer());

              if (bufferStart) {
                bufferStart.prepend('return buffer + ');
                bufferEnd.add(';');
              } else {
                this.source.push('return buffer;');
              }
            }

            if (varDeclarations) {
              this.source.prepend(
                'var ' +
                  varDeclarations.substring(2) +
                  (appendFirst ? '' : ';\n')
              );
            }

            return this.source.merge();
          },

          lookupPropertyFunctionVarDeclaration: function lookupPropertyFunctionVarDeclaration() {
            return '\n      lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    }\n    '.trim();
          },

          // [blockValue]
          //
          // On stack, before: hash, inverse, program, value
          // On stack, after: return value of blockHelperMissing
          //
          // The purpose of this opcode is to take a block of the form
          // `{{#this.foo}}...{{/this.foo}}`, resolve the value of `foo`, and
          // replace it on the stack with the result of properly
          // invoking blockHelperMissing.
          blockValue: function blockValue(name) {
            var blockHelperMissing = this.aliasable(
                'container.hooks.blockHelperMissing'
              ),
              params = [this.contextName(0)];
            this.setupHelperArgs(name, 0, params);

            var blockName = this.popStack();
            params.splice(1, 0, blockName);

            this.push(
              this.source.functionCall(blockHelperMissing, 'call', params)
            );
          },

          // [ambiguousBlockValue]
          //
          // On stack, before: hash, inverse, program, value
          // Compiler value, before: lastHelper=value of last found helper, if any
          // On stack, after, if no lastHelper: same as [blockValue]
          // On stack, after, if lastHelper: value
          ambiguousBlockValue: function ambiguousBlockValue() {
            // We're being a bit cheeky and reusing the options value from the prior exec
            var blockHelperMissing = this.aliasable(
                'container.hooks.blockHelperMissing'
              ),
              params = [this.contextName(0)];
            this.setupHelperArgs('', 0, params, true);

            this.flushInline();

            var current = this.topStack();
            params.splice(1, 0, current);

            this.pushSource([
              'if (!',
              this.lastHelper,
              ') { ',
              current,
              ' = ',
              this.source.functionCall(blockHelperMissing, 'call', params),
              '}',
            ]);
          },

          // [appendContent]
          //
          // On stack, before: ...
          // On stack, after: ...
          //
          // Appends the string value of `content` to the current buffer
          appendContent: function appendContent(content) {
            if (this.pendingContent) {
              content = this.pendingContent + content;
            } else {
              this.pendingLocation = this.source.currentLocation;
            }

            this.pendingContent = content;
          },

          // [append]
          //
          // On stack, before: value, ...
          // On stack, after: ...
          //
          // Coerces `value` to a String and appends it to the current buffer.
          //
          // If `value` is truthy, or 0, it is coerced into a string and appended
          // Otherwise, the empty string is appended
          append: function append() {
            if (this.isInline()) {
              this.replaceStack(function (current) {
                return [' != null ? ', current, ' : ""'];
              });

              this.pushSource(this.appendToBuffer(this.popStack()));
            } else {
              var local = this.popStack();
              this.pushSource([
                'if (',
                local,
                ' != null) { ',
                this.appendToBuffer(local, undefined, true),
                ' }',
              ]);
              if (this.environment.isSimple) {
                this.pushSource([
                  'else { ',
                  this.appendToBuffer("''", undefined, true),
                  ' }',
                ]);
              }
            }
          },

          // [appendEscaped]
          //
          // On stack, before: value, ...
          // On stack, after: ...
          //
          // Escape `value` and append it to the buffer
          appendEscaped: function appendEscaped() {
            this.pushSource(
              this.appendToBuffer([
                this.aliasable('container.escapeExpression'),
                '(',
                this.popStack(),
                ')',
              ])
            );
          },

          // [getContext]
          //
          // On stack, before: ...
          // On stack, after: ...
          // Compiler value, after: lastContext=depth
          //
          // Set the value of the `lastContext` compiler value to the depth
          getContext: function getContext(depth) {
            this.lastContext = depth;
          },

          // [pushContext]
          //
          // On stack, before: ...
          // On stack, after: currentContext, ...
          //
          // Pushes the value of the current context onto the stack.
          pushContext: function pushContext() {
            this.pushStackLiteral(this.contextName(this.lastContext));
          },

          // [lookupOnContext]
          //
          // On stack, before: ...
          // On stack, after: currentContext[name], ...
          //
          // Looks up the value of `name` on the current context and pushes
          // it onto the stack.
          lookupOnContext: function lookupOnContext(
            parts,
            falsy,
            strict,
            scoped
          ) {
            var i = 0;

            if (!scoped && this.options.compat && !this.lastContext) {
              // The depthed query is expected to handle the undefined logic for the root level that
              // is implemented below, so we evaluate that directly in compat mode
              this.push(this.depthedLookup(parts[i++]));
            } else {
              this.pushContext();
            }

            this.resolvePath('context', parts, i, falsy, strict);
          },

          // [lookupBlockParam]
          //
          // On stack, before: ...
          // On stack, after: blockParam[name], ...
          //
          // Looks up the value of `parts` on the given block param and pushes
          // it onto the stack.
          lookupBlockParam: function lookupBlockParam(blockParamId, parts) {
            this.useBlockParams = true;

            this.push([
              'blockParams[',
              blockParamId[0],
              '][',
              blockParamId[1],
              ']',
            ]);
            this.resolvePath('context', parts, 1);
          },

          // [lookupData]
          //
          // On stack, before: ...
          // On stack, after: data, ...
          //
          // Push the data lookup operator
          lookupData: function lookupData(depth, parts, strict) {
            if (!depth) {
              this.pushStackLiteral('data');
            } else {
              this.pushStackLiteral('container.data(data, ' + depth + ')');
            }

            this.resolvePath('data', parts, 0, true, strict);
          },

          resolvePath: function resolvePath(type, parts, i, falsy, strict) {
            // istanbul ignore next

            var _this2 = this;

            if (this.options.strict || this.options.assumeObjects) {
              this.push(
                strictLookup(this.options.strict && strict, this, parts, type)
              );
              return;
            }

            var len = parts.length;
            for (; i < len; i++) {
              /* eslint-disable no-loop-func */
              this.replaceStack(function (current) {
                var lookup = _this2.nameLookup(current, parts[i], type);
                // We want to ensure that zero and false are handled properly if the context (falsy flag)
                // needs to have the special handling for these values.
                if (!falsy) {
                  return [' != null ? ', lookup, ' : ', current];
                } else {
                  // Otherwise we can use generic falsy handling
                  return [' && ', lookup];
                }
              });
              /* eslint-enable no-loop-func */
            }
          },

          // [resolvePossibleLambda]
          //
          // On stack, before: value, ...
          // On stack, after: resolved value, ...
          //
          // If the `value` is a lambda, replace it on the stack by
          // the return value of the lambda
          resolvePossibleLambda: function resolvePossibleLambda() {
            this.push([
              this.aliasable('container.lambda'),
              '(',
              this.popStack(),
              ', ',
              this.contextName(0),
              ')',
            ]);
          },

          // [pushStringParam]
          //
          // On stack, before: ...
          // On stack, after: string, currentContext, ...
          //
          // This opcode is designed for use in string mode, which
          // provides the string value of a parameter along with its
          // depth rather than resolving it immediately.
          pushStringParam: function pushStringParam(string, type) {
            this.pushContext();
            this.pushString(type);

            // If it's a subexpression, the string result
            // will be pushed after this opcode.
            if (type !== 'SubExpression') {
              if (typeof string === 'string') {
                this.pushString(string);
              } else {
                this.pushStackLiteral(string);
              }
            }
          },

          emptyHash: function emptyHash(omitEmpty) {
            if (this.trackIds) {
              this.push('{}'); // hashIds
            }
            if (this.stringParams) {
              this.push('{}'); // hashContexts
              this.push('{}'); // hashTypes
            }
            this.pushStackLiteral(omitEmpty ? 'undefined' : '{}');
          },
          pushHash: function pushHash() {
            if (this.hash) {
              this.hashes.push(this.hash);
            }
            this.hash = { values: {}, types: [], contexts: [], ids: [] };
          },
          popHash: function popHash() {
            var hash = this.hash;
            this.hash = this.hashes.pop();

            if (this.trackIds) {
              this.push(this.objectLiteral(hash.ids));
            }
            if (this.stringParams) {
              this.push(this.objectLiteral(hash.contexts));
              this.push(this.objectLiteral(hash.types));
            }

            this.push(this.objectLiteral(hash.values));
          },

          // [pushString]
          //
          // On stack, before: ...
          // On stack, after: quotedString(string), ...
          //
          // Push a quoted version of `string` onto the stack
          pushString: function pushString(string) {
            this.pushStackLiteral(this.quotedString(string));
          },

          // [pushLiteral]
          //
          // On stack, before: ...
          // On stack, after: value, ...
          //
          // Pushes a value onto the stack. This operation prevents
          // the compiler from creating a temporary variable to hold
          // it.
          pushLiteral: function pushLiteral(value) {
            this.pushStackLiteral(value);
          },

          // [pushProgram]
          //
          // On stack, before: ...
          // On stack, after: program(guid), ...
          //
          // Push a program expression onto the stack. This takes
          // a compile-time guid and converts it into a runtime-accessible
          // expression.
          pushProgram: function pushProgram(guid) {
            if (guid != null) {
              this.pushStackLiteral(this.programExpression(guid));
            } else {
              this.pushStackLiteral(null);
            }
          },

          // [registerDecorator]
          //
          // On stack, before: hash, program, params..., ...
          // On stack, after: ...
          //
          // Pops off the decorator's parameters, invokes the decorator,
          // and inserts the decorator into the decorators list.
          registerDecorator: function registerDecorator(paramSize, name) {
            var foundDecorator = this.nameLookup(
                'decorators',
                name,
                'decorator'
              ),
              options = this.setupHelperArgs(name, paramSize);

            this.decorators.push([
              'fn = ',
              this.decorators.functionCall(foundDecorator, '', [
                'fn',
                'props',
                'container',
                options,
              ]),
              ' || fn;',
            ]);
          },

          // [invokeHelper]
          //
          // On stack, before: hash, inverse, program, params..., ...
          // On stack, after: result of helper invocation
          //
          // Pops off the helper's parameters, invokes the helper,
          // and pushes the helper's return value onto the stack.
          //
          // If the helper is not found, `helperMissing` is called.
          invokeHelper: function invokeHelper(paramSize, name, isSimple) {
            var nonHelper = this.popStack(),
              helper = this.setupHelper(paramSize, name);

            var possibleFunctionCalls = [];

            if (isSimple) {
              // direct call to helper
              possibleFunctionCalls.push(helper.name);
            }
            // call a function from the input object
            possibleFunctionCalls.push(nonHelper);
            if (!this.options.strict) {
              possibleFunctionCalls.push(
                this.aliasable('container.hooks.helperMissing')
              );
            }

            var functionLookupCode = [
              '(',
              this.itemsSeparatedBy(possibleFunctionCalls, '||'),
              ')',
            ];
            var functionCall = this.source.functionCall(
              functionLookupCode,
              'call',
              helper.callParams
            );
            this.push(functionCall);
          },

          itemsSeparatedBy: function itemsSeparatedBy(items, separator) {
            var result = [];
            result.push(items[0]);
            for (var i = 1; i < items.length; i++) {
              result.push(separator, items[i]);
            }
            return result;
          },
          // [invokeKnownHelper]
          //
          // On stack, before: hash, inverse, program, params..., ...
          // On stack, after: result of helper invocation
          //
          // This operation is used when the helper is known to exist,
          // so a `helperMissing` fallback is not required.
          invokeKnownHelper: function invokeKnownHelper(paramSize, name) {
            var helper = this.setupHelper(paramSize, name);
            this.push(
              this.source.functionCall(helper.name, 'call', helper.callParams)
            );
          },

          // [invokeAmbiguous]
          //
          // On stack, before: hash, inverse, program, params..., ...
          // On stack, after: result of disambiguation
          //
          // This operation is used when an expression like `{{foo}}`
          // is provided, but we don't know at compile-time whether it
          // is a helper or a path.
          //
          // This operation emits more code than the other options,
          // and can be avoided by passing the `knownHelpers` and
          // `knownHelpersOnly` flags at compile-time.
          invokeAmbiguous: function invokeAmbiguous(name, helperCall) {
            this.useRegister('helper');

            var nonHelper = this.popStack();

            this.emptyHash();
            var helper = this.setupHelper(0, name, helperCall);

            var helperName = (this.lastHelper = this.nameLookup(
              'helpers',
              name,
              'helper'
            ));

            var lookup = [
              '(',
              '(helper = ',
              helperName,
              ' || ',
              nonHelper,
              ')',
            ];
            if (!this.options.strict) {
              lookup[0] = '(helper = ';
              lookup.push(
                ' != null ? helper : ',
                this.aliasable('container.hooks.helperMissing')
              );
            }

            this.push([
              '(',
              lookup,
              helper.paramsInit ? ['),(', helper.paramsInit] : [],
              '),',
              '(typeof helper === ',
              this.aliasable('"function"'),
              ' ? ',
              this.source.functionCall('helper', 'call', helper.callParams),
              ' : helper))',
            ]);
          },

          // [invokePartial]
          //
          // On stack, before: context, ...
          // On stack after: result of partial invocation
          //
          // This operation pops off a context, invokes a partial with that context,
          // and pushes the result of the invocation back.
          invokePartial: function invokePartial(isDynamic, name, indent) {
            var params = [],
              options = this.setupParams(name, 1, params);

            if (isDynamic) {
              name = this.popStack();
              delete options.name;
            }

            if (indent) {
              options.indent = JSON.stringify(indent);
            }
            options.helpers = 'helpers';
            options.partials = 'partials';
            options.decorators = 'container.decorators';

            if (!isDynamic) {
              params.unshift(this.nameLookup('partials', name, 'partial'));
            } else {
              params.unshift(name);
            }

            if (this.options.compat) {
              options.depths = 'depths';
            }
            options = this.objectLiteral(options);
            params.push(options);

            this.push(
              this.source.functionCall('container.invokePartial', '', params)
            );
          },

          // [assignToHash]
          //
          // On stack, before: value, ..., hash, ...
          // On stack, after: ..., hash, ...
          //
          // Pops a value off the stack and assigns it to the current hash
          assignToHash: function assignToHash(key) {
            var value = this.popStack(),
              context = undefined,
              type = undefined,
              id = undefined;

            if (this.trackIds) {
              id = this.popStack();
            }
            if (this.stringParams) {
              type = this.popStack();
              context = this.popStack();
            }

            var hash = this.hash;
            if (context) {
              hash.contexts[key] = context;
            }
            if (type) {
              hash.types[key] = type;
            }
            if (id) {
              hash.ids[key] = id;
            }
            hash.values[key] = value;
          },

          pushId: function pushId(type, name, child) {
            if (type === 'BlockParam') {
              this.pushStackLiteral(
                'blockParams[' +
                  name[0] +
                  '].path[' +
                  name[1] +
                  ']' +
                  (child ? ' + ' + JSON.stringify('.' + child) : '')
              );
            } else if (type === 'PathExpression') {
              this.pushString(name);
            } else if (type === 'SubExpression') {
              this.pushStackLiteral('true');
            } else {
              this.pushStackLiteral('null');
            }
          },

          // HELPERS

          compiler: JavaScriptCompiler,

          compileChildren: function compileChildren(environment, options) {
            var children = environment.children,
              child = undefined,
              compiler = undefined;

            for (var i = 0, l = children.length; i < l; i++) {
              child = children[i];
              compiler = new this.compiler(); // eslint-disable-line new-cap

              var existing = this.matchExistingProgram(child);

              if (existing == null) {
                this.context.programs.push(''); // Placeholder to prevent name conflicts for nested children
                var index = this.context.programs.length;
                child.index = index;
                child.name = 'program' + index;
                this.context.programs[index] = compiler.compile(
                  child,
                  options,
                  this.context,
                  !this.precompile
                );
                this.context.decorators[index] = compiler.decorators;
                this.context.environments[index] = child;

                this.useDepths = this.useDepths || compiler.useDepths;
                this.useBlockParams =
                  this.useBlockParams || compiler.useBlockParams;
                child.useDepths = this.useDepths;
                child.useBlockParams = this.useBlockParams;
              } else {
                child.index = existing.index;
                child.name = 'program' + existing.index;

                this.useDepths = this.useDepths || existing.useDepths;
                this.useBlockParams =
                  this.useBlockParams || existing.useBlockParams;
              }
            }
          },
          matchExistingProgram: function matchExistingProgram(child) {
            for (
              var i = 0, len = this.context.environments.length;
              i < len;
              i++
            ) {
              var environment = this.context.environments[i];
              if (environment && environment.equals(child)) {
                return environment;
              }
            }
          },

          programExpression: function programExpression(guid) {
            var child = this.environment.children[guid],
              programParams = [child.index, 'data', child.blockParams];

            if (this.useBlockParams || this.useDepths) {
              programParams.push('blockParams');
            }
            if (this.useDepths) {
              programParams.push('depths');
            }

            return 'container.program(' + programParams.join(', ') + ')';
          },

          useRegister: function useRegister(name) {
            if (!this.registers[name]) {
              this.registers[name] = true;
              this.registers.list.push(name);
            }
          },

          push: function push(expr) {
            if (!(expr instanceof Literal)) {
              expr = this.source.wrap(expr);
            }

            this.inlineStack.push(expr);
            return expr;
          },

          pushStackLiteral: function pushStackLiteral(item) {
            this.push(new Literal(item));
          },

          pushSource: function pushSource(source) {
            if (this.pendingContent) {
              this.source.push(
                this.appendToBuffer(
                  this.source.quotedString(this.pendingContent),
                  this.pendingLocation
                )
              );
              this.pendingContent = undefined;
            }

            if (source) {
              this.source.push(source);
            }
          },

          replaceStack: function replaceStack(callback) {
            var prefix = ['('],
              stack = undefined,
              createdStack = undefined,
              usedLiteral = undefined;

            /* istanbul ignore next */
            if (!this.isInline()) {
              throw new _exception2['default']('replaceStack on non-inline');
            }

            // We want to merge the inline statement into the replacement statement via ','
            var top = this.popStack(true);

            if (top instanceof Literal) {
              // Literals do not need to be inlined
              stack = [top.value];
              prefix = ['(', stack];
              usedLiteral = true;
            } else {
              // Get or create the current stack name for use by the inline
              createdStack = true;
              var _name = this.incrStack();

              prefix = ['((', this.push(_name), ' = ', top, ')'];
              stack = this.topStack();
            }

            var item = callback.call(this, stack);

            if (!usedLiteral) {
              this.popStack();
            }
            if (createdStack) {
              this.stackSlot--;
            }
            this.push(prefix.concat(item, ')'));
          },

          incrStack: function incrStack() {
            this.stackSlot++;
            if (this.stackSlot > this.stackVars.length) {
              this.stackVars.push('stack' + this.stackSlot);
            }
            return this.topStackName();
          },
          topStackName: function topStackName() {
            return 'stack' + this.stackSlot;
          },
          flushInline: function flushInline() {
            var inlineStack = this.inlineStack;
            this.inlineStack = [];
            for (var i = 0, len = inlineStack.length; i < len; i++) {
              var entry = inlineStack[i];
              /* istanbul ignore if */
              if (entry instanceof Literal) {
                this.compileStack.push(entry);
              } else {
                var stack = this.incrStack();
                this.pushSource([stack, ' = ', entry, ';']);
                this.compileStack.push(stack);
              }
            }
          },
          isInline: function isInline() {
            return this.inlineStack.length;
          },

          popStack: function popStack(wrapped) {
            var inline = this.isInline(),
              item = (inline ? this.inlineStack : this.compileStack).pop();

            if (!wrapped && item instanceof Literal) {
              return item.value;
            } else {
              if (!inline) {
                /* istanbul ignore next */
                if (!this.stackSlot) {
                  throw new _exception2['default']('Invalid stack pop');
                }
                this.stackSlot--;
              }
              return item;
            }
          },

          topStack: function topStack() {
            var stack = this.isInline() ? this.inlineStack : this.compileStack,
              item = stack[stack.length - 1];

            /* istanbul ignore if */
            if (item instanceof Literal) {
              return item.value;
            } else {
              return item;
            }
          },

          contextName: function contextName(context) {
            if (this.useDepths && context) {
              return 'depths[' + context + ']';
            } else {
              return 'depth' + context;
            }
          },

          quotedString: function quotedString(str) {
            return this.source.quotedString(str);
          },

          objectLiteral: function objectLiteral(obj) {
            return this.source.objectLiteral(obj);
          },

          aliasable: function aliasable(name) {
            var ret = this.aliases[name];
            if (ret) {
              ret.referenceCount++;
              return ret;
            }

            ret = this.aliases[name] = this.source.wrap(name);
            ret.aliasable = true;
            ret.referenceCount = 1;

            return ret;
          },

          setupHelper: function setupHelper(paramSize, name, blockHelper) {
            var params = [],
              paramsInit = this.setupHelperArgs(
                name,
                paramSize,
                params,
                blockHelper
              );
            var foundHelper = this.nameLookup('helpers', name, 'helper'),
              callContext = this.aliasable(
                this.contextName(0) +
                  ' != null ? ' +
                  this.contextName(0) +
                  ' : (container.nullContext || {})'
              );

            return {
              params: params,
              paramsInit: paramsInit,
              name: foundHelper,
              callParams: [callContext].concat(params),
            };
          },

          setupParams: function setupParams(helper, paramSize, params) {
            var options = {},
              contexts = [],
              types = [],
              ids = [],
              objectArgs = !params,
              param = undefined;

            if (objectArgs) {
              params = [];
            }

            options.name = this.quotedString(helper);
            options.hash = this.popStack();

            if (this.trackIds) {
              options.hashIds = this.popStack();
            }
            if (this.stringParams) {
              options.hashTypes = this.popStack();
              options.hashContexts = this.popStack();
            }

            var inverse = this.popStack(),
              program = this.popStack();

            // Avoid setting fn and inverse if neither are set. This allows
            // helpers to do a check for `if (options.fn)`
            if (program || inverse) {
              options.fn = program || 'container.noop';
              options.inverse = inverse || 'container.noop';
            }

            // The parameters go on to the stack in order (making sure that they are evaluated in order)
            // so we need to pop them off the stack in reverse order
            var i = paramSize;
            while (i--) {
              param = this.popStack();
              params[i] = param;

              if (this.trackIds) {
                ids[i] = this.popStack();
              }
              if (this.stringParams) {
                types[i] = this.popStack();
                contexts[i] = this.popStack();
              }
            }

            if (objectArgs) {
              options.args = this.source.generateArray(params);
            }

            if (this.trackIds) {
              options.ids = this.source.generateArray(ids);
            }
            if (this.stringParams) {
              options.types = this.source.generateArray(types);
              options.contexts = this.source.generateArray(contexts);
            }

            if (this.options.data) {
              options.data = 'data';
            }
            if (this.useBlockParams) {
              options.blockParams = 'blockParams';
            }
            return options;
          },

          setupHelperArgs: function setupHelperArgs(
            helper,
            paramSize,
            params,
            useRegister
          ) {
            var options = this.setupParams(helper, paramSize, params);
            options.loc = JSON.stringify(this.source.currentLocation);
            options = this.objectLiteral(options);
            if (useRegister) {
              this.useRegister('options');
              params.push('options');
              return ['options=', options];
            } else if (params) {
              params.push(options);
              return '';
            } else {
              return options;
            }
          },
        };

        (function () {
          var reservedWords = (
            'break else new var' +
            ' case finally return void' +
            ' catch for switch while' +
            ' continue function this with' +
            ' default if throw' +
            ' delete in try' +
            ' do instanceof typeof' +
            ' abstract enum int short' +
            ' boolean export interface static' +
            ' byte extends long super' +
            ' char final native synchronized' +
            ' class float package throws' +
            ' const goto private transient' +
            ' debugger implements protected volatile' +
            ' double import public let yield await' +
            ' null true false'
          ).split(' ');

          var compilerWords = (JavaScriptCompiler.RESERVED_WORDS = {});

          for (var i = 0, l = reservedWords.length; i < l; i++) {
            compilerWords[reservedWords[i]] = true;
          }
        })();

        /**
         * @deprecated May be removed in the next major version
         */
        JavaScriptCompiler.isValidJavaScriptVariableName = function (name) {
          return (
            !JavaScriptCompiler.RESERVED_WORDS[name] &&
            /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(name)
          );
        };

        function strictLookup(requireTerminal, compiler, parts, type) {
          var stack = compiler.popStack(),
            i = 0,
            len = parts.length;
          if (requireTerminal) {
            len--;
          }

          for (; i < len; i++) {
            stack = compiler.nameLookup(stack, parts[i], type);
          }

          if (requireTerminal) {
            return [
              compiler.aliasable('container.strict'),
              '(',
              stack,
              ', ',
              compiler.quotedString(parts[i]),
              ', ',
              JSON.stringify(compiler.source.currentLocation),
              ' )',
            ];
          } else {
            return stack;
          }
        }

        exports['default'] = JavaScriptCompiler;
        module.exports = exports['default'];
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/compiler/parser.js':
      /*!*************************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/compiler/parser.js ***!
  \*************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        // File ignored in coverage tests via setting in .istanbul.yml
        /* Jison generated parser */

        exports.__esModule = true;
        var handlebars = (function () {
          var parser = {
            trace: function trace() {},
            yy: {},
            symbols_: {
              error: 2,
              root: 3,
              program: 4,
              EOF: 5,
              program_repetition0: 6,
              statement: 7,
              mustache: 8,
              block: 9,
              rawBlock: 10,
              partial: 11,
              partialBlock: 12,
              content: 13,
              COMMENT: 14,
              CONTENT: 15,
              openRawBlock: 16,
              rawBlock_repetition0: 17,
              END_RAW_BLOCK: 18,
              OPEN_RAW_BLOCK: 19,
              helperName: 20,
              openRawBlock_repetition0: 21,
              openRawBlock_option0: 22,
              CLOSE_RAW_BLOCK: 23,
              openBlock: 24,
              block_option0: 25,
              closeBlock: 26,
              openInverse: 27,
              block_option1: 28,
              OPEN_BLOCK: 29,
              openBlock_repetition0: 30,
              openBlock_option0: 31,
              openBlock_option1: 32,
              CLOSE: 33,
              OPEN_INVERSE: 34,
              openInverse_repetition0: 35,
              openInverse_option0: 36,
              openInverse_option1: 37,
              openInverseChain: 38,
              OPEN_INVERSE_CHAIN: 39,
              openInverseChain_repetition0: 40,
              openInverseChain_option0: 41,
              openInverseChain_option1: 42,
              inverseAndProgram: 43,
              INVERSE: 44,
              inverseChain: 45,
              inverseChain_option0: 46,
              OPEN_ENDBLOCK: 47,
              OPEN: 48,
              mustache_repetition0: 49,
              mustache_option0: 50,
              OPEN_UNESCAPED: 51,
              mustache_repetition1: 52,
              mustache_option1: 53,
              CLOSE_UNESCAPED: 54,
              OPEN_PARTIAL: 55,
              partialName: 56,
              partial_repetition0: 57,
              partial_option0: 58,
              openPartialBlock: 59,
              OPEN_PARTIAL_BLOCK: 60,
              openPartialBlock_repetition0: 61,
              openPartialBlock_option0: 62,
              param: 63,
              sexpr: 64,
              OPEN_SEXPR: 65,
              sexpr_repetition0: 66,
              sexpr_option0: 67,
              CLOSE_SEXPR: 68,
              hash: 69,
              hash_repetition_plus0: 70,
              hashSegment: 71,
              ID: 72,
              EQUALS: 73,
              blockParams: 74,
              OPEN_BLOCK_PARAMS: 75,
              blockParams_repetition_plus0: 76,
              CLOSE_BLOCK_PARAMS: 77,
              path: 78,
              dataName: 79,
              STRING: 80,
              NUMBER: 81,
              BOOLEAN: 82,
              UNDEFINED: 83,
              NULL: 84,
              DATA: 85,
              pathSegments: 86,
              SEP: 87,
              $accept: 0,
              $end: 1,
            },
            terminals_: {
              2: 'error',
              5: 'EOF',
              14: 'COMMENT',
              15: 'CONTENT',
              18: 'END_RAW_BLOCK',
              19: 'OPEN_RAW_BLOCK',
              23: 'CLOSE_RAW_BLOCK',
              29: 'OPEN_BLOCK',
              33: 'CLOSE',
              34: 'OPEN_INVERSE',
              39: 'OPEN_INVERSE_CHAIN',
              44: 'INVERSE',
              47: 'OPEN_ENDBLOCK',
              48: 'OPEN',
              51: 'OPEN_UNESCAPED',
              54: 'CLOSE_UNESCAPED',
              55: 'OPEN_PARTIAL',
              60: 'OPEN_PARTIAL_BLOCK',
              65: 'OPEN_SEXPR',
              68: 'CLOSE_SEXPR',
              72: 'ID',
              73: 'EQUALS',
              75: 'OPEN_BLOCK_PARAMS',
              77: 'CLOSE_BLOCK_PARAMS',
              80: 'STRING',
              81: 'NUMBER',
              82: 'BOOLEAN',
              83: 'UNDEFINED',
              84: 'NULL',
              85: 'DATA',
              87: 'SEP',
            },
            productions_: [
              0,
              [3, 2],
              [4, 1],
              [7, 1],
              [7, 1],
              [7, 1],
              [7, 1],
              [7, 1],
              [7, 1],
              [7, 1],
              [13, 1],
              [10, 3],
              [16, 5],
              [9, 4],
              [9, 4],
              [24, 6],
              [27, 6],
              [38, 6],
              [43, 2],
              [45, 3],
              [45, 1],
              [26, 3],
              [8, 5],
              [8, 5],
              [11, 5],
              [12, 3],
              [59, 5],
              [63, 1],
              [63, 1],
              [64, 5],
              [69, 1],
              [71, 3],
              [74, 3],
              [20, 1],
              [20, 1],
              [20, 1],
              [20, 1],
              [20, 1],
              [20, 1],
              [20, 1],
              [56, 1],
              [56, 1],
              [79, 2],
              [78, 1],
              [86, 3],
              [86, 1],
              [6, 0],
              [6, 2],
              [17, 0],
              [17, 2],
              [21, 0],
              [21, 2],
              [22, 0],
              [22, 1],
              [25, 0],
              [25, 1],
              [28, 0],
              [28, 1],
              [30, 0],
              [30, 2],
              [31, 0],
              [31, 1],
              [32, 0],
              [32, 1],
              [35, 0],
              [35, 2],
              [36, 0],
              [36, 1],
              [37, 0],
              [37, 1],
              [40, 0],
              [40, 2],
              [41, 0],
              [41, 1],
              [42, 0],
              [42, 1],
              [46, 0],
              [46, 1],
              [49, 0],
              [49, 2],
              [50, 0],
              [50, 1],
              [52, 0],
              [52, 2],
              [53, 0],
              [53, 1],
              [57, 0],
              [57, 2],
              [58, 0],
              [58, 1],
              [61, 0],
              [61, 2],
              [62, 0],
              [62, 1],
              [66, 0],
              [66, 2],
              [67, 0],
              [67, 1],
              [70, 1],
              [70, 2],
              [76, 1],
              [76, 2],
            ],
            performAction: function anonymous(
              yytext,
              yyleng,
              yylineno,
              yy,
              yystate,
              $$,
              _$
            ) {
              var $0 = $$.length - 1;
              switch (yystate) {
                case 1:
                  return $$[$0 - 1];
                  break;
                case 2:
                  this.$ = yy.prepareProgram($$[$0]);
                  break;
                case 3:
                  this.$ = $$[$0];
                  break;
                case 4:
                  this.$ = $$[$0];
                  break;
                case 5:
                  this.$ = $$[$0];
                  break;
                case 6:
                  this.$ = $$[$0];
                  break;
                case 7:
                  this.$ = $$[$0];
                  break;
                case 8:
                  this.$ = $$[$0];
                  break;
                case 9:
                  this.$ = {
                    type: 'CommentStatement',
                    value: yy.stripComment($$[$0]),
                    strip: yy.stripFlags($$[$0], $$[$0]),
                    loc: yy.locInfo(this._$),
                  };

                  break;
                case 10:
                  this.$ = {
                    type: 'ContentStatement',
                    original: $$[$0],
                    value: $$[$0],
                    loc: yy.locInfo(this._$),
                  };

                  break;
                case 11:
                  this.$ = yy.prepareRawBlock(
                    $$[$0 - 2],
                    $$[$0 - 1],
                    $$[$0],
                    this._$
                  );
                  break;
                case 12:
                  this.$ = {
                    path: $$[$0 - 3],
                    params: $$[$0 - 2],
                    hash: $$[$0 - 1],
                  };
                  break;
                case 13:
                  this.$ = yy.prepareBlock(
                    $$[$0 - 3],
                    $$[$0 - 2],
                    $$[$0 - 1],
                    $$[$0],
                    false,
                    this._$
                  );
                  break;
                case 14:
                  this.$ = yy.prepareBlock(
                    $$[$0 - 3],
                    $$[$0 - 2],
                    $$[$0 - 1],
                    $$[$0],
                    true,
                    this._$
                  );
                  break;
                case 15:
                  this.$ = {
                    open: $$[$0 - 5],
                    path: $$[$0 - 4],
                    params: $$[$0 - 3],
                    hash: $$[$0 - 2],
                    blockParams: $$[$0 - 1],
                    strip: yy.stripFlags($$[$0 - 5], $$[$0]),
                  };
                  break;
                case 16:
                  this.$ = {
                    path: $$[$0 - 4],
                    params: $$[$0 - 3],
                    hash: $$[$0 - 2],
                    blockParams: $$[$0 - 1],
                    strip: yy.stripFlags($$[$0 - 5], $$[$0]),
                  };
                  break;
                case 17:
                  this.$ = {
                    path: $$[$0 - 4],
                    params: $$[$0 - 3],
                    hash: $$[$0 - 2],
                    blockParams: $$[$0 - 1],
                    strip: yy.stripFlags($$[$0 - 5], $$[$0]),
                  };
                  break;
                case 18:
                  this.$ = {
                    strip: yy.stripFlags($$[$0 - 1], $$[$0 - 1]),
                    program: $$[$0],
                  };
                  break;
                case 19:
                  var inverse = yy.prepareBlock(
                      $$[$0 - 2],
                      $$[$0 - 1],
                      $$[$0],
                      $$[$0],
                      false,
                      this._$
                    ),
                    program = yy.prepareProgram([inverse], $$[$0 - 1].loc);
                  program.chained = true;

                  this.$ = {
                    strip: $$[$0 - 2].strip,
                    program: program,
                    chain: true,
                  };

                  break;
                case 20:
                  this.$ = $$[$0];
                  break;
                case 21:
                  this.$ = {
                    path: $$[$0 - 1],
                    strip: yy.stripFlags($$[$0 - 2], $$[$0]),
                  };
                  break;
                case 22:
                  this.$ = yy.prepareMustache(
                    $$[$0 - 3],
                    $$[$0 - 2],
                    $$[$0 - 1],
                    $$[$0 - 4],
                    yy.stripFlags($$[$0 - 4], $$[$0]),
                    this._$
                  );
                  break;
                case 23:
                  this.$ = yy.prepareMustache(
                    $$[$0 - 3],
                    $$[$0 - 2],
                    $$[$0 - 1],
                    $$[$0 - 4],
                    yy.stripFlags($$[$0 - 4], $$[$0]),
                    this._$
                  );
                  break;
                case 24:
                  this.$ = {
                    type: 'PartialStatement',
                    name: $$[$0 - 3],
                    params: $$[$0 - 2],
                    hash: $$[$0 - 1],
                    indent: '',
                    strip: yy.stripFlags($$[$0 - 4], $$[$0]),
                    loc: yy.locInfo(this._$),
                  };

                  break;
                case 25:
                  this.$ = yy.preparePartialBlock(
                    $$[$0 - 2],
                    $$[$0 - 1],
                    $$[$0],
                    this._$
                  );
                  break;
                case 26:
                  this.$ = {
                    path: $$[$0 - 3],
                    params: $$[$0 - 2],
                    hash: $$[$0 - 1],
                    strip: yy.stripFlags($$[$0 - 4], $$[$0]),
                  };
                  break;
                case 27:
                  this.$ = $$[$0];
                  break;
                case 28:
                  this.$ = $$[$0];
                  break;
                case 29:
                  this.$ = {
                    type: 'SubExpression',
                    path: $$[$0 - 3],
                    params: $$[$0 - 2],
                    hash: $$[$0 - 1],
                    loc: yy.locInfo(this._$),
                  };

                  break;
                case 30:
                  this.$ = {
                    type: 'Hash',
                    pairs: $$[$0],
                    loc: yy.locInfo(this._$),
                  };
                  break;
                case 31:
                  this.$ = {
                    type: 'HashPair',
                    key: yy.id($$[$0 - 2]),
                    value: $$[$0],
                    loc: yy.locInfo(this._$),
                  };
                  break;
                case 32:
                  this.$ = yy.id($$[$0 - 1]);
                  break;
                case 33:
                  this.$ = $$[$0];
                  break;
                case 34:
                  this.$ = $$[$0];
                  break;
                case 35:
                  this.$ = {
                    type: 'StringLiteral',
                    value: $$[$0],
                    original: $$[$0],
                    loc: yy.locInfo(this._$),
                  };
                  break;
                case 36:
                  this.$ = {
                    type: 'NumberLiteral',
                    value: Number($$[$0]),
                    original: Number($$[$0]),
                    loc: yy.locInfo(this._$),
                  };
                  break;
                case 37:
                  this.$ = {
                    type: 'BooleanLiteral',
                    value: $$[$0] === 'true',
                    original: $$[$0] === 'true',
                    loc: yy.locInfo(this._$),
                  };
                  break;
                case 38:
                  this.$ = {
                    type: 'UndefinedLiteral',
                    original: undefined,
                    value: undefined,
                    loc: yy.locInfo(this._$),
                  };
                  break;
                case 39:
                  this.$ = {
                    type: 'NullLiteral',
                    original: null,
                    value: null,
                    loc: yy.locInfo(this._$),
                  };
                  break;
                case 40:
                  this.$ = $$[$0];
                  break;
                case 41:
                  this.$ = $$[$0];
                  break;
                case 42:
                  this.$ = yy.preparePath(true, $$[$0], this._$);
                  break;
                case 43:
                  this.$ = yy.preparePath(false, $$[$0], this._$);
                  break;
                case 44:
                  $$[$0 - 2].push({
                    part: yy.id($$[$0]),
                    original: $$[$0],
                    separator: $$[$0 - 1],
                  });
                  this.$ = $$[$0 - 2];
                  break;
                case 45:
                  this.$ = [{ part: yy.id($$[$0]), original: $$[$0] }];
                  break;
                case 46:
                  this.$ = [];
                  break;
                case 47:
                  $$[$0 - 1].push($$[$0]);
                  break;
                case 48:
                  this.$ = [];
                  break;
                case 49:
                  $$[$0 - 1].push($$[$0]);
                  break;
                case 50:
                  this.$ = [];
                  break;
                case 51:
                  $$[$0 - 1].push($$[$0]);
                  break;
                case 58:
                  this.$ = [];
                  break;
                case 59:
                  $$[$0 - 1].push($$[$0]);
                  break;
                case 64:
                  this.$ = [];
                  break;
                case 65:
                  $$[$0 - 1].push($$[$0]);
                  break;
                case 70:
                  this.$ = [];
                  break;
                case 71:
                  $$[$0 - 1].push($$[$0]);
                  break;
                case 78:
                  this.$ = [];
                  break;
                case 79:
                  $$[$0 - 1].push($$[$0]);
                  break;
                case 82:
                  this.$ = [];
                  break;
                case 83:
                  $$[$0 - 1].push($$[$0]);
                  break;
                case 86:
                  this.$ = [];
                  break;
                case 87:
                  $$[$0 - 1].push($$[$0]);
                  break;
                case 90:
                  this.$ = [];
                  break;
                case 91:
                  $$[$0 - 1].push($$[$0]);
                  break;
                case 94:
                  this.$ = [];
                  break;
                case 95:
                  $$[$0 - 1].push($$[$0]);
                  break;
                case 98:
                  this.$ = [$$[$0]];
                  break;
                case 99:
                  $$[$0 - 1].push($$[$0]);
                  break;
                case 100:
                  this.$ = [$$[$0]];
                  break;
                case 101:
                  $$[$0 - 1].push($$[$0]);
                  break;
              }
            },
            table: [
              {
                3: 1,
                4: 2,
                5: [2, 46],
                6: 3,
                14: [2, 46],
                15: [2, 46],
                19: [2, 46],
                29: [2, 46],
                34: [2, 46],
                48: [2, 46],
                51: [2, 46],
                55: [2, 46],
                60: [2, 46],
              },
              { 1: [3] },
              { 5: [1, 4] },
              {
                5: [2, 2],
                7: 5,
                8: 6,
                9: 7,
                10: 8,
                11: 9,
                12: 10,
                13: 11,
                14: [1, 12],
                15: [1, 20],
                16: 17,
                19: [1, 23],
                24: 15,
                27: 16,
                29: [1, 21],
                34: [1, 22],
                39: [2, 2],
                44: [2, 2],
                47: [2, 2],
                48: [1, 13],
                51: [1, 14],
                55: [1, 18],
                59: 19,
                60: [1, 24],
              },
              { 1: [2, 1] },
              {
                5: [2, 47],
                14: [2, 47],
                15: [2, 47],
                19: [2, 47],
                29: [2, 47],
                34: [2, 47],
                39: [2, 47],
                44: [2, 47],
                47: [2, 47],
                48: [2, 47],
                51: [2, 47],
                55: [2, 47],
                60: [2, 47],
              },
              {
                5: [2, 3],
                14: [2, 3],
                15: [2, 3],
                19: [2, 3],
                29: [2, 3],
                34: [2, 3],
                39: [2, 3],
                44: [2, 3],
                47: [2, 3],
                48: [2, 3],
                51: [2, 3],
                55: [2, 3],
                60: [2, 3],
              },
              {
                5: [2, 4],
                14: [2, 4],
                15: [2, 4],
                19: [2, 4],
                29: [2, 4],
                34: [2, 4],
                39: [2, 4],
                44: [2, 4],
                47: [2, 4],
                48: [2, 4],
                51: [2, 4],
                55: [2, 4],
                60: [2, 4],
              },
              {
                5: [2, 5],
                14: [2, 5],
                15: [2, 5],
                19: [2, 5],
                29: [2, 5],
                34: [2, 5],
                39: [2, 5],
                44: [2, 5],
                47: [2, 5],
                48: [2, 5],
                51: [2, 5],
                55: [2, 5],
                60: [2, 5],
              },
              {
                5: [2, 6],
                14: [2, 6],
                15: [2, 6],
                19: [2, 6],
                29: [2, 6],
                34: [2, 6],
                39: [2, 6],
                44: [2, 6],
                47: [2, 6],
                48: [2, 6],
                51: [2, 6],
                55: [2, 6],
                60: [2, 6],
              },
              {
                5: [2, 7],
                14: [2, 7],
                15: [2, 7],
                19: [2, 7],
                29: [2, 7],
                34: [2, 7],
                39: [2, 7],
                44: [2, 7],
                47: [2, 7],
                48: [2, 7],
                51: [2, 7],
                55: [2, 7],
                60: [2, 7],
              },
              {
                5: [2, 8],
                14: [2, 8],
                15: [2, 8],
                19: [2, 8],
                29: [2, 8],
                34: [2, 8],
                39: [2, 8],
                44: [2, 8],
                47: [2, 8],
                48: [2, 8],
                51: [2, 8],
                55: [2, 8],
                60: [2, 8],
              },
              {
                5: [2, 9],
                14: [2, 9],
                15: [2, 9],
                19: [2, 9],
                29: [2, 9],
                34: [2, 9],
                39: [2, 9],
                44: [2, 9],
                47: [2, 9],
                48: [2, 9],
                51: [2, 9],
                55: [2, 9],
                60: [2, 9],
              },
              {
                20: 25,
                72: [1, 35],
                78: 26,
                79: 27,
                80: [1, 28],
                81: [1, 29],
                82: [1, 30],
                83: [1, 31],
                84: [1, 32],
                85: [1, 34],
                86: 33,
              },
              {
                20: 36,
                72: [1, 35],
                78: 26,
                79: 27,
                80: [1, 28],
                81: [1, 29],
                82: [1, 30],
                83: [1, 31],
                84: [1, 32],
                85: [1, 34],
                86: 33,
              },
              {
                4: 37,
                6: 3,
                14: [2, 46],
                15: [2, 46],
                19: [2, 46],
                29: [2, 46],
                34: [2, 46],
                39: [2, 46],
                44: [2, 46],
                47: [2, 46],
                48: [2, 46],
                51: [2, 46],
                55: [2, 46],
                60: [2, 46],
              },
              {
                4: 38,
                6: 3,
                14: [2, 46],
                15: [2, 46],
                19: [2, 46],
                29: [2, 46],
                34: [2, 46],
                44: [2, 46],
                47: [2, 46],
                48: [2, 46],
                51: [2, 46],
                55: [2, 46],
                60: [2, 46],
              },
              { 15: [2, 48], 17: 39, 18: [2, 48] },
              {
                20: 41,
                56: 40,
                64: 42,
                65: [1, 43],
                72: [1, 35],
                78: 26,
                79: 27,
                80: [1, 28],
                81: [1, 29],
                82: [1, 30],
                83: [1, 31],
                84: [1, 32],
                85: [1, 34],
                86: 33,
              },
              {
                4: 44,
                6: 3,
                14: [2, 46],
                15: [2, 46],
                19: [2, 46],
                29: [2, 46],
                34: [2, 46],
                47: [2, 46],
                48: [2, 46],
                51: [2, 46],
                55: [2, 46],
                60: [2, 46],
              },
              {
                5: [2, 10],
                14: [2, 10],
                15: [2, 10],
                18: [2, 10],
                19: [2, 10],
                29: [2, 10],
                34: [2, 10],
                39: [2, 10],
                44: [2, 10],
                47: [2, 10],
                48: [2, 10],
                51: [2, 10],
                55: [2, 10],
                60: [2, 10],
              },
              {
                20: 45,
                72: [1, 35],
                78: 26,
                79: 27,
                80: [1, 28],
                81: [1, 29],
                82: [1, 30],
                83: [1, 31],
                84: [1, 32],
                85: [1, 34],
                86: 33,
              },
              {
                20: 46,
                72: [1, 35],
                78: 26,
                79: 27,
                80: [1, 28],
                81: [1, 29],
                82: [1, 30],
                83: [1, 31],
                84: [1, 32],
                85: [1, 34],
                86: 33,
              },
              {
                20: 47,
                72: [1, 35],
                78: 26,
                79: 27,
                80: [1, 28],
                81: [1, 29],
                82: [1, 30],
                83: [1, 31],
                84: [1, 32],
                85: [1, 34],
                86: 33,
              },
              {
                20: 41,
                56: 48,
                64: 42,
                65: [1, 43],
                72: [1, 35],
                78: 26,
                79: 27,
                80: [1, 28],
                81: [1, 29],
                82: [1, 30],
                83: [1, 31],
                84: [1, 32],
                85: [1, 34],
                86: 33,
              },
              {
                33: [2, 78],
                49: 49,
                65: [2, 78],
                72: [2, 78],
                80: [2, 78],
                81: [2, 78],
                82: [2, 78],
                83: [2, 78],
                84: [2, 78],
                85: [2, 78],
              },
              {
                23: [2, 33],
                33: [2, 33],
                54: [2, 33],
                65: [2, 33],
                68: [2, 33],
                72: [2, 33],
                75: [2, 33],
                80: [2, 33],
                81: [2, 33],
                82: [2, 33],
                83: [2, 33],
                84: [2, 33],
                85: [2, 33],
              },
              {
                23: [2, 34],
                33: [2, 34],
                54: [2, 34],
                65: [2, 34],
                68: [2, 34],
                72: [2, 34],
                75: [2, 34],
                80: [2, 34],
                81: [2, 34],
                82: [2, 34],
                83: [2, 34],
                84: [2, 34],
                85: [2, 34],
              },
              {
                23: [2, 35],
                33: [2, 35],
                54: [2, 35],
                65: [2, 35],
                68: [2, 35],
                72: [2, 35],
                75: [2, 35],
                80: [2, 35],
                81: [2, 35],
                82: [2, 35],
                83: [2, 35],
                84: [2, 35],
                85: [2, 35],
              },
              {
                23: [2, 36],
                33: [2, 36],
                54: [2, 36],
                65: [2, 36],
                68: [2, 36],
                72: [2, 36],
                75: [2, 36],
                80: [2, 36],
                81: [2, 36],
                82: [2, 36],
                83: [2, 36],
                84: [2, 36],
                85: [2, 36],
              },
              {
                23: [2, 37],
                33: [2, 37],
                54: [2, 37],
                65: [2, 37],
                68: [2, 37],
                72: [2, 37],
                75: [2, 37],
                80: [2, 37],
                81: [2, 37],
                82: [2, 37],
                83: [2, 37],
                84: [2, 37],
                85: [2, 37],
              },
              {
                23: [2, 38],
                33: [2, 38],
                54: [2, 38],
                65: [2, 38],
                68: [2, 38],
                72: [2, 38],
                75: [2, 38],
                80: [2, 38],
                81: [2, 38],
                82: [2, 38],
                83: [2, 38],
                84: [2, 38],
                85: [2, 38],
              },
              {
                23: [2, 39],
                33: [2, 39],
                54: [2, 39],
                65: [2, 39],
                68: [2, 39],
                72: [2, 39],
                75: [2, 39],
                80: [2, 39],
                81: [2, 39],
                82: [2, 39],
                83: [2, 39],
                84: [2, 39],
                85: [2, 39],
              },
              {
                23: [2, 43],
                33: [2, 43],
                54: [2, 43],
                65: [2, 43],
                68: [2, 43],
                72: [2, 43],
                75: [2, 43],
                80: [2, 43],
                81: [2, 43],
                82: [2, 43],
                83: [2, 43],
                84: [2, 43],
                85: [2, 43],
                87: [1, 50],
              },
              { 72: [1, 35], 86: 51 },
              {
                23: [2, 45],
                33: [2, 45],
                54: [2, 45],
                65: [2, 45],
                68: [2, 45],
                72: [2, 45],
                75: [2, 45],
                80: [2, 45],
                81: [2, 45],
                82: [2, 45],
                83: [2, 45],
                84: [2, 45],
                85: [2, 45],
                87: [2, 45],
              },
              {
                52: 52,
                54: [2, 82],
                65: [2, 82],
                72: [2, 82],
                80: [2, 82],
                81: [2, 82],
                82: [2, 82],
                83: [2, 82],
                84: [2, 82],
                85: [2, 82],
              },
              {
                25: 53,
                38: 55,
                39: [1, 57],
                43: 56,
                44: [1, 58],
                45: 54,
                47: [2, 54],
              },
              { 28: 59, 43: 60, 44: [1, 58], 47: [2, 56] },
              { 13: 62, 15: [1, 20], 18: [1, 61] },
              {
                33: [2, 86],
                57: 63,
                65: [2, 86],
                72: [2, 86],
                80: [2, 86],
                81: [2, 86],
                82: [2, 86],
                83: [2, 86],
                84: [2, 86],
                85: [2, 86],
              },
              {
                33: [2, 40],
                65: [2, 40],
                72: [2, 40],
                80: [2, 40],
                81: [2, 40],
                82: [2, 40],
                83: [2, 40],
                84: [2, 40],
                85: [2, 40],
              },
              {
                33: [2, 41],
                65: [2, 41],
                72: [2, 41],
                80: [2, 41],
                81: [2, 41],
                82: [2, 41],
                83: [2, 41],
                84: [2, 41],
                85: [2, 41],
              },
              {
                20: 64,
                72: [1, 35],
                78: 26,
                79: 27,
                80: [1, 28],
                81: [1, 29],
                82: [1, 30],
                83: [1, 31],
                84: [1, 32],
                85: [1, 34],
                86: 33,
              },
              { 26: 65, 47: [1, 66] },
              {
                30: 67,
                33: [2, 58],
                65: [2, 58],
                72: [2, 58],
                75: [2, 58],
                80: [2, 58],
                81: [2, 58],
                82: [2, 58],
                83: [2, 58],
                84: [2, 58],
                85: [2, 58],
              },
              {
                33: [2, 64],
                35: 68,
                65: [2, 64],
                72: [2, 64],
                75: [2, 64],
                80: [2, 64],
                81: [2, 64],
                82: [2, 64],
                83: [2, 64],
                84: [2, 64],
                85: [2, 64],
              },
              {
                21: 69,
                23: [2, 50],
                65: [2, 50],
                72: [2, 50],
                80: [2, 50],
                81: [2, 50],
                82: [2, 50],
                83: [2, 50],
                84: [2, 50],
                85: [2, 50],
              },
              {
                33: [2, 90],
                61: 70,
                65: [2, 90],
                72: [2, 90],
                80: [2, 90],
                81: [2, 90],
                82: [2, 90],
                83: [2, 90],
                84: [2, 90],
                85: [2, 90],
              },
              {
                20: 74,
                33: [2, 80],
                50: 71,
                63: 72,
                64: 75,
                65: [1, 43],
                69: 73,
                70: 76,
                71: 77,
                72: [1, 78],
                78: 26,
                79: 27,
                80: [1, 28],
                81: [1, 29],
                82: [1, 30],
                83: [1, 31],
                84: [1, 32],
                85: [1, 34],
                86: 33,
              },
              { 72: [1, 79] },
              {
                23: [2, 42],
                33: [2, 42],
                54: [2, 42],
                65: [2, 42],
                68: [2, 42],
                72: [2, 42],
                75: [2, 42],
                80: [2, 42],
                81: [2, 42],
                82: [2, 42],
                83: [2, 42],
                84: [2, 42],
                85: [2, 42],
                87: [1, 50],
              },
              {
                20: 74,
                53: 80,
                54: [2, 84],
                63: 81,
                64: 75,
                65: [1, 43],
                69: 82,
                70: 76,
                71: 77,
                72: [1, 78],
                78: 26,
                79: 27,
                80: [1, 28],
                81: [1, 29],
                82: [1, 30],
                83: [1, 31],
                84: [1, 32],
                85: [1, 34],
                86: 33,
              },
              { 26: 83, 47: [1, 66] },
              { 47: [2, 55] },
              {
                4: 84,
                6: 3,
                14: [2, 46],
                15: [2, 46],
                19: [2, 46],
                29: [2, 46],
                34: [2, 46],
                39: [2, 46],
                44: [2, 46],
                47: [2, 46],
                48: [2, 46],
                51: [2, 46],
                55: [2, 46],
                60: [2, 46],
              },
              { 47: [2, 20] },
              {
                20: 85,
                72: [1, 35],
                78: 26,
                79: 27,
                80: [1, 28],
                81: [1, 29],
                82: [1, 30],
                83: [1, 31],
                84: [1, 32],
                85: [1, 34],
                86: 33,
              },
              {
                4: 86,
                6: 3,
                14: [2, 46],
                15: [2, 46],
                19: [2, 46],
                29: [2, 46],
                34: [2, 46],
                47: [2, 46],
                48: [2, 46],
                51: [2, 46],
                55: [2, 46],
                60: [2, 46],
              },
              { 26: 87, 47: [1, 66] },
              { 47: [2, 57] },
              {
                5: [2, 11],
                14: [2, 11],
                15: [2, 11],
                19: [2, 11],
                29: [2, 11],
                34: [2, 11],
                39: [2, 11],
                44: [2, 11],
                47: [2, 11],
                48: [2, 11],
                51: [2, 11],
                55: [2, 11],
                60: [2, 11],
              },
              { 15: [2, 49], 18: [2, 49] },
              {
                20: 74,
                33: [2, 88],
                58: 88,
                63: 89,
                64: 75,
                65: [1, 43],
                69: 90,
                70: 76,
                71: 77,
                72: [1, 78],
                78: 26,
                79: 27,
                80: [1, 28],
                81: [1, 29],
                82: [1, 30],
                83: [1, 31],
                84: [1, 32],
                85: [1, 34],
                86: 33,
              },
              {
                65: [2, 94],
                66: 91,
                68: [2, 94],
                72: [2, 94],
                80: [2, 94],
                81: [2, 94],
                82: [2, 94],
                83: [2, 94],
                84: [2, 94],
                85: [2, 94],
              },
              {
                5: [2, 25],
                14: [2, 25],
                15: [2, 25],
                19: [2, 25],
                29: [2, 25],
                34: [2, 25],
                39: [2, 25],
                44: [2, 25],
                47: [2, 25],
                48: [2, 25],
                51: [2, 25],
                55: [2, 25],
                60: [2, 25],
              },
              {
                20: 92,
                72: [1, 35],
                78: 26,
                79: 27,
                80: [1, 28],
                81: [1, 29],
                82: [1, 30],
                83: [1, 31],
                84: [1, 32],
                85: [1, 34],
                86: 33,
              },
              {
                20: 74,
                31: 93,
                33: [2, 60],
                63: 94,
                64: 75,
                65: [1, 43],
                69: 95,
                70: 76,
                71: 77,
                72: [1, 78],
                75: [2, 60],
                78: 26,
                79: 27,
                80: [1, 28],
                81: [1, 29],
                82: [1, 30],
                83: [1, 31],
                84: [1, 32],
                85: [1, 34],
                86: 33,
              },
              {
                20: 74,
                33: [2, 66],
                36: 96,
                63: 97,
                64: 75,
                65: [1, 43],
                69: 98,
                70: 76,
                71: 77,
                72: [1, 78],
                75: [2, 66],
                78: 26,
                79: 27,
                80: [1, 28],
                81: [1, 29],
                82: [1, 30],
                83: [1, 31],
                84: [1, 32],
                85: [1, 34],
                86: 33,
              },
              {
                20: 74,
                22: 99,
                23: [2, 52],
                63: 100,
                64: 75,
                65: [1, 43],
                69: 101,
                70: 76,
                71: 77,
                72: [1, 78],
                78: 26,
                79: 27,
                80: [1, 28],
                81: [1, 29],
                82: [1, 30],
                83: [1, 31],
                84: [1, 32],
                85: [1, 34],
                86: 33,
              },
              {
                20: 74,
                33: [2, 92],
                62: 102,
                63: 103,
                64: 75,
                65: [1, 43],
                69: 104,
                70: 76,
                71: 77,
                72: [1, 78],
                78: 26,
                79: 27,
                80: [1, 28],
                81: [1, 29],
                82: [1, 30],
                83: [1, 31],
                84: [1, 32],
                85: [1, 34],
                86: 33,
              },
              { 33: [1, 105] },
              {
                33: [2, 79],
                65: [2, 79],
                72: [2, 79],
                80: [2, 79],
                81: [2, 79],
                82: [2, 79],
                83: [2, 79],
                84: [2, 79],
                85: [2, 79],
              },
              { 33: [2, 81] },
              {
                23: [2, 27],
                33: [2, 27],
                54: [2, 27],
                65: [2, 27],
                68: [2, 27],
                72: [2, 27],
                75: [2, 27],
                80: [2, 27],
                81: [2, 27],
                82: [2, 27],
                83: [2, 27],
                84: [2, 27],
                85: [2, 27],
              },
              {
                23: [2, 28],
                33: [2, 28],
                54: [2, 28],
                65: [2, 28],
                68: [2, 28],
                72: [2, 28],
                75: [2, 28],
                80: [2, 28],
                81: [2, 28],
                82: [2, 28],
                83: [2, 28],
                84: [2, 28],
                85: [2, 28],
              },
              {
                23: [2, 30],
                33: [2, 30],
                54: [2, 30],
                68: [2, 30],
                71: 106,
                72: [1, 107],
                75: [2, 30],
              },
              {
                23: [2, 98],
                33: [2, 98],
                54: [2, 98],
                68: [2, 98],
                72: [2, 98],
                75: [2, 98],
              },
              {
                23: [2, 45],
                33: [2, 45],
                54: [2, 45],
                65: [2, 45],
                68: [2, 45],
                72: [2, 45],
                73: [1, 108],
                75: [2, 45],
                80: [2, 45],
                81: [2, 45],
                82: [2, 45],
                83: [2, 45],
                84: [2, 45],
                85: [2, 45],
                87: [2, 45],
              },
              {
                23: [2, 44],
                33: [2, 44],
                54: [2, 44],
                65: [2, 44],
                68: [2, 44],
                72: [2, 44],
                75: [2, 44],
                80: [2, 44],
                81: [2, 44],
                82: [2, 44],
                83: [2, 44],
                84: [2, 44],
                85: [2, 44],
                87: [2, 44],
              },
              { 54: [1, 109] },
              {
                54: [2, 83],
                65: [2, 83],
                72: [2, 83],
                80: [2, 83],
                81: [2, 83],
                82: [2, 83],
                83: [2, 83],
                84: [2, 83],
                85: [2, 83],
              },
              { 54: [2, 85] },
              {
                5: [2, 13],
                14: [2, 13],
                15: [2, 13],
                19: [2, 13],
                29: [2, 13],
                34: [2, 13],
                39: [2, 13],
                44: [2, 13],
                47: [2, 13],
                48: [2, 13],
                51: [2, 13],
                55: [2, 13],
                60: [2, 13],
              },
              {
                38: 55,
                39: [1, 57],
                43: 56,
                44: [1, 58],
                45: 111,
                46: 110,
                47: [2, 76],
              },
              {
                33: [2, 70],
                40: 112,
                65: [2, 70],
                72: [2, 70],
                75: [2, 70],
                80: [2, 70],
                81: [2, 70],
                82: [2, 70],
                83: [2, 70],
                84: [2, 70],
                85: [2, 70],
              },
              { 47: [2, 18] },
              {
                5: [2, 14],
                14: [2, 14],
                15: [2, 14],
                19: [2, 14],
                29: [2, 14],
                34: [2, 14],
                39: [2, 14],
                44: [2, 14],
                47: [2, 14],
                48: [2, 14],
                51: [2, 14],
                55: [2, 14],
                60: [2, 14],
              },
              { 33: [1, 113] },
              {
                33: [2, 87],
                65: [2, 87],
                72: [2, 87],
                80: [2, 87],
                81: [2, 87],
                82: [2, 87],
                83: [2, 87],
                84: [2, 87],
                85: [2, 87],
              },
              { 33: [2, 89] },
              {
                20: 74,
                63: 115,
                64: 75,
                65: [1, 43],
                67: 114,
                68: [2, 96],
                69: 116,
                70: 76,
                71: 77,
                72: [1, 78],
                78: 26,
                79: 27,
                80: [1, 28],
                81: [1, 29],
                82: [1, 30],
                83: [1, 31],
                84: [1, 32],
                85: [1, 34],
                86: 33,
              },
              { 33: [1, 117] },
              { 32: 118, 33: [2, 62], 74: 119, 75: [1, 120] },
              {
                33: [2, 59],
                65: [2, 59],
                72: [2, 59],
                75: [2, 59],
                80: [2, 59],
                81: [2, 59],
                82: [2, 59],
                83: [2, 59],
                84: [2, 59],
                85: [2, 59],
              },
              { 33: [2, 61], 75: [2, 61] },
              { 33: [2, 68], 37: 121, 74: 122, 75: [1, 120] },
              {
                33: [2, 65],
                65: [2, 65],
                72: [2, 65],
                75: [2, 65],
                80: [2, 65],
                81: [2, 65],
                82: [2, 65],
                83: [2, 65],
                84: [2, 65],
                85: [2, 65],
              },
              { 33: [2, 67], 75: [2, 67] },
              { 23: [1, 123] },
              {
                23: [2, 51],
                65: [2, 51],
                72: [2, 51],
                80: [2, 51],
                81: [2, 51],
                82: [2, 51],
                83: [2, 51],
                84: [2, 51],
                85: [2, 51],
              },
              { 23: [2, 53] },
              { 33: [1, 124] },
              {
                33: [2, 91],
                65: [2, 91],
                72: [2, 91],
                80: [2, 91],
                81: [2, 91],
                82: [2, 91],
                83: [2, 91],
                84: [2, 91],
                85: [2, 91],
              },
              { 33: [2, 93] },
              {
                5: [2, 22],
                14: [2, 22],
                15: [2, 22],
                19: [2, 22],
                29: [2, 22],
                34: [2, 22],
                39: [2, 22],
                44: [2, 22],
                47: [2, 22],
                48: [2, 22],
                51: [2, 22],
                55: [2, 22],
                60: [2, 22],
              },
              {
                23: [2, 99],
                33: [2, 99],
                54: [2, 99],
                68: [2, 99],
                72: [2, 99],
                75: [2, 99],
              },
              { 73: [1, 108] },
              {
                20: 74,
                63: 125,
                64: 75,
                65: [1, 43],
                72: [1, 35],
                78: 26,
                79: 27,
                80: [1, 28],
                81: [1, 29],
                82: [1, 30],
                83: [1, 31],
                84: [1, 32],
                85: [1, 34],
                86: 33,
              },
              {
                5: [2, 23],
                14: [2, 23],
                15: [2, 23],
                19: [2, 23],
                29: [2, 23],
                34: [2, 23],
                39: [2, 23],
                44: [2, 23],
                47: [2, 23],
                48: [2, 23],
                51: [2, 23],
                55: [2, 23],
                60: [2, 23],
              },
              { 47: [2, 19] },
              { 47: [2, 77] },
              {
                20: 74,
                33: [2, 72],
                41: 126,
                63: 127,
                64: 75,
                65: [1, 43],
                69: 128,
                70: 76,
                71: 77,
                72: [1, 78],
                75: [2, 72],
                78: 26,
                79: 27,
                80: [1, 28],
                81: [1, 29],
                82: [1, 30],
                83: [1, 31],
                84: [1, 32],
                85: [1, 34],
                86: 33,
              },
              {
                5: [2, 24],
                14: [2, 24],
                15: [2, 24],
                19: [2, 24],
                29: [2, 24],
                34: [2, 24],
                39: [2, 24],
                44: [2, 24],
                47: [2, 24],
                48: [2, 24],
                51: [2, 24],
                55: [2, 24],
                60: [2, 24],
              },
              { 68: [1, 129] },
              {
                65: [2, 95],
                68: [2, 95],
                72: [2, 95],
                80: [2, 95],
                81: [2, 95],
                82: [2, 95],
                83: [2, 95],
                84: [2, 95],
                85: [2, 95],
              },
              { 68: [2, 97] },
              {
                5: [2, 21],
                14: [2, 21],
                15: [2, 21],
                19: [2, 21],
                29: [2, 21],
                34: [2, 21],
                39: [2, 21],
                44: [2, 21],
                47: [2, 21],
                48: [2, 21],
                51: [2, 21],
                55: [2, 21],
                60: [2, 21],
              },
              { 33: [1, 130] },
              { 33: [2, 63] },
              { 72: [1, 132], 76: 131 },
              { 33: [1, 133] },
              { 33: [2, 69] },
              { 15: [2, 12], 18: [2, 12] },
              {
                14: [2, 26],
                15: [2, 26],
                19: [2, 26],
                29: [2, 26],
                34: [2, 26],
                47: [2, 26],
                48: [2, 26],
                51: [2, 26],
                55: [2, 26],
                60: [2, 26],
              },
              {
                23: [2, 31],
                33: [2, 31],
                54: [2, 31],
                68: [2, 31],
                72: [2, 31],
                75: [2, 31],
              },
              { 33: [2, 74], 42: 134, 74: 135, 75: [1, 120] },
              {
                33: [2, 71],
                65: [2, 71],
                72: [2, 71],
                75: [2, 71],
                80: [2, 71],
                81: [2, 71],
                82: [2, 71],
                83: [2, 71],
                84: [2, 71],
                85: [2, 71],
              },
              { 33: [2, 73], 75: [2, 73] },
              {
                23: [2, 29],
                33: [2, 29],
                54: [2, 29],
                65: [2, 29],
                68: [2, 29],
                72: [2, 29],
                75: [2, 29],
                80: [2, 29],
                81: [2, 29],
                82: [2, 29],
                83: [2, 29],
                84: [2, 29],
                85: [2, 29],
              },
              {
                14: [2, 15],
                15: [2, 15],
                19: [2, 15],
                29: [2, 15],
                34: [2, 15],
                39: [2, 15],
                44: [2, 15],
                47: [2, 15],
                48: [2, 15],
                51: [2, 15],
                55: [2, 15],
                60: [2, 15],
              },
              { 72: [1, 137], 77: [1, 136] },
              { 72: [2, 100], 77: [2, 100] },
              {
                14: [2, 16],
                15: [2, 16],
                19: [2, 16],
                29: [2, 16],
                34: [2, 16],
                44: [2, 16],
                47: [2, 16],
                48: [2, 16],
                51: [2, 16],
                55: [2, 16],
                60: [2, 16],
              },
              { 33: [1, 138] },
              { 33: [2, 75] },
              { 33: [2, 32] },
              { 72: [2, 101], 77: [2, 101] },
              {
                14: [2, 17],
                15: [2, 17],
                19: [2, 17],
                29: [2, 17],
                34: [2, 17],
                39: [2, 17],
                44: [2, 17],
                47: [2, 17],
                48: [2, 17],
                51: [2, 17],
                55: [2, 17],
                60: [2, 17],
              },
            ],
            defaultActions: {
              4: [2, 1],
              54: [2, 55],
              56: [2, 20],
              60: [2, 57],
              73: [2, 81],
              82: [2, 85],
              86: [2, 18],
              90: [2, 89],
              101: [2, 53],
              104: [2, 93],
              110: [2, 19],
              111: [2, 77],
              116: [2, 97],
              119: [2, 63],
              122: [2, 69],
              135: [2, 75],
              136: [2, 32],
            },
            parseError: function parseError(str, hash) {
              throw new Error(str);
            },
            parse: function parse(input) {
              var self = this,
                stack = [0],
                vstack = [null],
                lstack = [],
                table = this.table,
                yytext = '',
                yylineno = 0,
                yyleng = 0,
                recovering = 0,
                TERROR = 2,
                EOF = 1;
              this.lexer.setInput(input);
              this.lexer.yy = this.yy;
              this.yy.lexer = this.lexer;
              this.yy.parser = this;
              if (typeof this.lexer.yylloc == 'undefined')
                this.lexer.yylloc = {};
              var yyloc = this.lexer.yylloc;
              lstack.push(yyloc);
              var ranges = this.lexer.options && this.lexer.options.ranges;
              if (typeof this.yy.parseError === 'function')
                this.parseError = this.yy.parseError;
              function popStack(n) {
                stack.length = stack.length - 2 * n;
                vstack.length = vstack.length - n;
                lstack.length = lstack.length - n;
              }
              function lex() {
                var token;
                token = self.lexer.lex() || 1;
                if (typeof token !== 'number') {
                  token = self.symbols_[token] || token;
                }
                return token;
              }
              var symbol,
                preErrorSymbol,
                state,
                action,
                a,
                r,
                yyval = {},
                p,
                len,
                newState,
                expected;
              while (true) {
                state = stack[stack.length - 1];
                if (this.defaultActions[state]) {
                  action = this.defaultActions[state];
                } else {
                  if (symbol === null || typeof symbol == 'undefined') {
                    symbol = lex();
                  }
                  action = table[state] && table[state][symbol];
                }
                if (
                  typeof action === 'undefined' ||
                  !action.length ||
                  !action[0]
                ) {
                  var errStr = '';
                  if (!recovering) {
                    expected = [];
                    for (p in table[state])
                      if (this.terminals_[p] && p > 2) {
                        expected.push("'" + this.terminals_[p] + "'");
                      }
                    if (this.lexer.showPosition) {
                      errStr =
                        'Parse error on line ' +
                        (yylineno + 1) +
                        ':\n' +
                        this.lexer.showPosition() +
                        '\nExpecting ' +
                        expected.join(', ') +
                        ", got '" +
                        (this.terminals_[symbol] || symbol) +
                        "'";
                    } else {
                      errStr =
                        'Parse error on line ' +
                        (yylineno + 1) +
                        ': Unexpected ' +
                        (symbol == 1
                          ? 'end of input'
                          : "'" + (this.terminals_[symbol] || symbol) + "'");
                    }
                    this.parseError(errStr, {
                      text: this.lexer.match,
                      token: this.terminals_[symbol] || symbol,
                      line: this.lexer.yylineno,
                      loc: yyloc,
                      expected: expected,
                    });
                  }
                }
                if (action[0] instanceof Array && action.length > 1) {
                  throw new Error(
                    'Parse Error: multiple actions possible at state: ' +
                      state +
                      ', token: ' +
                      symbol
                  );
                }
                switch (action[0]) {
                  case 1:
                    stack.push(symbol);
                    vstack.push(this.lexer.yytext);
                    lstack.push(this.lexer.yylloc);
                    stack.push(action[1]);
                    symbol = null;
                    if (!preErrorSymbol) {
                      yyleng = this.lexer.yyleng;
                      yytext = this.lexer.yytext;
                      yylineno = this.lexer.yylineno;
                      yyloc = this.lexer.yylloc;
                      if (recovering > 0) recovering--;
                    } else {
                      symbol = preErrorSymbol;
                      preErrorSymbol = null;
                    }
                    break;
                  case 2:
                    len = this.productions_[action[1]][1];
                    yyval.$ = vstack[vstack.length - len];
                    yyval._$ = {
                      first_line: lstack[lstack.length - (len || 1)].first_line,
                      last_line: lstack[lstack.length - 1].last_line,
                      first_column:
                        lstack[lstack.length - (len || 1)].first_column,
                      last_column: lstack[lstack.length - 1].last_column,
                    };
                    if (ranges) {
                      yyval._$.range = [
                        lstack[lstack.length - (len || 1)].range[0],
                        lstack[lstack.length - 1].range[1],
                      ];
                    }
                    r = this.performAction.call(
                      yyval,
                      yytext,
                      yyleng,
                      yylineno,
                      this.yy,
                      action[1],
                      vstack,
                      lstack
                    );
                    if (typeof r !== 'undefined') {
                      return r;
                    }
                    if (len) {
                      stack = stack.slice(0, -1 * len * 2);
                      vstack = vstack.slice(0, -1 * len);
                      lstack = lstack.slice(0, -1 * len);
                    }
                    stack.push(this.productions_[action[1]][0]);
                    vstack.push(yyval.$);
                    lstack.push(yyval._$);
                    newState =
                      table[stack[stack.length - 2]][stack[stack.length - 1]];
                    stack.push(newState);
                    break;
                  case 3:
                    return true;
                }
              }
              return true;
            },
          };
          /* Jison generated lexer */
          var lexer = (function () {
            var lexer = {
              EOF: 1,
              parseError: function parseError(str, hash) {
                if (this.yy.parser) {
                  this.yy.parser.parseError(str, hash);
                } else {
                  throw new Error(str);
                }
              },
              setInput: function setInput(input) {
                this._input = input;
                this._more = this._less = this.done = false;
                this.yylineno = this.yyleng = 0;
                this.yytext = this.matched = this.match = '';
                this.conditionStack = ['INITIAL'];
                this.yylloc = {
                  first_line: 1,
                  first_column: 0,
                  last_line: 1,
                  last_column: 0,
                };
                if (this.options.ranges) this.yylloc.range = [0, 0];
                this.offset = 0;
                return this;
              },
              input: function input() {
                var ch = this._input[0];
                this.yytext += ch;
                this.yyleng++;
                this.offset++;
                this.match += ch;
                this.matched += ch;
                var lines = ch.match(/(?:\r\n?|\n).*/g);
                if (lines) {
                  this.yylineno++;
                  this.yylloc.last_line++;
                } else {
                  this.yylloc.last_column++;
                }
                if (this.options.ranges) this.yylloc.range[1]++;

                this._input = this._input.slice(1);
                return ch;
              },
              unput: function unput(ch) {
                var len = ch.length;
                var lines = ch.split(/(?:\r\n?|\n)/g);

                this._input = ch + this._input;
                this.yytext = this.yytext.substr(
                  0,
                  this.yytext.length - len - 1
                );
                //this.yyleng -= len;
                this.offset -= len;
                var oldLines = this.match.split(/(?:\r\n?|\n)/g);
                this.match = this.match.substr(0, this.match.length - 1);
                this.matched = this.matched.substr(0, this.matched.length - 1);

                if (lines.length - 1) this.yylineno -= lines.length - 1;
                var r = this.yylloc.range;

                this.yylloc = {
                  first_line: this.yylloc.first_line,
                  last_line: this.yylineno + 1,
                  first_column: this.yylloc.first_column,
                  last_column: lines
                    ? (lines.length === oldLines.length
                        ? this.yylloc.first_column
                        : 0) +
                      oldLines[oldLines.length - lines.length].length -
                      lines[0].length
                    : this.yylloc.first_column - len,
                };

                if (this.options.ranges) {
                  this.yylloc.range = [r[0], r[0] + this.yyleng - len];
                }
                return this;
              },
              more: function more() {
                this._more = true;
                return this;
              },
              less: function less(n) {
                this.unput(this.match.slice(n));
              },
              pastInput: function pastInput() {
                var past = this.matched.substr(
                  0,
                  this.matched.length - this.match.length
                );
                return (
                  (past.length > 20 ? '...' : '') +
                  past.substr(-20).replace(/\n/g, '')
                );
              },
              upcomingInput: function upcomingInput() {
                var next = this.match;
                if (next.length < 20) {
                  next += this._input.substr(0, 20 - next.length);
                }
                return (
                  next.substr(0, 20) + (next.length > 20 ? '...' : '')
                ).replace(/\n/g, '');
              },
              showPosition: function showPosition() {
                var pre = this.pastInput();
                var c = new Array(pre.length + 1).join('-');
                return pre + this.upcomingInput() + '\n' + c + '^';
              },
              next: function next() {
                if (this.done) {
                  return this.EOF;
                }
                if (!this._input) this.done = true;

                var token, match, tempMatch, index, col, lines;
                if (!this._more) {
                  this.yytext = '';
                  this.match = '';
                }
                var rules = this._currentRules();
                for (var i = 0; i < rules.length; i++) {
                  tempMatch = this._input.match(this.rules[rules[i]]);
                  if (
                    tempMatch &&
                    (!match || tempMatch[0].length > match[0].length)
                  ) {
                    match = tempMatch;
                    index = i;
                    if (!this.options.flex) break;
                  }
                }
                if (match) {
                  lines = match[0].match(/(?:\r\n?|\n).*/g);
                  if (lines) this.yylineno += lines.length;
                  this.yylloc = {
                    first_line: this.yylloc.last_line,
                    last_line: this.yylineno + 1,
                    first_column: this.yylloc.last_column,
                    last_column: lines
                      ? lines[lines.length - 1].length -
                        lines[lines.length - 1].match(/\r?\n?/)[0].length
                      : this.yylloc.last_column + match[0].length,
                  };
                  this.yytext += match[0];
                  this.match += match[0];
                  this.matches = match;
                  this.yyleng = this.yytext.length;
                  if (this.options.ranges) {
                    this.yylloc.range = [
                      this.offset,
                      (this.offset += this.yyleng),
                    ];
                  }
                  this._more = false;
                  this._input = this._input.slice(match[0].length);
                  this.matched += match[0];
                  token = this.performAction.call(
                    this,
                    this.yy,
                    this,
                    rules[index],
                    this.conditionStack[this.conditionStack.length - 1]
                  );
                  if (this.done && this._input) this.done = false;
                  if (token) return token;
                  else return;
                }
                if (this._input === '') {
                  return this.EOF;
                } else {
                  return this.parseError(
                    'Lexical error on line ' +
                      (this.yylineno + 1) +
                      '. Unrecognized text.\n' +
                      this.showPosition(),
                    { text: '', token: null, line: this.yylineno }
                  );
                }
              },
              lex: function lex() {
                var r = this.next();
                if (typeof r !== 'undefined') {
                  return r;
                } else {
                  return this.lex();
                }
              },
              begin: function begin(condition) {
                this.conditionStack.push(condition);
              },
              popState: function popState() {
                return this.conditionStack.pop();
              },
              _currentRules: function _currentRules() {
                return this.conditions[
                  this.conditionStack[this.conditionStack.length - 1]
                ].rules;
              },
              topState: function topState() {
                return this.conditionStack[this.conditionStack.length - 2];
              },
              pushState: function begin(condition) {
                this.begin(condition);
              },
            };
            lexer.options = {};
            lexer.performAction = function anonymous(
              yy,
              yy_,
              $avoiding_name_collisions,
              YY_START
            ) {
              function strip(start, end) {
                return (yy_.yytext = yy_.yytext.substring(
                  start,
                  yy_.yyleng - end + start
                ));
              }

              var YYSTATE = YY_START;
              switch ($avoiding_name_collisions) {
                case 0:
                  if (yy_.yytext.slice(-2) === '\\\\') {
                    strip(0, 1);
                    this.begin('mu');
                  } else if (yy_.yytext.slice(-1) === '\\') {
                    strip(0, 1);
                    this.begin('emu');
                  } else {
                    this.begin('mu');
                  }
                  if (yy_.yytext) return 15;

                  break;
                case 1:
                  return 15;
                  break;
                case 2:
                  this.popState();
                  return 15;

                  break;
                case 3:
                  this.begin('raw');
                  return 15;
                  break;
                case 4:
                  this.popState();
                  // Should be using `this.topState()` below, but it currently
                  // returns the second top instead of the first top. Opened an
                  // issue about it at https://github.com/zaach/jison/issues/291
                  if (
                    this.conditionStack[this.conditionStack.length - 1] ===
                    'raw'
                  ) {
                    return 15;
                  } else {
                    strip(5, 9);
                    return 'END_RAW_BLOCK';
                  }

                  break;
                case 5:
                  return 15;
                  break;
                case 6:
                  this.popState();
                  return 14;

                  break;
                case 7:
                  return 65;
                  break;
                case 8:
                  return 68;
                  break;
                case 9:
                  return 19;
                  break;
                case 10:
                  this.popState();
                  this.begin('raw');
                  return 23;

                  break;
                case 11:
                  return 55;
                  break;
                case 12:
                  return 60;
                  break;
                case 13:
                  return 29;
                  break;
                case 14:
                  return 47;
                  break;
                case 15:
                  this.popState();
                  return 44;
                  break;
                case 16:
                  this.popState();
                  return 44;
                  break;
                case 17:
                  return 34;
                  break;
                case 18:
                  return 39;
                  break;
                case 19:
                  return 51;
                  break;
                case 20:
                  return 48;
                  break;
                case 21:
                  this.unput(yy_.yytext);
                  this.popState();
                  this.begin('com');

                  break;
                case 22:
                  this.popState();
                  return 14;

                  break;
                case 23:
                  return 48;
                  break;
                case 24:
                  return 73;
                  break;
                case 25:
                  return 72;
                  break;
                case 26:
                  return 72;
                  break;
                case 27:
                  return 87;
                  break;
                case 28:
                  // ignore whitespace
                  break;
                case 29:
                  this.popState();
                  return 54;
                  break;
                case 30:
                  this.popState();
                  return 33;
                  break;
                case 31:
                  yy_.yytext = strip(1, 2).replace(/\\"/g, '"');
                  return 80;
                  break;
                case 32:
                  yy_.yytext = strip(1, 2).replace(/\\'/g, "'");
                  return 80;
                  break;
                case 33:
                  return 85;
                  break;
                case 34:
                  return 82;
                  break;
                case 35:
                  return 82;
                  break;
                case 36:
                  return 83;
                  break;
                case 37:
                  return 84;
                  break;
                case 38:
                  return 81;
                  break;
                case 39:
                  return 75;
                  break;
                case 40:
                  return 77;
                  break;
                case 41:
                  return 72;
                  break;
                case 42:
                  yy_.yytext = yy_.yytext.replace(/\\([\\\]])/g, '$1');
                  return 72;
                  break;
                case 43:
                  return 'INVALID';
                  break;
                case 44:
                  return 5;
                  break;
              }
            };
            lexer.rules = [
              /^(?:[^\x00]*?(?=(\{\{)))/,
              /^(?:[^\x00]+)/,
              /^(?:[^\x00]{2,}?(?=(\{\{|\\\{\{|\\\\\{\{|$)))/,
              /^(?:\{\{\{\{(?=[^\/]))/,
              /^(?:\{\{\{\{\/[^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=[=}\s\/.])\}\}\}\})/,
              /^(?:[^\x00]+?(?=(\{\{\{\{)))/,
              /^(?:[\s\S]*?--(~)?\}\})/,
              /^(?:\()/,
              /^(?:\))/,
              /^(?:\{\{\{\{)/,
              /^(?:\}\}\}\})/,
              /^(?:\{\{(~)?>)/,
              /^(?:\{\{(~)?#>)/,
              /^(?:\{\{(~)?#\*?)/,
              /^(?:\{\{(~)?\/)/,
              /^(?:\{\{(~)?\^\s*(~)?\}\})/,
              /^(?:\{\{(~)?\s*else\s*(~)?\}\})/,
              /^(?:\{\{(~)?\^)/,
              /^(?:\{\{(~)?\s*else\b)/,
              /^(?:\{\{(~)?\{)/,
              /^(?:\{\{(~)?&)/,
              /^(?:\{\{(~)?!--)/,
              /^(?:\{\{(~)?![\s\S]*?\}\})/,
              /^(?:\{\{(~)?\*?)/,
              /^(?:=)/,
              /^(?:\.\.)/,
              /^(?:\.(?=([=~}\s\/.)|])))/,
              /^(?:[\/.])/,
              /^(?:\s+)/,
              /^(?:\}(~)?\}\})/,
              /^(?:(~)?\}\})/,
              /^(?:"(\\["]|[^"])*")/,
              /^(?:'(\\[']|[^'])*')/,
              /^(?:@)/,
              /^(?:true(?=([~}\s)])))/,
              /^(?:false(?=([~}\s)])))/,
              /^(?:undefined(?=([~}\s)])))/,
              /^(?:null(?=([~}\s)])))/,
              /^(?:-?[0-9]+(?:\.[0-9]+)?(?=([~}\s)])))/,
              /^(?:as\s+\|)/,
              /^(?:\|)/,
              /^(?:([^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=([=~}\s\/.)|]))))/,
              /^(?:\[(\\\]|[^\]])*\])/,
              /^(?:.)/,
              /^(?:$)/,
            ];
            lexer.conditions = {
              mu: {
                rules: [
                  7,
                  8,
                  9,
                  10,
                  11,
                  12,
                  13,
                  14,
                  15,
                  16,
                  17,
                  18,
                  19,
                  20,
                  21,
                  22,
                  23,
                  24,
                  25,
                  26,
                  27,
                  28,
                  29,
                  30,
                  31,
                  32,
                  33,
                  34,
                  35,
                  36,
                  37,
                  38,
                  39,
                  40,
                  41,
                  42,
                  43,
                  44,
                ],
                inclusive: false,
              },
              emu: { rules: [2], inclusive: false },
              com: { rules: [6], inclusive: false },
              raw: { rules: [3, 4, 5], inclusive: false },
              INITIAL: { rules: [0, 1, 44], inclusive: true },
            };
            return lexer;
          })();
          parser.lexer = lexer;
          function Parser() {
            this.yy = {};
          }
          Parser.prototype = parser;
          parser.Parser = Parser;
          return new Parser();
        })();
        exports['default'] = handlebars;
        module.exports = exports['default'];
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/compiler/visitor.js':
      /*!**************************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/compiler/visitor.js ***!
  \**************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        // istanbul ignore next

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var _exception = __webpack_require__(
          /*! ../exception */ '../node_modules/handlebars/dist/cjs/handlebars/exception.js'
        );

        var _exception2 = _interopRequireDefault(_exception);

        function Visitor() {
          this.parents = [];
        }

        Visitor.prototype = {
          constructor: Visitor,
          mutating: false,

          // Visits a given value. If mutating, will replace the value if necessary.
          acceptKey: function acceptKey(node, name) {
            var value = this.accept(node[name]);
            if (this.mutating) {
              // Hacky sanity check: This may have a few false positives for type for the helper
              // methods but will generally do the right thing without a lot of overhead.
              if (value && !Visitor.prototype[value.type]) {
                throw new _exception2['default'](
                  'Unexpected node type "' +
                    value.type +
                    '" found when accepting ' +
                    name +
                    ' on ' +
                    node.type
                );
              }
              node[name] = value;
            }
          },

          // Performs an accept operation with added sanity check to ensure
          // required keys are not removed.
          acceptRequired: function acceptRequired(node, name) {
            this.acceptKey(node, name);

            if (!node[name]) {
              throw new _exception2['default'](node.type + ' requires ' + name);
            }
          },

          // Traverses a given array. If mutating, empty respnses will be removed
          // for child elements.
          acceptArray: function acceptArray(array) {
            for (var i = 0, l = array.length; i < l; i++) {
              this.acceptKey(array, i);

              if (!array[i]) {
                array.splice(i, 1);
                i--;
                l--;
              }
            }
          },

          accept: function accept(object) {
            if (!object) {
              return;
            }

            /* istanbul ignore next: Sanity code */
            if (!this[object.type]) {
              throw new _exception2['default'](
                'Unknown type: ' + object.type,
                object
              );
            }

            if (this.current) {
              this.parents.unshift(this.current);
            }
            this.current = object;

            var ret = this[object.type](object);

            this.current = this.parents.shift();

            if (!this.mutating || ret) {
              return ret;
            } else if (ret !== false) {
              return object;
            }
          },

          Program: function Program(program) {
            this.acceptArray(program.body);
          },

          MustacheStatement: visitSubExpression,
          Decorator: visitSubExpression,

          BlockStatement: visitBlock,
          DecoratorBlock: visitBlock,

          PartialStatement: visitPartial,
          PartialBlockStatement: function PartialBlockStatement(partial) {
            visitPartial.call(this, partial);

            this.acceptKey(partial, 'program');
          },

          ContentStatement: function ContentStatement() /* content */ {},
          CommentStatement: function CommentStatement() /* comment */ {},

          SubExpression: visitSubExpression,

          PathExpression: function PathExpression() /* path */ {},

          StringLiteral: function StringLiteral() /* string */ {},
          NumberLiteral: function NumberLiteral() /* number */ {},
          BooleanLiteral: function BooleanLiteral() /* bool */ {},
          UndefinedLiteral: function UndefinedLiteral() /* literal */ {},
          NullLiteral: function NullLiteral() /* literal */ {},

          Hash: function Hash(hash) {
            this.acceptArray(hash.pairs);
          },
          HashPair: function HashPair(pair) {
            this.acceptRequired(pair, 'value');
          },
        };

        function visitSubExpression(mustache) {
          this.acceptRequired(mustache, 'path');
          this.acceptArray(mustache.params);
          this.acceptKey(mustache, 'hash');
        }
        function visitBlock(block) {
          visitSubExpression.call(this, block);

          this.acceptKey(block, 'program');
          this.acceptKey(block, 'inverse');
        }
        function visitPartial(partial) {
          this.acceptRequired(partial, 'name');
          this.acceptArray(partial.params);
          this.acceptKey(partial, 'hash');
        }

        exports['default'] = Visitor;
        module.exports = exports['default'];
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/compiler/whitespace-control.js':
      /*!*************************************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/compiler/whitespace-control.js ***!
  \*************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        // istanbul ignore next

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var _visitor = __webpack_require__(
          /*! ./visitor */ '../node_modules/handlebars/dist/cjs/handlebars/compiler/visitor.js'
        );

        var _visitor2 = _interopRequireDefault(_visitor);

        function WhitespaceControl() {
          var options =
            arguments.length <= 0 || arguments[0] === undefined
              ? {}
              : arguments[0];

          this.options = options;
        }
        WhitespaceControl.prototype = new _visitor2['default']();

        WhitespaceControl.prototype.Program = function (program) {
          var doStandalone = !this.options.ignoreStandalone;

          var isRoot = !this.isRootSeen;
          this.isRootSeen = true;

          var body = program.body;
          for (var i = 0, l = body.length; i < l; i++) {
            var current = body[i],
              strip = this.accept(current);

            if (!strip) {
              continue;
            }

            var _isPrevWhitespace = isPrevWhitespace(body, i, isRoot),
              _isNextWhitespace = isNextWhitespace(body, i, isRoot),
              openStandalone = strip.openStandalone && _isPrevWhitespace,
              closeStandalone = strip.closeStandalone && _isNextWhitespace,
              inlineStandalone =
                strip.inlineStandalone &&
                _isPrevWhitespace &&
                _isNextWhitespace;

            if (strip.close) {
              omitRight(body, i, true);
            }
            if (strip.open) {
              omitLeft(body, i, true);
            }

            if (doStandalone && inlineStandalone) {
              omitRight(body, i);

              if (omitLeft(body, i)) {
                // If we are on a standalone node, save the indent info for partials
                if (current.type === 'PartialStatement') {
                  // Pull out the whitespace from the final line
                  current.indent = /([ \t]+$)/.exec(body[i - 1].original)[1];
                }
              }
            }
            if (doStandalone && openStandalone) {
              omitRight((current.program || current.inverse).body);

              // Strip out the previous content node if it's whitespace only
              omitLeft(body, i);
            }
            if (doStandalone && closeStandalone) {
              // Always strip the next node
              omitRight(body, i);

              omitLeft((current.inverse || current.program).body);
            }
          }

          return program;
        };

        WhitespaceControl.prototype.BlockStatement = WhitespaceControl.prototype.DecoratorBlock = WhitespaceControl.prototype.PartialBlockStatement = function (
          block
        ) {
          this.accept(block.program);
          this.accept(block.inverse);

          // Find the inverse program that is involed with whitespace stripping.
          var program = block.program || block.inverse,
            inverse = block.program && block.inverse,
            firstInverse = inverse,
            lastInverse = inverse;

          if (inverse && inverse.chained) {
            firstInverse = inverse.body[0].program;

            // Walk the inverse chain to find the last inverse that is actually in the chain.
            while (lastInverse.chained) {
              lastInverse =
                lastInverse.body[lastInverse.body.length - 1].program;
            }
          }

          var strip = {
            open: block.openStrip.open,
            close: block.closeStrip.close,

            // Determine the standalone candiacy. Basically flag our content as being possibly standalone
            // so our parent can determine if we actually are standalone
            openStandalone: isNextWhitespace(program.body),
            closeStandalone: isPrevWhitespace((firstInverse || program).body),
          };

          if (block.openStrip.close) {
            omitRight(program.body, null, true);
          }

          if (inverse) {
            var inverseStrip = block.inverseStrip;

            if (inverseStrip.open) {
              omitLeft(program.body, null, true);
            }

            if (inverseStrip.close) {
              omitRight(firstInverse.body, null, true);
            }
            if (block.closeStrip.open) {
              omitLeft(lastInverse.body, null, true);
            }

            // Find standalone else statments
            if (
              !this.options.ignoreStandalone &&
              isPrevWhitespace(program.body) &&
              isNextWhitespace(firstInverse.body)
            ) {
              omitLeft(program.body);
              omitRight(firstInverse.body);
            }
          } else if (block.closeStrip.open) {
            omitLeft(program.body, null, true);
          }

          return strip;
        };

        WhitespaceControl.prototype.Decorator = WhitespaceControl.prototype.MustacheStatement = function (
          mustache
        ) {
          return mustache.strip;
        };

        WhitespaceControl.prototype.PartialStatement = WhitespaceControl.prototype.CommentStatement = function (
          node
        ) {
          /* istanbul ignore next */
          var strip = node.strip || {};
          return {
            inlineStandalone: true,
            open: strip.open,
            close: strip.close,
          };
        };

        function isPrevWhitespace(body, i, isRoot) {
          if (i === undefined) {
            i = body.length;
          }

          // Nodes that end with newlines are considered whitespace (but are special
          // cased for strip operations)
          var prev = body[i - 1],
            sibling = body[i - 2];
          if (!prev) {
            return isRoot;
          }

          if (prev.type === 'ContentStatement') {
            return (sibling || !isRoot ? /\r?\n\s*?$/ : /(^|\r?\n)\s*?$/).test(
              prev.original
            );
          }
        }
        function isNextWhitespace(body, i, isRoot) {
          if (i === undefined) {
            i = -1;
          }

          var next = body[i + 1],
            sibling = body[i + 2];
          if (!next) {
            return isRoot;
          }

          if (next.type === 'ContentStatement') {
            return (sibling || !isRoot ? /^\s*?\r?\n/ : /^\s*?(\r?\n|$)/).test(
              next.original
            );
          }
        }

        // Marks the node to the right of the position as omitted.
        // I.e. {{foo}}' ' will mark the ' ' node as omitted.
        //
        // If i is undefined, then the first child will be marked as such.
        //
        // If mulitple is truthy then all whitespace will be stripped out until non-whitespace
        // content is met.
        function omitRight(body, i, multiple) {
          var current = body[i == null ? 0 : i + 1];
          if (
            !current ||
            current.type !== 'ContentStatement' ||
            (!multiple && current.rightStripped)
          ) {
            return;
          }

          var original = current.value;
          current.value = current.value.replace(
            multiple ? /^\s+/ : /^[ \t]*\r?\n?/,
            ''
          );
          current.rightStripped = current.value !== original;
        }

        // Marks the node to the left of the position as omitted.
        // I.e. ' '{{foo}} will mark the ' ' node as omitted.
        //
        // If i is undefined then the last child will be marked as such.
        //
        // If mulitple is truthy then all whitespace will be stripped out until non-whitespace
        // content is met.
        function omitLeft(body, i, multiple) {
          var current = body[i == null ? body.length - 1 : i - 1];
          if (
            !current ||
            current.type !== 'ContentStatement' ||
            (!multiple && current.leftStripped)
          ) {
            return;
          }

          // We omit the last node if it's whitespace only and not preceded by a non-content node.
          var original = current.value;
          current.value = current.value.replace(
            multiple ? /\s+$/ : /[ \t]+$/,
            ''
          );
          current.leftStripped = current.value !== original;
          return current.leftStripped;
        }

        exports['default'] = WhitespaceControl;
        module.exports = exports['default'];
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/decorators.js':
      /*!********************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/decorators.js ***!
  \********************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        exports.registerDefaultDecorators = registerDefaultDecorators;
        // istanbul ignore next

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var _decoratorsInline = __webpack_require__(
          /*! ./decorators/inline */ '../node_modules/handlebars/dist/cjs/handlebars/decorators/inline.js'
        );

        var _decoratorsInline2 = _interopRequireDefault(_decoratorsInline);

        function registerDefaultDecorators(instance) {
          _decoratorsInline2['default'](instance);
        }
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2RlY29yYXRvcnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Z0NBQTJCLHFCQUFxQjs7OztBQUV6QyxTQUFTLHlCQUF5QixDQUFDLFFBQVEsRUFBRTtBQUNsRCxnQ0FBZSxRQUFRLENBQUMsQ0FBQztDQUMxQiIsImZpbGUiOiJkZWNvcmF0b3JzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJlZ2lzdGVySW5saW5lIGZyb20gJy4vZGVjb3JhdG9ycy9pbmxpbmUnO1xuXG5leHBvcnQgZnVuY3Rpb24gcmVnaXN0ZXJEZWZhdWx0RGVjb3JhdG9ycyhpbnN0YW5jZSkge1xuICByZWdpc3RlcklubGluZShpbnN0YW5jZSk7XG59XG4iXX0=

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/decorators/inline.js':
      /*!***************************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/decorators/inline.js ***!
  \***************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;

        var _utils = __webpack_require__(
          /*! ../utils */ '../node_modules/handlebars/dist/cjs/handlebars/utils.js'
        );

        exports['default'] = function (instance) {
          instance.registerDecorator('inline', function (
            fn,
            props,
            container,
            options
          ) {
            var ret = fn;
            if (!props.partials) {
              props.partials = {};
              ret = function (context, options) {
                // Create a new partials stack frame prior to exec.
                var original = container.partials;
                container.partials = _utils.extend(
                  {},
                  original,
                  props.partials
                );
                var ret = fn(context, options);
                container.partials = original;
                return ret;
              };
            }

            props.partials[options.args[0]] = options.fn;

            return ret;
          });
        };

        module.exports = exports['default'];
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2RlY29yYXRvcnMvaW5saW5lLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7cUJBQXVCLFVBQVU7O3FCQUVsQixVQUFTLFFBQVEsRUFBRTtBQUNoQyxVQUFRLENBQUMsaUJBQWlCLENBQUMsUUFBUSxFQUFFLFVBQVMsRUFBRSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFO0FBQzNFLFFBQUksR0FBRyxHQUFHLEVBQUUsQ0FBQztBQUNiLFFBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFO0FBQ25CLFdBQUssQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO0FBQ3BCLFNBQUcsR0FBRyxVQUFTLE9BQU8sRUFBRSxPQUFPLEVBQUU7O0FBRS9CLFlBQUksUUFBUSxHQUFHLFNBQVMsQ0FBQyxRQUFRLENBQUM7QUFDbEMsaUJBQVMsQ0FBQyxRQUFRLEdBQUcsY0FBTyxFQUFFLEVBQUUsUUFBUSxFQUFFLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUMxRCxZQUFJLEdBQUcsR0FBRyxFQUFFLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQy9CLGlCQUFTLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztBQUM5QixlQUFPLEdBQUcsQ0FBQztPQUNaLENBQUM7S0FDSDs7QUFFRCxTQUFLLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDOztBQUU3QyxXQUFPLEdBQUcsQ0FBQztHQUNaLENBQUMsQ0FBQztDQUNKIiwiZmlsZSI6ImlubGluZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGV4dGVuZCB9IGZyb20gJy4uL3V0aWxzJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJEZWNvcmF0b3IoJ2lubGluZScsIGZ1bmN0aW9uKGZuLCBwcm9wcywgY29udGFpbmVyLCBvcHRpb25zKSB7XG4gICAgbGV0IHJldCA9IGZuO1xuICAgIGlmICghcHJvcHMucGFydGlhbHMpIHtcbiAgICAgIHByb3BzLnBhcnRpYWxzID0ge307XG4gICAgICByZXQgPSBmdW5jdGlvbihjb250ZXh0LCBvcHRpb25zKSB7XG4gICAgICAgIC8vIENyZWF0ZSBhIG5ldyBwYXJ0aWFscyBzdGFjayBmcmFtZSBwcmlvciB0byBleGVjLlxuICAgICAgICBsZXQgb3JpZ2luYWwgPSBjb250YWluZXIucGFydGlhbHM7XG4gICAgICAgIGNvbnRhaW5lci5wYXJ0aWFscyA9IGV4dGVuZCh7fSwgb3JpZ2luYWwsIHByb3BzLnBhcnRpYWxzKTtcbiAgICAgICAgbGV0IHJldCA9IGZuKGNvbnRleHQsIG9wdGlvbnMpO1xuICAgICAgICBjb250YWluZXIucGFydGlhbHMgPSBvcmlnaW5hbDtcbiAgICAgICAgcmV0dXJuIHJldDtcbiAgICAgIH07XG4gICAgfVxuXG4gICAgcHJvcHMucGFydGlhbHNbb3B0aW9ucy5hcmdzWzBdXSA9IG9wdGlvbnMuZm47XG5cbiAgICByZXR1cm4gcmV0O1xuICB9KTtcbn1cbiJdfQ==

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/exception.js':
      /*!*******************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/exception.js ***!
  \*******************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        var errorProps = [
          'description',
          'fileName',
          'lineNumber',
          'endLineNumber',
          'message',
          'name',
          'number',
          'stack',
        ];

        function Exception(message, node) {
          var loc = node && node.loc,
            line = undefined,
            endLineNumber = undefined,
            column = undefined,
            endColumn = undefined;

          if (loc) {
            line = loc.start.line;
            endLineNumber = loc.end.line;
            column = loc.start.column;
            endColumn = loc.end.column;

            message += ' - ' + line + ':' + column;
          }

          var tmp = Error.prototype.constructor.call(this, message);

          // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.
          for (var idx = 0; idx < errorProps.length; idx++) {
            this[errorProps[idx]] = tmp[errorProps[idx]];
          }

          /* istanbul ignore else */
          if (Error.captureStackTrace) {
            Error.captureStackTrace(this, Exception);
          }

          try {
            if (loc) {
              this.lineNumber = line;
              this.endLineNumber = endLineNumber;

              // Work around issue under safari where we can't directly set the column value
              /* istanbul ignore next */
              if (Object.defineProperty) {
                Object.defineProperty(this, 'column', {
                  value: column,
                  enumerable: true,
                });
                Object.defineProperty(this, 'endColumn', {
                  value: endColumn,
                  enumerable: true,
                });
              } else {
                this.column = column;
                this.endColumn = endColumn;
              }
            }
          } catch (nop) {
            /* Ignore if the browser is very particular */
          }
        }

        Exception.prototype = new Error();

        exports['default'] = Exception;
        module.exports = exports['default'];
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2V4Y2VwdGlvbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxJQUFNLFVBQVUsR0FBRyxDQUNqQixhQUFhLEVBQ2IsVUFBVSxFQUNWLFlBQVksRUFDWixlQUFlLEVBQ2YsU0FBUyxFQUNULE1BQU0sRUFDTixRQUFRLEVBQ1IsT0FBTyxDQUNSLENBQUM7O0FBRUYsU0FBUyxTQUFTLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRTtBQUNoQyxNQUFJLEdBQUcsR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLEdBQUc7TUFDeEIsSUFBSSxZQUFBO01BQ0osYUFBYSxZQUFBO01BQ2IsTUFBTSxZQUFBO01BQ04sU0FBUyxZQUFBLENBQUM7O0FBRVosTUFBSSxHQUFHLEVBQUU7QUFDUCxRQUFJLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUM7QUFDdEIsaUJBQWEsR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQztBQUM3QixVQUFNLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUM7QUFDMUIsYUFBUyxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDOztBQUUzQixXQUFPLElBQUksS0FBSyxHQUFHLElBQUksR0FBRyxHQUFHLEdBQUcsTUFBTSxDQUFDO0dBQ3hDOztBQUVELE1BQUksR0FBRyxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUM7OztBQUcxRCxPQUFLLElBQUksR0FBRyxHQUFHLENBQUMsRUFBRSxHQUFHLEdBQUcsVUFBVSxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsRUFBRTtBQUNoRCxRQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0dBQzlDOzs7QUFHRCxNQUFJLEtBQUssQ0FBQyxpQkFBaUIsRUFBRTtBQUMzQixTQUFLLENBQUMsaUJBQWlCLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0dBQzFDOztBQUVELE1BQUk7QUFDRixRQUFJLEdBQUcsRUFBRTtBQUNQLFVBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO0FBQ3ZCLFVBQUksQ0FBQyxhQUFhLEdBQUcsYUFBYSxDQUFDOzs7O0FBSW5DLFVBQUksTUFBTSxDQUFDLGNBQWMsRUFBRTtBQUN6QixjQUFNLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxRQUFRLEVBQUU7QUFDcEMsZUFBSyxFQUFFLE1BQU07QUFDYixvQkFBVSxFQUFFLElBQUk7U0FDakIsQ0FBQyxDQUFDO0FBQ0gsY0FBTSxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsV0FBVyxFQUFFO0FBQ3ZDLGVBQUssRUFBRSxTQUFTO0FBQ2hCLG9CQUFVLEVBQUUsSUFBSTtTQUNqQixDQUFDLENBQUM7T0FDSixNQUFNO0FBQ0wsWUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7QUFDckIsWUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7T0FDNUI7S0FDRjtHQUNGLENBQUMsT0FBTyxHQUFHLEVBQUU7O0dBRWI7Q0FDRjs7QUFFRCxTQUFTLENBQUMsU0FBUyxHQUFHLElBQUksS0FBSyxFQUFFLENBQUM7O3FCQUVuQixTQUFTIiwiZmlsZSI6ImV4Y2VwdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGVycm9yUHJvcHMgPSBbXG4gICdkZXNjcmlwdGlvbicsXG4gICdmaWxlTmFtZScsXG4gICdsaW5lTnVtYmVyJyxcbiAgJ2VuZExpbmVOdW1iZXInLFxuICAnbWVzc2FnZScsXG4gICduYW1lJyxcbiAgJ251bWJlcicsXG4gICdzdGFjaydcbl07XG5cbmZ1bmN0aW9uIEV4Y2VwdGlvbihtZXNzYWdlLCBub2RlKSB7XG4gIGxldCBsb2MgPSBub2RlICYmIG5vZGUubG9jLFxuICAgIGxpbmUsXG4gICAgZW5kTGluZU51bWJlcixcbiAgICBjb2x1bW4sXG4gICAgZW5kQ29sdW1uO1xuXG4gIGlmIChsb2MpIHtcbiAgICBsaW5lID0gbG9jLnN0YXJ0LmxpbmU7XG4gICAgZW5kTGluZU51bWJlciA9IGxvYy5lbmQubGluZTtcbiAgICBjb2x1bW4gPSBsb2Muc3RhcnQuY29sdW1uO1xuICAgIGVuZENvbHVtbiA9IGxvYy5lbmQuY29sdW1uO1xuXG4gICAgbWVzc2FnZSArPSAnIC0gJyArIGxpbmUgKyAnOicgKyBjb2x1bW47XG4gIH1cblxuICBsZXQgdG1wID0gRXJyb3IucHJvdG90eXBlLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgbWVzc2FnZSk7XG5cbiAgLy8gVW5mb3J0dW5hdGVseSBlcnJvcnMgYXJlIG5vdCBlbnVtZXJhYmxlIGluIENocm9tZSAoYXQgbGVhc3QpLCBzbyBgZm9yIHByb3AgaW4gdG1wYCBkb2Vzbid0IHdvcmsuXG4gIGZvciAobGV0IGlkeCA9IDA7IGlkeCA8IGVycm9yUHJvcHMubGVuZ3RoOyBpZHgrKykge1xuICAgIHRoaXNbZXJyb3JQcm9wc1tpZHhdXSA9IHRtcFtlcnJvclByb3BzW2lkeF1dO1xuICB9XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgaWYgKEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKSB7XG4gICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgRXhjZXB0aW9uKTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgaWYgKGxvYykge1xuICAgICAgdGhpcy5saW5lTnVtYmVyID0gbGluZTtcbiAgICAgIHRoaXMuZW5kTGluZU51bWJlciA9IGVuZExpbmVOdW1iZXI7XG5cbiAgICAgIC8vIFdvcmsgYXJvdW5kIGlzc3VlIHVuZGVyIHNhZmFyaSB3aGVyZSB3ZSBjYW4ndCBkaXJlY3RseSBzZXQgdGhlIGNvbHVtbiB2YWx1ZVxuICAgICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICAgIGlmIChPYmplY3QuZGVmaW5lUHJvcGVydHkpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsICdjb2x1bW4nLCB7XG4gICAgICAgICAgdmFsdWU6IGNvbHVtbixcbiAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgJ2VuZENvbHVtbicsIHtcbiAgICAgICAgICB2YWx1ZTogZW5kQ29sdW1uLFxuICAgICAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmNvbHVtbiA9IGNvbHVtbjtcbiAgICAgICAgdGhpcy5lbmRDb2x1bW4gPSBlbmRDb2x1bW47XG4gICAgICB9XG4gICAgfVxuICB9IGNhdGNoIChub3ApIHtcbiAgICAvKiBJZ25vcmUgaWYgdGhlIGJyb3dzZXIgaXMgdmVyeSBwYXJ0aWN1bGFyICovXG4gIH1cbn1cblxuRXhjZXB0aW9uLnByb3RvdHlwZSA9IG5ldyBFcnJvcigpO1xuXG5leHBvcnQgZGVmYXVsdCBFeGNlcHRpb247XG4iXX0=

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/helpers.js':
      /*!*****************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/helpers.js ***!
  \*****************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        exports.registerDefaultHelpers = registerDefaultHelpers;
        exports.moveHelperToHooks = moveHelperToHooks;
        // istanbul ignore next

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var _helpersBlockHelperMissing = __webpack_require__(
          /*! ./helpers/block-helper-missing */ '../node_modules/handlebars/dist/cjs/handlebars/helpers/block-helper-missing.js'
        );

        var _helpersBlockHelperMissing2 = _interopRequireDefault(
          _helpersBlockHelperMissing
        );

        var _helpersEach = __webpack_require__(
          /*! ./helpers/each */ '../node_modules/handlebars/dist/cjs/handlebars/helpers/each.js'
        );

        var _helpersEach2 = _interopRequireDefault(_helpersEach);

        var _helpersHelperMissing = __webpack_require__(
          /*! ./helpers/helper-missing */ '../node_modules/handlebars/dist/cjs/handlebars/helpers/helper-missing.js'
        );

        var _helpersHelperMissing2 = _interopRequireDefault(
          _helpersHelperMissing
        );

        var _helpersIf = __webpack_require__(
          /*! ./helpers/if */ '../node_modules/handlebars/dist/cjs/handlebars/helpers/if.js'
        );

        var _helpersIf2 = _interopRequireDefault(_helpersIf);

        var _helpersLog = __webpack_require__(
          /*! ./helpers/log */ '../node_modules/handlebars/dist/cjs/handlebars/helpers/log.js'
        );

        var _helpersLog2 = _interopRequireDefault(_helpersLog);

        var _helpersLookup = __webpack_require__(
          /*! ./helpers/lookup */ '../node_modules/handlebars/dist/cjs/handlebars/helpers/lookup.js'
        );

        var _helpersLookup2 = _interopRequireDefault(_helpersLookup);

        var _helpersWith = __webpack_require__(
          /*! ./helpers/with */ '../node_modules/handlebars/dist/cjs/handlebars/helpers/with.js'
        );

        var _helpersWith2 = _interopRequireDefault(_helpersWith);

        function registerDefaultHelpers(instance) {
          _helpersBlockHelperMissing2['default'](instance);
          _helpersEach2['default'](instance);
          _helpersHelperMissing2['default'](instance);
          _helpersIf2['default'](instance);
          _helpersLog2['default'](instance);
          _helpersLookup2['default'](instance);
          _helpersWith2['default'](instance);
        }

        function moveHelperToHooks(instance, helperName, keepHelper) {
          if (instance.helpers[helperName]) {
            instance.hooks[helperName] = instance.helpers[helperName];
            if (!keepHelper) {
              delete instance.helpers[helperName];
            }
          }
        }
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O3lDQUF1QyxnQ0FBZ0M7Ozs7MkJBQzlDLGdCQUFnQjs7OztvQ0FDUCwwQkFBMEI7Ozs7eUJBQ3JDLGNBQWM7Ozs7MEJBQ2IsZUFBZTs7Ozs2QkFDWixrQkFBa0I7Ozs7MkJBQ3BCLGdCQUFnQjs7OztBQUVsQyxTQUFTLHNCQUFzQixDQUFDLFFBQVEsRUFBRTtBQUMvQyx5Q0FBMkIsUUFBUSxDQUFDLENBQUM7QUFDckMsMkJBQWEsUUFBUSxDQUFDLENBQUM7QUFDdkIsb0NBQXNCLFFBQVEsQ0FBQyxDQUFDO0FBQ2hDLHlCQUFXLFFBQVEsQ0FBQyxDQUFDO0FBQ3JCLDBCQUFZLFFBQVEsQ0FBQyxDQUFDO0FBQ3RCLDZCQUFlLFFBQVEsQ0FBQyxDQUFDO0FBQ3pCLDJCQUFhLFFBQVEsQ0FBQyxDQUFDO0NBQ3hCOztBQUVNLFNBQVMsaUJBQWlCLENBQUMsUUFBUSxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQUU7QUFDbEUsTUFBSSxRQUFRLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxFQUFFO0FBQ2hDLFlBQVEsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLEdBQUcsUUFBUSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUMxRCxRQUFJLENBQUMsVUFBVSxFQUFFO0FBQ2YsYUFBTyxRQUFRLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0tBQ3JDO0dBQ0Y7Q0FDRiIsImZpbGUiOiJoZWxwZXJzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJlZ2lzdGVyQmxvY2tIZWxwZXJNaXNzaW5nIGZyb20gJy4vaGVscGVycy9ibG9jay1oZWxwZXItbWlzc2luZyc7XG5pbXBvcnQgcmVnaXN0ZXJFYWNoIGZyb20gJy4vaGVscGVycy9lYWNoJztcbmltcG9ydCByZWdpc3RlckhlbHBlck1pc3NpbmcgZnJvbSAnLi9oZWxwZXJzL2hlbHBlci1taXNzaW5nJztcbmltcG9ydCByZWdpc3RlcklmIGZyb20gJy4vaGVscGVycy9pZic7XG5pbXBvcnQgcmVnaXN0ZXJMb2cgZnJvbSAnLi9oZWxwZXJzL2xvZyc7XG5pbXBvcnQgcmVnaXN0ZXJMb29rdXAgZnJvbSAnLi9oZWxwZXJzL2xvb2t1cCc7XG5pbXBvcnQgcmVnaXN0ZXJXaXRoIGZyb20gJy4vaGVscGVycy93aXRoJztcblxuZXhwb3J0IGZ1bmN0aW9uIHJlZ2lzdGVyRGVmYXVsdEhlbHBlcnMoaW5zdGFuY2UpIHtcbiAgcmVnaXN0ZXJCbG9ja0hlbHBlck1pc3NpbmcoaW5zdGFuY2UpO1xuICByZWdpc3RlckVhY2goaW5zdGFuY2UpO1xuICByZWdpc3RlckhlbHBlck1pc3NpbmcoaW5zdGFuY2UpO1xuICByZWdpc3RlcklmKGluc3RhbmNlKTtcbiAgcmVnaXN0ZXJMb2coaW5zdGFuY2UpO1xuICByZWdpc3Rlckxvb2t1cChpbnN0YW5jZSk7XG4gIHJlZ2lzdGVyV2l0aChpbnN0YW5jZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtb3ZlSGVscGVyVG9Ib29rcyhpbnN0YW5jZSwgaGVscGVyTmFtZSwga2VlcEhlbHBlcikge1xuICBpZiAoaW5zdGFuY2UuaGVscGVyc1toZWxwZXJOYW1lXSkge1xuICAgIGluc3RhbmNlLmhvb2tzW2hlbHBlck5hbWVdID0gaW5zdGFuY2UuaGVscGVyc1toZWxwZXJOYW1lXTtcbiAgICBpZiAoIWtlZXBIZWxwZXIpIHtcbiAgICAgIGRlbGV0ZSBpbnN0YW5jZS5oZWxwZXJzW2hlbHBlck5hbWVdO1xuICAgIH1cbiAgfVxufVxuIl19

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/helpers/block-helper-missing.js':
      /*!**************************************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/helpers/block-helper-missing.js ***!
  \**************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;

        var _utils = __webpack_require__(
          /*! ../utils */ '../node_modules/handlebars/dist/cjs/handlebars/utils.js'
        );

        exports['default'] = function (instance) {
          instance.registerHelper('blockHelperMissing', function (
            context,
            options
          ) {
            var inverse = options.inverse,
              fn = options.fn;

            if (context === true) {
              return fn(this);
            } else if (context === false || context == null) {
              return inverse(this);
            } else if (_utils.isArray(context)) {
              if (context.length > 0) {
                if (options.ids) {
                  options.ids = [options.name];
                }

                return instance.helpers.each(context, options);
              } else {
                return inverse(this);
              }
            } else {
              if (options.data && options.ids) {
                var data = _utils.createFrame(options.data);
                data.contextPath = _utils.appendContextPath(
                  options.data.contextPath,
                  options.name
                );
                options = { data: data };
              }

              return fn(context, options);
            }
          });
        };

        module.exports = exports['default'];
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvYmxvY2staGVscGVyLW1pc3NpbmcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztxQkFBd0QsVUFBVTs7cUJBRW5ELFVBQVMsUUFBUSxFQUFFO0FBQ2hDLFVBQVEsQ0FBQyxjQUFjLENBQUMsb0JBQW9CLEVBQUUsVUFBUyxPQUFPLEVBQUUsT0FBTyxFQUFFO0FBQ3ZFLFFBQUksT0FBTyxHQUFHLE9BQU8sQ0FBQyxPQUFPO1FBQzNCLEVBQUUsR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDOztBQUVsQixRQUFJLE9BQU8sS0FBSyxJQUFJLEVBQUU7QUFDcEIsYUFBTyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDakIsTUFBTSxJQUFJLE9BQU8sS0FBSyxLQUFLLElBQUksT0FBTyxJQUFJLElBQUksRUFBRTtBQUMvQyxhQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUN0QixNQUFNLElBQUksZUFBUSxPQUFPLENBQUMsRUFBRTtBQUMzQixVQUFJLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO0FBQ3RCLFlBQUksT0FBTyxDQUFDLEdBQUcsRUFBRTtBQUNmLGlCQUFPLENBQUMsR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQzlCOztBQUVELGVBQU8sUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO09BQ2hELE1BQU07QUFDTCxlQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztPQUN0QjtLQUNGLE1BQU07QUFDTCxVQUFJLE9BQU8sQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLEdBQUcsRUFBRTtBQUMvQixZQUFJLElBQUksR0FBRyxtQkFBWSxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDckMsWUFBSSxDQUFDLFdBQVcsR0FBRyx5QkFDakIsT0FBTyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQ3hCLE9BQU8sQ0FBQyxJQUFJLENBQ2IsQ0FBQztBQUNGLGVBQU8sR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQztPQUMxQjs7QUFFRCxhQUFPLEVBQUUsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7S0FDN0I7R0FDRixDQUFDLENBQUM7Q0FDSiIsImZpbGUiOiJibG9jay1oZWxwZXItbWlzc2luZy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFwcGVuZENvbnRleHRQYXRoLCBjcmVhdGVGcmFtZSwgaXNBcnJheSB9IGZyb20gJy4uL3V0aWxzJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ2Jsb2NrSGVscGVyTWlzc2luZycsIGZ1bmN0aW9uKGNvbnRleHQsIG9wdGlvbnMpIHtcbiAgICBsZXQgaW52ZXJzZSA9IG9wdGlvbnMuaW52ZXJzZSxcbiAgICAgIGZuID0gb3B0aW9ucy5mbjtcblxuICAgIGlmIChjb250ZXh0ID09PSB0cnVlKSB7XG4gICAgICByZXR1cm4gZm4odGhpcyk7XG4gICAgfSBlbHNlIGlmIChjb250ZXh0ID09PSBmYWxzZSB8fCBjb250ZXh0ID09IG51bGwpIHtcbiAgICAgIHJldHVybiBpbnZlcnNlKHRoaXMpO1xuICAgIH0gZWxzZSBpZiAoaXNBcnJheShjb250ZXh0KSkge1xuICAgICAgaWYgKGNvbnRleHQubGVuZ3RoID4gMCkge1xuICAgICAgICBpZiAob3B0aW9ucy5pZHMpIHtcbiAgICAgICAgICBvcHRpb25zLmlkcyA9IFtvcHRpb25zLm5hbWVdO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGluc3RhbmNlLmhlbHBlcnMuZWFjaChjb250ZXh0LCBvcHRpb25zKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBpbnZlcnNlKHRoaXMpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAob3B0aW9ucy5kYXRhICYmIG9wdGlvbnMuaWRzKSB7XG4gICAgICAgIGxldCBkYXRhID0gY3JlYXRlRnJhbWUob3B0aW9ucy5kYXRhKTtcbiAgICAgICAgZGF0YS5jb250ZXh0UGF0aCA9IGFwcGVuZENvbnRleHRQYXRoKFxuICAgICAgICAgIG9wdGlvbnMuZGF0YS5jb250ZXh0UGF0aCxcbiAgICAgICAgICBvcHRpb25zLm5hbWVcbiAgICAgICAgKTtcbiAgICAgICAgb3B0aW9ucyA9IHsgZGF0YTogZGF0YSB9O1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZm4oY29udGV4dCwgb3B0aW9ucyk7XG4gICAgfVxuICB9KTtcbn1cbiJdfQ==

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/helpers/each.js':
      /*!**********************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/helpers/each.js ***!
  \**********************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (global) {
          exports.__esModule = true;
          // istanbul ignore next

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }

          var _utils = __webpack_require__(
            /*! ../utils */ '../node_modules/handlebars/dist/cjs/handlebars/utils.js'
          );

          var _exception = __webpack_require__(
            /*! ../exception */ '../node_modules/handlebars/dist/cjs/handlebars/exception.js'
          );

          var _exception2 = _interopRequireDefault(_exception);

          exports['default'] = function (instance) {
            instance.registerHelper('each', function (context, options) {
              if (!options) {
                throw new _exception2['default']('Must pass iterator to #each');
              }

              var fn = options.fn,
                inverse = options.inverse,
                i = 0,
                ret = '',
                data = undefined,
                contextPath = undefined;

              if (options.data && options.ids) {
                contextPath =
                  _utils.appendContextPath(
                    options.data.contextPath,
                    options.ids[0]
                  ) + '.';
              }

              if (_utils.isFunction(context)) {
                context = context.call(this);
              }

              if (options.data) {
                data = _utils.createFrame(options.data);
              }

              function execIteration(field, index, last) {
                if (data) {
                  data.key = field;
                  data.index = index;
                  data.first = index === 0;
                  data.last = !!last;

                  if (contextPath) {
                    data.contextPath = contextPath + field;
                  }
                }

                ret =
                  ret +
                  fn(context[field], {
                    data: data,
                    blockParams: _utils.blockParams(
                      [context[field], field],
                      [contextPath + field, null]
                    ),
                  });
              }

              if (context && typeof context === 'object') {
                if (_utils.isArray(context)) {
                  for (var j = context.length; i < j; i++) {
                    if (i in context) {
                      execIteration(i, i, i === context.length - 1);
                    }
                  }
                } else if (global.Symbol && context[global.Symbol.iterator]) {
                  var newContext = [];
                  var iterator = context[global.Symbol.iterator]();
                  for (
                    var it = iterator.next();
                    !it.done;
                    it = iterator.next()
                  ) {
                    newContext.push(it.value);
                  }
                  context = newContext;
                  for (var j = context.length; i < j; i++) {
                    execIteration(i, i, i === context.length - 1);
                  }
                } else {
                  (function () {
                    var priorKey = undefined;

                    Object.keys(context).forEach(function (key) {
                      // We're running the iterations one step out of sync so we can detect
                      // the last iteration without have to scan the object twice and create
                      // an itermediate keys array.
                      if (priorKey !== undefined) {
                        execIteration(priorKey, i - 1);
                      }
                      priorKey = key;
                      i++;
                    });
                    if (priorKey !== undefined) {
                      execIteration(priorKey, i - 1, true);
                    }
                  })();
                }
              }

              if (i === 0) {
                ret = inverse(this);
              }

              return ret;
            });
          };

          module.exports = exports['default'];
          //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvZWFjaC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O3FCQU1PLFVBQVU7O3lCQUNLLGNBQWM7Ozs7cUJBRXJCLFVBQVMsUUFBUSxFQUFFO0FBQ2hDLFVBQVEsQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLFVBQVMsT0FBTyxFQUFFLE9BQU8sRUFBRTtBQUN6RCxRQUFJLENBQUMsT0FBTyxFQUFFO0FBQ1osWUFBTSwyQkFBYyw2QkFBNkIsQ0FBQyxDQUFDO0tBQ3BEOztBQUVELFFBQUksRUFBRSxHQUFHLE9BQU8sQ0FBQyxFQUFFO1FBQ2pCLE9BQU8sR0FBRyxPQUFPLENBQUMsT0FBTztRQUN6QixDQUFDLEdBQUcsQ0FBQztRQUNMLEdBQUcsR0FBRyxFQUFFO1FBQ1IsSUFBSSxZQUFBO1FBQ0osV0FBVyxZQUFBLENBQUM7O0FBRWQsUUFBSSxPQUFPLENBQUMsSUFBSSxJQUFJLE9BQU8sQ0FBQyxHQUFHLEVBQUU7QUFDL0IsaUJBQVcsR0FDVCx5QkFBa0IsT0FBTyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQztLQUNyRTs7QUFFRCxRQUFJLGtCQUFXLE9BQU8sQ0FBQyxFQUFFO0FBQ3ZCLGFBQU8sR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQzlCOztBQUVELFFBQUksT0FBTyxDQUFDLElBQUksRUFBRTtBQUNoQixVQUFJLEdBQUcsbUJBQVksT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ2xDOztBQUVELGFBQVMsYUFBYSxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFO0FBQ3pDLFVBQUksSUFBSSxFQUFFO0FBQ1IsWUFBSSxDQUFDLEdBQUcsR0FBRyxLQUFLLENBQUM7QUFDakIsWUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7QUFDbkIsWUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLEtBQUssQ0FBQyxDQUFDO0FBQ3pCLFlBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQzs7QUFFbkIsWUFBSSxXQUFXLEVBQUU7QUFDZixjQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsR0FBRyxLQUFLLENBQUM7U0FDeEM7T0FDRjs7QUFFRCxTQUFHLEdBQ0QsR0FBRyxHQUNILEVBQUUsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7QUFDakIsWUFBSSxFQUFFLElBQUk7QUFDVixtQkFBVyxFQUFFLG1CQUNYLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFLEtBQUssQ0FBQyxFQUN2QixDQUFDLFdBQVcsR0FBRyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQzVCO09BQ0YsQ0FBQyxDQUFDO0tBQ047O0FBRUQsUUFBSSxPQUFPLElBQUksT0FBTyxPQUFPLEtBQUssUUFBUSxFQUFFO0FBQzFDLFVBQUksZUFBUSxPQUFPLENBQUMsRUFBRTtBQUNwQixhQUFLLElBQUksQ0FBQyxHQUFHLE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtBQUN2QyxjQUFJLENBQUMsSUFBSSxPQUFPLEVBQUU7QUFDaEIseUJBQWEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsS0FBSyxPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1dBQy9DO1NBQ0Y7T0FDRixNQUFNLElBQUksTUFBTSxDQUFDLE1BQU0sSUFBSSxPQUFPLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRTtBQUMzRCxZQUFNLFVBQVUsR0FBRyxFQUFFLENBQUM7QUFDdEIsWUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQztBQUNuRCxhQUFLLElBQUksRUFBRSxHQUFHLFFBQVEsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLEVBQUUsRUFBRSxHQUFHLFFBQVEsQ0FBQyxJQUFJLEVBQUUsRUFBRTtBQUM3RCxvQkFBVSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDM0I7QUFDRCxlQUFPLEdBQUcsVUFBVSxDQUFDO0FBQ3JCLGFBQUssSUFBSSxDQUFDLEdBQUcsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO0FBQ3ZDLHVCQUFhLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEtBQUssT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztTQUMvQztPQUNGLE1BQU07O0FBQ0wsY0FBSSxRQUFRLFlBQUEsQ0FBQzs7QUFFYixnQkFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQSxHQUFHLEVBQUk7Ozs7QUFJbEMsZ0JBQUksUUFBUSxLQUFLLFNBQVMsRUFBRTtBQUMxQiwyQkFBYSxDQUFDLFFBQVEsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7YUFDaEM7QUFDRCxvQkFBUSxHQUFHLEdBQUcsQ0FBQztBQUNmLGFBQUMsRUFBRSxDQUFDO1dBQ0wsQ0FBQyxDQUFDO0FBQ0gsY0FBSSxRQUFRLEtBQUssU0FBUyxFQUFFO0FBQzFCLHlCQUFhLENBQUMsUUFBUSxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7V0FDdEM7O09BQ0Y7S0FDRjs7QUFFRCxRQUFJLENBQUMsS0FBSyxDQUFDLEVBQUU7QUFDWCxTQUFHLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ3JCOztBQUVELFdBQU8sR0FBRyxDQUFDO0dBQ1osQ0FBQyxDQUFDO0NBQ0oiLCJmaWxlIjoiZWFjaC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGFwcGVuZENvbnRleHRQYXRoLFxuICBibG9ja1BhcmFtcyxcbiAgY3JlYXRlRnJhbWUsXG4gIGlzQXJyYXksXG4gIGlzRnVuY3Rpb25cbn0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IEV4Y2VwdGlvbiBmcm9tICcuLi9leGNlcHRpb24nO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihpbnN0YW5jZSkge1xuICBpbnN0YW5jZS5yZWdpc3RlckhlbHBlcignZWFjaCcsIGZ1bmN0aW9uKGNvbnRleHQsIG9wdGlvbnMpIHtcbiAgICBpZiAoIW9wdGlvbnMpIHtcbiAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oJ011c3QgcGFzcyBpdGVyYXRvciB0byAjZWFjaCcpO1xuICAgIH1cblxuICAgIGxldCBmbiA9IG9wdGlvbnMuZm4sXG4gICAgICBpbnZlcnNlID0gb3B0aW9ucy5pbnZlcnNlLFxuICAgICAgaSA9IDAsXG4gICAgICByZXQgPSAnJyxcbiAgICAgIGRhdGEsXG4gICAgICBjb250ZXh0UGF0aDtcblxuICAgIGlmIChvcHRpb25zLmRhdGEgJiYgb3B0aW9ucy5pZHMpIHtcbiAgICAgIGNvbnRleHRQYXRoID1cbiAgICAgICAgYXBwZW5kQ29udGV4dFBhdGgob3B0aW9ucy5kYXRhLmNvbnRleHRQYXRoLCBvcHRpb25zLmlkc1swXSkgKyAnLic7XG4gICAgfVxuXG4gICAgaWYgKGlzRnVuY3Rpb24oY29udGV4dCkpIHtcbiAgICAgIGNvbnRleHQgPSBjb250ZXh0LmNhbGwodGhpcyk7XG4gICAgfVxuXG4gICAgaWYgKG9wdGlvbnMuZGF0YSkge1xuICAgICAgZGF0YSA9IGNyZWF0ZUZyYW1lKG9wdGlvbnMuZGF0YSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZXhlY0l0ZXJhdGlvbihmaWVsZCwgaW5kZXgsIGxhc3QpIHtcbiAgICAgIGlmIChkYXRhKSB7XG4gICAgICAgIGRhdGEua2V5ID0gZmllbGQ7XG4gICAgICAgIGRhdGEuaW5kZXggPSBpbmRleDtcbiAgICAgICAgZGF0YS5maXJzdCA9IGluZGV4ID09PSAwO1xuICAgICAgICBkYXRhLmxhc3QgPSAhIWxhc3Q7XG5cbiAgICAgICAgaWYgKGNvbnRleHRQYXRoKSB7XG4gICAgICAgICAgZGF0YS5jb250ZXh0UGF0aCA9IGNvbnRleHRQYXRoICsgZmllbGQ7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0ID1cbiAgICAgICAgcmV0ICtcbiAgICAgICAgZm4oY29udGV4dFtmaWVsZF0sIHtcbiAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgIGJsb2NrUGFyYW1zOiBibG9ja1BhcmFtcyhcbiAgICAgICAgICAgIFtjb250ZXh0W2ZpZWxkXSwgZmllbGRdLFxuICAgICAgICAgICAgW2NvbnRleHRQYXRoICsgZmllbGQsIG51bGxdXG4gICAgICAgICAgKVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoY29udGV4dCAmJiB0eXBlb2YgY29udGV4dCA9PT0gJ29iamVjdCcpIHtcbiAgICAgIGlmIChpc0FycmF5KGNvbnRleHQpKSB7XG4gICAgICAgIGZvciAobGV0IGogPSBjb250ZXh0Lmxlbmd0aDsgaSA8IGo7IGkrKykge1xuICAgICAgICAgIGlmIChpIGluIGNvbnRleHQpIHtcbiAgICAgICAgICAgIGV4ZWNJdGVyYXRpb24oaSwgaSwgaSA9PT0gY29udGV4dC5sZW5ndGggLSAxKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoZ2xvYmFsLlN5bWJvbCAmJiBjb250ZXh0W2dsb2JhbC5TeW1ib2wuaXRlcmF0b3JdKSB7XG4gICAgICAgIGNvbnN0IG5ld0NvbnRleHQgPSBbXTtcbiAgICAgICAgY29uc3QgaXRlcmF0b3IgPSBjb250ZXh0W2dsb2JhbC5TeW1ib2wuaXRlcmF0b3JdKCk7XG4gICAgICAgIGZvciAobGV0IGl0ID0gaXRlcmF0b3IubmV4dCgpOyAhaXQuZG9uZTsgaXQgPSBpdGVyYXRvci5uZXh0KCkpIHtcbiAgICAgICAgICBuZXdDb250ZXh0LnB1c2goaXQudmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnRleHQgPSBuZXdDb250ZXh0O1xuICAgICAgICBmb3IgKGxldCBqID0gY29udGV4dC5sZW5ndGg7IGkgPCBqOyBpKyspIHtcbiAgICAgICAgICBleGVjSXRlcmF0aW9uKGksIGksIGkgPT09IGNvbnRleHQubGVuZ3RoIC0gMSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxldCBwcmlvcktleTtcblxuICAgICAgICBPYmplY3Qua2V5cyhjb250ZXh0KS5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAgICAgLy8gV2UncmUgcnVubmluZyB0aGUgaXRlcmF0aW9ucyBvbmUgc3RlcCBvdXQgb2Ygc3luYyBzbyB3ZSBjYW4gZGV0ZWN0XG4gICAgICAgICAgLy8gdGhlIGxhc3QgaXRlcmF0aW9uIHdpdGhvdXQgaGF2ZSB0byBzY2FuIHRoZSBvYmplY3QgdHdpY2UgYW5kIGNyZWF0ZVxuICAgICAgICAgIC8vIGFuIGl0ZXJtZWRpYXRlIGtleXMgYXJyYXkuXG4gICAgICAgICAgaWYgKHByaW9yS2V5ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGV4ZWNJdGVyYXRpb24ocHJpb3JLZXksIGkgLSAxKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcHJpb3JLZXkgPSBrZXk7XG4gICAgICAgICAgaSsrO1xuICAgICAgICB9KTtcbiAgICAgICAgaWYgKHByaW9yS2V5ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBleGVjSXRlcmF0aW9uKHByaW9yS2V5LCBpIC0gMSwgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoaSA9PT0gMCkge1xuICAgICAgcmV0ID0gaW52ZXJzZSh0aGlzKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmV0O1xuICB9KTtcbn1cbiJdfQ==

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../../webpack/buildin/global.js */ '../node_modules/webpack/buildin/global.js'
          )
        ));

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/helpers/helper-missing.js':
      /*!********************************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/helpers/helper-missing.js ***!
  \********************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        // istanbul ignore next

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var _exception = __webpack_require__(
          /*! ../exception */ '../node_modules/handlebars/dist/cjs/handlebars/exception.js'
        );

        var _exception2 = _interopRequireDefault(_exception);

        exports['default'] = function (instance) {
          instance.registerHelper(
            'helperMissing',
            function () /* [args, ]options */ {
              if (arguments.length === 1) {
                // A missing field in a {{foo}} construct.
                return undefined;
              } else {
                // Someone is actually trying to call something, blow up.
                throw new _exception2['default'](
                  'Missing helper: "' +
                    arguments[arguments.length - 1].name +
                    '"'
                );
              }
            }
          );
        };

        module.exports = exports['default'];
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvaGVscGVyLW1pc3NpbmcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozt5QkFBc0IsY0FBYzs7OztxQkFFckIsVUFBUyxRQUFRLEVBQUU7QUFDaEMsVUFBUSxDQUFDLGNBQWMsQ0FBQyxlQUFlLEVBQUUsaUNBQWdDO0FBQ3ZFLFFBQUksU0FBUyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7O0FBRTFCLGFBQU8sU0FBUyxDQUFDO0tBQ2xCLE1BQU07O0FBRUwsWUFBTSwyQkFDSixtQkFBbUIsR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUNqRSxDQUFDO0tBQ0g7R0FDRixDQUFDLENBQUM7Q0FDSiIsImZpbGUiOiJoZWxwZXItbWlzc2luZy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeGNlcHRpb24gZnJvbSAnLi4vZXhjZXB0aW9uJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ2hlbHBlck1pc3NpbmcnLCBmdW5jdGlvbigvKiBbYXJncywgXW9wdGlvbnMgKi8pIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgLy8gQSBtaXNzaW5nIGZpZWxkIGluIGEge3tmb299fSBjb25zdHJ1Y3QuXG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBTb21lb25lIGlzIGFjdHVhbGx5IHRyeWluZyB0byBjYWxsIHNvbWV0aGluZywgYmxvdyB1cC5cbiAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oXG4gICAgICAgICdNaXNzaW5nIGhlbHBlcjogXCInICsgYXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGggLSAxXS5uYW1lICsgJ1wiJ1xuICAgICAgKTtcbiAgICB9XG4gIH0pO1xufVxuIl19

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/helpers/if.js':
      /*!********************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/helpers/if.js ***!
  \********************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        // istanbul ignore next

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var _utils = __webpack_require__(
          /*! ../utils */ '../node_modules/handlebars/dist/cjs/handlebars/utils.js'
        );

        var _exception = __webpack_require__(
          /*! ../exception */ '../node_modules/handlebars/dist/cjs/handlebars/exception.js'
        );

        var _exception2 = _interopRequireDefault(_exception);

        exports['default'] = function (instance) {
          instance.registerHelper('if', function (conditional, options) {
            if (arguments.length != 2) {
              throw new _exception2['default'](
                '#if requires exactly one argument'
              );
            }
            if (_utils.isFunction(conditional)) {
              conditional = conditional.call(this);
            }

            // Default behavior is to render the positive path if the value is truthy and not empty.
            // The `includeZero` option may be set to treat the condtional as purely not empty based on the
            // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.
            if (
              (!options.hash.includeZero && !conditional) ||
              _utils.isEmpty(conditional)
            ) {
              return options.inverse(this);
            } else {
              return options.fn(this);
            }
          });

          instance.registerHelper('unless', function (conditional, options) {
            if (arguments.length != 2) {
              throw new _exception2['default'](
                '#unless requires exactly one argument'
              );
            }
            return instance.helpers['if'].call(this, conditional, {
              fn: options.inverse,
              inverse: options.fn,
              hash: options.hash,
            });
          });
        };

        module.exports = exports['default'];
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvaWYuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztxQkFBb0MsVUFBVTs7eUJBQ3hCLGNBQWM7Ozs7cUJBRXJCLFVBQVMsUUFBUSxFQUFFO0FBQ2hDLFVBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLFVBQVMsV0FBVyxFQUFFLE9BQU8sRUFBRTtBQUMzRCxRQUFJLFNBQVMsQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO0FBQ3pCLFlBQU0sMkJBQWMsbUNBQW1DLENBQUMsQ0FBQztLQUMxRDtBQUNELFFBQUksa0JBQVcsV0FBVyxDQUFDLEVBQUU7QUFDM0IsaUJBQVcsR0FBRyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ3RDOzs7OztBQUtELFFBQUksQUFBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsV0FBVyxJQUFJLENBQUMsV0FBVyxJQUFLLGVBQVEsV0FBVyxDQUFDLEVBQUU7QUFDdkUsYUFBTyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQzlCLE1BQU07QUFDTCxhQUFPLE9BQU8sQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDekI7R0FDRixDQUFDLENBQUM7O0FBRUgsVUFBUSxDQUFDLGNBQWMsQ0FBQyxRQUFRLEVBQUUsVUFBUyxXQUFXLEVBQUUsT0FBTyxFQUFFO0FBQy9ELFFBQUksU0FBUyxDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUU7QUFDekIsWUFBTSwyQkFBYyx1Q0FBdUMsQ0FBQyxDQUFDO0tBQzlEO0FBQ0QsV0FBTyxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsV0FBVyxFQUFFO0FBQ3BELFFBQUUsRUFBRSxPQUFPLENBQUMsT0FBTztBQUNuQixhQUFPLEVBQUUsT0FBTyxDQUFDLEVBQUU7QUFDbkIsVUFBSSxFQUFFLE9BQU8sQ0FBQyxJQUFJO0tBQ25CLENBQUMsQ0FBQztHQUNKLENBQUMsQ0FBQztDQUNKIiwiZmlsZSI6ImlmLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNFbXB0eSwgaXNGdW5jdGlvbiB9IGZyb20gJy4uL3V0aWxzJztcbmltcG9ydCBFeGNlcHRpb24gZnJvbSAnLi4vZXhjZXB0aW9uJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ2lmJywgZnVuY3Rpb24oY29uZGl0aW9uYWwsIG9wdGlvbnMpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCAhPSAyKSB7XG4gICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCcjaWYgcmVxdWlyZXMgZXhhY3RseSBvbmUgYXJndW1lbnQnKTtcbiAgICB9XG4gICAgaWYgKGlzRnVuY3Rpb24oY29uZGl0aW9uYWwpKSB7XG4gICAgICBjb25kaXRpb25hbCA9IGNvbmRpdGlvbmFsLmNhbGwodGhpcyk7XG4gICAgfVxuXG4gICAgLy8gRGVmYXVsdCBiZWhhdmlvciBpcyB0byByZW5kZXIgdGhlIHBvc2l0aXZlIHBhdGggaWYgdGhlIHZhbHVlIGlzIHRydXRoeSBhbmQgbm90IGVtcHR5LlxuICAgIC8vIFRoZSBgaW5jbHVkZVplcm9gIG9wdGlvbiBtYXkgYmUgc2V0IHRvIHRyZWF0IHRoZSBjb25kdGlvbmFsIGFzIHB1cmVseSBub3QgZW1wdHkgYmFzZWQgb24gdGhlXG4gICAgLy8gYmVoYXZpb3Igb2YgaXNFbXB0eS4gRWZmZWN0aXZlbHkgdGhpcyBkZXRlcm1pbmVzIGlmIDAgaXMgaGFuZGxlZCBieSB0aGUgcG9zaXRpdmUgcGF0aCBvciBuZWdhdGl2ZS5cbiAgICBpZiAoKCFvcHRpb25zLmhhc2guaW5jbHVkZVplcm8gJiYgIWNvbmRpdGlvbmFsKSB8fCBpc0VtcHR5KGNvbmRpdGlvbmFsKSkge1xuICAgICAgcmV0dXJuIG9wdGlvbnMuaW52ZXJzZSh0aGlzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG9wdGlvbnMuZm4odGhpcyk7XG4gICAgfVxuICB9KTtcblxuICBpbnN0YW5jZS5yZWdpc3RlckhlbHBlcigndW5sZXNzJywgZnVuY3Rpb24oY29uZGl0aW9uYWwsIG9wdGlvbnMpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCAhPSAyKSB7XG4gICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCcjdW5sZXNzIHJlcXVpcmVzIGV4YWN0bHkgb25lIGFyZ3VtZW50Jyk7XG4gICAgfVxuICAgIHJldHVybiBpbnN0YW5jZS5oZWxwZXJzWydpZiddLmNhbGwodGhpcywgY29uZGl0aW9uYWwsIHtcbiAgICAgIGZuOiBvcHRpb25zLmludmVyc2UsXG4gICAgICBpbnZlcnNlOiBvcHRpb25zLmZuLFxuICAgICAgaGFzaDogb3B0aW9ucy5oYXNoXG4gICAgfSk7XG4gIH0pO1xufVxuIl19

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/helpers/log.js':
      /*!*********************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/helpers/log.js ***!
  \*********************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;

        exports['default'] = function (instance) {
          instance.registerHelper('log', function () /* message, options */ {
            var args = [undefined],
              options = arguments[arguments.length - 1];
            for (var i = 0; i < arguments.length - 1; i++) {
              args.push(arguments[i]);
            }

            var level = 1;
            if (options.hash.level != null) {
              level = options.hash.level;
            } else if (options.data && options.data.level != null) {
              level = options.data.level;
            }
            args[0] = level;

            instance.log.apply(instance, args);
          });
        };

        module.exports = exports['default'];
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvbG9nLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7cUJBQWUsVUFBUyxRQUFRLEVBQUU7QUFDaEMsVUFBUSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsa0NBQWlDO0FBQzlELFFBQUksSUFBSSxHQUFHLENBQUMsU0FBUyxDQUFDO1FBQ3BCLE9BQU8sR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztBQUM1QyxTQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7QUFDN0MsVUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUN6Qjs7QUFFRCxRQUFJLEtBQUssR0FBRyxDQUFDLENBQUM7QUFDZCxRQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksRUFBRTtBQUM5QixXQUFLLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7S0FDNUIsTUFBTSxJQUFJLE9BQU8sQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxFQUFFO0FBQ3JELFdBQUssR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztLQUM1QjtBQUNELFFBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUM7O0FBRWhCLFlBQVEsQ0FBQyxHQUFHLE1BQUEsQ0FBWixRQUFRLEVBQVEsSUFBSSxDQUFDLENBQUM7R0FDdkIsQ0FBQyxDQUFDO0NBQ0oiLCJmaWxlIjoibG9nLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ2xvZycsIGZ1bmN0aW9uKC8qIG1lc3NhZ2UsIG9wdGlvbnMgKi8pIHtcbiAgICBsZXQgYXJncyA9IFt1bmRlZmluZWRdLFxuICAgICAgb3B0aW9ucyA9IGFyZ3VtZW50c1thcmd1bWVudHMubGVuZ3RoIC0gMV07XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoIC0gMTsgaSsrKSB7XG4gICAgICBhcmdzLnB1c2goYXJndW1lbnRzW2ldKTtcbiAgICB9XG5cbiAgICBsZXQgbGV2ZWwgPSAxO1xuICAgIGlmIChvcHRpb25zLmhhc2gubGV2ZWwgIT0gbnVsbCkge1xuICAgICAgbGV2ZWwgPSBvcHRpb25zLmhhc2gubGV2ZWw7XG4gICAgfSBlbHNlIGlmIChvcHRpb25zLmRhdGEgJiYgb3B0aW9ucy5kYXRhLmxldmVsICE9IG51bGwpIHtcbiAgICAgIGxldmVsID0gb3B0aW9ucy5kYXRhLmxldmVsO1xuICAgIH1cbiAgICBhcmdzWzBdID0gbGV2ZWw7XG5cbiAgICBpbnN0YW5jZS5sb2coLi4uYXJncyk7XG4gIH0pO1xufVxuIl19

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/helpers/lookup.js':
      /*!************************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/helpers/lookup.js ***!
  \************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;

        exports['default'] = function (instance) {
          instance.registerHelper('lookup', function (obj, field, options) {
            if (!obj) {
              // Note for 5.0: Change to "obj == null" in 5.0
              return obj;
            }
            return options.lookupProperty(obj, field);
          });
        };

        module.exports = exports['default'];
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvbG9va3VwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7cUJBQWUsVUFBUyxRQUFRLEVBQUU7QUFDaEMsVUFBUSxDQUFDLGNBQWMsQ0FBQyxRQUFRLEVBQUUsVUFBUyxHQUFHLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRTtBQUM5RCxRQUFJLENBQUMsR0FBRyxFQUFFOztBQUVSLGFBQU8sR0FBRyxDQUFDO0tBQ1o7QUFDRCxXQUFPLE9BQU8sQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO0dBQzNDLENBQUMsQ0FBQztDQUNKIiwiZmlsZSI6Imxvb2t1cC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGluc3RhbmNlKSB7XG4gIGluc3RhbmNlLnJlZ2lzdGVySGVscGVyKCdsb29rdXAnLCBmdW5jdGlvbihvYmosIGZpZWxkLCBvcHRpb25zKSB7XG4gICAgaWYgKCFvYmopIHtcbiAgICAgIC8vIE5vdGUgZm9yIDUuMDogQ2hhbmdlIHRvIFwib2JqID09IG51bGxcIiBpbiA1LjBcbiAgICAgIHJldHVybiBvYmo7XG4gICAgfVxuICAgIHJldHVybiBvcHRpb25zLmxvb2t1cFByb3BlcnR5KG9iaiwgZmllbGQpO1xuICB9KTtcbn1cbiJdfQ==

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/helpers/with.js':
      /*!**********************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/helpers/with.js ***!
  \**********************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        // istanbul ignore next

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var _utils = __webpack_require__(
          /*! ../utils */ '../node_modules/handlebars/dist/cjs/handlebars/utils.js'
        );

        var _exception = __webpack_require__(
          /*! ../exception */ '../node_modules/handlebars/dist/cjs/handlebars/exception.js'
        );

        var _exception2 = _interopRequireDefault(_exception);

        exports['default'] = function (instance) {
          instance.registerHelper('with', function (context, options) {
            if (arguments.length != 2) {
              throw new _exception2['default'](
                '#with requires exactly one argument'
              );
            }
            if (_utils.isFunction(context)) {
              context = context.call(this);
            }

            var fn = options.fn;

            if (!_utils.isEmpty(context)) {
              var data = options.data;
              if (options.data && options.ids) {
                data = _utils.createFrame(options.data);
                data.contextPath = _utils.appendContextPath(
                  options.data.contextPath,
                  options.ids[0]
                );
              }

              return fn(context, {
                data: data,
                blockParams: _utils.blockParams(
                  [context],
                  [data && data.contextPath]
                ),
              });
            } else {
              return options.inverse(this);
            }
          });
        };

        module.exports = exports['default'];
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvd2l0aC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O3FCQU1PLFVBQVU7O3lCQUNLLGNBQWM7Ozs7cUJBRXJCLFVBQVMsUUFBUSxFQUFFO0FBQ2hDLFVBQVEsQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLFVBQVMsT0FBTyxFQUFFLE9BQU8sRUFBRTtBQUN6RCxRQUFJLFNBQVMsQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO0FBQ3pCLFlBQU0sMkJBQWMscUNBQXFDLENBQUMsQ0FBQztLQUM1RDtBQUNELFFBQUksa0JBQVcsT0FBTyxDQUFDLEVBQUU7QUFDdkIsYUFBTyxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDOUI7O0FBRUQsUUFBSSxFQUFFLEdBQUcsT0FBTyxDQUFDLEVBQUUsQ0FBQzs7QUFFcEIsUUFBSSxDQUFDLGVBQVEsT0FBTyxDQUFDLEVBQUU7QUFDckIsVUFBSSxJQUFJLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQztBQUN4QixVQUFJLE9BQU8sQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLEdBQUcsRUFBRTtBQUMvQixZQUFJLEdBQUcsbUJBQVksT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2pDLFlBQUksQ0FBQyxXQUFXLEdBQUcseUJBQ2pCLE9BQU8sQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUN4QixPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUNmLENBQUM7T0FDSDs7QUFFRCxhQUFPLEVBQUUsQ0FBQyxPQUFPLEVBQUU7QUFDakIsWUFBSSxFQUFFLElBQUk7QUFDVixtQkFBVyxFQUFFLG1CQUFZLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO09BQ2hFLENBQUMsQ0FBQztLQUNKLE1BQU07QUFDTCxhQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDOUI7R0FDRixDQUFDLENBQUM7Q0FDSiIsImZpbGUiOiJ3aXRoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgYXBwZW5kQ29udGV4dFBhdGgsXG4gIGJsb2NrUGFyYW1zLFxuICBjcmVhdGVGcmFtZSxcbiAgaXNFbXB0eSxcbiAgaXNGdW5jdGlvblxufSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgRXhjZXB0aW9uIGZyb20gJy4uL2V4Y2VwdGlvbic7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGluc3RhbmNlKSB7XG4gIGluc3RhbmNlLnJlZ2lzdGVySGVscGVyKCd3aXRoJywgZnVuY3Rpb24oY29udGV4dCwgb3B0aW9ucykge1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoICE9IDIpIHtcbiAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oJyN3aXRoIHJlcXVpcmVzIGV4YWN0bHkgb25lIGFyZ3VtZW50Jyk7XG4gICAgfVxuICAgIGlmIChpc0Z1bmN0aW9uKGNvbnRleHQpKSB7XG4gICAgICBjb250ZXh0ID0gY29udGV4dC5jYWxsKHRoaXMpO1xuICAgIH1cblxuICAgIGxldCBmbiA9IG9wdGlvbnMuZm47XG5cbiAgICBpZiAoIWlzRW1wdHkoY29udGV4dCkpIHtcbiAgICAgIGxldCBkYXRhID0gb3B0aW9ucy5kYXRhO1xuICAgICAgaWYgKG9wdGlvbnMuZGF0YSAmJiBvcHRpb25zLmlkcykge1xuICAgICAgICBkYXRhID0gY3JlYXRlRnJhbWUob3B0aW9ucy5kYXRhKTtcbiAgICAgICAgZGF0YS5jb250ZXh0UGF0aCA9IGFwcGVuZENvbnRleHRQYXRoKFxuICAgICAgICAgIG9wdGlvbnMuZGF0YS5jb250ZXh0UGF0aCxcbiAgICAgICAgICBvcHRpb25zLmlkc1swXVxuICAgICAgICApO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZm4oY29udGV4dCwge1xuICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICBibG9ja1BhcmFtczogYmxvY2tQYXJhbXMoW2NvbnRleHRdLCBbZGF0YSAmJiBkYXRhLmNvbnRleHRQYXRoXSlcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gb3B0aW9ucy5pbnZlcnNlKHRoaXMpO1xuICAgIH1cbiAgfSk7XG59XG4iXX0=

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/internal/create-new-lookup-object.js':
      /*!*******************************************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/internal/create-new-lookup-object.js ***!
  \*******************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        exports.createNewLookupObject = createNewLookupObject;

        var _utils = __webpack_require__(
          /*! ../utils */ '../node_modules/handlebars/dist/cjs/handlebars/utils.js'
        );

        /**
         * Create a new object with "null"-prototype to avoid truthy results on prototype properties.
         * The resulting object can be used with "object[property]" to check if a property exists
         * @param {...object} sources a varargs parameter of source objects that will be merged
         * @returns {object}
         */

        function createNewLookupObject() {
          for (
            var _len = arguments.length, sources = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            sources[_key] = arguments[_key];
          }

          return _utils.extend.apply(
            undefined,
            [Object.create(null)].concat(sources)
          );
        }
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2ludGVybmFsL2NyZWF0ZS1uZXctbG9va3VwLW9iamVjdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztxQkFBdUIsVUFBVTs7Ozs7Ozs7O0FBUTFCLFNBQVMscUJBQXFCLEdBQWE7b0NBQVQsT0FBTztBQUFQLFdBQU87OztBQUM5QyxTQUFPLGdDQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQUssT0FBTyxFQUFDLENBQUM7Q0FDaEQiLCJmaWxlIjoiY3JlYXRlLW5ldy1sb29rdXAtb2JqZWN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZXh0ZW5kIH0gZnJvbSAnLi4vdXRpbHMnO1xuXG4vKipcbiAqIENyZWF0ZSBhIG5ldyBvYmplY3Qgd2l0aCBcIm51bGxcIi1wcm90b3R5cGUgdG8gYXZvaWQgdHJ1dGh5IHJlc3VsdHMgb24gcHJvdG90eXBlIHByb3BlcnRpZXMuXG4gKiBUaGUgcmVzdWx0aW5nIG9iamVjdCBjYW4gYmUgdXNlZCB3aXRoIFwib2JqZWN0W3Byb3BlcnR5XVwiIHRvIGNoZWNrIGlmIGEgcHJvcGVydHkgZXhpc3RzXG4gKiBAcGFyYW0gey4uLm9iamVjdH0gc291cmNlcyBhIHZhcmFyZ3MgcGFyYW1ldGVyIG9mIHNvdXJjZSBvYmplY3RzIHRoYXQgd2lsbCBiZSBtZXJnZWRcbiAqIEByZXR1cm5zIHtvYmplY3R9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVOZXdMb29rdXBPYmplY3QoLi4uc291cmNlcykge1xuICByZXR1cm4gZXh0ZW5kKE9iamVjdC5jcmVhdGUobnVsbCksIC4uLnNvdXJjZXMpO1xufVxuIl19

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/internal/proto-access.js':
      /*!*******************************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/internal/proto-access.js ***!
  \*******************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        exports.createProtoAccessControl = createProtoAccessControl;
        exports.resultIsAllowed = resultIsAllowed;
        exports.resetLoggedProperties = resetLoggedProperties;
        // istanbul ignore next

        function _interopRequireWildcard(obj) {
          if (obj && obj.__esModule) {
            return obj;
          } else {
            var newObj = {};
            if (obj != null) {
              for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key))
                  newObj[key] = obj[key];
              }
            }
            newObj['default'] = obj;
            return newObj;
          }
        }

        var _createNewLookupObject = __webpack_require__(
          /*! ./create-new-lookup-object */ '../node_modules/handlebars/dist/cjs/handlebars/internal/create-new-lookup-object.js'
        );

        var _logger = __webpack_require__(
          /*! ../logger */ '../node_modules/handlebars/dist/cjs/handlebars/logger.js'
        );

        var logger = _interopRequireWildcard(_logger);

        var loggedProperties = Object.create(null);

        function createProtoAccessControl(runtimeOptions) {
          var defaultMethodWhiteList = Object.create(null);
          defaultMethodWhiteList['constructor'] = false;
          defaultMethodWhiteList['__defineGetter__'] = false;
          defaultMethodWhiteList['__defineSetter__'] = false;
          defaultMethodWhiteList['__lookupGetter__'] = false;

          var defaultPropertyWhiteList = Object.create(null);
          // eslint-disable-next-line no-proto
          defaultPropertyWhiteList['__proto__'] = false;

          return {
            properties: {
              whitelist: _createNewLookupObject.createNewLookupObject(
                defaultPropertyWhiteList,
                runtimeOptions.allowedProtoProperties
              ),
              defaultValue: runtimeOptions.allowProtoPropertiesByDefault,
            },
            methods: {
              whitelist: _createNewLookupObject.createNewLookupObject(
                defaultMethodWhiteList,
                runtimeOptions.allowedProtoMethods
              ),
              defaultValue: runtimeOptions.allowProtoMethodsByDefault,
            },
          };
        }

        function resultIsAllowed(result, protoAccessControl, propertyName) {
          if (typeof result === 'function') {
            return checkWhiteList(protoAccessControl.methods, propertyName);
          } else {
            return checkWhiteList(protoAccessControl.properties, propertyName);
          }
        }

        function checkWhiteList(protoAccessControlForType, propertyName) {
          if (protoAccessControlForType.whitelist[propertyName] !== undefined) {
            return protoAccessControlForType.whitelist[propertyName] === true;
          }
          if (protoAccessControlForType.defaultValue !== undefined) {
            return protoAccessControlForType.defaultValue;
          }
          logUnexpecedPropertyAccessOnce(propertyName);
          return false;
        }

        function logUnexpecedPropertyAccessOnce(propertyName) {
          if (loggedProperties[propertyName] !== true) {
            loggedProperties[propertyName] = true;
            logger.log(
              'error',
              'Handlebars: Access has been denied to resolve the property "' +
                propertyName +
                '" because it is not an "own property" of its parent.\n' +
                'You can add a runtime option to disable the check or this warning:\n' +
                'See https://handlebarsjs.com/api-reference/runtime-options.html#options-to-control-prototype-access for details'
            );
          }
        }

        function resetLoggedProperties() {
          Object.keys(loggedProperties).forEach(function (propertyName) {
            delete loggedProperties[propertyName];
          });
        }
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2ludGVybmFsL3Byb3RvLWFjY2Vzcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O3FDQUFzQyw0QkFBNEI7O3NCQUMxQyxXQUFXOztJQUF2QixNQUFNOztBQUVsQixJQUFNLGdCQUFnQixHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7O0FBRXRDLFNBQVMsd0JBQXdCLENBQUMsY0FBYyxFQUFFO0FBQ3ZELE1BQUksc0JBQXNCLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNqRCx3QkFBc0IsQ0FBQyxhQUFhLENBQUMsR0FBRyxLQUFLLENBQUM7QUFDOUMsd0JBQXNCLENBQUMsa0JBQWtCLENBQUMsR0FBRyxLQUFLLENBQUM7QUFDbkQsd0JBQXNCLENBQUMsa0JBQWtCLENBQUMsR0FBRyxLQUFLLENBQUM7QUFDbkQsd0JBQXNCLENBQUMsa0JBQWtCLENBQUMsR0FBRyxLQUFLLENBQUM7O0FBRW5ELE1BQUksd0JBQXdCLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQzs7QUFFbkQsMEJBQXdCLENBQUMsV0FBVyxDQUFDLEdBQUcsS0FBSyxDQUFDOztBQUU5QyxTQUFPO0FBQ0wsY0FBVSxFQUFFO0FBQ1YsZUFBUyxFQUFFLDZDQUNULHdCQUF3QixFQUN4QixjQUFjLENBQUMsc0JBQXNCLENBQ3RDO0FBQ0Qsa0JBQVksRUFBRSxjQUFjLENBQUMsNkJBQTZCO0tBQzNEO0FBQ0QsV0FBTyxFQUFFO0FBQ1AsZUFBUyxFQUFFLDZDQUNULHNCQUFzQixFQUN0QixjQUFjLENBQUMsbUJBQW1CLENBQ25DO0FBQ0Qsa0JBQVksRUFBRSxjQUFjLENBQUMsMEJBQTBCO0tBQ3hEO0dBQ0YsQ0FBQztDQUNIOztBQUVNLFNBQVMsZUFBZSxDQUFDLE1BQU0sRUFBRSxrQkFBa0IsRUFBRSxZQUFZLEVBQUU7QUFDeEUsTUFBSSxPQUFPLE1BQU0sS0FBSyxVQUFVLEVBQUU7QUFDaEMsV0FBTyxjQUFjLENBQUMsa0JBQWtCLENBQUMsT0FBTyxFQUFFLFlBQVksQ0FBQyxDQUFDO0dBQ2pFLE1BQU07QUFDTCxXQUFPLGNBQWMsQ0FBQyxrQkFBa0IsQ0FBQyxVQUFVLEVBQUUsWUFBWSxDQUFDLENBQUM7R0FDcEU7Q0FDRjs7QUFFRCxTQUFTLGNBQWMsQ0FBQyx5QkFBeUIsRUFBRSxZQUFZLEVBQUU7QUFDL0QsTUFBSSx5QkFBeUIsQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLEtBQUssU0FBUyxFQUFFO0FBQ25FLFdBQU8seUJBQXlCLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxLQUFLLElBQUksQ0FBQztHQUNuRTtBQUNELE1BQUkseUJBQXlCLENBQUMsWUFBWSxLQUFLLFNBQVMsRUFBRTtBQUN4RCxXQUFPLHlCQUF5QixDQUFDLFlBQVksQ0FBQztHQUMvQztBQUNELGdDQUE4QixDQUFDLFlBQVksQ0FBQyxDQUFDO0FBQzdDLFNBQU8sS0FBSyxDQUFDO0NBQ2Q7O0FBRUQsU0FBUyw4QkFBOEIsQ0FBQyxZQUFZLEVBQUU7QUFDcEQsTUFBSSxnQkFBZ0IsQ0FBQyxZQUFZLENBQUMsS0FBSyxJQUFJLEVBQUU7QUFDM0Msb0JBQWdCLENBQUMsWUFBWSxDQUFDLEdBQUcsSUFBSSxDQUFDO0FBQ3RDLFVBQU0sQ0FBQyxHQUFHLENBQ1IsT0FBTyxFQUNQLGlFQUErRCxZQUFZLG9JQUNILG9IQUMyQyxDQUNwSCxDQUFDO0dBQ0g7Q0FDRjs7QUFFTSxTQUFTLHFCQUFxQixHQUFHO0FBQ3RDLFFBQU0sQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQSxZQUFZLEVBQUk7QUFDcEQsV0FBTyxnQkFBZ0IsQ0FBQyxZQUFZLENBQUMsQ0FBQztHQUN2QyxDQUFDLENBQUM7Q0FDSiIsImZpbGUiOiJwcm90by1hY2Nlc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVOZXdMb29rdXBPYmplY3QgfSBmcm9tICcuL2NyZWF0ZS1uZXctbG9va3VwLW9iamVjdCc7XG5pbXBvcnQgKiBhcyBsb2dnZXIgZnJvbSAnLi4vbG9nZ2VyJztcblxuY29uc3QgbG9nZ2VkUHJvcGVydGllcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQcm90b0FjY2Vzc0NvbnRyb2wocnVudGltZU9wdGlvbnMpIHtcbiAgbGV0IGRlZmF1bHRNZXRob2RXaGl0ZUxpc3QgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICBkZWZhdWx0TWV0aG9kV2hpdGVMaXN0Wydjb25zdHJ1Y3RvciddID0gZmFsc2U7XG4gIGRlZmF1bHRNZXRob2RXaGl0ZUxpc3RbJ19fZGVmaW5lR2V0dGVyX18nXSA9IGZhbHNlO1xuICBkZWZhdWx0TWV0aG9kV2hpdGVMaXN0WydfX2RlZmluZVNldHRlcl9fJ10gPSBmYWxzZTtcbiAgZGVmYXVsdE1ldGhvZFdoaXRlTGlzdFsnX19sb29rdXBHZXR0ZXJfXyddID0gZmFsc2U7XG5cbiAgbGV0IGRlZmF1bHRQcm9wZXJ0eVdoaXRlTGlzdCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wcm90b1xuICBkZWZhdWx0UHJvcGVydHlXaGl0ZUxpc3RbJ19fcHJvdG9fXyddID0gZmFsc2U7XG5cbiAgcmV0dXJuIHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB3aGl0ZWxpc3Q6IGNyZWF0ZU5ld0xvb2t1cE9iamVjdChcbiAgICAgICAgZGVmYXVsdFByb3BlcnR5V2hpdGVMaXN0LFxuICAgICAgICBydW50aW1lT3B0aW9ucy5hbGxvd2VkUHJvdG9Qcm9wZXJ0aWVzXG4gICAgICApLFxuICAgICAgZGVmYXVsdFZhbHVlOiBydW50aW1lT3B0aW9ucy5hbGxvd1Byb3RvUHJvcGVydGllc0J5RGVmYXVsdFxuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgd2hpdGVsaXN0OiBjcmVhdGVOZXdMb29rdXBPYmplY3QoXG4gICAgICAgIGRlZmF1bHRNZXRob2RXaGl0ZUxpc3QsXG4gICAgICAgIHJ1bnRpbWVPcHRpb25zLmFsbG93ZWRQcm90b01ldGhvZHNcbiAgICAgICksXG4gICAgICBkZWZhdWx0VmFsdWU6IHJ1bnRpbWVPcHRpb25zLmFsbG93UHJvdG9NZXRob2RzQnlEZWZhdWx0XG4gICAgfVxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVzdWx0SXNBbGxvd2VkKHJlc3VsdCwgcHJvdG9BY2Nlc3NDb250cm9sLCBwcm9wZXJ0eU5hbWUpIHtcbiAgaWYgKHR5cGVvZiByZXN1bHQgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gY2hlY2tXaGl0ZUxpc3QocHJvdG9BY2Nlc3NDb250cm9sLm1ldGhvZHMsIHByb3BlcnR5TmFtZSk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGNoZWNrV2hpdGVMaXN0KHByb3RvQWNjZXNzQ29udHJvbC5wcm9wZXJ0aWVzLCBwcm9wZXJ0eU5hbWUpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNoZWNrV2hpdGVMaXN0KHByb3RvQWNjZXNzQ29udHJvbEZvclR5cGUsIHByb3BlcnR5TmFtZSkge1xuICBpZiAocHJvdG9BY2Nlc3NDb250cm9sRm9yVHlwZS53aGl0ZWxpc3RbcHJvcGVydHlOYW1lXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIHByb3RvQWNjZXNzQ29udHJvbEZvclR5cGUud2hpdGVsaXN0W3Byb3BlcnR5TmFtZV0gPT09IHRydWU7XG4gIH1cbiAgaWYgKHByb3RvQWNjZXNzQ29udHJvbEZvclR5cGUuZGVmYXVsdFZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gcHJvdG9BY2Nlc3NDb250cm9sRm9yVHlwZS5kZWZhdWx0VmFsdWU7XG4gIH1cbiAgbG9nVW5leHBlY2VkUHJvcGVydHlBY2Nlc3NPbmNlKHByb3BlcnR5TmFtZSk7XG4gIHJldHVybiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gbG9nVW5leHBlY2VkUHJvcGVydHlBY2Nlc3NPbmNlKHByb3BlcnR5TmFtZSkge1xuICBpZiAobG9nZ2VkUHJvcGVydGllc1twcm9wZXJ0eU5hbWVdICE9PSB0cnVlKSB7XG4gICAgbG9nZ2VkUHJvcGVydGllc1twcm9wZXJ0eU5hbWVdID0gdHJ1ZTtcbiAgICBsb2dnZXIubG9nKFxuICAgICAgJ2Vycm9yJyxcbiAgICAgIGBIYW5kbGViYXJzOiBBY2Nlc3MgaGFzIGJlZW4gZGVuaWVkIHRvIHJlc29sdmUgdGhlIHByb3BlcnR5IFwiJHtwcm9wZXJ0eU5hbWV9XCIgYmVjYXVzZSBpdCBpcyBub3QgYW4gXCJvd24gcHJvcGVydHlcIiBvZiBpdHMgcGFyZW50LlxcbmAgK1xuICAgICAgICBgWW91IGNhbiBhZGQgYSBydW50aW1lIG9wdGlvbiB0byBkaXNhYmxlIHRoZSBjaGVjayBvciB0aGlzIHdhcm5pbmc6XFxuYCArXG4gICAgICAgIGBTZWUgaHR0cHM6Ly9oYW5kbGViYXJzanMuY29tL2FwaS1yZWZlcmVuY2UvcnVudGltZS1vcHRpb25zLmh0bWwjb3B0aW9ucy10by1jb250cm9sLXByb3RvdHlwZS1hY2Nlc3MgZm9yIGRldGFpbHNgXG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVzZXRMb2dnZWRQcm9wZXJ0aWVzKCkge1xuICBPYmplY3Qua2V5cyhsb2dnZWRQcm9wZXJ0aWVzKS5mb3JFYWNoKHByb3BlcnR5TmFtZSA9PiB7XG4gICAgZGVsZXRlIGxvZ2dlZFByb3BlcnRpZXNbcHJvcGVydHlOYW1lXTtcbiAgfSk7XG59XG4iXX0=

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/internal/wrapHelper.js':
      /*!*****************************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/internal/wrapHelper.js ***!
  \*****************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        exports.wrapHelper = wrapHelper;

        function wrapHelper(helper, transformOptionsFn) {
          if (typeof helper !== 'function') {
            // This should not happen, but apparently it does in https://github.com/wycats/handlebars.js/issues/1639
            // We try to make the wrapper least-invasive by not wrapping it, if the helper is not a function.
            return helper;
          }
          var wrapper = function wrapper() /* dynamic arguments */ {
            var options = arguments[arguments.length - 1];
            arguments[arguments.length - 1] = transformOptionsFn(options);
            return helper.apply(this, arguments);
          };
          return wrapper;
        }
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2ludGVybmFsL3dyYXBIZWxwZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxTQUFTLFVBQVUsQ0FBQyxNQUFNLEVBQUUsa0JBQWtCLEVBQUU7QUFDckQsTUFBSSxPQUFPLE1BQU0sS0FBSyxVQUFVLEVBQUU7OztBQUdoQyxXQUFPLE1BQU0sQ0FBQztHQUNmO0FBQ0QsTUFBSSxPQUFPLEdBQUcsU0FBVixPQUFPLDBCQUFxQztBQUM5QyxRQUFNLE9BQU8sR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztBQUNoRCxhQUFTLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsR0FBRyxrQkFBa0IsQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUM5RCxXQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0dBQ3RDLENBQUM7QUFDRixTQUFPLE9BQU8sQ0FBQztDQUNoQiIsImZpbGUiOiJ3cmFwSGVscGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHdyYXBIZWxwZXIoaGVscGVyLCB0cmFuc2Zvcm1PcHRpb25zRm4pIHtcbiAgaWYgKHR5cGVvZiBoZWxwZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAvLyBUaGlzIHNob3VsZCBub3QgaGFwcGVuLCBidXQgYXBwYXJlbnRseSBpdCBkb2VzIGluIGh0dHBzOi8vZ2l0aHViLmNvbS93eWNhdHMvaGFuZGxlYmFycy5qcy9pc3N1ZXMvMTYzOVxuICAgIC8vIFdlIHRyeSB0byBtYWtlIHRoZSB3cmFwcGVyIGxlYXN0LWludmFzaXZlIGJ5IG5vdCB3cmFwcGluZyBpdCwgaWYgdGhlIGhlbHBlciBpcyBub3QgYSBmdW5jdGlvbi5cbiAgICByZXR1cm4gaGVscGVyO1xuICB9XG4gIGxldCB3cmFwcGVyID0gZnVuY3Rpb24oLyogZHluYW1pYyBhcmd1bWVudHMgKi8pIHtcbiAgICBjb25zdCBvcHRpb25zID0gYXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGggLSAxXTtcbiAgICBhcmd1bWVudHNbYXJndW1lbnRzLmxlbmd0aCAtIDFdID0gdHJhbnNmb3JtT3B0aW9uc0ZuKG9wdGlvbnMpO1xuICAgIHJldHVybiBoZWxwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfTtcbiAgcmV0dXJuIHdyYXBwZXI7XG59XG4iXX0=

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/logger.js':
      /*!****************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/logger.js ***!
  \****************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;

        var _utils = __webpack_require__(
          /*! ./utils */ '../node_modules/handlebars/dist/cjs/handlebars/utils.js'
        );

        var logger = {
          methodMap: ['debug', 'info', 'warn', 'error'],
          level: 'info',

          // Maps a given level value to the `methodMap` indexes above.
          lookupLevel: function lookupLevel(level) {
            if (typeof level === 'string') {
              var levelMap = _utils.indexOf(
                logger.methodMap,
                level.toLowerCase()
              );
              if (levelMap >= 0) {
                level = levelMap;
              } else {
                level = parseInt(level, 10);
              }
            }

            return level;
          },

          // Can be overridden in the host environment
          log: function log(level) {
            level = logger.lookupLevel(level);

            if (
              typeof console !== 'undefined' &&
              logger.lookupLevel(logger.level) <= level
            ) {
              var method = logger.methodMap[level];
              // eslint-disable-next-line no-console
              if (!console[method]) {
                method = 'log';
              }

              for (
                var _len = arguments.length,
                  message = Array(_len > 1 ? _len - 1 : 0),
                  _key = 1;
                _key < _len;
                _key++
              ) {
                message[_key - 1] = arguments[_key];
              }

              console[method].apply(console, message); // eslint-disable-line no-console
            }
          },
        };

        exports['default'] = logger;
        module.exports = exports['default'];
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2xvZ2dlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O3FCQUF3QixTQUFTOztBQUVqQyxJQUFJLE1BQU0sR0FBRztBQUNYLFdBQVMsRUFBRSxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE9BQU8sQ0FBQztBQUM3QyxPQUFLLEVBQUUsTUFBTTs7O0FBR2IsYUFBVyxFQUFFLHFCQUFTLEtBQUssRUFBRTtBQUMzQixRQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsRUFBRTtBQUM3QixVQUFJLFFBQVEsR0FBRyxlQUFRLE1BQU0sQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7QUFDOUQsVUFBSSxRQUFRLElBQUksQ0FBQyxFQUFFO0FBQ2pCLGFBQUssR0FBRyxRQUFRLENBQUM7T0FDbEIsTUFBTTtBQUNMLGFBQUssR0FBRyxRQUFRLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO09BQzdCO0tBQ0Y7O0FBRUQsV0FBTyxLQUFLLENBQUM7R0FDZDs7O0FBR0QsS0FBRyxFQUFFLGFBQVMsS0FBSyxFQUFjO0FBQy9CLFNBQUssR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDOztBQUVsQyxRQUNFLE9BQU8sT0FBTyxLQUFLLFdBQVcsSUFDOUIsTUFBTSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksS0FBSyxFQUN6QztBQUNBLFVBQUksTUFBTSxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7O0FBRXJDLFVBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUU7QUFDcEIsY0FBTSxHQUFHLEtBQUssQ0FBQztPQUNoQjs7d0NBWG1CLE9BQU87QUFBUCxlQUFPOzs7QUFZM0IsYUFBTyxDQUFDLE1BQU0sT0FBQyxDQUFmLE9BQU8sRUFBWSxPQUFPLENBQUMsQ0FBQztLQUM3QjtHQUNGO0NBQ0YsQ0FBQzs7cUJBRWEsTUFBTSIsImZpbGUiOiJsb2dnZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbmRleE9mIH0gZnJvbSAnLi91dGlscyc7XG5cbmxldCBsb2dnZXIgPSB7XG4gIG1ldGhvZE1hcDogWydkZWJ1ZycsICdpbmZvJywgJ3dhcm4nLCAnZXJyb3InXSxcbiAgbGV2ZWw6ICdpbmZvJyxcblxuICAvLyBNYXBzIGEgZ2l2ZW4gbGV2ZWwgdmFsdWUgdG8gdGhlIGBtZXRob2RNYXBgIGluZGV4ZXMgYWJvdmUuXG4gIGxvb2t1cExldmVsOiBmdW5jdGlvbihsZXZlbCkge1xuICAgIGlmICh0eXBlb2YgbGV2ZWwgPT09ICdzdHJpbmcnKSB7XG4gICAgICBsZXQgbGV2ZWxNYXAgPSBpbmRleE9mKGxvZ2dlci5tZXRob2RNYXAsIGxldmVsLnRvTG93ZXJDYXNlKCkpO1xuICAgICAgaWYgKGxldmVsTWFwID49IDApIHtcbiAgICAgICAgbGV2ZWwgPSBsZXZlbE1hcDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxldmVsID0gcGFyc2VJbnQobGV2ZWwsIDEwKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbGV2ZWw7XG4gIH0sXG5cbiAgLy8gQ2FuIGJlIG92ZXJyaWRkZW4gaW4gdGhlIGhvc3QgZW52aXJvbm1lbnRcbiAgbG9nOiBmdW5jdGlvbihsZXZlbCwgLi4ubWVzc2FnZSkge1xuICAgIGxldmVsID0gbG9nZ2VyLmxvb2t1cExldmVsKGxldmVsKTtcblxuICAgIGlmIChcbiAgICAgIHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJyAmJlxuICAgICAgbG9nZ2VyLmxvb2t1cExldmVsKGxvZ2dlci5sZXZlbCkgPD0gbGV2ZWxcbiAgICApIHtcbiAgICAgIGxldCBtZXRob2QgPSBsb2dnZXIubWV0aG9kTWFwW2xldmVsXTtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICBpZiAoIWNvbnNvbGVbbWV0aG9kXSkge1xuICAgICAgICBtZXRob2QgPSAnbG9nJztcbiAgICAgIH1cbiAgICAgIGNvbnNvbGVbbWV0aG9kXSguLi5tZXNzYWdlKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlXG4gICAgfVxuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBsb2dnZXI7XG4iXX0=

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/no-conflict.js':
      /*!*********************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/no-conflict.js ***!
  \*********************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (global) {
          exports.__esModule = true;

          exports['default'] = function (Handlebars) {
            /* istanbul ignore next */
            var root = typeof global !== 'undefined' ? global : window,
              $Handlebars = root.Handlebars;
            /* istanbul ignore next */
            Handlebars.noConflict = function () {
              if (root.Handlebars === Handlebars) {
                root.Handlebars = $Handlebars;
              }
              return Handlebars;
            };
          };

          module.exports = exports['default'];
          //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL25vLWNvbmZsaWN0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7cUJBQWUsVUFBUyxVQUFVLEVBQUU7O0FBRWxDLE1BQUksSUFBSSxHQUFHLE9BQU8sTUFBTSxLQUFLLFdBQVcsR0FBRyxNQUFNLEdBQUcsTUFBTTtNQUN4RCxXQUFXLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQzs7QUFFaEMsWUFBVSxDQUFDLFVBQVUsR0FBRyxZQUFXO0FBQ2pDLFFBQUksSUFBSSxDQUFDLFVBQVUsS0FBSyxVQUFVLEVBQUU7QUFDbEMsVUFBSSxDQUFDLFVBQVUsR0FBRyxXQUFXLENBQUM7S0FDL0I7QUFDRCxXQUFPLFVBQVUsQ0FBQztHQUNuQixDQUFDO0NBQ0giLCJmaWxlIjoibm8tY29uZmxpY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihIYW5kbGViYXJzKSB7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIGxldCByb290ID0gdHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyBnbG9iYWwgOiB3aW5kb3csXG4gICAgJEhhbmRsZWJhcnMgPSByb290LkhhbmRsZWJhcnM7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIEhhbmRsZWJhcnMubm9Db25mbGljdCA9IGZ1bmN0aW9uKCkge1xuICAgIGlmIChyb290LkhhbmRsZWJhcnMgPT09IEhhbmRsZWJhcnMpIHtcbiAgICAgIHJvb3QuSGFuZGxlYmFycyA9ICRIYW5kbGViYXJzO1xuICAgIH1cbiAgICByZXR1cm4gSGFuZGxlYmFycztcbiAgfTtcbn1cbiJdfQ==

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/global.js */ '../node_modules/webpack/buildin/global.js'
          )
        ));

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/runtime.js':
      /*!*****************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/runtime.js ***!
  \*****************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        exports.checkRevision = checkRevision;
        exports.template = template;
        exports.wrapProgram = wrapProgram;
        exports.resolvePartial = resolvePartial;
        exports.invokePartial = invokePartial;
        exports.noop = noop;
        // istanbul ignore next

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // istanbul ignore next

        function _interopRequireWildcard(obj) {
          if (obj && obj.__esModule) {
            return obj;
          } else {
            var newObj = {};
            if (obj != null) {
              for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key))
                  newObj[key] = obj[key];
              }
            }
            newObj['default'] = obj;
            return newObj;
          }
        }

        var _utils = __webpack_require__(
          /*! ./utils */ '../node_modules/handlebars/dist/cjs/handlebars/utils.js'
        );

        var Utils = _interopRequireWildcard(_utils);

        var _exception = __webpack_require__(
          /*! ./exception */ '../node_modules/handlebars/dist/cjs/handlebars/exception.js'
        );

        var _exception2 = _interopRequireDefault(_exception);

        var _base = __webpack_require__(
          /*! ./base */ '../node_modules/handlebars/dist/cjs/handlebars/base.js'
        );

        var _helpers = __webpack_require__(
          /*! ./helpers */ '../node_modules/handlebars/dist/cjs/handlebars/helpers.js'
        );

        var _internalWrapHelper = __webpack_require__(
          /*! ./internal/wrapHelper */ '../node_modules/handlebars/dist/cjs/handlebars/internal/wrapHelper.js'
        );

        var _internalProtoAccess = __webpack_require__(
          /*! ./internal/proto-access */ '../node_modules/handlebars/dist/cjs/handlebars/internal/proto-access.js'
        );

        function checkRevision(compilerInfo) {
          var compilerRevision = (compilerInfo && compilerInfo[0]) || 1,
            currentRevision = _base.COMPILER_REVISION;

          if (
            compilerRevision >= _base.LAST_COMPATIBLE_COMPILER_REVISION &&
            compilerRevision <= _base.COMPILER_REVISION
          ) {
            return;
          }

          if (compilerRevision < _base.LAST_COMPATIBLE_COMPILER_REVISION) {
            var runtimeVersions = _base.REVISION_CHANGES[currentRevision],
              compilerVersions = _base.REVISION_CHANGES[compilerRevision];
            throw new _exception2['default'](
              'Template was precompiled with an older version of Handlebars than the current runtime. ' +
                'Please update your precompiler to a newer version (' +
                runtimeVersions +
                ') or downgrade your runtime to an older version (' +
                compilerVersions +
                ').'
            );
          } else {
            // Use the embedded version info since the runtime doesn't know about this revision yet
            throw new _exception2['default'](
              'Template was precompiled with a newer version of Handlebars than the current runtime. ' +
                'Please update your runtime to a newer version (' +
                compilerInfo[1] +
                ').'
            );
          }
        }

        function template(templateSpec, env) {
          /* istanbul ignore next */
          if (!env) {
            throw new _exception2['default'](
              'No environment passed to template'
            );
          }
          if (!templateSpec || !templateSpec.main) {
            throw new _exception2['default'](
              'Unknown template object: ' + typeof templateSpec
            );
          }

          templateSpec.main.decorator = templateSpec.main_d;

          // Note: Using env.VM references rather than local var references throughout this section to allow
          // for external users to override these as pseudo-supported APIs.
          env.VM.checkRevision(templateSpec.compiler);

          // backwards compatibility for precompiled templates with compiler-version 7 (<4.3.0)
          var templateWasPrecompiledWithCompilerV7 =
            templateSpec.compiler && templateSpec.compiler[0] === 7;

          function invokePartialWrapper(partial, context, options) {
            if (options.hash) {
              context = Utils.extend({}, context, options.hash);
              if (options.ids) {
                options.ids[0] = true;
              }
            }
            partial = env.VM.resolvePartial.call(
              this,
              partial,
              context,
              options
            );

            var extendedOptions = Utils.extend({}, options, {
              hooks: this.hooks,
              protoAccessControl: this.protoAccessControl,
            });

            var result = env.VM.invokePartial.call(
              this,
              partial,
              context,
              extendedOptions
            );

            if (result == null && env.compile) {
              options.partials[options.name] = env.compile(
                partial,
                templateSpec.compilerOptions,
                env
              );
              result = options.partials[options.name](context, extendedOptions);
            }
            if (result != null) {
              if (options.indent) {
                var lines = result.split('\n');
                for (var i = 0, l = lines.length; i < l; i++) {
                  if (!lines[i] && i + 1 === l) {
                    break;
                  }

                  lines[i] = options.indent + lines[i];
                }
                result = lines.join('\n');
              }
              return result;
            } else {
              throw new _exception2['default'](
                'The partial ' +
                  options.name +
                  ' could not be compiled when running in runtime-only mode'
              );
            }
          }

          // Just add water
          var container = {
            strict: function strict(obj, name, loc) {
              if (!obj || !(name in obj)) {
                throw new _exception2['default'](
                  '"' + name + '" not defined in ' + obj,
                  {
                    loc: loc,
                  }
                );
              }
              return obj[name];
            },
            lookupProperty: function lookupProperty(parent, propertyName) {
              var result = parent[propertyName];
              if (result == null) {
                return result;
              }
              if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
                return result;
              }

              if (
                _internalProtoAccess.resultIsAllowed(
                  result,
                  container.protoAccessControl,
                  propertyName
                )
              ) {
                return result;
              }
              return undefined;
            },
            lookup: function lookup(depths, name) {
              var len = depths.length;
              for (var i = 0; i < len; i++) {
                var result =
                  depths[i] && container.lookupProperty(depths[i], name);
                if (result != null) {
                  return depths[i][name];
                }
              }
            },
            lambda: function lambda(current, context) {
              return typeof current === 'function'
                ? current.call(context)
                : current;
            },

            escapeExpression: Utils.escapeExpression,
            invokePartial: invokePartialWrapper,

            fn: function fn(i) {
              var ret = templateSpec[i];
              ret.decorator = templateSpec[i + '_d'];
              return ret;
            },

            programs: [],
            program: function program(
              i,
              data,
              declaredBlockParams,
              blockParams,
              depths
            ) {
              var programWrapper = this.programs[i],
                fn = this.fn(i);
              if (data || depths || blockParams || declaredBlockParams) {
                programWrapper = wrapProgram(
                  this,
                  i,
                  fn,
                  data,
                  declaredBlockParams,
                  blockParams,
                  depths
                );
              } else if (!programWrapper) {
                programWrapper = this.programs[i] = wrapProgram(this, i, fn);
              }
              return programWrapper;
            },

            data: function data(value, depth) {
              while (value && depth--) {
                value = value._parent;
              }
              return value;
            },
            mergeIfNeeded: function mergeIfNeeded(param, common) {
              var obj = param || common;

              if (param && common && param !== common) {
                obj = Utils.extend({}, common, param);
              }

              return obj;
            },
            // An empty object to use as replacement for null-contexts
            nullContext: Object.seal({}),

            noop: env.VM.noop,
            compilerInfo: templateSpec.compiler,
          };

          function ret(context) {
            var options =
              arguments.length <= 1 || arguments[1] === undefined
                ? {}
                : arguments[1];

            var data = options.data;

            ret._setup(options);
            if (!options.partial && templateSpec.useData) {
              data = initData(context, data);
            }
            var depths = undefined,
              blockParams = templateSpec.useBlockParams ? [] : undefined;
            if (templateSpec.useDepths) {
              if (options.depths) {
                depths =
                  context != options.depths[0]
                    ? [context].concat(options.depths)
                    : options.depths;
              } else {
                depths = [context];
              }
            }

            function main(context /*, options*/) {
              return (
                '' +
                templateSpec.main(
                  container,
                  context,
                  container.helpers,
                  container.partials,
                  data,
                  blockParams,
                  depths
                )
              );
            }

            main = executeDecorators(
              templateSpec.main,
              main,
              container,
              options.depths || [],
              data,
              blockParams
            );
            return main(context, options);
          }

          ret.isTop = true;

          ret._setup = function (options) {
            if (!options.partial) {
              var mergedHelpers = Utils.extend(
                {},
                env.helpers,
                options.helpers
              );
              wrapHelpersToPassLookupProperty(mergedHelpers, container);
              container.helpers = mergedHelpers;

              if (templateSpec.usePartial) {
                // Use mergeIfNeeded here to prevent compiling global partials multiple times
                container.partials = container.mergeIfNeeded(
                  options.partials,
                  env.partials
                );
              }
              if (templateSpec.usePartial || templateSpec.useDecorators) {
                container.decorators = Utils.extend(
                  {},
                  env.decorators,
                  options.decorators
                );
              }

              container.hooks = {};
              container.protoAccessControl = _internalProtoAccess.createProtoAccessControl(
                options
              );

              var keepHelperInHelpers =
                options.allowCallsToHelperMissing ||
                templateWasPrecompiledWithCompilerV7;
              _helpers.moveHelperToHooks(
                container,
                'helperMissing',
                keepHelperInHelpers
              );
              _helpers.moveHelperToHooks(
                container,
                'blockHelperMissing',
                keepHelperInHelpers
              );
            } else {
              container.protoAccessControl = options.protoAccessControl; // internal option
              container.helpers = options.helpers;
              container.partials = options.partials;
              container.decorators = options.decorators;
              container.hooks = options.hooks;
            }
          };

          ret._child = function (i, data, blockParams, depths) {
            if (templateSpec.useBlockParams && !blockParams) {
              throw new _exception2['default']('must pass block params');
            }
            if (templateSpec.useDepths && !depths) {
              throw new _exception2['default']('must pass parent depths');
            }

            return wrapProgram(
              container,
              i,
              templateSpec[i],
              data,
              0,
              blockParams,
              depths
            );
          };
          return ret;
        }

        function wrapProgram(
          container,
          i,
          fn,
          data,
          declaredBlockParams,
          blockParams,
          depths
        ) {
          function prog(context) {
            var options =
              arguments.length <= 1 || arguments[1] === undefined
                ? {}
                : arguments[1];

            var currentDepths = depths;
            if (
              depths &&
              context != depths[0] &&
              !(context === container.nullContext && depths[0] === null)
            ) {
              currentDepths = [context].concat(depths);
            }

            return fn(
              container,
              context,
              container.helpers,
              container.partials,
              options.data || data,
              blockParams && [options.blockParams].concat(blockParams),
              currentDepths
            );
          }

          prog = executeDecorators(
            fn,
            prog,
            container,
            depths,
            data,
            blockParams
          );

          prog.program = i;
          prog.depth = depths ? depths.length : 0;
          prog.blockParams = declaredBlockParams || 0;
          return prog;
        }

        /**
         * This is currently part of the official API, therefore implementation details should not be changed.
         */

        function resolvePartial(partial, context, options) {
          if (!partial) {
            if (options.name === '@partial-block') {
              partial = options.data['partial-block'];
            } else {
              partial = options.partials[options.name];
            }
          } else if (!partial.call && !options.name) {
            // This is a dynamic partial that returned a string
            options.name = partial;
            partial = options.partials[partial];
          }
          return partial;
        }

        function invokePartial(partial, context, options) {
          // Use the current closure context to save the partial-block if this partial
          var currentPartialBlock =
            options.data && options.data['partial-block'];
          options.partial = true;
          if (options.ids) {
            options.data.contextPath =
              options.ids[0] || options.data.contextPath;
          }

          var partialBlock = undefined;
          if (options.fn && options.fn !== noop) {
            (function () {
              options.data = _base.createFrame(options.data);
              // Wrapper function to get access to currentPartialBlock from the closure
              var fn = options.fn;
              partialBlock = options.data[
                'partial-block'
              ] = function partialBlockWrapper(context) {
                var options =
                  arguments.length <= 1 || arguments[1] === undefined
                    ? {}
                    : arguments[1];

                // Restore the partial-block from the closure for the execution of the block
                // i.e. the part inside the block of the partial call.
                options.data = _base.createFrame(options.data);
                options.data['partial-block'] = currentPartialBlock;
                return fn(context, options);
              };
              if (fn.partials) {
                options.partials = Utils.extend(
                  {},
                  options.partials,
                  fn.partials
                );
              }
            })();
          }

          if (partial === undefined && partialBlock) {
            partial = partialBlock;
          }

          if (partial === undefined) {
            throw new _exception2['default'](
              'The partial ' + options.name + ' could not be found'
            );
          } else if (partial instanceof Function) {
            return partial(context, options);
          }
        }

        function noop() {
          return '';
        }

        function initData(context, data) {
          if (!data || !('root' in data)) {
            data = data ? _base.createFrame(data) : {};
            data.root = context;
          }
          return data;
        }

        function executeDecorators(
          fn,
          prog,
          container,
          depths,
          data,
          blockParams
        ) {
          if (fn.decorator) {
            var props = {};
            prog = fn.decorator(
              prog,
              props,
              container,
              depths && depths[0],
              data,
              blockParams,
              depths
            );
            Utils.extend(prog, props);
          }
          return prog;
        }

        function wrapHelpersToPassLookupProperty(mergedHelpers, container) {
          Object.keys(mergedHelpers).forEach(function (helperName) {
            var helper = mergedHelpers[helperName];
            mergedHelpers[helperName] = passLookupPropertyOption(
              helper,
              container
            );
          });
        }

        function passLookupPropertyOption(helper, container) {
          var lookupProperty = container.lookupProperty;
          return _internalWrapHelper.wrapHelper(helper, function (options) {
            return Utils.extend({ lookupProperty: lookupProperty }, options);
          });
        }
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/safe-string.js':
      /*!*********************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/safe-string.js ***!
  \*********************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        // Build out our basic SafeString type

        exports.__esModule = true;
        function SafeString(string) {
          this.string = string;
        }

        SafeString.prototype.toString = SafeString.prototype.toHTML = function () {
          return '' + this.string;
        };

        exports['default'] = SafeString;
        module.exports = exports['default'];
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL3NhZmUtc3RyaW5nLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxTQUFTLFVBQVUsQ0FBQyxNQUFNLEVBQUU7QUFDMUIsTUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7Q0FDdEI7O0FBRUQsVUFBVSxDQUFDLFNBQVMsQ0FBQyxRQUFRLEdBQUcsVUFBVSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsWUFBVztBQUN2RSxTQUFPLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO0NBQ3pCLENBQUM7O3FCQUVhLFVBQVUiLCJmaWxlIjoic2FmZS1zdHJpbmcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBCdWlsZCBvdXQgb3VyIGJhc2ljIFNhZmVTdHJpbmcgdHlwZVxuZnVuY3Rpb24gU2FmZVN0cmluZyhzdHJpbmcpIHtcbiAgdGhpcy5zdHJpbmcgPSBzdHJpbmc7XG59XG5cblNhZmVTdHJpbmcucHJvdG90eXBlLnRvU3RyaW5nID0gU2FmZVN0cmluZy5wcm90b3R5cGUudG9IVE1MID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiAnJyArIHRoaXMuc3RyaW5nO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgU2FmZVN0cmluZztcbiJdfQ==

        /***/
      },

    /***/ '../node_modules/handlebars/dist/cjs/handlebars/utils.js':
      /*!***************************************************************!*\
  !*** ../node_modules/handlebars/dist/cjs/handlebars/utils.js ***!
  \***************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        exports.extend = extend;
        exports.indexOf = indexOf;
        exports.escapeExpression = escapeExpression;
        exports.isEmpty = isEmpty;
        exports.createFrame = createFrame;
        exports.blockParams = blockParams;
        exports.appendContextPath = appendContextPath;
        var escape = {
          '&': '&amp;',
          '<': '&lt;',
          '>': '&gt;',
          '"': '&quot;',
          "'": '&#x27;',
          '`': '&#x60;',
          '=': '&#x3D;',
        };

        var badChars = /[&<>"'`=]/g,
          possible = /[&<>"'`=]/;

        function escapeChar(chr) {
          return escape[chr];
        }

        function extend(obj /* , ...source */) {
          for (var i = 1; i < arguments.length; i++) {
            for (var key in arguments[i]) {
              if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {
                obj[key] = arguments[i][key];
              }
            }
          }

          return obj;
        }

        var toString = Object.prototype.toString;

        exports.toString = toString;
        // Sourced from lodash
        // https://github.com/bestiejs/lodash/blob/master/LICENSE.txt
        /* eslint-disable func-style */
        var isFunction = function isFunction(value) {
          return typeof value === 'function';
        };
        // fallback for older versions of Chrome and Safari
        /* istanbul ignore next */
        if (isFunction(/x/)) {
          exports.isFunction = isFunction = function (value) {
            return (
              typeof value === 'function' &&
              toString.call(value) === '[object Function]'
            );
          };
        }
        exports.isFunction = isFunction;

        /* eslint-enable func-style */

        /* istanbul ignore next */
        var isArray =
          Array.isArray ||
          function (value) {
            return value && typeof value === 'object'
              ? toString.call(value) === '[object Array]'
              : false;
          };

        exports.isArray = isArray;
        // Older IE versions do not directly support indexOf so we must implement our own, sadly.

        function indexOf(array, value) {
          for (var i = 0, len = array.length; i < len; i++) {
            if (array[i] === value) {
              return i;
            }
          }
          return -1;
        }

        function escapeExpression(string) {
          if (typeof string !== 'string') {
            // don't escape SafeStrings, since they're already safe
            if (string && string.toHTML) {
              return string.toHTML();
            } else if (string == null) {
              return '';
            } else if (!string) {
              return string + '';
            }

            // Force a string conversion as this will be done by the append regardless and
            // the regex test will do this transparently behind the scenes, causing issues if
            // an object's to string has escaped characters in it.
            string = '' + string;
          }

          if (!possible.test(string)) {
            return string;
          }
          return string.replace(badChars, escapeChar);
        }

        function isEmpty(value) {
          if (!value && value !== 0) {
            return true;
          } else if (isArray(value) && value.length === 0) {
            return true;
          } else {
            return false;
          }
        }

        function createFrame(object) {
          var frame = extend({}, object);
          frame._parent = object;
          return frame;
        }

        function blockParams(params, ids) {
          params.path = ids;
          return params;
        }

        function appendContextPath(contextPath, id) {
          return (contextPath ? contextPath + '.' : '') + id;
        }
        //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL3V0aWxzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxJQUFNLE1BQU0sR0FBRztBQUNiLEtBQUcsRUFBRSxPQUFPO0FBQ1osS0FBRyxFQUFFLE1BQU07QUFDWCxLQUFHLEVBQUUsTUFBTTtBQUNYLEtBQUcsRUFBRSxRQUFRO0FBQ2IsS0FBRyxFQUFFLFFBQVE7QUFDYixLQUFHLEVBQUUsUUFBUTtBQUNiLEtBQUcsRUFBRSxRQUFRO0NBQ2QsQ0FBQzs7QUFFRixJQUFNLFFBQVEsR0FBRyxZQUFZO0lBQzNCLFFBQVEsR0FBRyxXQUFXLENBQUM7O0FBRXpCLFNBQVMsVUFBVSxDQUFDLEdBQUcsRUFBRTtBQUN2QixTQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztDQUNwQjs7QUFFTSxTQUFTLE1BQU0sQ0FBQyxHQUFHLG9CQUFvQjtBQUM1QyxPQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsU0FBUyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtBQUN6QyxTQUFLLElBQUksR0FBRyxJQUFJLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUM1QixVQUFJLE1BQU0sQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLEVBQUU7QUFDM0QsV0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztPQUM5QjtLQUNGO0dBQ0Y7O0FBRUQsU0FBTyxHQUFHLENBQUM7Q0FDWjs7QUFFTSxJQUFJLFFBQVEsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQzs7Ozs7O0FBS2hELElBQUksVUFBVSxHQUFHLG9CQUFTLEtBQUssRUFBRTtBQUMvQixTQUFPLE9BQU8sS0FBSyxLQUFLLFVBQVUsQ0FBQztDQUNwQyxDQUFDOzs7QUFHRixJQUFJLFVBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRTtBQUNuQixVQU9PLFVBQVUsR0FQakIsVUFBVSxHQUFHLFVBQVMsS0FBSyxFQUFFO0FBQzNCLFdBQ0UsT0FBTyxLQUFLLEtBQUssVUFBVSxJQUMzQixRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLG1CQUFtQixDQUM1QztHQUNILENBQUM7Q0FDSDtRQUNRLFVBQVUsR0FBVixVQUFVOzs7OztBQUlaLElBQU0sT0FBTyxHQUNsQixLQUFLLENBQUMsT0FBTyxJQUNiLFVBQVMsS0FBSyxFQUFFO0FBQ2QsU0FBTyxLQUFLLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxHQUNyQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLGdCQUFnQixHQUN6QyxLQUFLLENBQUM7Q0FDWCxDQUFDOzs7OztBQUdHLFNBQVMsT0FBTyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUU7QUFDcEMsT0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRTtBQUNoRCxRQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxLQUFLLEVBQUU7QUFDdEIsYUFBTyxDQUFDLENBQUM7S0FDVjtHQUNGO0FBQ0QsU0FBTyxDQUFDLENBQUMsQ0FBQztDQUNYOztBQUVNLFNBQVMsZ0JBQWdCLENBQUMsTUFBTSxFQUFFO0FBQ3ZDLE1BQUksT0FBTyxNQUFNLEtBQUssUUFBUSxFQUFFOztBQUU5QixRQUFJLE1BQU0sSUFBSSxNQUFNLENBQUMsTUFBTSxFQUFFO0FBQzNCLGFBQU8sTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDO0tBQ3hCLE1BQU0sSUFBSSxNQUFNLElBQUksSUFBSSxFQUFFO0FBQ3pCLGFBQU8sRUFBRSxDQUFDO0tBQ1gsTUFBTSxJQUFJLENBQUMsTUFBTSxFQUFFO0FBQ2xCLGFBQU8sTUFBTSxHQUFHLEVBQUUsQ0FBQztLQUNwQjs7Ozs7QUFLRCxVQUFNLEdBQUcsRUFBRSxHQUFHLE1BQU0sQ0FBQztHQUN0Qjs7QUFFRCxNQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRTtBQUMxQixXQUFPLE1BQU0sQ0FBQztHQUNmO0FBQ0QsU0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxVQUFVLENBQUMsQ0FBQztDQUM3Qzs7QUFFTSxTQUFTLE9BQU8sQ0FBQyxLQUFLLEVBQUU7QUFDN0IsTUFBSSxDQUFDLEtBQUssSUFBSSxLQUFLLEtBQUssQ0FBQyxFQUFFO0FBQ3pCLFdBQU8sSUFBSSxDQUFDO0dBQ2IsTUFBTSxJQUFJLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtBQUMvQyxXQUFPLElBQUksQ0FBQztHQUNiLE1BQU07QUFDTCxXQUFPLEtBQUssQ0FBQztHQUNkO0NBQ0Y7O0FBRU0sU0FBUyxXQUFXLENBQUMsTUFBTSxFQUFFO0FBQ2xDLE1BQUksS0FBSyxHQUFHLE1BQU0sQ0FBQyxFQUFFLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDL0IsT0FBSyxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7QUFDdkIsU0FBTyxLQUFLLENBQUM7Q0FDZDs7QUFFTSxTQUFTLFdBQVcsQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFO0FBQ3ZDLFFBQU0sQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDO0FBQ2xCLFNBQU8sTUFBTSxDQUFDO0NBQ2Y7O0FBRU0sU0FBUyxpQkFBaUIsQ0FBQyxXQUFXLEVBQUUsRUFBRSxFQUFFO0FBQ2pELFNBQU8sQ0FBQyxXQUFXLEdBQUcsV0FBVyxHQUFHLEdBQUcsR0FBRyxFQUFFLENBQUEsR0FBSSxFQUFFLENBQUM7Q0FDcEQiLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBlc2NhcGUgPSB7XG4gICcmJzogJyZhbXA7JyxcbiAgJzwnOiAnJmx0OycsXG4gICc+JzogJyZndDsnLFxuICAnXCInOiAnJnF1b3Q7JyxcbiAgXCInXCI6ICcmI3gyNzsnLFxuICAnYCc6ICcmI3g2MDsnLFxuICAnPSc6ICcmI3gzRDsnXG59O1xuXG5jb25zdCBiYWRDaGFycyA9IC9bJjw+XCInYD1dL2csXG4gIHBvc3NpYmxlID0gL1smPD5cIidgPV0vO1xuXG5mdW5jdGlvbiBlc2NhcGVDaGFyKGNocikge1xuICByZXR1cm4gZXNjYXBlW2Nocl07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBleHRlbmQob2JqIC8qICwgLi4uc291cmNlICovKSB7XG4gIGZvciAobGV0IGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgZm9yIChsZXQga2V5IGluIGFyZ3VtZW50c1tpXSkge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhcmd1bWVudHNbaV0sIGtleSkpIHtcbiAgICAgICAgb2JqW2tleV0gPSBhcmd1bWVudHNbaV1ba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG5leHBvcnQgbGV0IHRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcblxuLy8gU291cmNlZCBmcm9tIGxvZGFzaFxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2Jlc3RpZWpzL2xvZGFzaC9ibG9iL21hc3Rlci9MSUNFTlNFLnR4dFxuLyogZXNsaW50LWRpc2FibGUgZnVuYy1zdHlsZSAqL1xubGV0IGlzRnVuY3Rpb24gPSBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nO1xufTtcbi8vIGZhbGxiYWNrIGZvciBvbGRlciB2ZXJzaW9ucyBvZiBDaHJvbWUgYW5kIFNhZmFyaVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbmlmIChpc0Z1bmN0aW9uKC94LykpIHtcbiAgaXNGdW5jdGlvbiA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgICAgdG9TdHJpbmcuY2FsbCh2YWx1ZSkgPT09ICdbb2JqZWN0IEZ1bmN0aW9uXSdcbiAgICApO1xuICB9O1xufVxuZXhwb3J0IHsgaXNGdW5jdGlvbiB9O1xuLyogZXNsaW50LWVuYWJsZSBmdW5jLXN0eWxlICovXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5leHBvcnQgY29uc3QgaXNBcnJheSA9XG4gIEFycmF5LmlzQXJyYXkgfHxcbiAgZnVuY3Rpb24odmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0J1xuICAgICAgPyB0b1N0cmluZy5jYWxsKHZhbHVlKSA9PT0gJ1tvYmplY3QgQXJyYXldJ1xuICAgICAgOiBmYWxzZTtcbiAgfTtcblxuLy8gT2xkZXIgSUUgdmVyc2lvbnMgZG8gbm90IGRpcmVjdGx5IHN1cHBvcnQgaW5kZXhPZiBzbyB3ZSBtdXN0IGltcGxlbWVudCBvdXIgb3duLCBzYWRseS5cbmV4cG9ydCBmdW5jdGlvbiBpbmRleE9mKGFycmF5LCB2YWx1ZSkge1xuICBmb3IgKGxldCBpID0gMCwgbGVuID0gYXJyYXkubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICBpZiAoYXJyYXlbaV0gPT09IHZhbHVlKSB7XG4gICAgICByZXR1cm4gaTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIC0xO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZXNjYXBlRXhwcmVzc2lvbihzdHJpbmcpIHtcbiAgaWYgKHR5cGVvZiBzdHJpbmcgIT09ICdzdHJpbmcnKSB7XG4gICAgLy8gZG9uJ3QgZXNjYXBlIFNhZmVTdHJpbmdzLCBzaW5jZSB0aGV5J3JlIGFscmVhZHkgc2FmZVxuICAgIGlmIChzdHJpbmcgJiYgc3RyaW5nLnRvSFRNTCkge1xuICAgICAgcmV0dXJuIHN0cmluZy50b0hUTUwoKTtcbiAgICB9IGVsc2UgaWYgKHN0cmluZyA9PSBudWxsKSB7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfSBlbHNlIGlmICghc3RyaW5nKSB7XG4gICAgICByZXR1cm4gc3RyaW5nICsgJyc7XG4gICAgfVxuXG4gICAgLy8gRm9yY2UgYSBzdHJpbmcgY29udmVyc2lvbiBhcyB0aGlzIHdpbGwgYmUgZG9uZSBieSB0aGUgYXBwZW5kIHJlZ2FyZGxlc3MgYW5kXG4gICAgLy8gdGhlIHJlZ2V4IHRlc3Qgd2lsbCBkbyB0aGlzIHRyYW5zcGFyZW50bHkgYmVoaW5kIHRoZSBzY2VuZXMsIGNhdXNpbmcgaXNzdWVzIGlmXG4gICAgLy8gYW4gb2JqZWN0J3MgdG8gc3RyaW5nIGhhcyBlc2NhcGVkIGNoYXJhY3RlcnMgaW4gaXQuXG4gICAgc3RyaW5nID0gJycgKyBzdHJpbmc7XG4gIH1cblxuICBpZiAoIXBvc3NpYmxlLnRlc3Qoc3RyaW5nKSkge1xuICAgIHJldHVybiBzdHJpbmc7XG4gIH1cbiAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKGJhZENoYXJzLCBlc2NhcGVDaGFyKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzRW1wdHkodmFsdWUpIHtcbiAgaWYgKCF2YWx1ZSAmJiB2YWx1ZSAhPT0gMCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2UgaWYgKGlzQXJyYXkodmFsdWUpICYmIHZhbHVlLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRnJhbWUob2JqZWN0KSB7XG4gIGxldCBmcmFtZSA9IGV4dGVuZCh7fSwgb2JqZWN0KTtcbiAgZnJhbWUuX3BhcmVudCA9IG9iamVjdDtcbiAgcmV0dXJuIGZyYW1lO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYmxvY2tQYXJhbXMocGFyYW1zLCBpZHMpIHtcbiAgcGFyYW1zLnBhdGggPSBpZHM7XG4gIHJldHVybiBwYXJhbXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhcHBlbmRDb250ZXh0UGF0aChjb250ZXh0UGF0aCwgaWQpIHtcbiAgcmV0dXJuIChjb250ZXh0UGF0aCA/IGNvbnRleHRQYXRoICsgJy4nIDogJycpICsgaWQ7XG59XG4iXX0=

        /***/
      },

    /***/ '../node_modules/hash-base/index.js':
      /*!******************************************!*\
  !*** ../node_modules/hash-base/index.js ***!
  \******************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/hash-base/node_modules/safe-buffer/index.js'
        ).Buffer;
        var Transform = __webpack_require__(
          /*! readable-stream */ '../node_modules/hash-base/node_modules/readable-stream/readable-browser.js'
        ).Transform;
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );

        function throwIfNotStringOrBuffer(val, prefix) {
          if (!Buffer.isBuffer(val) && typeof val !== 'string') {
            throw new TypeError(prefix + ' must be a string or a buffer');
          }
        }

        function HashBase(blockSize) {
          Transform.call(this);

          this._block = Buffer.allocUnsafe(blockSize);
          this._blockSize = blockSize;
          this._blockOffset = 0;
          this._length = [0, 0, 0, 0];

          this._finalized = false;
        }

        inherits(HashBase, Transform);

        HashBase.prototype._transform = function (chunk, encoding, callback) {
          var error = null;
          try {
            this.update(chunk, encoding);
          } catch (err) {
            error = err;
          }

          callback(error);
        };

        HashBase.prototype._flush = function (callback) {
          var error = null;
          try {
            this.push(this.digest());
          } catch (err) {
            error = err;
          }

          callback(error);
        };

        HashBase.prototype.update = function (data, encoding) {
          throwIfNotStringOrBuffer(data, 'Data');
          if (this._finalized) throw new Error('Digest already called');
          if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding);

          // consume data
          var block = this._block;
          var offset = 0;
          while (this._blockOffset + data.length - offset >= this._blockSize) {
            for (var i = this._blockOffset; i < this._blockSize; )
              block[i++] = data[offset++];
            this._update();
            this._blockOffset = 0;
          }
          while (offset < data.length)
            block[this._blockOffset++] = data[offset++];

          // update length
          for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
            this._length[j] += carry;
            carry = (this._length[j] / 0x0100000000) | 0;
            if (carry > 0) this._length[j] -= 0x0100000000 * carry;
          }

          return this;
        };

        HashBase.prototype._update = function () {
          throw new Error('_update is not implemented');
        };

        HashBase.prototype.digest = function (encoding) {
          if (this._finalized) throw new Error('Digest already called');
          this._finalized = true;

          var digest = this._digest();
          if (encoding !== undefined) digest = digest.toString(encoding);

          // reset state
          this._block.fill(0);
          this._blockOffset = 0;
          for (var i = 0; i < 4; ++i) this._length[i] = 0;

          return digest;
        };

        HashBase.prototype._digest = function () {
          throw new Error('_digest is not implemented');
        };

        module.exports = HashBase;

        /***/
      },

    /***/ '../node_modules/hash-base/node_modules/readable-stream/errors-browser.js':
      /*!********************************************************************************!*\
  !*** ../node_modules/hash-base/node_modules/readable-stream/errors-browser.js ***!
  \********************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        function _inheritsLoose(subClass, superClass) {
          subClass.prototype = Object.create(superClass.prototype);
          subClass.prototype.constructor = subClass;
          subClass.__proto__ = superClass;
        }

        var codes = {};

        function createErrorType(code, message, Base) {
          if (!Base) {
            Base = Error;
          }

          function getMessage(arg1, arg2, arg3) {
            if (typeof message === 'string') {
              return message;
            } else {
              return message(arg1, arg2, arg3);
            }
          }

          var NodeError =
            /*#__PURE__*/
            (function (_Base) {
              _inheritsLoose(NodeError, _Base);

              function NodeError(arg1, arg2, arg3) {
                return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;
              }

              return NodeError;
            })(Base);

          NodeError.prototype.name = Base.name;
          NodeError.prototype.code = code;
          codes[code] = NodeError;
        } // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js

        function oneOf(expected, thing) {
          if (Array.isArray(expected)) {
            var len = expected.length;
            expected = expected.map(function (i) {
              return String(i);
            });

            if (len > 2) {
              return (
                'one of '
                  .concat(thing, ' ')
                  .concat(expected.slice(0, len - 1).join(', '), ', or ') +
                expected[len - 1]
              );
            } else if (len === 2) {
              return 'one of '
                .concat(thing, ' ')
                .concat(expected[0], ' or ')
                .concat(expected[1]);
            } else {
              return 'of '.concat(thing, ' ').concat(expected[0]);
            }
          } else {
            return 'of '.concat(thing, ' ').concat(String(expected));
          }
        } // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith

        function startsWith(str, search, pos) {
          return (
            str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search
          );
        } // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith

        function endsWith(str, search, this_len) {
          if (this_len === undefined || this_len > str.length) {
            this_len = str.length;
          }

          return str.substring(this_len - search.length, this_len) === search;
        } // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes

        function includes(str, search, start) {
          if (typeof start !== 'number') {
            start = 0;
          }

          if (start + search.length > str.length) {
            return false;
          } else {
            return str.indexOf(search, start) !== -1;
          }
        }

        createErrorType(
          'ERR_INVALID_OPT_VALUE',
          function (name, value) {
            return (
              'The value "' + value + '" is invalid for option "' + name + '"'
            );
          },
          TypeError
        );
        createErrorType(
          'ERR_INVALID_ARG_TYPE',
          function (name, expected, actual) {
            // determiner: 'must be' or 'must not be'
            var determiner;

            if (typeof expected === 'string' && startsWith(expected, 'not ')) {
              determiner = 'must not be';
              expected = expected.replace(/^not /, '');
            } else {
              determiner = 'must be';
            }

            var msg;

            if (endsWith(name, ' argument')) {
              // For cases like 'first argument'
              msg = 'The '
                .concat(name, ' ')
                .concat(determiner, ' ')
                .concat(oneOf(expected, 'type'));
            } else {
              var type = includes(name, '.') ? 'property' : 'argument';
              msg = 'The "'
                .concat(name, '" ')
                .concat(type, ' ')
                .concat(determiner, ' ')
                .concat(oneOf(expected, 'type'));
            }

            msg += '. Received type '.concat(typeof actual);
            return msg;
          },
          TypeError
        );
        createErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');
        createErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {
          return 'The ' + name + ' method is not implemented';
        });
        createErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');
        createErrorType('ERR_STREAM_DESTROYED', function (name) {
          return 'Cannot call ' + name + ' after a stream was destroyed';
        });
        createErrorType(
          'ERR_MULTIPLE_CALLBACK',
          'Callback called multiple times'
        );
        createErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');
        createErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');
        createErrorType(
          'ERR_STREAM_NULL_VALUES',
          'May not write null values to stream',
          TypeError
        );
        createErrorType(
          'ERR_UNKNOWN_ENCODING',
          function (arg) {
            return 'Unknown encoding: ' + arg;
          },
          TypeError
        );
        createErrorType(
          'ERR_STREAM_UNSHIFT_AFTER_END_EVENT',
          'stream.unshift() after end event'
        );
        module.exports.codes = codes;

        /***/
      },

    /***/ '../node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js':
      /*!************************************************************************************!*\
  !*** ../node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js ***!
  \************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (process) {
          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.
          // a duplex stream is just a stream that is both readable and writable.
          // Since JS doesn't have multiple prototypal inheritance, this class
          // prototypally inherits from Readable, and then parasitically from
          // Writable.

          /*<replacement>*/

          var objectKeys =
            Object.keys ||
            function (obj) {
              var keys = [];

              for (var key in obj) {
                keys.push(key);
              }

              return keys;
            };
          /*</replacement>*/

          module.exports = Duplex;

          var Readable = __webpack_require__(
            /*! ./_stream_readable */ '../node_modules/hash-base/node_modules/readable-stream/lib/_stream_readable.js'
          );

          var Writable = __webpack_require__(
            /*! ./_stream_writable */ '../node_modules/hash-base/node_modules/readable-stream/lib/_stream_writable.js'
          );

          __webpack_require__(
            /*! inherits */ '../node_modules/inherits/inherits_browser.js'
          )(Duplex, Readable);

          {
            // Allow the keys array to be GC'ed.
            var keys = objectKeys(Writable.prototype);

            for (var v = 0; v < keys.length; v++) {
              var method = keys[v];
              if (!Duplex.prototype[method])
                Duplex.prototype[method] = Writable.prototype[method];
            }
          }

          function Duplex(options) {
            if (!(this instanceof Duplex)) return new Duplex(options);
            Readable.call(this, options);
            Writable.call(this, options);
            this.allowHalfOpen = true;

            if (options) {
              if (options.readable === false) this.readable = false;
              if (options.writable === false) this.writable = false;

              if (options.allowHalfOpen === false) {
                this.allowHalfOpen = false;
                this.once('end', onend);
              }
            }
          }

          Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              return this._writableState.highWaterMark;
            },
          });
          Object.defineProperty(Duplex.prototype, 'writableBuffer', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              return this._writableState && this._writableState.getBuffer();
            },
          });
          Object.defineProperty(Duplex.prototype, 'writableLength', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              return this._writableState.length;
            },
          }); // the no-half-open enforcer

          function onend() {
            // If the writable side ended, then we're ok.
            if (this._writableState.ended) return; // no more data can be written.
            // But allow more writes to happen in this tick.

            process.nextTick(onEndNT, this);
          }

          function onEndNT(self) {
            self.end();
          }

          Object.defineProperty(Duplex.prototype, 'destroyed', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              if (
                this._readableState === undefined ||
                this._writableState === undefined
              ) {
                return false;
              }

              return (
                this._readableState.destroyed && this._writableState.destroyed
              );
            },
            set: function set(value) {
              // we ignore the value if the stream
              // has not been initialized yet
              if (
                this._readableState === undefined ||
                this._writableState === undefined
              ) {
                return;
              } // backward compatibility, the user is explicitly
              // managing destroyed

              this._readableState.destroyed = value;
              this._writableState.destroyed = value;
            },
          });
          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../process/browser.js */ '../node_modules/process/browser.js'
          )
        ));

        /***/
      },

    /***/ '../node_modules/hash-base/node_modules/readable-stream/lib/_stream_passthrough.js':
      /*!*****************************************************************************************!*\
  !*** ../node_modules/hash-base/node_modules/readable-stream/lib/_stream_passthrough.js ***!
  \*****************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.
        // a passthrough stream.
        // basically just the most minimal sort of Transform stream.
        // Every written chunk gets output as-is.

        module.exports = PassThrough;

        var Transform = __webpack_require__(
          /*! ./_stream_transform */ '../node_modules/hash-base/node_modules/readable-stream/lib/_stream_transform.js'
        );

        __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        )(PassThrough, Transform);

        function PassThrough(options) {
          if (!(this instanceof PassThrough)) return new PassThrough(options);
          Transform.call(this, options);
        }

        PassThrough.prototype._transform = function (chunk, encoding, cb) {
          cb(null, chunk);
        };

        /***/
      },

    /***/ '../node_modules/hash-base/node_modules/readable-stream/lib/_stream_readable.js':
      /*!**************************************************************************************!*\
  !*** ../node_modules/hash-base/node_modules/readable-stream/lib/_stream_readable.js ***!
  \**************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (global, process) {
          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.

          module.exports = Readable;
          /*<replacement>*/

          var Duplex;
          /*</replacement>*/

          Readable.ReadableState = ReadableState;
          /*<replacement>*/

          var EE = __webpack_require__(
            /*! events */ '../node_modules/events/events.js'
          ).EventEmitter;

          var EElistenerCount = function EElistenerCount(emitter, type) {
            return emitter.listeners(type).length;
          };
          /*</replacement>*/

          /*<replacement>*/

          var Stream = __webpack_require__(
            /*! ./internal/streams/stream */ '../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/stream-browser.js'
          );
          /*</replacement>*/

          var Buffer = __webpack_require__(
            /*! buffer */ '../node_modules/buffer/index.js'
          ).Buffer;

          var OurUint8Array = global.Uint8Array || function () {};

          function _uint8ArrayToBuffer(chunk) {
            return Buffer.from(chunk);
          }

          function _isUint8Array(obj) {
            return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
          }
          /*<replacement>*/

          var debugUtil = __webpack_require__(/*! util */ 1);

          var debug;

          if (debugUtil && debugUtil.debuglog) {
            debug = debugUtil.debuglog('stream');
          } else {
            debug = function debug() {};
          }
          /*</replacement>*/

          var BufferList = __webpack_require__(
            /*! ./internal/streams/buffer_list */ '../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/buffer_list.js'
          );

          var destroyImpl = __webpack_require__(
            /*! ./internal/streams/destroy */ '../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/destroy.js'
          );

          var _require = __webpack_require__(
              /*! ./internal/streams/state */ '../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/state.js'
            ),
            getHighWaterMark = _require.getHighWaterMark;

          var _require$codes = __webpack_require__(
              /*! ../errors */ '../node_modules/hash-base/node_modules/readable-stream/errors-browser.js'
            ).codes,
            ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
            ERR_STREAM_PUSH_AFTER_EOF =
              _require$codes.ERR_STREAM_PUSH_AFTER_EOF,
            ERR_METHOD_NOT_IMPLEMENTED =
              _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
            ERR_STREAM_UNSHIFT_AFTER_END_EVENT =
              _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.

          var StringDecoder;
          var createReadableStreamAsyncIterator;
          var from;

          __webpack_require__(
            /*! inherits */ '../node_modules/inherits/inherits_browser.js'
          )(Readable, Stream);

          var errorOrDestroy = destroyImpl.errorOrDestroy;
          var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

          function prependListener(emitter, event, fn) {
            // Sadly this is not cacheable as some libraries bundle their own
            // event emitter implementation with them.
            if (typeof emitter.prependListener === 'function')
              return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any
            // userland ones.  NEVER DO THIS. This is here only because this code needs
            // to continue to work with older versions of Node.js that do not include
            // the prependListener() method. The goal is to eventually remove this hack.

            if (!emitter._events || !emitter._events[event])
              emitter.on(event, fn);
            else if (Array.isArray(emitter._events[event]))
              emitter._events[event].unshift(fn);
            else emitter._events[event] = [fn, emitter._events[event]];
          }

          function ReadableState(options, stream, isDuplex) {
            Duplex =
              Duplex ||
              __webpack_require__(
                /*! ./_stream_duplex */ '../node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js'
              );
            options = options || {}; // Duplex streams are both readable and writable, but share
            // the same options object.
            // However, some cases require setting options to different
            // values for the readable and the writable sides of the duplex stream.
            // These options can be provided separately as readableXXX and writableXXX.

            if (typeof isDuplex !== 'boolean')
              isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to
            // make all the buffer merging and length checks go away

            this.objectMode = !!options.objectMode;
            if (isDuplex)
              this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer
            // Note: 0 is a valid value, means "don't call _read preemptively ever"

            this.highWaterMark = getHighWaterMark(
              this,
              options,
              'readableHighWaterMark',
              isDuplex
            ); // A linked list is used to store data chunks instead of an array because the
            // linked list can remove elements from the beginning faster than
            // array.shift()

            this.buffer = new BufferList();
            this.length = 0;
            this.pipes = null;
            this.pipesCount = 0;
            this.flowing = null;
            this.ended = false;
            this.endEmitted = false;
            this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted
            // immediately, or on a later tick.  We set this to true at first, because
            // any actions that shouldn't happen until "later" should generally also
            // not happen before the first read call.

            this.sync = true; // whenever we return null, then we set a flag to say
            // that we're awaiting a 'readable' event emission.

            this.needReadable = false;
            this.emittedReadable = false;
            this.readableListening = false;
            this.resumeScheduled = false;
            this.paused = true; // Should close be emitted on destroy. Defaults to true.

            this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')

            this.autoDestroy = !!options.autoDestroy; // has it been destroyed

            this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string
            // encoding is 'binary' so we have to make this configurable.
            // Everything else in the universe uses 'utf8', though.

            this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s

            this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled

            this.readingMore = false;
            this.decoder = null;
            this.encoding = null;

            if (options.encoding) {
              if (!StringDecoder)
                StringDecoder = __webpack_require__(
                  /*! string_decoder/ */ '../node_modules/string_decoder/lib/string_decoder.js'
                ).StringDecoder;
              this.decoder = new StringDecoder(options.encoding);
              this.encoding = options.encoding;
            }
          }

          function Readable(options) {
            Duplex =
              Duplex ||
              __webpack_require__(
                /*! ./_stream_duplex */ '../node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js'
              );
            if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside
            // the ReadableState constructor, at least with V8 6.5

            var isDuplex = this instanceof Duplex;
            this._readableState = new ReadableState(options, this, isDuplex); // legacy

            this.readable = true;

            if (options) {
              if (typeof options.read === 'function') this._read = options.read;
              if (typeof options.destroy === 'function')
                this._destroy = options.destroy;
            }

            Stream.call(this);
          }

          Object.defineProperty(Readable.prototype, 'destroyed', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              if (this._readableState === undefined) {
                return false;
              }

              return this._readableState.destroyed;
            },
            set: function set(value) {
              // we ignore the value if the stream
              // has not been initialized yet
              if (!this._readableState) {
                return;
              } // backward compatibility, the user is explicitly
              // managing destroyed

              this._readableState.destroyed = value;
            },
          });
          Readable.prototype.destroy = destroyImpl.destroy;
          Readable.prototype._undestroy = destroyImpl.undestroy;

          Readable.prototype._destroy = function (err, cb) {
            cb(err);
          }; // Manually shove something into the read() buffer.
          // This returns true if the highWaterMark has not been hit yet,
          // similar to how Writable.write() returns true if you should
          // write() some more.

          Readable.prototype.push = function (chunk, encoding) {
            var state = this._readableState;
            var skipChunkCheck;

            if (!state.objectMode) {
              if (typeof chunk === 'string') {
                encoding = encoding || state.defaultEncoding;

                if (encoding !== state.encoding) {
                  chunk = Buffer.from(chunk, encoding);
                  encoding = '';
                }

                skipChunkCheck = true;
              }
            } else {
              skipChunkCheck = true;
            }

            return readableAddChunk(
              this,
              chunk,
              encoding,
              false,
              skipChunkCheck
            );
          }; // Unshift should *always* be something directly out of read()

          Readable.prototype.unshift = function (chunk) {
            return readableAddChunk(this, chunk, null, true, false);
          };

          function readableAddChunk(
            stream,
            chunk,
            encoding,
            addToFront,
            skipChunkCheck
          ) {
            debug('readableAddChunk', chunk);
            var state = stream._readableState;

            if (chunk === null) {
              state.reading = false;
              onEofChunk(stream, state);
            } else {
              var er;
              if (!skipChunkCheck) er = chunkInvalid(state, chunk);

              if (er) {
                errorOrDestroy(stream, er);
              } else if (state.objectMode || (chunk && chunk.length > 0)) {
                if (
                  typeof chunk !== 'string' &&
                  !state.objectMode &&
                  Object.getPrototypeOf(chunk) !== Buffer.prototype
                ) {
                  chunk = _uint8ArrayToBuffer(chunk);
                }

                if (addToFront) {
                  if (state.endEmitted)
                    errorOrDestroy(
                      stream,
                      new ERR_STREAM_UNSHIFT_AFTER_END_EVENT()
                    );
                  else addChunk(stream, state, chunk, true);
                } else if (state.ended) {
                  errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
                } else if (state.destroyed) {
                  return false;
                } else {
                  state.reading = false;

                  if (state.decoder && !encoding) {
                    chunk = state.decoder.write(chunk);
                    if (state.objectMode || chunk.length !== 0)
                      addChunk(stream, state, chunk, false);
                    else maybeReadMore(stream, state);
                  } else {
                    addChunk(stream, state, chunk, false);
                  }
                }
              } else if (!addToFront) {
                state.reading = false;
                maybeReadMore(stream, state);
              }
            } // We can push more data if we are below the highWaterMark.
            // Also, if we have no data yet, we can stand some more bytes.
            // This is to work around cases where hwm=0, such as the repl.

            return (
              !state.ended &&
              (state.length < state.highWaterMark || state.length === 0)
            );
          }

          function addChunk(stream, state, chunk, addToFront) {
            if (state.flowing && state.length === 0 && !state.sync) {
              state.awaitDrain = 0;
              stream.emit('data', chunk);
            } else {
              // update the buffer info.
              state.length += state.objectMode ? 1 : chunk.length;
              if (addToFront) state.buffer.unshift(chunk);
              else state.buffer.push(chunk);
              if (state.needReadable) emitReadable(stream);
            }

            maybeReadMore(stream, state);
          }

          function chunkInvalid(state, chunk) {
            var er;

            if (
              !_isUint8Array(chunk) &&
              typeof chunk !== 'string' &&
              chunk !== undefined &&
              !state.objectMode
            ) {
              er = new ERR_INVALID_ARG_TYPE(
                'chunk',
                ['string', 'Buffer', 'Uint8Array'],
                chunk
              );
            }

            return er;
          }

          Readable.prototype.isPaused = function () {
            return this._readableState.flowing === false;
          }; // backwards compatibility.

          Readable.prototype.setEncoding = function (enc) {
            if (!StringDecoder)
              StringDecoder = __webpack_require__(
                /*! string_decoder/ */ '../node_modules/string_decoder/lib/string_decoder.js'
              ).StringDecoder;
            var decoder = new StringDecoder(enc);
            this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8

            this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:

            var p = this._readableState.buffer.head;
            var content = '';

            while (p !== null) {
              content += decoder.write(p.data);
              p = p.next;
            }

            this._readableState.buffer.clear();

            if (content !== '') this._readableState.buffer.push(content);
            this._readableState.length = content.length;
            return this;
          }; // Don't raise the hwm > 1GB

          var MAX_HWM = 0x40000000;

          function computeNewHighWaterMark(n) {
            if (n >= MAX_HWM) {
              // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.
              n = MAX_HWM;
            } else {
              // Get the next highest power of 2 to prevent increasing hwm excessively in
              // tiny amounts
              n--;
              n |= n >>> 1;
              n |= n >>> 2;
              n |= n >>> 4;
              n |= n >>> 8;
              n |= n >>> 16;
              n++;
            }

            return n;
          } // This function is designed to be inlinable, so please take care when making
          // changes to the function body.

          function howMuchToRead(n, state) {
            if (n <= 0 || (state.length === 0 && state.ended)) return 0;
            if (state.objectMode) return 1;

            if (n !== n) {
              // Only flow one buffer at a time
              if (state.flowing && state.length)
                return state.buffer.head.data.length;
              else return state.length;
            } // If we're asking for more than the current hwm, then raise the hwm.

            if (n > state.highWaterMark)
              state.highWaterMark = computeNewHighWaterMark(n);
            if (n <= state.length) return n; // Don't have enough

            if (!state.ended) {
              state.needReadable = true;
              return 0;
            }

            return state.length;
          } // you can override either this method, or the async _read(n) below.

          Readable.prototype.read = function (n) {
            debug('read', n);
            n = parseInt(n, 10);
            var state = this._readableState;
            var nOrig = n;
            if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we
            // already have a bunch of data in the buffer, then just trigger
            // the 'readable' event and move on.

            if (
              n === 0 &&
              state.needReadable &&
              ((state.highWaterMark !== 0
                ? state.length >= state.highWaterMark
                : state.length > 0) ||
                state.ended)
            ) {
              debug('read: emitReadable', state.length, state.ended);
              if (state.length === 0 && state.ended) endReadable(this);
              else emitReadable(this);
              return null;
            }

            n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.

            if (n === 0 && state.ended) {
              if (state.length === 0) endReadable(this);
              return null;
            } // All the actual chunk generation logic needs to be
            // *below* the call to _read.  The reason is that in certain
            // synthetic stream cases, such as passthrough streams, _read
            // may be a completely synchronous operation which may change
            // the state of the read buffer, providing enough data when
            // before there was *not* enough.
            //
            // So, the steps are:
            // 1. Figure out what the state of things will be after we do
            // a read from the buffer.
            //
            // 2. If that resulting state will trigger a _read, then call _read.
            // Note that this may be asynchronous, or synchronous.  Yes, it is
            // deeply ugly to write APIs this way, but that still doesn't mean
            // that the Readable class should behave improperly, as streams are
            // designed to be sync/async agnostic.
            // Take note if the _read call is sync or async (ie, if the read call
            // has returned yet), so that we know whether or not it's safe to emit
            // 'readable' etc.
            //
            // 3. Actually pull the requested chunks out of the buffer and return.
            // if we need a readable event, then we need to do some reading.

            var doRead = state.needReadable;
            debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some

            if (state.length === 0 || state.length - n < state.highWaterMark) {
              doRead = true;
              debug('length less than watermark', doRead);
            } // however, if we've ended, then there's no point, and if we're already
            // reading, then it's unnecessary.

            if (state.ended || state.reading) {
              doRead = false;
              debug('reading or ended', doRead);
            } else if (doRead) {
              debug('do read');
              state.reading = true;
              state.sync = true; // if the length is currently zero, then we *need* a readable event.

              if (state.length === 0) state.needReadable = true; // call internal read method

              this._read(state.highWaterMark);

              state.sync = false; // If _read pushed data synchronously, then `reading` will be false,
              // and we need to re-evaluate how much data we can return to the user.

              if (!state.reading) n = howMuchToRead(nOrig, state);
            }

            var ret;
            if (n > 0) ret = fromList(n, state);
            else ret = null;

            if (ret === null) {
              state.needReadable = state.length <= state.highWaterMark;
              n = 0;
            } else {
              state.length -= n;
              state.awaitDrain = 0;
            }

            if (state.length === 0) {
              // If we have nothing in the buffer, then we want to know
              // as soon as we *do* get something into the buffer.
              if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.

              if (nOrig !== n && state.ended) endReadable(this);
            }

            if (ret !== null) this.emit('data', ret);
            return ret;
          };

          function onEofChunk(stream, state) {
            debug('onEofChunk');
            if (state.ended) return;

            if (state.decoder) {
              var chunk = state.decoder.end();

              if (chunk && chunk.length) {
                state.buffer.push(chunk);
                state.length += state.objectMode ? 1 : chunk.length;
              }
            }

            state.ended = true;

            if (state.sync) {
              // if we are sync, wait until next tick to emit the data.
              // Otherwise we risk emitting data in the flow()
              // the readable code triggers during a read() call
              emitReadable(stream);
            } else {
              // emit 'readable' now to make sure it gets picked up.
              state.needReadable = false;

              if (!state.emittedReadable) {
                state.emittedReadable = true;
                emitReadable_(stream);
              }
            }
          } // Don't emit readable right away in sync mode, because this can trigger
          // another read() call => stack overflow.  This way, it might trigger
          // a nextTick recursion warning, but that's not so bad.

          function emitReadable(stream) {
            var state = stream._readableState;
            debug('emitReadable', state.needReadable, state.emittedReadable);
            state.needReadable = false;

            if (!state.emittedReadable) {
              debug('emitReadable', state.flowing);
              state.emittedReadable = true;
              process.nextTick(emitReadable_, stream);
            }
          }

          function emitReadable_(stream) {
            var state = stream._readableState;
            debug('emitReadable_', state.destroyed, state.length, state.ended);

            if (!state.destroyed && (state.length || state.ended)) {
              stream.emit('readable');
              state.emittedReadable = false;
            } // The stream needs another readable event if
            // 1. It is not flowing, as the flow mechanism will take
            //    care of it.
            // 2. It is not ended.
            // 3. It is below the highWaterMark, so we can schedule
            //    another readable later.

            state.needReadable =
              !state.flowing &&
              !state.ended &&
              state.length <= state.highWaterMark;
            flow(stream);
          } // at this point, the user has presumably seen the 'readable' event,
          // and called read() to consume some data.  that may have triggered
          // in turn another _read(n) call, in which case reading = true if
          // it's in progress.
          // However, if we're not ended, or reading, and the length < hwm,
          // then go ahead and try to read some more preemptively.

          function maybeReadMore(stream, state) {
            if (!state.readingMore) {
              state.readingMore = true;
              process.nextTick(maybeReadMore_, stream, state);
            }
          }

          function maybeReadMore_(stream, state) {
            // Attempt to read more data if we should.
            //
            // The conditions for reading more data are (one of):
            // - Not enough data buffered (state.length < state.highWaterMark). The loop
            //   is responsible for filling the buffer with enough data if such data
            //   is available. If highWaterMark is 0 and we are not in the flowing mode
            //   we should _not_ attempt to buffer any extra data. We'll get more data
            //   when the stream consumer calls read() instead.
            // - No data in the buffer, and the stream is in flowing mode. In this mode
            //   the loop below is responsible for ensuring read() is called. Failing to
            //   call read here would abort the flow and there's no other mechanism for
            //   continuing the flow if the stream consumer has just subscribed to the
            //   'data' event.
            //
            // In addition to the above conditions to keep reading data, the following
            // conditions prevent the data from being read:
            // - The stream has ended (state.ended).
            // - There is already a pending 'read' operation (state.reading). This is a
            //   case where the the stream has called the implementation defined _read()
            //   method, but they are processing the call asynchronously and have _not_
            //   called push() with new data. In this case we skip performing more
            //   read()s. The execution ends in this method again after the _read() ends
            //   up calling push() with more data.
            while (
              !state.reading &&
              !state.ended &&
              (state.length < state.highWaterMark ||
                (state.flowing && state.length === 0))
            ) {
              var len = state.length;
              debug('maybeReadMore read 0');
              stream.read(0);
              if (len === state.length)
                // didn't get any data, stop spinning.
                break;
            }

            state.readingMore = false;
          } // abstract method.  to be overridden in specific implementation classes.
          // call cb(er, data) where data is <= n in length.
          // for virtual (non-string, non-buffer) streams, "length" is somewhat
          // arbitrary, and perhaps not very meaningful.

          Readable.prototype._read = function (n) {
            errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));
          };

          Readable.prototype.pipe = function (dest, pipeOpts) {
            var src = this;
            var state = this._readableState;

            switch (state.pipesCount) {
              case 0:
                state.pipes = dest;
                break;

              case 1:
                state.pipes = [state.pipes, dest];
                break;

              default:
                state.pipes.push(dest);
                break;
            }

            state.pipesCount += 1;
            debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
            var doEnd =
              (!pipeOpts || pipeOpts.end !== false) &&
              dest !== process.stdout &&
              dest !== process.stderr;
            var endFn = doEnd ? onend : unpipe;
            if (state.endEmitted) process.nextTick(endFn);
            else src.once('end', endFn);
            dest.on('unpipe', onunpipe);

            function onunpipe(readable, unpipeInfo) {
              debug('onunpipe');

              if (readable === src) {
                if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
                  unpipeInfo.hasUnpiped = true;
                  cleanup();
                }
              }
            }

            function onend() {
              debug('onend');
              dest.end();
            } // when the dest drains, it reduces the awaitDrain counter
            // on the source.  This would be more elegant with a .once()
            // handler in flow(), but adding and removing repeatedly is
            // too slow.

            var ondrain = pipeOnDrain(src);
            dest.on('drain', ondrain);
            var cleanedUp = false;

            function cleanup() {
              debug('cleanup'); // cleanup event handlers once the pipe is broken

              dest.removeListener('close', onclose);
              dest.removeListener('finish', onfinish);
              dest.removeListener('drain', ondrain);
              dest.removeListener('error', onerror);
              dest.removeListener('unpipe', onunpipe);
              src.removeListener('end', onend);
              src.removeListener('end', unpipe);
              src.removeListener('data', ondata);
              cleanedUp = true; // if the reader is waiting for a drain event from this
              // specific writer, then it would cause it to never start
              // flowing again.
              // So, if this is awaiting a drain, then we just call it now.
              // If we don't know, then assume that we are waiting for one.

              if (
                state.awaitDrain &&
                (!dest._writableState || dest._writableState.needDrain)
              )
                ondrain();
            }

            src.on('data', ondata);

            function ondata(chunk) {
              debug('ondata');
              var ret = dest.write(chunk);
              debug('dest.write', ret);

              if (ret === false) {
                // If the user unpiped during `dest.write()`, it is possible
                // to get stuck in a permanently paused state if that write
                // also returned false.
                // => Check whether `dest` is still a piping destination.
                if (
                  ((state.pipesCount === 1 && state.pipes === dest) ||
                    (state.pipesCount > 1 &&
                      indexOf(state.pipes, dest) !== -1)) &&
                  !cleanedUp
                ) {
                  debug('false write response, pause', state.awaitDrain);
                  state.awaitDrain++;
                }

                src.pause();
              }
            } // if the dest has an error, then stop piping into it.
            // however, don't suppress the throwing behavior for this.

            function onerror(er) {
              debug('onerror', er);
              unpipe();
              dest.removeListener('error', onerror);
              if (EElistenerCount(dest, 'error') === 0)
                errorOrDestroy(dest, er);
            } // Make sure our error handler is attached before userland ones.

            prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.

            function onclose() {
              dest.removeListener('finish', onfinish);
              unpipe();
            }

            dest.once('close', onclose);

            function onfinish() {
              debug('onfinish');
              dest.removeListener('close', onclose);
              unpipe();
            }

            dest.once('finish', onfinish);

            function unpipe() {
              debug('unpipe');
              src.unpipe(dest);
            } // tell the dest that it's being piped to

            dest.emit('pipe', src); // start the flow if it hasn't been started already.

            if (!state.flowing) {
              debug('pipe resume');
              src.resume();
            }

            return dest;
          };

          function pipeOnDrain(src) {
            return function pipeOnDrainFunctionResult() {
              var state = src._readableState;
              debug('pipeOnDrain', state.awaitDrain);
              if (state.awaitDrain) state.awaitDrain--;

              if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
                state.flowing = true;
                flow(src);
              }
            };
          }

          Readable.prototype.unpipe = function (dest) {
            var state = this._readableState;
            var unpipeInfo = {
              hasUnpiped: false,
            }; // if we're not piping anywhere, then do nothing.

            if (state.pipesCount === 0) return this; // just one destination.  most common case.

            if (state.pipesCount === 1) {
              // passed in one, but it's not the right one.
              if (dest && dest !== state.pipes) return this;
              if (!dest) dest = state.pipes; // got a match.

              state.pipes = null;
              state.pipesCount = 0;
              state.flowing = false;
              if (dest) dest.emit('unpipe', this, unpipeInfo);
              return this;
            } // slow case. multiple pipe destinations.

            if (!dest) {
              // remove all.
              var dests = state.pipes;
              var len = state.pipesCount;
              state.pipes = null;
              state.pipesCount = 0;
              state.flowing = false;

              for (var i = 0; i < len; i++) {
                dests[i].emit('unpipe', this, {
                  hasUnpiped: false,
                });
              }

              return this;
            } // try to find the right one.

            var index = indexOf(state.pipes, dest);
            if (index === -1) return this;
            state.pipes.splice(index, 1);
            state.pipesCount -= 1;
            if (state.pipesCount === 1) state.pipes = state.pipes[0];
            dest.emit('unpipe', this, unpipeInfo);
            return this;
          }; // set up data events if they are asked for
          // Ensure readable listeners eventually get something

          Readable.prototype.on = function (ev, fn) {
            var res = Stream.prototype.on.call(this, ev, fn);
            var state = this._readableState;

            if (ev === 'data') {
              // update readableListening so that resume() may be a no-op
              // a few lines down. This is needed to support once('readable').
              state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused

              if (state.flowing !== false) this.resume();
            } else if (ev === 'readable') {
              if (!state.endEmitted && !state.readableListening) {
                state.readableListening = state.needReadable = true;
                state.flowing = false;
                state.emittedReadable = false;
                debug('on readable', state.length, state.reading);

                if (state.length) {
                  emitReadable(this);
                } else if (!state.reading) {
                  process.nextTick(nReadingNextTick, this);
                }
              }
            }

            return res;
          };

          Readable.prototype.addListener = Readable.prototype.on;

          Readable.prototype.removeListener = function (ev, fn) {
            var res = Stream.prototype.removeListener.call(this, ev, fn);

            if (ev === 'readable') {
              // We need to check if there is someone still listening to
              // readable and reset the state. However this needs to happen
              // after readable has been emitted but before I/O (nextTick) to
              // support once('readable', fn) cycles. This means that calling
              // resume within the same tick will have no
              // effect.
              process.nextTick(updateReadableListening, this);
            }

            return res;
          };

          Readable.prototype.removeAllListeners = function (ev) {
            var res = Stream.prototype.removeAllListeners.apply(
              this,
              arguments
            );

            if (ev === 'readable' || ev === undefined) {
              // We need to check if there is someone still listening to
              // readable and reset the state. However this needs to happen
              // after readable has been emitted but before I/O (nextTick) to
              // support once('readable', fn) cycles. This means that calling
              // resume within the same tick will have no
              // effect.
              process.nextTick(updateReadableListening, this);
            }

            return res;
          };

          function updateReadableListening(self) {
            var state = self._readableState;
            state.readableListening = self.listenerCount('readable') > 0;

            if (state.resumeScheduled && !state.paused) {
              // flowing needs to be set to true now, otherwise
              // the upcoming resume will not flow.
              state.flowing = true; // crude way to check if we should resume
            } else if (self.listenerCount('data') > 0) {
              self.resume();
            }
          }

          function nReadingNextTick(self) {
            debug('readable nexttick read 0');
            self.read(0);
          } // pause() and resume() are remnants of the legacy readable stream API
          // If the user uses them, then switch into old mode.

          Readable.prototype.resume = function () {
            var state = this._readableState;

            if (!state.flowing) {
              debug('resume'); // we flow only if there is no one listening
              // for readable, but we still have to call
              // resume()

              state.flowing = !state.readableListening;
              resume(this, state);
            }

            state.paused = false;
            return this;
          };

          function resume(stream, state) {
            if (!state.resumeScheduled) {
              state.resumeScheduled = true;
              process.nextTick(resume_, stream, state);
            }
          }

          function resume_(stream, state) {
            debug('resume', state.reading);

            if (!state.reading) {
              stream.read(0);
            }

            state.resumeScheduled = false;
            stream.emit('resume');
            flow(stream);
            if (state.flowing && !state.reading) stream.read(0);
          }

          Readable.prototype.pause = function () {
            debug('call pause flowing=%j', this._readableState.flowing);

            if (this._readableState.flowing !== false) {
              debug('pause');
              this._readableState.flowing = false;
              this.emit('pause');
            }

            this._readableState.paused = true;
            return this;
          };

          function flow(stream) {
            var state = stream._readableState;
            debug('flow', state.flowing);

            while (state.flowing && stream.read() !== null) {}
          } // wrap an old-style stream as the async data source.
          // This is *not* part of the readable stream interface.
          // It is an ugly unfortunate mess of history.

          Readable.prototype.wrap = function (stream) {
            var _this = this;

            var state = this._readableState;
            var paused = false;
            stream.on('end', function () {
              debug('wrapped end');

              if (state.decoder && !state.ended) {
                var chunk = state.decoder.end();
                if (chunk && chunk.length) _this.push(chunk);
              }

              _this.push(null);
            });
            stream.on('data', function (chunk) {
              debug('wrapped data');
              if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode

              if (state.objectMode && (chunk === null || chunk === undefined))
                return;
              else if (!state.objectMode && (!chunk || !chunk.length)) return;

              var ret = _this.push(chunk);

              if (!ret) {
                paused = true;
                stream.pause();
              }
            }); // proxy all the other methods.
            // important when wrapping filters and duplexes.

            for (var i in stream) {
              if (this[i] === undefined && typeof stream[i] === 'function') {
                this[i] = (function methodWrap(method) {
                  return function methodWrapReturnFunction() {
                    return stream[method].apply(stream, arguments);
                  };
                })(i);
              }
            } // proxy certain important events.

            for (var n = 0; n < kProxyEvents.length; n++) {
              stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
            } // when we try to consume some more bytes, simply unpause the
            // underlying stream.

            this._read = function (n) {
              debug('wrapped _read', n);

              if (paused) {
                paused = false;
                stream.resume();
              }
            };

            return this;
          };

          if (typeof Symbol === 'function') {
            Readable.prototype[Symbol.asyncIterator] = function () {
              if (createReadableStreamAsyncIterator === undefined) {
                createReadableStreamAsyncIterator = __webpack_require__(
                  /*! ./internal/streams/async_iterator */ '../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/async_iterator.js'
                );
              }

              return createReadableStreamAsyncIterator(this);
            };
          }

          Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              return this._readableState.highWaterMark;
            },
          });
          Object.defineProperty(Readable.prototype, 'readableBuffer', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              return this._readableState && this._readableState.buffer;
            },
          });
          Object.defineProperty(Readable.prototype, 'readableFlowing', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              return this._readableState.flowing;
            },
            set: function set(state) {
              if (this._readableState) {
                this._readableState.flowing = state;
              }
            },
          }); // exposed for testing purposes only.

          Readable._fromList = fromList;
          Object.defineProperty(Readable.prototype, 'readableLength', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              return this._readableState.length;
            },
          }); // Pluck off n bytes from an array of buffers.
          // Length is the combined lengths of all the buffers in the list.
          // This function is designed to be inlinable, so please take care when making
          // changes to the function body.

          function fromList(n, state) {
            // nothing buffered
            if (state.length === 0) return null;
            var ret;
            if (state.objectMode) ret = state.buffer.shift();
            else if (!n || n >= state.length) {
              // read it all, truncate the list
              if (state.decoder) ret = state.buffer.join('');
              else if (state.buffer.length === 1) ret = state.buffer.first();
              else ret = state.buffer.concat(state.length);
              state.buffer.clear();
            } else {
              // read part of list
              ret = state.buffer.consume(n, state.decoder);
            }
            return ret;
          }

          function endReadable(stream) {
            var state = stream._readableState;
            debug('endReadable', state.endEmitted);

            if (!state.endEmitted) {
              state.ended = true;
              process.nextTick(endReadableNT, state, stream);
            }
          }

          function endReadableNT(state, stream) {
            debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.

            if (!state.endEmitted && state.length === 0) {
              state.endEmitted = true;
              stream.readable = false;
              stream.emit('end');

              if (state.autoDestroy) {
                // In case of duplex streams we need a way to detect
                // if the writable side is ready for autoDestroy as well
                var wState = stream._writableState;

                if (!wState || (wState.autoDestroy && wState.finished)) {
                  stream.destroy();
                }
              }
            }
          }

          if (typeof Symbol === 'function') {
            Readable.from = function (iterable, opts) {
              if (from === undefined) {
                from = __webpack_require__(
                  /*! ./internal/streams/from */ '../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/from-browser.js'
                );
              }

              return from(Readable, iterable, opts);
            };
          }

          function indexOf(xs, x) {
            for (var i = 0, l = xs.length; i < l; i++) {
              if (xs[i] === x) return i;
            }

            return -1;
          }
          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/global.js */ '../node_modules/webpack/buildin/global.js'
          ),
          __webpack_require__(
            /*! ./../../../../process/browser.js */ '../node_modules/process/browser.js'
          )
        ));

        /***/
      },

    /***/ '../node_modules/hash-base/node_modules/readable-stream/lib/_stream_transform.js':
      /*!***************************************************************************************!*\
  !*** ../node_modules/hash-base/node_modules/readable-stream/lib/_stream_transform.js ***!
  \***************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.
        // a transform stream is a readable/writable stream where you do
        // something with the data.  Sometimes it's called a "filter",
        // but that's not a great name for it, since that implies a thing where
        // some bits pass through, and others are simply ignored.  (That would
        // be a valid example of a transform, of course.)
        //
        // While the output is causally related to the input, it's not a
        // necessarily symmetric or synchronous transformation.  For example,
        // a zlib stream might take multiple plain-text writes(), and then
        // emit a single compressed chunk some time in the future.
        //
        // Here's how this works:
        //
        // The Transform stream has all the aspects of the readable and writable
        // stream classes.  When you write(chunk), that calls _write(chunk,cb)
        // internally, and returns false if there's a lot of pending writes
        // buffered up.  When you call read(), that calls _read(n) until
        // there's enough pending readable data buffered up.
        //
        // In a transform stream, the written data is placed in a buffer.  When
        // _read(n) is called, it transforms the queued up data, calling the
        // buffered _write cb's as it consumes chunks.  If consuming a single
        // written chunk would result in multiple output chunks, then the first
        // outputted bit calls the readcb, and subsequent chunks just go into
        // the read buffer, and will cause it to emit 'readable' if necessary.
        //
        // This way, back-pressure is actually determined by the reading side,
        // since _read has to be called to start processing a new chunk.  However,
        // a pathological inflate type of transform can cause excessive buffering
        // here.  For example, imagine a stream where every byte of input is
        // interpreted as an integer from 0-255, and then results in that many
        // bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
        // 1kb of data being output.  In this case, you could write a very small
        // amount of input, and end up with a very large amount of output.  In
        // such a pathological inflating mechanism, there'd be no way to tell
        // the system to stop doing the transform.  A single 4MB write could
        // cause the system to run out of memory.
        //
        // However, even in such a pathological case, only a single written chunk
        // would be consumed, and then the rest would wait (un-transformed) until
        // the results of the previous transformed chunk were consumed.

        module.exports = Transform;

        var _require$codes = __webpack_require__(
            /*! ../errors */ '../node_modules/hash-base/node_modules/readable-stream/errors-browser.js'
          ).codes,
          ERR_METHOD_NOT_IMPLEMENTED =
            _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
          ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
          ERR_TRANSFORM_ALREADY_TRANSFORMING =
            _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,
          ERR_TRANSFORM_WITH_LENGTH_0 =
            _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;

        var Duplex = __webpack_require__(
          /*! ./_stream_duplex */ '../node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js'
        );

        __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        )(Transform, Duplex);

        function afterTransform(er, data) {
          var ts = this._transformState;
          ts.transforming = false;
          var cb = ts.writecb;

          if (cb === null) {
            return this.emit('error', new ERR_MULTIPLE_CALLBACK());
          }

          ts.writechunk = null;
          ts.writecb = null;
          if (data != null)
            // single equals check for both `null` and `undefined`
            this.push(data);
          cb(er);
          var rs = this._readableState;
          rs.reading = false;

          if (rs.needReadable || rs.length < rs.highWaterMark) {
            this._read(rs.highWaterMark);
          }
        }

        function Transform(options) {
          if (!(this instanceof Transform)) return new Transform(options);
          Duplex.call(this, options);
          this._transformState = {
            afterTransform: afterTransform.bind(this),
            needTransform: false,
            transforming: false,
            writecb: null,
            writechunk: null,
            writeencoding: null,
          }; // start out asking for a readable event once data is transformed.

          this._readableState.needReadable = true; // we have implemented the _read method, and done the other things
          // that Readable wants before the first _read call, so unset the
          // sync guard flag.

          this._readableState.sync = false;

          if (options) {
            if (typeof options.transform === 'function')
              this._transform = options.transform;
            if (typeof options.flush === 'function')
              this._flush = options.flush;
          } // When the writable side finishes, then flush out anything remaining.

          this.on('prefinish', prefinish);
        }

        function prefinish() {
          var _this = this;

          if (
            typeof this._flush === 'function' &&
            !this._readableState.destroyed
          ) {
            this._flush(function (er, data) {
              done(_this, er, data);
            });
          } else {
            done(this, null, null);
          }
        }

        Transform.prototype.push = function (chunk, encoding) {
          this._transformState.needTransform = false;
          return Duplex.prototype.push.call(this, chunk, encoding);
        }; // This is the part where you do stuff!
        // override this function in implementation classes.
        // 'chunk' is an input chunk.
        //
        // Call `push(newChunk)` to pass along transformed output
        // to the readable side.  You may call 'push' zero or more times.
        //
        // Call `cb(err)` when you are done with this chunk.  If you pass
        // an error, then that'll put the hurt on the whole operation.  If you
        // never call cb(), then you'll never get another chunk.

        Transform.prototype._transform = function (chunk, encoding, cb) {
          cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));
        };

        Transform.prototype._write = function (chunk, encoding, cb) {
          var ts = this._transformState;
          ts.writecb = cb;
          ts.writechunk = chunk;
          ts.writeencoding = encoding;

          if (!ts.transforming) {
            var rs = this._readableState;
            if (
              ts.needTransform ||
              rs.needReadable ||
              rs.length < rs.highWaterMark
            )
              this._read(rs.highWaterMark);
          }
        }; // Doesn't matter what the args are here.
        // _transform does all the work.
        // That we got here means that the readable side wants more data.

        Transform.prototype._read = function (n) {
          var ts = this._transformState;

          if (ts.writechunk !== null && !ts.transforming) {
            ts.transforming = true;

            this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
          } else {
            // mark that we need a transform, so that any data that comes in
            // will get processed, now that we've asked for it.
            ts.needTransform = true;
          }
        };

        Transform.prototype._destroy = function (err, cb) {
          Duplex.prototype._destroy.call(this, err, function (err2) {
            cb(err2);
          });
        };

        function done(stream, er, data) {
          if (er) return stream.emit('error', er);
          if (data != null)
            // single equals check for both `null` and `undefined`
            stream.push(data); // TODO(BridgeAR): Write a test for these two error cases
          // if there's nothing in the write buffer, then that means
          // that nothing more will ever be provided

          if (stream._writableState.length)
            throw new ERR_TRANSFORM_WITH_LENGTH_0();
          if (stream._transformState.transforming)
            throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
          return stream.push(null);
        }

        /***/
      },

    /***/ '../node_modules/hash-base/node_modules/readable-stream/lib/_stream_writable.js':
      /*!**************************************************************************************!*\
  !*** ../node_modules/hash-base/node_modules/readable-stream/lib/_stream_writable.js ***!
  \**************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (global, process) {
          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.
          // A bit simpler than readable streams.
          // Implement an async ._write(chunk, encoding, cb), and it'll handle all
          // the drain event emission and buffering.

          module.exports = Writable;
          /* <replacement> */

          function WriteReq(chunk, encoding, cb) {
            this.chunk = chunk;
            this.encoding = encoding;
            this.callback = cb;
            this.next = null;
          } // It seems a linked list but it is not
          // there will be only 2 of these for each stream

          function CorkedRequest(state) {
            var _this = this;

            this.next = null;
            this.entry = null;

            this.finish = function () {
              onCorkedFinish(_this, state);
            };
          }
          /* </replacement> */

          /*<replacement>*/

          var Duplex;
          /*</replacement>*/

          Writable.WritableState = WritableState;
          /*<replacement>*/

          var internalUtil = {
            deprecate: __webpack_require__(
              /*! util-deprecate */ '../node_modules/util-deprecate/browser.js'
            ),
          };
          /*</replacement>*/

          /*<replacement>*/

          var Stream = __webpack_require__(
            /*! ./internal/streams/stream */ '../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/stream-browser.js'
          );
          /*</replacement>*/

          var Buffer = __webpack_require__(
            /*! buffer */ '../node_modules/buffer/index.js'
          ).Buffer;

          var OurUint8Array = global.Uint8Array || function () {};

          function _uint8ArrayToBuffer(chunk) {
            return Buffer.from(chunk);
          }

          function _isUint8Array(obj) {
            return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
          }

          var destroyImpl = __webpack_require__(
            /*! ./internal/streams/destroy */ '../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/destroy.js'
          );

          var _require = __webpack_require__(
              /*! ./internal/streams/state */ '../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/state.js'
            ),
            getHighWaterMark = _require.getHighWaterMark;

          var _require$codes = __webpack_require__(
              /*! ../errors */ '../node_modules/hash-base/node_modules/readable-stream/errors-browser.js'
            ).codes,
            ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
            ERR_METHOD_NOT_IMPLEMENTED =
              _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
            ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
            ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,
            ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,
            ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,
            ERR_STREAM_WRITE_AFTER_END =
              _require$codes.ERR_STREAM_WRITE_AFTER_END,
            ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;

          var errorOrDestroy = destroyImpl.errorOrDestroy;

          __webpack_require__(
            /*! inherits */ '../node_modules/inherits/inherits_browser.js'
          )(Writable, Stream);

          function nop() {}

          function WritableState(options, stream, isDuplex) {
            Duplex =
              Duplex ||
              __webpack_require__(
                /*! ./_stream_duplex */ '../node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js'
              );
            options = options || {}; // Duplex streams are both readable and writable, but share
            // the same options object.
            // However, some cases require setting options to different
            // values for the readable and the writable sides of the duplex stream,
            // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.

            if (typeof isDuplex !== 'boolean')
              isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream
            // contains buffers or objects.

            this.objectMode = !!options.objectMode;
            if (isDuplex)
              this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false
            // Note: 0 is a valid value, means that we always return false if
            // the entire buffer is not flushed immediately on write()

            this.highWaterMark = getHighWaterMark(
              this,
              options,
              'writableHighWaterMark',
              isDuplex
            ); // if _final has been called

            this.finalCalled = false; // drain event flag.

            this.needDrain = false; // at the start of calling end()

            this.ending = false; // when end() has been called, and returned

            this.ended = false; // when 'finish' is emitted

            this.finished = false; // has it been destroyed

            this.destroyed = false; // should we decode strings into buffers before passing to _write?
            // this is here so that some node-core streams can optimize string
            // handling at a lower level.

            var noDecode = options.decodeStrings === false;
            this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string
            // encoding is 'binary' so we have to make this configurable.
            // Everything else in the universe uses 'utf8', though.

            this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement
            // of how much we're waiting to get pushed to some underlying
            // socket or file.

            this.length = 0; // a flag to see when we're in the middle of a write.

            this.writing = false; // when true all writes will be buffered until .uncork() call

            this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,
            // or on a later tick.  We set this to true at first, because any
            // actions that shouldn't happen until "later" should generally also
            // not happen before the first write call.

            this.sync = true; // a flag to know if we're processing previously buffered items, which
            // may call the _write() callback in the same tick, so that we don't
            // end up in an overlapped onwrite situation.

            this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)

            this.onwrite = function (er) {
              onwrite(stream, er);
            }; // the callback that the user supplies to write(chunk,encoding,cb)

            this.writecb = null; // the amount that is being written when _write is called.

            this.writelen = 0;
            this.bufferedRequest = null;
            this.lastBufferedRequest = null; // number of pending user-supplied write callbacks
            // this must be 0 before 'finish' can be emitted

            this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs
            // This is relevant for synchronous Transform streams

            this.prefinished = false; // True if the error was already emitted and should not be thrown again

            this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.

            this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')

            this.autoDestroy = !!options.autoDestroy; // count buffered requests

            this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always
            // one allocated and free to use, and we maintain at most two

            this.corkedRequestsFree = new CorkedRequest(this);
          }

          WritableState.prototype.getBuffer = function getBuffer() {
            var current = this.bufferedRequest;
            var out = [];

            while (current) {
              out.push(current);
              current = current.next;
            }

            return out;
          };

          (function () {
            try {
              Object.defineProperty(WritableState.prototype, 'buffer', {
                get: internalUtil.deprecate(
                  function writableStateBufferGetter() {
                    return this.getBuffer();
                  },
                  '_writableState.buffer is deprecated. Use _writableState.getBuffer ' +
                    'instead.',
                  'DEP0003'
                ),
              });
            } catch (_) {}
          })(); // Test _writableState for inheritance to account for Duplex streams,
          // whose prototype chain only points to Readable.

          var realHasInstance;

          if (
            typeof Symbol === 'function' &&
            Symbol.hasInstance &&
            typeof Function.prototype[Symbol.hasInstance] === 'function'
          ) {
            realHasInstance = Function.prototype[Symbol.hasInstance];
            Object.defineProperty(Writable, Symbol.hasInstance, {
              value: function value(object) {
                if (realHasInstance.call(this, object)) return true;
                if (this !== Writable) return false;
                return object && object._writableState instanceof WritableState;
              },
            });
          } else {
            realHasInstance = function realHasInstance(object) {
              return object instanceof this;
            };
          }

          function Writable(options) {
            Duplex =
              Duplex ||
              __webpack_require__(
                /*! ./_stream_duplex */ '../node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js'
              ); // Writable ctor is applied to Duplexes, too.
            // `realHasInstance` is necessary because using plain `instanceof`
            // would return false, as no `_writableState` property is attached.
            // Trying to use the custom `instanceof` for Writable here will also break the
            // Node.js LazyTransform implementation, which has a non-trivial getter for
            // `_writableState` that would lead to infinite recursion.
            // Checking for a Stream.Duplex instance is faster here instead of inside
            // the WritableState constructor, at least with V8 6.5

            var isDuplex = this instanceof Duplex;
            if (!isDuplex && !realHasInstance.call(Writable, this))
              return new Writable(options);
            this._writableState = new WritableState(options, this, isDuplex); // legacy.

            this.writable = true;

            if (options) {
              if (typeof options.write === 'function')
                this._write = options.write;
              if (typeof options.writev === 'function')
                this._writev = options.writev;
              if (typeof options.destroy === 'function')
                this._destroy = options.destroy;
              if (typeof options.final === 'function')
                this._final = options.final;
            }

            Stream.call(this);
          } // Otherwise people can pipe Writable streams, which is just wrong.

          Writable.prototype.pipe = function () {
            errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
          };

          function writeAfterEnd(stream, cb) {
            var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb

            errorOrDestroy(stream, er);
            process.nextTick(cb, er);
          } // Checks that a user-supplied chunk is valid, especially for the particular
          // mode the stream is in. Currently this means that `null` is never accepted
          // and undefined/non-string values are only allowed in object mode.

          function validChunk(stream, state, chunk, cb) {
            var er;

            if (chunk === null) {
              er = new ERR_STREAM_NULL_VALUES();
            } else if (typeof chunk !== 'string' && !state.objectMode) {
              er = new ERR_INVALID_ARG_TYPE(
                'chunk',
                ['string', 'Buffer'],
                chunk
              );
            }

            if (er) {
              errorOrDestroy(stream, er);
              process.nextTick(cb, er);
              return false;
            }

            return true;
          }

          Writable.prototype.write = function (chunk, encoding, cb) {
            var state = this._writableState;
            var ret = false;

            var isBuf = !state.objectMode && _isUint8Array(chunk);

            if (isBuf && !Buffer.isBuffer(chunk)) {
              chunk = _uint8ArrayToBuffer(chunk);
            }

            if (typeof encoding === 'function') {
              cb = encoding;
              encoding = null;
            }

            if (isBuf) encoding = 'buffer';
            else if (!encoding) encoding = state.defaultEncoding;
            if (typeof cb !== 'function') cb = nop;
            if (state.ending) writeAfterEnd(this, cb);
            else if (isBuf || validChunk(this, state, chunk, cb)) {
              state.pendingcb++;
              ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
            }
            return ret;
          };

          Writable.prototype.cork = function () {
            this._writableState.corked++;
          };

          Writable.prototype.uncork = function () {
            var state = this._writableState;

            if (state.corked) {
              state.corked--;
              if (
                !state.writing &&
                !state.corked &&
                !state.bufferProcessing &&
                state.bufferedRequest
              )
                clearBuffer(this, state);
            }
          };

          Writable.prototype.setDefaultEncoding = function setDefaultEncoding(
            encoding
          ) {
            // node::ParseEncoding() requires lower case.
            if (typeof encoding === 'string') encoding = encoding.toLowerCase();
            if (
              !(
                [
                  'hex',
                  'utf8',
                  'utf-8',
                  'ascii',
                  'binary',
                  'base64',
                  'ucs2',
                  'ucs-2',
                  'utf16le',
                  'utf-16le',
                  'raw',
                ].indexOf((encoding + '').toLowerCase()) > -1
              )
            )
              throw new ERR_UNKNOWN_ENCODING(encoding);
            this._writableState.defaultEncoding = encoding;
            return this;
          };

          Object.defineProperty(Writable.prototype, 'writableBuffer', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              return this._writableState && this._writableState.getBuffer();
            },
          });

          function decodeChunk(state, chunk, encoding) {
            if (
              !state.objectMode &&
              state.decodeStrings !== false &&
              typeof chunk === 'string'
            ) {
              chunk = Buffer.from(chunk, encoding);
            }

            return chunk;
          }

          Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              return this._writableState.highWaterMark;
            },
          }); // if we're already writing something, then just put this
          // in the queue, and wait our turn.  Otherwise, call _write
          // If we return false, then we need a drain event, so set that flag.

          function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
            if (!isBuf) {
              var newChunk = decodeChunk(state, chunk, encoding);

              if (chunk !== newChunk) {
                isBuf = true;
                encoding = 'buffer';
                chunk = newChunk;
              }
            }

            var len = state.objectMode ? 1 : chunk.length;
            state.length += len;
            var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.

            if (!ret) state.needDrain = true;

            if (state.writing || state.corked) {
              var last = state.lastBufferedRequest;
              state.lastBufferedRequest = {
                chunk: chunk,
                encoding: encoding,
                isBuf: isBuf,
                callback: cb,
                next: null,
              };

              if (last) {
                last.next = state.lastBufferedRequest;
              } else {
                state.bufferedRequest = state.lastBufferedRequest;
              }

              state.bufferedRequestCount += 1;
            } else {
              doWrite(stream, state, false, len, chunk, encoding, cb);
            }

            return ret;
          }

          function doWrite(stream, state, writev, len, chunk, encoding, cb) {
            state.writelen = len;
            state.writecb = cb;
            state.writing = true;
            state.sync = true;
            if (state.destroyed)
              state.onwrite(new ERR_STREAM_DESTROYED('write'));
            else if (writev) stream._writev(chunk, state.onwrite);
            else stream._write(chunk, encoding, state.onwrite);
            state.sync = false;
          }

          function onwriteError(stream, state, sync, er, cb) {
            --state.pendingcb;

            if (sync) {
              // defer the callback if we are being called synchronously
              // to avoid piling up things on the stack
              process.nextTick(cb, er); // this can emit finish, and it will always happen
              // after error

              process.nextTick(finishMaybe, stream, state);
              stream._writableState.errorEmitted = true;
              errorOrDestroy(stream, er);
            } else {
              // the caller expect this to happen before if
              // it is async
              cb(er);
              stream._writableState.errorEmitted = true;
              errorOrDestroy(stream, er); // this can emit finish, but finish must
              // always follow error

              finishMaybe(stream, state);
            }
          }

          function onwriteStateUpdate(state) {
            state.writing = false;
            state.writecb = null;
            state.length -= state.writelen;
            state.writelen = 0;
          }

          function onwrite(stream, er) {
            var state = stream._writableState;
            var sync = state.sync;
            var cb = state.writecb;
            if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();
            onwriteStateUpdate(state);
            if (er) onwriteError(stream, state, sync, er, cb);
            else {
              // Check if we're actually ready to finish, but don't emit yet
              var finished = needFinish(state) || stream.destroyed;

              if (
                !finished &&
                !state.corked &&
                !state.bufferProcessing &&
                state.bufferedRequest
              ) {
                clearBuffer(stream, state);
              }

              if (sync) {
                process.nextTick(afterWrite, stream, state, finished, cb);
              } else {
                afterWrite(stream, state, finished, cb);
              }
            }
          }

          function afterWrite(stream, state, finished, cb) {
            if (!finished) onwriteDrain(stream, state);
            state.pendingcb--;
            cb();
            finishMaybe(stream, state);
          } // Must force callback to be called on nextTick, so that we don't
          // emit 'drain' before the write() consumer gets the 'false' return
          // value, and has a chance to attach a 'drain' listener.

          function onwriteDrain(stream, state) {
            if (state.length === 0 && state.needDrain) {
              state.needDrain = false;
              stream.emit('drain');
            }
          } // if there's something in the buffer waiting, then process it

          function clearBuffer(stream, state) {
            state.bufferProcessing = true;
            var entry = state.bufferedRequest;

            if (stream._writev && entry && entry.next) {
              // Fast case, write everything using _writev()
              var l = state.bufferedRequestCount;
              var buffer = new Array(l);
              var holder = state.corkedRequestsFree;
              holder.entry = entry;
              var count = 0;
              var allBuffers = true;

              while (entry) {
                buffer[count] = entry;
                if (!entry.isBuf) allBuffers = false;
                entry = entry.next;
                count += 1;
              }

              buffer.allBuffers = allBuffers;
              doWrite(
                stream,
                state,
                true,
                state.length,
                buffer,
                '',
                holder.finish
              ); // doWrite is almost always async, defer these to save a bit of time
              // as the hot path ends with doWrite

              state.pendingcb++;
              state.lastBufferedRequest = null;

              if (holder.next) {
                state.corkedRequestsFree = holder.next;
                holder.next = null;
              } else {
                state.corkedRequestsFree = new CorkedRequest(state);
              }

              state.bufferedRequestCount = 0;
            } else {
              // Slow case, write chunks one-by-one
              while (entry) {
                var chunk = entry.chunk;
                var encoding = entry.encoding;
                var cb = entry.callback;
                var len = state.objectMode ? 1 : chunk.length;
                doWrite(stream, state, false, len, chunk, encoding, cb);
                entry = entry.next;
                state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then
                // it means that we need to wait until it does.
                // also, that means that the chunk and cb are currently
                // being processed, so move the buffer counter past them.

                if (state.writing) {
                  break;
                }
              }

              if (entry === null) state.lastBufferedRequest = null;
            }

            state.bufferedRequest = entry;
            state.bufferProcessing = false;
          }

          Writable.prototype._write = function (chunk, encoding, cb) {
            cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));
          };

          Writable.prototype._writev = null;

          Writable.prototype.end = function (chunk, encoding, cb) {
            var state = this._writableState;

            if (typeof chunk === 'function') {
              cb = chunk;
              chunk = null;
              encoding = null;
            } else if (typeof encoding === 'function') {
              cb = encoding;
              encoding = null;
            }

            if (chunk !== null && chunk !== undefined)
              this.write(chunk, encoding); // .end() fully uncorks

            if (state.corked) {
              state.corked = 1;
              this.uncork();
            } // ignore unnecessary end() calls.

            if (!state.ending) endWritable(this, state, cb);
            return this;
          };

          Object.defineProperty(Writable.prototype, 'writableLength', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              return this._writableState.length;
            },
          });

          function needFinish(state) {
            return (
              state.ending &&
              state.length === 0 &&
              state.bufferedRequest === null &&
              !state.finished &&
              !state.writing
            );
          }

          function callFinal(stream, state) {
            stream._final(function (err) {
              state.pendingcb--;

              if (err) {
                errorOrDestroy(stream, err);
              }

              state.prefinished = true;
              stream.emit('prefinish');
              finishMaybe(stream, state);
            });
          }

          function prefinish(stream, state) {
            if (!state.prefinished && !state.finalCalled) {
              if (typeof stream._final === 'function' && !state.destroyed) {
                state.pendingcb++;
                state.finalCalled = true;
                process.nextTick(callFinal, stream, state);
              } else {
                state.prefinished = true;
                stream.emit('prefinish');
              }
            }
          }

          function finishMaybe(stream, state) {
            var need = needFinish(state);

            if (need) {
              prefinish(stream, state);

              if (state.pendingcb === 0) {
                state.finished = true;
                stream.emit('finish');

                if (state.autoDestroy) {
                  // In case of duplex streams we need a way to detect
                  // if the readable side is ready for autoDestroy as well
                  var rState = stream._readableState;

                  if (!rState || (rState.autoDestroy && rState.endEmitted)) {
                    stream.destroy();
                  }
                }
              }
            }

            return need;
          }

          function endWritable(stream, state, cb) {
            state.ending = true;
            finishMaybe(stream, state);

            if (cb) {
              if (state.finished) process.nextTick(cb);
              else stream.once('finish', cb);
            }

            state.ended = true;
            stream.writable = false;
          }

          function onCorkedFinish(corkReq, state, err) {
            var entry = corkReq.entry;
            corkReq.entry = null;

            while (entry) {
              var cb = entry.callback;
              state.pendingcb--;
              cb(err);
              entry = entry.next;
            } // reuse the free corkReq.

            state.corkedRequestsFree.next = corkReq;
          }

          Object.defineProperty(Writable.prototype, 'destroyed', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function get() {
              if (this._writableState === undefined) {
                return false;
              }

              return this._writableState.destroyed;
            },
            set: function set(value) {
              // we ignore the value if the stream
              // has not been initialized yet
              if (!this._writableState) {
                return;
              } // backward compatibility, the user is explicitly
              // managing destroyed

              this._writableState.destroyed = value;
            },
          });
          Writable.prototype.destroy = destroyImpl.destroy;
          Writable.prototype._undestroy = destroyImpl.undestroy;

          Writable.prototype._destroy = function (err, cb) {
            cb(err);
          };
          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/global.js */ '../node_modules/webpack/buildin/global.js'
          ),
          __webpack_require__(
            /*! ./../../../../process/browser.js */ '../node_modules/process/browser.js'
          )
        ));

        /***/
      },

    /***/ '../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/async_iterator.js':
      /*!*****************************************************************************************************!*\
  !*** ../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/async_iterator.js ***!
  \*****************************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (process) {
          var _Object$setPrototypeO;

          function _defineProperty(obj, key, value) {
            if (key in obj) {
              Object.defineProperty(obj, key, {
                value: value,
                enumerable: true,
                configurable: true,
                writable: true,
              });
            } else {
              obj[key] = value;
            }
            return obj;
          }

          var finished = __webpack_require__(
            /*! ./end-of-stream */ '../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js'
          );

          var kLastResolve = Symbol('lastResolve');
          var kLastReject = Symbol('lastReject');
          var kError = Symbol('error');
          var kEnded = Symbol('ended');
          var kLastPromise = Symbol('lastPromise');
          var kHandlePromise = Symbol('handlePromise');
          var kStream = Symbol('stream');

          function createIterResult(value, done) {
            return {
              value: value,
              done: done,
            };
          }

          function readAndResolve(iter) {
            var resolve = iter[kLastResolve];

            if (resolve !== null) {
              var data = iter[kStream].read(); // we defer if data is null
              // we can be expecting either 'end' or
              // 'error'

              if (data !== null) {
                iter[kLastPromise] = null;
                iter[kLastResolve] = null;
                iter[kLastReject] = null;
                resolve(createIterResult(data, false));
              }
            }
          }

          function onReadable(iter) {
            // we wait for the next tick, because it might
            // emit an error with process.nextTick
            process.nextTick(readAndResolve, iter);
          }

          function wrapForNext(lastPromise, iter) {
            return function (resolve, reject) {
              lastPromise.then(function () {
                if (iter[kEnded]) {
                  resolve(createIterResult(undefined, true));
                  return;
                }

                iter[kHandlePromise](resolve, reject);
              }, reject);
            };
          }

          var AsyncIteratorPrototype = Object.getPrototypeOf(function () {});
          var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf(
            ((_Object$setPrototypeO = {
              get stream() {
                return this[kStream];
              },

              next: function next() {
                var _this = this;

                // if we have detected an error in the meanwhile
                // reject straight away
                var error = this[kError];

                if (error !== null) {
                  return Promise.reject(error);
                }

                if (this[kEnded]) {
                  return Promise.resolve(createIterResult(undefined, true));
                }

                if (this[kStream].destroyed) {
                  // We need to defer via nextTick because if .destroy(err) is
                  // called, the error will be emitted via nextTick, and
                  // we cannot guarantee that there is no error lingering around
                  // waiting to be emitted.
                  return new Promise(function (resolve, reject) {
                    process.nextTick(function () {
                      if (_this[kError]) {
                        reject(_this[kError]);
                      } else {
                        resolve(createIterResult(undefined, true));
                      }
                    });
                  });
                } // if we have multiple next() calls
                // we will wait for the previous Promise to finish
                // this logic is optimized to support for await loops,
                // where next() is only called once at a time

                var lastPromise = this[kLastPromise];
                var promise;

                if (lastPromise) {
                  promise = new Promise(wrapForNext(lastPromise, this));
                } else {
                  // fast path needed to support multiple this.push()
                  // without triggering the next() queue
                  var data = this[kStream].read();

                  if (data !== null) {
                    return Promise.resolve(createIterResult(data, false));
                  }

                  promise = new Promise(this[kHandlePromise]);
                }

                this[kLastPromise] = promise;
                return promise;
              },
            }),
            _defineProperty(
              _Object$setPrototypeO,
              Symbol.asyncIterator,
              function () {
                return this;
              }
            ),
            _defineProperty(
              _Object$setPrototypeO,
              'return',
              function _return() {
                var _this2 = this;

                // destroy(err, cb) is a private API
                // we can guarantee we have that here, because we control the
                // Readable class this is attached to
                return new Promise(function (resolve, reject) {
                  _this2[kStream].destroy(null, function (err) {
                    if (err) {
                      reject(err);
                      return;
                    }

                    resolve(createIterResult(undefined, true));
                  });
                });
              }
            ),
            _Object$setPrototypeO),
            AsyncIteratorPrototype
          );

          var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(
            stream
          ) {
            var _Object$create;

            var iterator = Object.create(
              ReadableStreamAsyncIteratorPrototype,
              ((_Object$create = {}),
              _defineProperty(_Object$create, kStream, {
                value: stream,
                writable: true,
              }),
              _defineProperty(_Object$create, kLastResolve, {
                value: null,
                writable: true,
              }),
              _defineProperty(_Object$create, kLastReject, {
                value: null,
                writable: true,
              }),
              _defineProperty(_Object$create, kError, {
                value: null,
                writable: true,
              }),
              _defineProperty(_Object$create, kEnded, {
                value: stream._readableState.endEmitted,
                writable: true,
              }),
              _defineProperty(_Object$create, kHandlePromise, {
                value: function value(resolve, reject) {
                  var data = iterator[kStream].read();

                  if (data) {
                    iterator[kLastPromise] = null;
                    iterator[kLastResolve] = null;
                    iterator[kLastReject] = null;
                    resolve(createIterResult(data, false));
                  } else {
                    iterator[kLastResolve] = resolve;
                    iterator[kLastReject] = reject;
                  }
                },
                writable: true,
              }),
              _Object$create)
            );
            iterator[kLastPromise] = null;
            finished(stream, function (err) {
              if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {
                var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise
                // returned by next() and store the error

                if (reject !== null) {
                  iterator[kLastPromise] = null;
                  iterator[kLastResolve] = null;
                  iterator[kLastReject] = null;
                  reject(err);
                }

                iterator[kError] = err;
                return;
              }

              var resolve = iterator[kLastResolve];

              if (resolve !== null) {
                iterator[kLastPromise] = null;
                iterator[kLastResolve] = null;
                iterator[kLastReject] = null;
                resolve(createIterResult(undefined, true));
              }

              iterator[kEnded] = true;
            });
            stream.on('readable', onReadable.bind(null, iterator));
            return iterator;
          };

          module.exports = createReadableStreamAsyncIterator;
          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../../../process/browser.js */ '../node_modules/process/browser.js'
          )
        ));

        /***/
      },

    /***/ '../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/buffer_list.js':
      /*!**************************************************************************************************!*\
  !*** ../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/buffer_list.js ***!
  \**************************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        function ownKeys(object, enumerableOnly) {
          var keys = Object.keys(object);
          if (Object.getOwnPropertySymbols) {
            var symbols = Object.getOwnPropertySymbols(object);
            if (enumerableOnly)
              symbols = symbols.filter(function (sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
              });
            keys.push.apply(keys, symbols);
          }
          return keys;
        }

        function _objectSpread(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i] != null ? arguments[i] : {};
            if (i % 2) {
              ownKeys(Object(source), true).forEach(function (key) {
                _defineProperty(target, key, source[key]);
              });
            } else if (Object.getOwnPropertyDescriptors) {
              Object.defineProperties(
                target,
                Object.getOwnPropertyDescriptors(source)
              );
            } else {
              ownKeys(Object(source)).forEach(function (key) {
                Object.defineProperty(
                  target,
                  key,
                  Object.getOwnPropertyDescriptor(source, key)
                );
              });
            }
          }
          return target;
        }

        function _defineProperty(obj, key, value) {
          if (key in obj) {
            Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true,
            });
          } else {
            obj[key] = value;
          }
          return obj;
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          return Constructor;
        }

        var _require = __webpack_require__(
            /*! buffer */ '../node_modules/buffer/index.js'
          ),
          Buffer = _require.Buffer;

        var _require2 = __webpack_require__(/*! util */ 2),
          inspect = _require2.inspect;

        var custom = (inspect && inspect.custom) || 'inspect';

        function copyBuffer(src, target, offset) {
          Buffer.prototype.copy.call(src, target, offset);
        }

        module.exports =
          /*#__PURE__*/
          (function () {
            function BufferList() {
              _classCallCheck(this, BufferList);

              this.head = null;
              this.tail = null;
              this.length = 0;
            }

            _createClass(BufferList, [
              {
                key: 'push',
                value: function push(v) {
                  var entry = {
                    data: v,
                    next: null,
                  };
                  if (this.length > 0) this.tail.next = entry;
                  else this.head = entry;
                  this.tail = entry;
                  ++this.length;
                },
              },
              {
                key: 'unshift',
                value: function unshift(v) {
                  var entry = {
                    data: v,
                    next: this.head,
                  };
                  if (this.length === 0) this.tail = entry;
                  this.head = entry;
                  ++this.length;
                },
              },
              {
                key: 'shift',
                value: function shift() {
                  if (this.length === 0) return;
                  var ret = this.head.data;
                  if (this.length === 1) this.head = this.tail = null;
                  else this.head = this.head.next;
                  --this.length;
                  return ret;
                },
              },
              {
                key: 'clear',
                value: function clear() {
                  this.head = this.tail = null;
                  this.length = 0;
                },
              },
              {
                key: 'join',
                value: function join(s) {
                  if (this.length === 0) return '';
                  var p = this.head;
                  var ret = '' + p.data;

                  while ((p = p.next)) {
                    ret += s + p.data;
                  }

                  return ret;
                },
              },
              {
                key: 'concat',
                value: function concat(n) {
                  if (this.length === 0) return Buffer.alloc(0);
                  var ret = Buffer.allocUnsafe(n >>> 0);
                  var p = this.head;
                  var i = 0;

                  while (p) {
                    copyBuffer(p.data, ret, i);
                    i += p.data.length;
                    p = p.next;
                  }

                  return ret;
                }, // Consumes a specified amount of bytes or characters from the buffered data.
              },
              {
                key: 'consume',
                value: function consume(n, hasStrings) {
                  var ret;

                  if (n < this.head.data.length) {
                    // `slice` is the same for buffers and strings.
                    ret = this.head.data.slice(0, n);
                    this.head.data = this.head.data.slice(n);
                  } else if (n === this.head.data.length) {
                    // First chunk is a perfect match.
                    ret = this.shift();
                  } else {
                    // Result spans more than one buffer.
                    ret = hasStrings ? this._getString(n) : this._getBuffer(n);
                  }

                  return ret;
                },
              },
              {
                key: 'first',
                value: function first() {
                  return this.head.data;
                }, // Consumes a specified amount of characters from the buffered data.
              },
              {
                key: '_getString',
                value: function _getString(n) {
                  var p = this.head;
                  var c = 1;
                  var ret = p.data;
                  n -= ret.length;

                  while ((p = p.next)) {
                    var str = p.data;
                    var nb = n > str.length ? str.length : n;
                    if (nb === str.length) ret += str;
                    else ret += str.slice(0, n);
                    n -= nb;

                    if (n === 0) {
                      if (nb === str.length) {
                        ++c;
                        if (p.next) this.head = p.next;
                        else this.head = this.tail = null;
                      } else {
                        this.head = p;
                        p.data = str.slice(nb);
                      }

                      break;
                    }

                    ++c;
                  }

                  this.length -= c;
                  return ret;
                }, // Consumes a specified amount of bytes from the buffered data.
              },
              {
                key: '_getBuffer',
                value: function _getBuffer(n) {
                  var ret = Buffer.allocUnsafe(n);
                  var p = this.head;
                  var c = 1;
                  p.data.copy(ret);
                  n -= p.data.length;

                  while ((p = p.next)) {
                    var buf = p.data;
                    var nb = n > buf.length ? buf.length : n;
                    buf.copy(ret, ret.length - n, 0, nb);
                    n -= nb;

                    if (n === 0) {
                      if (nb === buf.length) {
                        ++c;
                        if (p.next) this.head = p.next;
                        else this.head = this.tail = null;
                      } else {
                        this.head = p;
                        p.data = buf.slice(nb);
                      }

                      break;
                    }

                    ++c;
                  }

                  this.length -= c;
                  return ret;
                }, // Make sure the linked list only shows the minimal necessary information.
              },
              {
                key: custom,
                value: function value(_, options) {
                  return inspect(
                    this,
                    _objectSpread({}, options, {
                      // Only inspect one level.
                      depth: 0,
                      // It should not recurse.
                      customInspect: false,
                    })
                  );
                },
              },
            ]);

            return BufferList;
          })();

        /***/
      },

    /***/ '../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/destroy.js':
      /*!**********************************************************************************************!*\
  !*** ../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/destroy.js ***!
  \**********************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (process) {
          // undocumented cb() API, needed for core, not for public API

          function destroy(err, cb) {
            var _this = this;

            var readableDestroyed =
              this._readableState && this._readableState.destroyed;
            var writableDestroyed =
              this._writableState && this._writableState.destroyed;

            if (readableDestroyed || writableDestroyed) {
              if (cb) {
                cb(err);
              } else if (err) {
                if (!this._writableState) {
                  process.nextTick(emitErrorNT, this, err);
                } else if (!this._writableState.errorEmitted) {
                  this._writableState.errorEmitted = true;
                  process.nextTick(emitErrorNT, this, err);
                }
              }

              return this;
            } // we set destroyed to true before firing error callbacks in order
            // to make it re-entrance safe in case destroy() is called within callbacks

            if (this._readableState) {
              this._readableState.destroyed = true;
            } // if this is a duplex stream mark the writable part as destroyed as well

            if (this._writableState) {
              this._writableState.destroyed = true;
            }

            this._destroy(err || null, function (err) {
              if (!cb && err) {
                if (!_this._writableState) {
                  process.nextTick(emitErrorAndCloseNT, _this, err);
                } else if (!_this._writableState.errorEmitted) {
                  _this._writableState.errorEmitted = true;
                  process.nextTick(emitErrorAndCloseNT, _this, err);
                } else {
                  process.nextTick(emitCloseNT, _this);
                }
              } else if (cb) {
                process.nextTick(emitCloseNT, _this);
                cb(err);
              } else {
                process.nextTick(emitCloseNT, _this);
              }
            });

            return this;
          }

          function emitErrorAndCloseNT(self, err) {
            emitErrorNT(self, err);
            emitCloseNT(self);
          }

          function emitCloseNT(self) {
            if (self._writableState && !self._writableState.emitClose) return;
            if (self._readableState && !self._readableState.emitClose) return;
            self.emit('close');
          }

          function undestroy() {
            if (this._readableState) {
              this._readableState.destroyed = false;
              this._readableState.reading = false;
              this._readableState.ended = false;
              this._readableState.endEmitted = false;
            }

            if (this._writableState) {
              this._writableState.destroyed = false;
              this._writableState.ended = false;
              this._writableState.ending = false;
              this._writableState.finalCalled = false;
              this._writableState.prefinished = false;
              this._writableState.finished = false;
              this._writableState.errorEmitted = false;
            }
          }

          function emitErrorNT(self, err) {
            self.emit('error', err);
          }

          function errorOrDestroy(stream, err) {
            // We have tests that rely on errors being emitted
            // in the same tick, so changing this is semver major.
            // For now when you opt-in to autoDestroy we allow
            // the error to be emitted nextTick. In a future
            // semver major update we should change the default to this.
            var rState = stream._readableState;
            var wState = stream._writableState;
            if (
              (rState && rState.autoDestroy) ||
              (wState && wState.autoDestroy)
            )
              stream.destroy(err);
            else stream.emit('error', err);
          }

          module.exports = {
            destroy: destroy,
            undestroy: undestroy,
            errorOrDestroy: errorOrDestroy,
          };
          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../../../process/browser.js */ '../node_modules/process/browser.js'
          )
        ));

        /***/
      },

    /***/ '../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js':
      /*!****************************************************************************************************!*\
  !*** ../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js ***!
  \****************************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        // Ported from https://github.com/mafintosh/end-of-stream with
        // permission from the author, Mathias Buus (@mafintosh).

        var ERR_STREAM_PREMATURE_CLOSE = __webpack_require__(
          /*! ../../../errors */ '../node_modules/hash-base/node_modules/readable-stream/errors-browser.js'
        ).codes.ERR_STREAM_PREMATURE_CLOSE;

        function once(callback) {
          var called = false;
          return function () {
            if (called) return;
            called = true;

            for (
              var _len = arguments.length, args = new Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            callback.apply(this, args);
          };
        }

        function noop() {}

        function isRequest(stream) {
          return stream.setHeader && typeof stream.abort === 'function';
        }

        function eos(stream, opts, callback) {
          if (typeof opts === 'function') return eos(stream, null, opts);
          if (!opts) opts = {};
          callback = once(callback || noop);
          var readable =
            opts.readable || (opts.readable !== false && stream.readable);
          var writable =
            opts.writable || (opts.writable !== false && stream.writable);

          var onlegacyfinish = function onlegacyfinish() {
            if (!stream.writable) onfinish();
          };

          var writableEnded =
            stream._writableState && stream._writableState.finished;

          var onfinish = function onfinish() {
            writable = false;
            writableEnded = true;
            if (!readable) callback.call(stream);
          };

          var readableEnded =
            stream._readableState && stream._readableState.endEmitted;

          var onend = function onend() {
            readable = false;
            readableEnded = true;
            if (!writable) callback.call(stream);
          };

          var onerror = function onerror(err) {
            callback.call(stream, err);
          };

          var onclose = function onclose() {
            var err;

            if (readable && !readableEnded) {
              if (!stream._readableState || !stream._readableState.ended)
                err = new ERR_STREAM_PREMATURE_CLOSE();
              return callback.call(stream, err);
            }

            if (writable && !writableEnded) {
              if (!stream._writableState || !stream._writableState.ended)
                err = new ERR_STREAM_PREMATURE_CLOSE();
              return callback.call(stream, err);
            }
          };

          var onrequest = function onrequest() {
            stream.req.on('finish', onfinish);
          };

          if (isRequest(stream)) {
            stream.on('complete', onfinish);
            stream.on('abort', onclose);
            if (stream.req) onrequest();
            else stream.on('request', onrequest);
          } else if (writable && !stream._writableState) {
            // legacy streams
            stream.on('end', onlegacyfinish);
            stream.on('close', onlegacyfinish);
          }

          stream.on('end', onend);
          stream.on('finish', onfinish);
          if (opts.error !== false) stream.on('error', onerror);
          stream.on('close', onclose);
          return function () {
            stream.removeListener('complete', onfinish);
            stream.removeListener('abort', onclose);
            stream.removeListener('request', onrequest);
            if (stream.req) stream.req.removeListener('finish', onfinish);
            stream.removeListener('end', onlegacyfinish);
            stream.removeListener('close', onlegacyfinish);
            stream.removeListener('finish', onfinish);
            stream.removeListener('end', onend);
            stream.removeListener('error', onerror);
            stream.removeListener('close', onclose);
          };
        }

        module.exports = eos;

        /***/
      },

    /***/ '../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/from-browser.js':
      /*!***************************************************************************************************!*\
  !*** ../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/from-browser.js ***!
  \***************************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        module.exports = function () {
          throw new Error('Readable.from is not available in the browser');
        };

        /***/
      },

    /***/ '../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/pipeline.js':
      /*!***********************************************************************************************!*\
  !*** ../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/pipeline.js ***!
  \***********************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        // Ported from https://github.com/mafintosh/pump with
        // permission from the author, Mathias Buus (@mafintosh).

        var eos;

        function once(callback) {
          var called = false;
          return function () {
            if (called) return;
            called = true;
            callback.apply(void 0, arguments);
          };
        }

        var _require$codes = __webpack_require__(
            /*! ../../../errors */ '../node_modules/hash-base/node_modules/readable-stream/errors-browser.js'
          ).codes,
          ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,
          ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;

        function noop(err) {
          // Rethrow the error if it exists to avoid swallowing it
          if (err) throw err;
        }

        function isRequest(stream) {
          return stream.setHeader && typeof stream.abort === 'function';
        }

        function destroyer(stream, reading, writing, callback) {
          callback = once(callback);
          var closed = false;
          stream.on('close', function () {
            closed = true;
          });
          if (eos === undefined)
            eos = __webpack_require__(
              /*! ./end-of-stream */ '../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js'
            );
          eos(
            stream,
            {
              readable: reading,
              writable: writing,
            },
            function (err) {
              if (err) return callback(err);
              closed = true;
              callback();
            }
          );
          var destroyed = false;
          return function (err) {
            if (closed) return;
            if (destroyed) return;
            destroyed = true; // request.destroy just do .end - .abort is what we want

            if (isRequest(stream)) return stream.abort();
            if (typeof stream.destroy === 'function') return stream.destroy();
            callback(err || new ERR_STREAM_DESTROYED('pipe'));
          };
        }

        function call(fn) {
          fn();
        }

        function pipe(from, to) {
          return from.pipe(to);
        }

        function popCallback(streams) {
          if (!streams.length) return noop;
          if (typeof streams[streams.length - 1] !== 'function') return noop;
          return streams.pop();
        }

        function pipeline() {
          for (
            var _len = arguments.length, streams = new Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            streams[_key] = arguments[_key];
          }

          var callback = popCallback(streams);
          if (Array.isArray(streams[0])) streams = streams[0];

          if (streams.length < 2) {
            throw new ERR_MISSING_ARGS('streams');
          }

          var error;
          var destroys = streams.map(function (stream, i) {
            var reading = i < streams.length - 1;
            var writing = i > 0;
            return destroyer(stream, reading, writing, function (err) {
              if (!error) error = err;
              if (err) destroys.forEach(call);
              if (reading) return;
              destroys.forEach(call);
              callback(error);
            });
          });
          return streams.reduce(pipe);
        }

        module.exports = pipeline;

        /***/
      },

    /***/ '../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/state.js':
      /*!********************************************************************************************!*\
  !*** ../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/state.js ***!
  \********************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var ERR_INVALID_OPT_VALUE = __webpack_require__(
          /*! ../../../errors */ '../node_modules/hash-base/node_modules/readable-stream/errors-browser.js'
        ).codes.ERR_INVALID_OPT_VALUE;

        function highWaterMarkFrom(options, isDuplex, duplexKey) {
          return options.highWaterMark != null
            ? options.highWaterMark
            : isDuplex
            ? options[duplexKey]
            : null;
        }

        function getHighWaterMark(state, options, duplexKey, isDuplex) {
          var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);

          if (hwm != null) {
            if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
              var name = isDuplex ? duplexKey : 'highWaterMark';
              throw new ERR_INVALID_OPT_VALUE(name, hwm);
            }

            return Math.floor(hwm);
          } // Default value

          return state.objectMode ? 16 : 16 * 1024;
        }

        module.exports = {
          getHighWaterMark: getHighWaterMark,
        };

        /***/
      },

    /***/ '../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/stream-browser.js':
      /*!*****************************************************************************************************!*\
  !*** ../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/stream-browser.js ***!
  \*****************************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! events */ '../node_modules/events/events.js'
        ).EventEmitter;

        /***/
      },

    /***/ '../node_modules/hash-base/node_modules/readable-stream/readable-browser.js':
      /*!**********************************************************************************!*\
  !*** ../node_modules/hash-base/node_modules/readable-stream/readable-browser.js ***!
  \**********************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        exports = module.exports = __webpack_require__(
          /*! ./lib/_stream_readable.js */ '../node_modules/hash-base/node_modules/readable-stream/lib/_stream_readable.js'
        );
        exports.Stream = exports;
        exports.Readable = exports;
        exports.Writable = __webpack_require__(
          /*! ./lib/_stream_writable.js */ '../node_modules/hash-base/node_modules/readable-stream/lib/_stream_writable.js'
        );
        exports.Duplex = __webpack_require__(
          /*! ./lib/_stream_duplex.js */ '../node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js'
        );
        exports.Transform = __webpack_require__(
          /*! ./lib/_stream_transform.js */ '../node_modules/hash-base/node_modules/readable-stream/lib/_stream_transform.js'
        );
        exports.PassThrough = __webpack_require__(
          /*! ./lib/_stream_passthrough.js */ '../node_modules/hash-base/node_modules/readable-stream/lib/_stream_passthrough.js'
        );
        exports.finished = __webpack_require__(
          /*! ./lib/internal/streams/end-of-stream.js */ '../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js'
        );
        exports.pipeline = __webpack_require__(
          /*! ./lib/internal/streams/pipeline.js */ '../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/pipeline.js'
        );

        /***/
      },

    /***/ '../node_modules/hash-base/node_modules/safe-buffer/index.js':
      /*!*******************************************************************!*\
  !*** ../node_modules/hash-base/node_modules/safe-buffer/index.js ***!
  \*******************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
        /* eslint-disable node/no-deprecated-api */
        var buffer = __webpack_require__(
          /*! buffer */ '../node_modules/buffer/index.js'
        );
        var Buffer = buffer.Buffer;

        // alternative to using Object.keys for old browsers
        function copyProps(src, dst) {
          for (var key in src) {
            dst[key] = src[key];
          }
        }
        if (
          Buffer.from &&
          Buffer.alloc &&
          Buffer.allocUnsafe &&
          Buffer.allocUnsafeSlow
        ) {
          module.exports = buffer;
        } else {
          // Copy properties from require('buffer')
          copyProps(buffer, exports);
          exports.Buffer = SafeBuffer;
        }

        function SafeBuffer(arg, encodingOrOffset, length) {
          return Buffer(arg, encodingOrOffset, length);
        }

        SafeBuffer.prototype = Object.create(Buffer.prototype);

        // Copy static methods from Buffer
        copyProps(Buffer, SafeBuffer);

        SafeBuffer.from = function (arg, encodingOrOffset, length) {
          if (typeof arg === 'number') {
            throw new TypeError('Argument must not be a number');
          }
          return Buffer(arg, encodingOrOffset, length);
        };

        SafeBuffer.alloc = function (size, fill, encoding) {
          if (typeof size !== 'number') {
            throw new TypeError('Argument must be a number');
          }
          var buf = Buffer(size);
          if (fill !== undefined) {
            if (typeof encoding === 'string') {
              buf.fill(fill, encoding);
            } else {
              buf.fill(fill);
            }
          } else {
            buf.fill(0);
          }
          return buf;
        };

        SafeBuffer.allocUnsafe = function (size) {
          if (typeof size !== 'number') {
            throw new TypeError('Argument must be a number');
          }
          return Buffer(size);
        };

        SafeBuffer.allocUnsafeSlow = function (size) {
          if (typeof size !== 'number') {
            throw new TypeError('Argument must be a number');
          }
          return buffer.SlowBuffer(size);
        };

        /***/
      },

    /***/ '../node_modules/hash.js/lib/hash.js':
      /*!*******************************************!*\
  !*** ../node_modules/hash.js/lib/hash.js ***!
  \*******************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var hash = exports;

        hash.utils = __webpack_require__(
          /*! ./hash/utils */ '../node_modules/hash.js/lib/hash/utils.js'
        );
        hash.common = __webpack_require__(
          /*! ./hash/common */ '../node_modules/hash.js/lib/hash/common.js'
        );
        hash.sha = __webpack_require__(
          /*! ./hash/sha */ '../node_modules/hash.js/lib/hash/sha.js'
        );
        hash.ripemd = __webpack_require__(
          /*! ./hash/ripemd */ '../node_modules/hash.js/lib/hash/ripemd.js'
        );
        hash.hmac = __webpack_require__(
          /*! ./hash/hmac */ '../node_modules/hash.js/lib/hash/hmac.js'
        );

        // Proxy hash functions to the main object
        hash.sha1 = hash.sha.sha1;
        hash.sha256 = hash.sha.sha256;
        hash.sha224 = hash.sha.sha224;
        hash.sha384 = hash.sha.sha384;
        hash.sha512 = hash.sha.sha512;
        hash.ripemd160 = hash.ripemd.ripemd160;

        /***/
      },

    /***/ '../node_modules/hash.js/lib/hash/common.js':
      /*!**************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/common.js ***!
  \**************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(
          /*! ./utils */ '../node_modules/hash.js/lib/hash/utils.js'
        );
        var assert = __webpack_require__(
          /*! minimalistic-assert */ '../node_modules/minimalistic-assert/index.js'
        );

        function BlockHash() {
          this.pending = null;
          this.pendingTotal = 0;
          this.blockSize = this.constructor.blockSize;
          this.outSize = this.constructor.outSize;
          this.hmacStrength = this.constructor.hmacStrength;
          this.padLength = this.constructor.padLength / 8;
          this.endian = 'big';

          this._delta8 = this.blockSize / 8;
          this._delta32 = this.blockSize / 32;
        }
        exports.BlockHash = BlockHash;

        BlockHash.prototype.update = function update(msg, enc) {
          // Convert message to array, pad it, and join into 32bit blocks
          msg = utils.toArray(msg, enc);
          if (!this.pending) this.pending = msg;
          else this.pending = this.pending.concat(msg);
          this.pendingTotal += msg.length;

          // Enough data, try updating
          if (this.pending.length >= this._delta8) {
            msg = this.pending;

            // Process pending data in blocks
            var r = msg.length % this._delta8;
            this.pending = msg.slice(msg.length - r, msg.length);
            if (this.pending.length === 0) this.pending = null;

            msg = utils.join32(msg, 0, msg.length - r, this.endian);
            for (var i = 0; i < msg.length; i += this._delta32)
              this._update(msg, i, i + this._delta32);
          }

          return this;
        };

        BlockHash.prototype.digest = function digest(enc) {
          this.update(this._pad());
          assert(this.pending === null);

          return this._digest(enc);
        };

        BlockHash.prototype._pad = function pad() {
          var len = this.pendingTotal;
          var bytes = this._delta8;
          var k = bytes - ((len + this.padLength) % bytes);
          var res = new Array(k + this.padLength);
          res[0] = 0x80;
          for (var i = 1; i < k; i++) res[i] = 0;

          // Append length
          len <<= 3;
          if (this.endian === 'big') {
            for (var t = 8; t < this.padLength; t++) res[i++] = 0;

            res[i++] = 0;
            res[i++] = 0;
            res[i++] = 0;
            res[i++] = 0;
            res[i++] = (len >>> 24) & 0xff;
            res[i++] = (len >>> 16) & 0xff;
            res[i++] = (len >>> 8) & 0xff;
            res[i++] = len & 0xff;
          } else {
            res[i++] = len & 0xff;
            res[i++] = (len >>> 8) & 0xff;
            res[i++] = (len >>> 16) & 0xff;
            res[i++] = (len >>> 24) & 0xff;
            res[i++] = 0;
            res[i++] = 0;
            res[i++] = 0;
            res[i++] = 0;

            for (t = 8; t < this.padLength; t++) res[i++] = 0;
          }

          return res;
        };

        /***/
      },

    /***/ '../node_modules/hash.js/lib/hash/hmac.js':
      /*!************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/hmac.js ***!
  \************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(
          /*! ./utils */ '../node_modules/hash.js/lib/hash/utils.js'
        );
        var assert = __webpack_require__(
          /*! minimalistic-assert */ '../node_modules/minimalistic-assert/index.js'
        );

        function Hmac(hash, key, enc) {
          if (!(this instanceof Hmac)) return new Hmac(hash, key, enc);
          this.Hash = hash;
          this.blockSize = hash.blockSize / 8;
          this.outSize = hash.outSize / 8;
          this.inner = null;
          this.outer = null;

          this._init(utils.toArray(key, enc));
        }
        module.exports = Hmac;

        Hmac.prototype._init = function init(key) {
          // Shorten key, if needed
          if (key.length > this.blockSize)
            key = new this.Hash().update(key).digest();
          assert(key.length <= this.blockSize);

          // Add padding to key
          for (var i = key.length; i < this.blockSize; i++) key.push(0);

          for (i = 0; i < key.length; i++) key[i] ^= 0x36;
          this.inner = new this.Hash().update(key);

          // 0x36 ^ 0x5c = 0x6a
          for (i = 0; i < key.length; i++) key[i] ^= 0x6a;
          this.outer = new this.Hash().update(key);
        };

        Hmac.prototype.update = function update(msg, enc) {
          this.inner.update(msg, enc);
          return this;
        };

        Hmac.prototype.digest = function digest(enc) {
          this.outer.update(this.inner.digest());
          return this.outer.digest(enc);
        };

        /***/
      },

    /***/ '../node_modules/hash.js/lib/hash/ripemd.js':
      /*!**************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/ripemd.js ***!
  \**************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(
          /*! ./utils */ '../node_modules/hash.js/lib/hash/utils.js'
        );
        var common = __webpack_require__(
          /*! ./common */ '../node_modules/hash.js/lib/hash/common.js'
        );

        var rotl32 = utils.rotl32;
        var sum32 = utils.sum32;
        var sum32_3 = utils.sum32_3;
        var sum32_4 = utils.sum32_4;
        var BlockHash = common.BlockHash;

        function RIPEMD160() {
          if (!(this instanceof RIPEMD160)) return new RIPEMD160();

          BlockHash.call(this);

          this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
          this.endian = 'little';
        }
        utils.inherits(RIPEMD160, BlockHash);
        exports.ripemd160 = RIPEMD160;

        RIPEMD160.blockSize = 512;
        RIPEMD160.outSize = 160;
        RIPEMD160.hmacStrength = 192;
        RIPEMD160.padLength = 64;

        RIPEMD160.prototype._update = function update(msg, start) {
          var A = this.h[0];
          var B = this.h[1];
          var C = this.h[2];
          var D = this.h[3];
          var E = this.h[4];
          var Ah = A;
          var Bh = B;
          var Ch = C;
          var Dh = D;
          var Eh = E;
          for (var j = 0; j < 80; j++) {
            var T = sum32(
              rotl32(sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)), s[j]),
              E
            );
            A = E;
            E = D;
            D = rotl32(C, 10);
            C = B;
            B = T;
            T = sum32(
              rotl32(
                sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
                sh[j]
              ),
              Eh
            );
            Ah = Eh;
            Eh = Dh;
            Dh = rotl32(Ch, 10);
            Ch = Bh;
            Bh = T;
          }
          T = sum32_3(this.h[1], C, Dh);
          this.h[1] = sum32_3(this.h[2], D, Eh);
          this.h[2] = sum32_3(this.h[3], E, Ah);
          this.h[3] = sum32_3(this.h[4], A, Bh);
          this.h[4] = sum32_3(this.h[0], B, Ch);
          this.h[0] = T;
        };

        RIPEMD160.prototype._digest = function digest(enc) {
          if (enc === 'hex') return utils.toHex32(this.h, 'little');
          else return utils.split32(this.h, 'little');
        };

        function f(j, x, y, z) {
          if (j <= 15) return x ^ y ^ z;
          else if (j <= 31) return (x & y) | (~x & z);
          else if (j <= 47) return (x | ~y) ^ z;
          else if (j <= 63) return (x & z) | (y & ~z);
          else return x ^ (y | ~z);
        }

        function K(j) {
          if (j <= 15) return 0x00000000;
          else if (j <= 31) return 0x5a827999;
          else if (j <= 47) return 0x6ed9eba1;
          else if (j <= 63) return 0x8f1bbcdc;
          else return 0xa953fd4e;
        }

        function Kh(j) {
          if (j <= 15) return 0x50a28be6;
          else if (j <= 31) return 0x5c4dd124;
          else if (j <= 47) return 0x6d703ef3;
          else if (j <= 63) return 0x7a6d76e9;
          else return 0x00000000;
        }

        var r = [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          7,
          4,
          13,
          1,
          10,
          6,
          15,
          3,
          12,
          0,
          9,
          5,
          2,
          14,
          11,
          8,
          3,
          10,
          14,
          4,
          9,
          15,
          8,
          1,
          2,
          7,
          0,
          6,
          13,
          11,
          5,
          12,
          1,
          9,
          11,
          10,
          0,
          8,
          12,
          4,
          13,
          3,
          7,
          15,
          14,
          5,
          6,
          2,
          4,
          0,
          5,
          9,
          7,
          12,
          2,
          10,
          14,
          1,
          3,
          8,
          11,
          6,
          15,
          13,
        ];

        var rh = [
          5,
          14,
          7,
          0,
          9,
          2,
          11,
          4,
          13,
          6,
          15,
          8,
          1,
          10,
          3,
          12,
          6,
          11,
          3,
          7,
          0,
          13,
          5,
          10,
          14,
          15,
          8,
          12,
          4,
          9,
          1,
          2,
          15,
          5,
          1,
          3,
          7,
          14,
          6,
          9,
          11,
          8,
          12,
          2,
          10,
          0,
          4,
          13,
          8,
          6,
          4,
          1,
          3,
          11,
          15,
          0,
          5,
          12,
          2,
          13,
          9,
          7,
          10,
          14,
          12,
          15,
          10,
          4,
          1,
          5,
          8,
          7,
          6,
          2,
          13,
          14,
          0,
          3,
          9,
          11,
        ];

        var s = [
          11,
          14,
          15,
          12,
          5,
          8,
          7,
          9,
          11,
          13,
          14,
          15,
          6,
          7,
          9,
          8,
          7,
          6,
          8,
          13,
          11,
          9,
          7,
          15,
          7,
          12,
          15,
          9,
          11,
          7,
          13,
          12,
          11,
          13,
          6,
          7,
          14,
          9,
          13,
          15,
          14,
          8,
          13,
          6,
          5,
          12,
          7,
          5,
          11,
          12,
          14,
          15,
          14,
          15,
          9,
          8,
          9,
          14,
          5,
          6,
          8,
          6,
          5,
          12,
          9,
          15,
          5,
          11,
          6,
          8,
          13,
          12,
          5,
          12,
          13,
          14,
          11,
          8,
          5,
          6,
        ];

        var sh = [
          8,
          9,
          9,
          11,
          13,
          15,
          15,
          5,
          7,
          7,
          8,
          11,
          14,
          14,
          12,
          6,
          9,
          13,
          15,
          7,
          12,
          8,
          9,
          11,
          7,
          7,
          12,
          7,
          6,
          15,
          13,
          11,
          9,
          7,
          15,
          11,
          8,
          6,
          6,
          14,
          12,
          13,
          5,
          14,
          13,
          13,
          7,
          5,
          15,
          5,
          8,
          11,
          14,
          14,
          6,
          14,
          6,
          9,
          12,
          9,
          12,
          5,
          15,
          8,
          8,
          5,
          12,
          9,
          12,
          5,
          14,
          6,
          8,
          13,
          6,
          5,
          15,
          13,
          11,
          11,
        ];

        /***/
      },

    /***/ '../node_modules/hash.js/lib/hash/sha.js':
      /*!***********************************************!*\
  !*** ../node_modules/hash.js/lib/hash/sha.js ***!
  \***********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.sha1 = __webpack_require__(
          /*! ./sha/1 */ '../node_modules/hash.js/lib/hash/sha/1.js'
        );
        exports.sha224 = __webpack_require__(
          /*! ./sha/224 */ '../node_modules/hash.js/lib/hash/sha/224.js'
        );
        exports.sha256 = __webpack_require__(
          /*! ./sha/256 */ '../node_modules/hash.js/lib/hash/sha/256.js'
        );
        exports.sha384 = __webpack_require__(
          /*! ./sha/384 */ '../node_modules/hash.js/lib/hash/sha/384.js'
        );
        exports.sha512 = __webpack_require__(
          /*! ./sha/512 */ '../node_modules/hash.js/lib/hash/sha/512.js'
        );

        /***/
      },

    /***/ '../node_modules/hash.js/lib/hash/sha/1.js':
      /*!*************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/sha/1.js ***!
  \*************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(
          /*! ../utils */ '../node_modules/hash.js/lib/hash/utils.js'
        );
        var common = __webpack_require__(
          /*! ../common */ '../node_modules/hash.js/lib/hash/common.js'
        );
        var shaCommon = __webpack_require__(
          /*! ./common */ '../node_modules/hash.js/lib/hash/sha/common.js'
        );

        var rotl32 = utils.rotl32;
        var sum32 = utils.sum32;
        var sum32_5 = utils.sum32_5;
        var ft_1 = shaCommon.ft_1;
        var BlockHash = common.BlockHash;

        var sha1_K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];

        function SHA1() {
          if (!(this instanceof SHA1)) return new SHA1();

          BlockHash.call(this);
          this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
          this.W = new Array(80);
        }

        utils.inherits(SHA1, BlockHash);
        module.exports = SHA1;

        SHA1.blockSize = 512;
        SHA1.outSize = 160;
        SHA1.hmacStrength = 80;
        SHA1.padLength = 64;

        SHA1.prototype._update = function _update(msg, start) {
          var W = this.W;

          for (var i = 0; i < 16; i++) W[i] = msg[start + i];

          for (; i < W.length; i++)
            W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

          var a = this.h[0];
          var b = this.h[1];
          var c = this.h[2];
          var d = this.h[3];
          var e = this.h[4];

          for (i = 0; i < W.length; i++) {
            var s = ~~(i / 20);
            var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
            e = d;
            d = c;
            c = rotl32(b, 30);
            b = a;
            a = t;
          }

          this.h[0] = sum32(this.h[0], a);
          this.h[1] = sum32(this.h[1], b);
          this.h[2] = sum32(this.h[2], c);
          this.h[3] = sum32(this.h[3], d);
          this.h[4] = sum32(this.h[4], e);
        };

        SHA1.prototype._digest = function digest(enc) {
          if (enc === 'hex') return utils.toHex32(this.h, 'big');
          else return utils.split32(this.h, 'big');
        };

        /***/
      },

    /***/ '../node_modules/hash.js/lib/hash/sha/224.js':
      /*!***************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/sha/224.js ***!
  \***************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(
          /*! ../utils */ '../node_modules/hash.js/lib/hash/utils.js'
        );
        var SHA256 = __webpack_require__(
          /*! ./256 */ '../node_modules/hash.js/lib/hash/sha/256.js'
        );

        function SHA224() {
          if (!(this instanceof SHA224)) return new SHA224();

          SHA256.call(this);
          this.h = [
            0xc1059ed8,
            0x367cd507,
            0x3070dd17,
            0xf70e5939,
            0xffc00b31,
            0x68581511,
            0x64f98fa7,
            0xbefa4fa4,
          ];
        }
        utils.inherits(SHA224, SHA256);
        module.exports = SHA224;

        SHA224.blockSize = 512;
        SHA224.outSize = 224;
        SHA224.hmacStrength = 192;
        SHA224.padLength = 64;

        SHA224.prototype._digest = function digest(enc) {
          // Just truncate output
          if (enc === 'hex') return utils.toHex32(this.h.slice(0, 7), 'big');
          else return utils.split32(this.h.slice(0, 7), 'big');
        };

        /***/
      },

    /***/ '../node_modules/hash.js/lib/hash/sha/256.js':
      /*!***************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/sha/256.js ***!
  \***************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(
          /*! ../utils */ '../node_modules/hash.js/lib/hash/utils.js'
        );
        var common = __webpack_require__(
          /*! ../common */ '../node_modules/hash.js/lib/hash/common.js'
        );
        var shaCommon = __webpack_require__(
          /*! ./common */ '../node_modules/hash.js/lib/hash/sha/common.js'
        );
        var assert = __webpack_require__(
          /*! minimalistic-assert */ '../node_modules/minimalistic-assert/index.js'
        );

        var sum32 = utils.sum32;
        var sum32_4 = utils.sum32_4;
        var sum32_5 = utils.sum32_5;
        var ch32 = shaCommon.ch32;
        var maj32 = shaCommon.maj32;
        var s0_256 = shaCommon.s0_256;
        var s1_256 = shaCommon.s1_256;
        var g0_256 = shaCommon.g0_256;
        var g1_256 = shaCommon.g1_256;

        var BlockHash = common.BlockHash;

        var sha256_K = [
          0x428a2f98,
          0x71374491,
          0xb5c0fbcf,
          0xe9b5dba5,
          0x3956c25b,
          0x59f111f1,
          0x923f82a4,
          0xab1c5ed5,
          0xd807aa98,
          0x12835b01,
          0x243185be,
          0x550c7dc3,
          0x72be5d74,
          0x80deb1fe,
          0x9bdc06a7,
          0xc19bf174,
          0xe49b69c1,
          0xefbe4786,
          0x0fc19dc6,
          0x240ca1cc,
          0x2de92c6f,
          0x4a7484aa,
          0x5cb0a9dc,
          0x76f988da,
          0x983e5152,
          0xa831c66d,
          0xb00327c8,
          0xbf597fc7,
          0xc6e00bf3,
          0xd5a79147,
          0x06ca6351,
          0x14292967,
          0x27b70a85,
          0x2e1b2138,
          0x4d2c6dfc,
          0x53380d13,
          0x650a7354,
          0x766a0abb,
          0x81c2c92e,
          0x92722c85,
          0xa2bfe8a1,
          0xa81a664b,
          0xc24b8b70,
          0xc76c51a3,
          0xd192e819,
          0xd6990624,
          0xf40e3585,
          0x106aa070,
          0x19a4c116,
          0x1e376c08,
          0x2748774c,
          0x34b0bcb5,
          0x391c0cb3,
          0x4ed8aa4a,
          0x5b9cca4f,
          0x682e6ff3,
          0x748f82ee,
          0x78a5636f,
          0x84c87814,
          0x8cc70208,
          0x90befffa,
          0xa4506ceb,
          0xbef9a3f7,
          0xc67178f2,
        ];

        function SHA256() {
          if (!(this instanceof SHA256)) return new SHA256();

          BlockHash.call(this);
          this.h = [
            0x6a09e667,
            0xbb67ae85,
            0x3c6ef372,
            0xa54ff53a,
            0x510e527f,
            0x9b05688c,
            0x1f83d9ab,
            0x5be0cd19,
          ];
          this.k = sha256_K;
          this.W = new Array(64);
        }
        utils.inherits(SHA256, BlockHash);
        module.exports = SHA256;

        SHA256.blockSize = 512;
        SHA256.outSize = 256;
        SHA256.hmacStrength = 192;
        SHA256.padLength = 64;

        SHA256.prototype._update = function _update(msg, start) {
          var W = this.W;

          for (var i = 0; i < 16; i++) W[i] = msg[start + i];
          for (; i < W.length; i++)
            W[i] = sum32_4(
              g1_256(W[i - 2]),
              W[i - 7],
              g0_256(W[i - 15]),
              W[i - 16]
            );

          var a = this.h[0];
          var b = this.h[1];
          var c = this.h[2];
          var d = this.h[3];
          var e = this.h[4];
          var f = this.h[5];
          var g = this.h[6];
          var h = this.h[7];

          assert(this.k.length === W.length);
          for (i = 0; i < W.length; i++) {
            var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
            var T2 = sum32(s0_256(a), maj32(a, b, c));
            h = g;
            g = f;
            f = e;
            e = sum32(d, T1);
            d = c;
            c = b;
            b = a;
            a = sum32(T1, T2);
          }

          this.h[0] = sum32(this.h[0], a);
          this.h[1] = sum32(this.h[1], b);
          this.h[2] = sum32(this.h[2], c);
          this.h[3] = sum32(this.h[3], d);
          this.h[4] = sum32(this.h[4], e);
          this.h[5] = sum32(this.h[5], f);
          this.h[6] = sum32(this.h[6], g);
          this.h[7] = sum32(this.h[7], h);
        };

        SHA256.prototype._digest = function digest(enc) {
          if (enc === 'hex') return utils.toHex32(this.h, 'big');
          else return utils.split32(this.h, 'big');
        };

        /***/
      },

    /***/ '../node_modules/hash.js/lib/hash/sha/384.js':
      /*!***************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/sha/384.js ***!
  \***************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(
          /*! ../utils */ '../node_modules/hash.js/lib/hash/utils.js'
        );

        var SHA512 = __webpack_require__(
          /*! ./512 */ '../node_modules/hash.js/lib/hash/sha/512.js'
        );

        function SHA384() {
          if (!(this instanceof SHA384)) return new SHA384();

          SHA512.call(this);
          this.h = [
            0xcbbb9d5d,
            0xc1059ed8,
            0x629a292a,
            0x367cd507,
            0x9159015a,
            0x3070dd17,
            0x152fecd8,
            0xf70e5939,
            0x67332667,
            0xffc00b31,
            0x8eb44a87,
            0x68581511,
            0xdb0c2e0d,
            0x64f98fa7,
            0x47b5481d,
            0xbefa4fa4,
          ];
        }
        utils.inherits(SHA384, SHA512);
        module.exports = SHA384;

        SHA384.blockSize = 1024;
        SHA384.outSize = 384;
        SHA384.hmacStrength = 192;
        SHA384.padLength = 128;

        SHA384.prototype._digest = function digest(enc) {
          if (enc === 'hex') return utils.toHex32(this.h.slice(0, 12), 'big');
          else return utils.split32(this.h.slice(0, 12), 'big');
        };

        /***/
      },

    /***/ '../node_modules/hash.js/lib/hash/sha/512.js':
      /*!***************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/sha/512.js ***!
  \***************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(
          /*! ../utils */ '../node_modules/hash.js/lib/hash/utils.js'
        );
        var common = __webpack_require__(
          /*! ../common */ '../node_modules/hash.js/lib/hash/common.js'
        );
        var assert = __webpack_require__(
          /*! minimalistic-assert */ '../node_modules/minimalistic-assert/index.js'
        );

        var rotr64_hi = utils.rotr64_hi;
        var rotr64_lo = utils.rotr64_lo;
        var shr64_hi = utils.shr64_hi;
        var shr64_lo = utils.shr64_lo;
        var sum64 = utils.sum64;
        var sum64_hi = utils.sum64_hi;
        var sum64_lo = utils.sum64_lo;
        var sum64_4_hi = utils.sum64_4_hi;
        var sum64_4_lo = utils.sum64_4_lo;
        var sum64_5_hi = utils.sum64_5_hi;
        var sum64_5_lo = utils.sum64_5_lo;

        var BlockHash = common.BlockHash;

        var sha512_K = [
          0x428a2f98,
          0xd728ae22,
          0x71374491,
          0x23ef65cd,
          0xb5c0fbcf,
          0xec4d3b2f,
          0xe9b5dba5,
          0x8189dbbc,
          0x3956c25b,
          0xf348b538,
          0x59f111f1,
          0xb605d019,
          0x923f82a4,
          0xaf194f9b,
          0xab1c5ed5,
          0xda6d8118,
          0xd807aa98,
          0xa3030242,
          0x12835b01,
          0x45706fbe,
          0x243185be,
          0x4ee4b28c,
          0x550c7dc3,
          0xd5ffb4e2,
          0x72be5d74,
          0xf27b896f,
          0x80deb1fe,
          0x3b1696b1,
          0x9bdc06a7,
          0x25c71235,
          0xc19bf174,
          0xcf692694,
          0xe49b69c1,
          0x9ef14ad2,
          0xefbe4786,
          0x384f25e3,
          0x0fc19dc6,
          0x8b8cd5b5,
          0x240ca1cc,
          0x77ac9c65,
          0x2de92c6f,
          0x592b0275,
          0x4a7484aa,
          0x6ea6e483,
          0x5cb0a9dc,
          0xbd41fbd4,
          0x76f988da,
          0x831153b5,
          0x983e5152,
          0xee66dfab,
          0xa831c66d,
          0x2db43210,
          0xb00327c8,
          0x98fb213f,
          0xbf597fc7,
          0xbeef0ee4,
          0xc6e00bf3,
          0x3da88fc2,
          0xd5a79147,
          0x930aa725,
          0x06ca6351,
          0xe003826f,
          0x14292967,
          0x0a0e6e70,
          0x27b70a85,
          0x46d22ffc,
          0x2e1b2138,
          0x5c26c926,
          0x4d2c6dfc,
          0x5ac42aed,
          0x53380d13,
          0x9d95b3df,
          0x650a7354,
          0x8baf63de,
          0x766a0abb,
          0x3c77b2a8,
          0x81c2c92e,
          0x47edaee6,
          0x92722c85,
          0x1482353b,
          0xa2bfe8a1,
          0x4cf10364,
          0xa81a664b,
          0xbc423001,
          0xc24b8b70,
          0xd0f89791,
          0xc76c51a3,
          0x0654be30,
          0xd192e819,
          0xd6ef5218,
          0xd6990624,
          0x5565a910,
          0xf40e3585,
          0x5771202a,
          0x106aa070,
          0x32bbd1b8,
          0x19a4c116,
          0xb8d2d0c8,
          0x1e376c08,
          0x5141ab53,
          0x2748774c,
          0xdf8eeb99,
          0x34b0bcb5,
          0xe19b48a8,
          0x391c0cb3,
          0xc5c95a63,
          0x4ed8aa4a,
          0xe3418acb,
          0x5b9cca4f,
          0x7763e373,
          0x682e6ff3,
          0xd6b2b8a3,
          0x748f82ee,
          0x5defb2fc,
          0x78a5636f,
          0x43172f60,
          0x84c87814,
          0xa1f0ab72,
          0x8cc70208,
          0x1a6439ec,
          0x90befffa,
          0x23631e28,
          0xa4506ceb,
          0xde82bde9,
          0xbef9a3f7,
          0xb2c67915,
          0xc67178f2,
          0xe372532b,
          0xca273ece,
          0xea26619c,
          0xd186b8c7,
          0x21c0c207,
          0xeada7dd6,
          0xcde0eb1e,
          0xf57d4f7f,
          0xee6ed178,
          0x06f067aa,
          0x72176fba,
          0x0a637dc5,
          0xa2c898a6,
          0x113f9804,
          0xbef90dae,
          0x1b710b35,
          0x131c471b,
          0x28db77f5,
          0x23047d84,
          0x32caab7b,
          0x40c72493,
          0x3c9ebe0a,
          0x15c9bebc,
          0x431d67c4,
          0x9c100d4c,
          0x4cc5d4be,
          0xcb3e42b6,
          0x597f299c,
          0xfc657e2a,
          0x5fcb6fab,
          0x3ad6faec,
          0x6c44198c,
          0x4a475817,
        ];

        function SHA512() {
          if (!(this instanceof SHA512)) return new SHA512();

          BlockHash.call(this);
          this.h = [
            0x6a09e667,
            0xf3bcc908,
            0xbb67ae85,
            0x84caa73b,
            0x3c6ef372,
            0xfe94f82b,
            0xa54ff53a,
            0x5f1d36f1,
            0x510e527f,
            0xade682d1,
            0x9b05688c,
            0x2b3e6c1f,
            0x1f83d9ab,
            0xfb41bd6b,
            0x5be0cd19,
            0x137e2179,
          ];
          this.k = sha512_K;
          this.W = new Array(160);
        }
        utils.inherits(SHA512, BlockHash);
        module.exports = SHA512;

        SHA512.blockSize = 1024;
        SHA512.outSize = 512;
        SHA512.hmacStrength = 192;
        SHA512.padLength = 128;

        SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
          var W = this.W;

          // 32 x 32bit words
          for (var i = 0; i < 32; i++) W[i] = msg[start + i];
          for (; i < W.length; i += 2) {
            var c0_hi = g1_512_hi(W[i - 4], W[i - 3]); // i - 2
            var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
            var c1_hi = W[i - 14]; // i - 7
            var c1_lo = W[i - 13];
            var c2_hi = g0_512_hi(W[i - 30], W[i - 29]); // i - 15
            var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
            var c3_hi = W[i - 32]; // i - 16
            var c3_lo = W[i - 31];

            W[i] = sum64_4_hi(
              c0_hi,
              c0_lo,
              c1_hi,
              c1_lo,
              c2_hi,
              c2_lo,
              c3_hi,
              c3_lo
            );
            W[i + 1] = sum64_4_lo(
              c0_hi,
              c0_lo,
              c1_hi,
              c1_lo,
              c2_hi,
              c2_lo,
              c3_hi,
              c3_lo
            );
          }
        };

        SHA512.prototype._update = function _update(msg, start) {
          this._prepareBlock(msg, start);

          var W = this.W;

          var ah = this.h[0];
          var al = this.h[1];
          var bh = this.h[2];
          var bl = this.h[3];
          var ch = this.h[4];
          var cl = this.h[5];
          var dh = this.h[6];
          var dl = this.h[7];
          var eh = this.h[8];
          var el = this.h[9];
          var fh = this.h[10];
          var fl = this.h[11];
          var gh = this.h[12];
          var gl = this.h[13];
          var hh = this.h[14];
          var hl = this.h[15];

          assert(this.k.length === W.length);
          for (var i = 0; i < W.length; i += 2) {
            var c0_hi = hh;
            var c0_lo = hl;
            var c1_hi = s1_512_hi(eh, el);
            var c1_lo = s1_512_lo(eh, el);
            var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
            var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
            var c3_hi = this.k[i];
            var c3_lo = this.k[i + 1];
            var c4_hi = W[i];
            var c4_lo = W[i + 1];

            var T1_hi = sum64_5_hi(
              c0_hi,
              c0_lo,
              c1_hi,
              c1_lo,
              c2_hi,
              c2_lo,
              c3_hi,
              c3_lo,
              c4_hi,
              c4_lo
            );
            var T1_lo = sum64_5_lo(
              c0_hi,
              c0_lo,
              c1_hi,
              c1_lo,
              c2_hi,
              c2_lo,
              c3_hi,
              c3_lo,
              c4_hi,
              c4_lo
            );

            c0_hi = s0_512_hi(ah, al);
            c0_lo = s0_512_lo(ah, al);
            c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
            c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

            var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
            var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

            hh = gh;
            hl = gl;

            gh = fh;
            gl = fl;

            fh = eh;
            fl = el;

            eh = sum64_hi(dh, dl, T1_hi, T1_lo);
            el = sum64_lo(dl, dl, T1_hi, T1_lo);

            dh = ch;
            dl = cl;

            ch = bh;
            cl = bl;

            bh = ah;
            bl = al;

            ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
            al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
          }

          sum64(this.h, 0, ah, al);
          sum64(this.h, 2, bh, bl);
          sum64(this.h, 4, ch, cl);
          sum64(this.h, 6, dh, dl);
          sum64(this.h, 8, eh, el);
          sum64(this.h, 10, fh, fl);
          sum64(this.h, 12, gh, gl);
          sum64(this.h, 14, hh, hl);
        };

        SHA512.prototype._digest = function digest(enc) {
          if (enc === 'hex') return utils.toHex32(this.h, 'big');
          else return utils.split32(this.h, 'big');
        };

        function ch64_hi(xh, xl, yh, yl, zh) {
          var r = (xh & yh) ^ (~xh & zh);
          if (r < 0) r += 0x100000000;
          return r;
        }

        function ch64_lo(xh, xl, yh, yl, zh, zl) {
          var r = (xl & yl) ^ (~xl & zl);
          if (r < 0) r += 0x100000000;
          return r;
        }

        function maj64_hi(xh, xl, yh, yl, zh) {
          var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
          if (r < 0) r += 0x100000000;
          return r;
        }

        function maj64_lo(xh, xl, yh, yl, zh, zl) {
          var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
          if (r < 0) r += 0x100000000;
          return r;
        }

        function s0_512_hi(xh, xl) {
          var c0_hi = rotr64_hi(xh, xl, 28);
          var c1_hi = rotr64_hi(xl, xh, 2); // 34
          var c2_hi = rotr64_hi(xl, xh, 7); // 39

          var r = c0_hi ^ c1_hi ^ c2_hi;
          if (r < 0) r += 0x100000000;
          return r;
        }

        function s0_512_lo(xh, xl) {
          var c0_lo = rotr64_lo(xh, xl, 28);
          var c1_lo = rotr64_lo(xl, xh, 2); // 34
          var c2_lo = rotr64_lo(xl, xh, 7); // 39

          var r = c0_lo ^ c1_lo ^ c2_lo;
          if (r < 0) r += 0x100000000;
          return r;
        }

        function s1_512_hi(xh, xl) {
          var c0_hi = rotr64_hi(xh, xl, 14);
          var c1_hi = rotr64_hi(xh, xl, 18);
          var c2_hi = rotr64_hi(xl, xh, 9); // 41

          var r = c0_hi ^ c1_hi ^ c2_hi;
          if (r < 0) r += 0x100000000;
          return r;
        }

        function s1_512_lo(xh, xl) {
          var c0_lo = rotr64_lo(xh, xl, 14);
          var c1_lo = rotr64_lo(xh, xl, 18);
          var c2_lo = rotr64_lo(xl, xh, 9); // 41

          var r = c0_lo ^ c1_lo ^ c2_lo;
          if (r < 0) r += 0x100000000;
          return r;
        }

        function g0_512_hi(xh, xl) {
          var c0_hi = rotr64_hi(xh, xl, 1);
          var c1_hi = rotr64_hi(xh, xl, 8);
          var c2_hi = shr64_hi(xh, xl, 7);

          var r = c0_hi ^ c1_hi ^ c2_hi;
          if (r < 0) r += 0x100000000;
          return r;
        }

        function g0_512_lo(xh, xl) {
          var c0_lo = rotr64_lo(xh, xl, 1);
          var c1_lo = rotr64_lo(xh, xl, 8);
          var c2_lo = shr64_lo(xh, xl, 7);

          var r = c0_lo ^ c1_lo ^ c2_lo;
          if (r < 0) r += 0x100000000;
          return r;
        }

        function g1_512_hi(xh, xl) {
          var c0_hi = rotr64_hi(xh, xl, 19);
          var c1_hi = rotr64_hi(xl, xh, 29); // 61
          var c2_hi = shr64_hi(xh, xl, 6);

          var r = c0_hi ^ c1_hi ^ c2_hi;
          if (r < 0) r += 0x100000000;
          return r;
        }

        function g1_512_lo(xh, xl) {
          var c0_lo = rotr64_lo(xh, xl, 19);
          var c1_lo = rotr64_lo(xl, xh, 29); // 61
          var c2_lo = shr64_lo(xh, xl, 6);

          var r = c0_lo ^ c1_lo ^ c2_lo;
          if (r < 0) r += 0x100000000;
          return r;
        }

        /***/
      },

    /***/ '../node_modules/hash.js/lib/hash/sha/common.js':
      /*!******************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/sha/common.js ***!
  \******************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(
          /*! ../utils */ '../node_modules/hash.js/lib/hash/utils.js'
        );
        var rotr32 = utils.rotr32;

        function ft_1(s, x, y, z) {
          if (s === 0) return ch32(x, y, z);
          if (s === 1 || s === 3) return p32(x, y, z);
          if (s === 2) return maj32(x, y, z);
        }
        exports.ft_1 = ft_1;

        function ch32(x, y, z) {
          return (x & y) ^ (~x & z);
        }
        exports.ch32 = ch32;

        function maj32(x, y, z) {
          return (x & y) ^ (x & z) ^ (y & z);
        }
        exports.maj32 = maj32;

        function p32(x, y, z) {
          return x ^ y ^ z;
        }
        exports.p32 = p32;

        function s0_256(x) {
          return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
        }
        exports.s0_256 = s0_256;

        function s1_256(x) {
          return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
        }
        exports.s1_256 = s1_256;

        function g0_256(x) {
          return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
        }
        exports.g0_256 = g0_256;

        function g1_256(x) {
          return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
        }
        exports.g1_256 = g1_256;

        /***/
      },

    /***/ '../node_modules/hash.js/lib/hash/utils.js':
      /*!*************************************************!*\
  !*** ../node_modules/hash.js/lib/hash/utils.js ***!
  \*************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var assert = __webpack_require__(
          /*! minimalistic-assert */ '../node_modules/minimalistic-assert/index.js'
        );
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );

        exports.inherits = inherits;

        function isSurrogatePair(msg, i) {
          if ((msg.charCodeAt(i) & 0xfc00) !== 0xd800) {
            return false;
          }
          if (i < 0 || i + 1 >= msg.length) {
            return false;
          }
          return (msg.charCodeAt(i + 1) & 0xfc00) === 0xdc00;
        }

        function toArray(msg, enc) {
          if (Array.isArray(msg)) return msg.slice();
          if (!msg) return [];
          var res = [];
          if (typeof msg === 'string') {
            if (!enc) {
              // Inspired by stringToUtf8ByteArray() in closure-library by Google
              // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143
              // Apache License 2.0
              // https://github.com/google/closure-library/blob/master/LICENSE
              var p = 0;
              for (var i = 0; i < msg.length; i++) {
                var c = msg.charCodeAt(i);
                if (c < 128) {
                  res[p++] = c;
                } else if (c < 2048) {
                  res[p++] = (c >> 6) | 192;
                  res[p++] = (c & 63) | 128;
                } else if (isSurrogatePair(msg, i)) {
                  c =
                    0x10000 +
                    ((c & 0x03ff) << 10) +
                    (msg.charCodeAt(++i) & 0x03ff);
                  res[p++] = (c >> 18) | 240;
                  res[p++] = ((c >> 12) & 63) | 128;
                  res[p++] = ((c >> 6) & 63) | 128;
                  res[p++] = (c & 63) | 128;
                } else {
                  res[p++] = (c >> 12) | 224;
                  res[p++] = ((c >> 6) & 63) | 128;
                  res[p++] = (c & 63) | 128;
                }
              }
            } else if (enc === 'hex') {
              msg = msg.replace(/[^a-z0-9]+/gi, '');
              if (msg.length % 2 !== 0) msg = '0' + msg;
              for (i = 0; i < msg.length; i += 2)
                res.push(parseInt(msg[i] + msg[i + 1], 16));
            }
          } else {
            for (i = 0; i < msg.length; i++) res[i] = msg[i] | 0;
          }
          return res;
        }
        exports.toArray = toArray;

        function toHex(msg) {
          var res = '';
          for (var i = 0; i < msg.length; i++)
            res += zero2(msg[i].toString(16));
          return res;
        }
        exports.toHex = toHex;

        function htonl(w) {
          var res =
            (w >>> 24) |
            ((w >>> 8) & 0xff00) |
            ((w << 8) & 0xff0000) |
            ((w & 0xff) << 24);
          return res >>> 0;
        }
        exports.htonl = htonl;

        function toHex32(msg, endian) {
          var res = '';
          for (var i = 0; i < msg.length; i++) {
            var w = msg[i];
            if (endian === 'little') w = htonl(w);
            res += zero8(w.toString(16));
          }
          return res;
        }
        exports.toHex32 = toHex32;

        function zero2(word) {
          if (word.length === 1) return '0' + word;
          else return word;
        }
        exports.zero2 = zero2;

        function zero8(word) {
          if (word.length === 7) return '0' + word;
          else if (word.length === 6) return '00' + word;
          else if (word.length === 5) return '000' + word;
          else if (word.length === 4) return '0000' + word;
          else if (word.length === 3) return '00000' + word;
          else if (word.length === 2) return '000000' + word;
          else if (word.length === 1) return '0000000' + word;
          else return word;
        }
        exports.zero8 = zero8;

        function join32(msg, start, end, endian) {
          var len = end - start;
          assert(len % 4 === 0);
          var res = new Array(len / 4);
          for (var i = 0, k = start; i < res.length; i++, k += 4) {
            var w;
            if (endian === 'big')
              w =
                (msg[k] << 24) |
                (msg[k + 1] << 16) |
                (msg[k + 2] << 8) |
                msg[k + 3];
            else
              w =
                (msg[k + 3] << 24) |
                (msg[k + 2] << 16) |
                (msg[k + 1] << 8) |
                msg[k];
            res[i] = w >>> 0;
          }
          return res;
        }
        exports.join32 = join32;

        function split32(msg, endian) {
          var res = new Array(msg.length * 4);
          for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
            var m = msg[i];
            if (endian === 'big') {
              res[k] = m >>> 24;
              res[k + 1] = (m >>> 16) & 0xff;
              res[k + 2] = (m >>> 8) & 0xff;
              res[k + 3] = m & 0xff;
            } else {
              res[k + 3] = m >>> 24;
              res[k + 2] = (m >>> 16) & 0xff;
              res[k + 1] = (m >>> 8) & 0xff;
              res[k] = m & 0xff;
            }
          }
          return res;
        }
        exports.split32 = split32;

        function rotr32(w, b) {
          return (w >>> b) | (w << (32 - b));
        }
        exports.rotr32 = rotr32;

        function rotl32(w, b) {
          return (w << b) | (w >>> (32 - b));
        }
        exports.rotl32 = rotl32;

        function sum32(a, b) {
          return (a + b) >>> 0;
        }
        exports.sum32 = sum32;

        function sum32_3(a, b, c) {
          return (a + b + c) >>> 0;
        }
        exports.sum32_3 = sum32_3;

        function sum32_4(a, b, c, d) {
          return (a + b + c + d) >>> 0;
        }
        exports.sum32_4 = sum32_4;

        function sum32_5(a, b, c, d, e) {
          return (a + b + c + d + e) >>> 0;
        }
        exports.sum32_5 = sum32_5;

        function sum64(buf, pos, ah, al) {
          var bh = buf[pos];
          var bl = buf[pos + 1];

          var lo = (al + bl) >>> 0;
          var hi = (lo < al ? 1 : 0) + ah + bh;
          buf[pos] = hi >>> 0;
          buf[pos + 1] = lo;
        }
        exports.sum64 = sum64;

        function sum64_hi(ah, al, bh, bl) {
          var lo = (al + bl) >>> 0;
          var hi = (lo < al ? 1 : 0) + ah + bh;
          return hi >>> 0;
        }
        exports.sum64_hi = sum64_hi;

        function sum64_lo(ah, al, bh, bl) {
          var lo = al + bl;
          return lo >>> 0;
        }
        exports.sum64_lo = sum64_lo;

        function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
          var carry = 0;
          var lo = al;
          lo = (lo + bl) >>> 0;
          carry += lo < al ? 1 : 0;
          lo = (lo + cl) >>> 0;
          carry += lo < cl ? 1 : 0;
          lo = (lo + dl) >>> 0;
          carry += lo < dl ? 1 : 0;

          var hi = ah + bh + ch + dh + carry;
          return hi >>> 0;
        }
        exports.sum64_4_hi = sum64_4_hi;

        function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
          var lo = al + bl + cl + dl;
          return lo >>> 0;
        }
        exports.sum64_4_lo = sum64_4_lo;

        function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
          var carry = 0;
          var lo = al;
          lo = (lo + bl) >>> 0;
          carry += lo < al ? 1 : 0;
          lo = (lo + cl) >>> 0;
          carry += lo < cl ? 1 : 0;
          lo = (lo + dl) >>> 0;
          carry += lo < dl ? 1 : 0;
          lo = (lo + el) >>> 0;
          carry += lo < el ? 1 : 0;

          var hi = ah + bh + ch + dh + eh + carry;
          return hi >>> 0;
        }
        exports.sum64_5_hi = sum64_5_hi;

        function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
          var lo = al + bl + cl + dl + el;

          return lo >>> 0;
        }
        exports.sum64_5_lo = sum64_5_lo;

        function rotr64_hi(ah, al, num) {
          var r = (al << (32 - num)) | (ah >>> num);
          return r >>> 0;
        }
        exports.rotr64_hi = rotr64_hi;

        function rotr64_lo(ah, al, num) {
          var r = (ah << (32 - num)) | (al >>> num);
          return r >>> 0;
        }
        exports.rotr64_lo = rotr64_lo;

        function shr64_hi(ah, al, num) {
          return ah >>> num;
        }
        exports.shr64_hi = shr64_hi;

        function shr64_lo(ah, al, num) {
          var r = (ah << (32 - num)) | (al >>> num);
          return r >>> 0;
        }
        exports.shr64_lo = shr64_lo;

        /***/
      },

    /***/ '../node_modules/hmac-drbg/lib/hmac-drbg.js':
      /*!**************************************************!*\
  !*** ../node_modules/hmac-drbg/lib/hmac-drbg.js ***!
  \**************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var hash = __webpack_require__(
          /*! hash.js */ '../node_modules/hash.js/lib/hash.js'
        );
        var utils = __webpack_require__(
          /*! minimalistic-crypto-utils */ '../node_modules/minimalistic-crypto-utils/lib/utils.js'
        );
        var assert = __webpack_require__(
          /*! minimalistic-assert */ '../node_modules/minimalistic-assert/index.js'
        );

        function HmacDRBG(options) {
          if (!(this instanceof HmacDRBG)) return new HmacDRBG(options);
          this.hash = options.hash;
          this.predResist = !!options.predResist;

          this.outLen = this.hash.outSize;
          this.minEntropy = options.minEntropy || this.hash.hmacStrength;

          this._reseed = null;
          this.reseedInterval = null;
          this.K = null;
          this.V = null;

          var entropy = utils.toArray(
            options.entropy,
            options.entropyEnc || 'hex'
          );
          var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');
          var pers = utils.toArray(options.pers, options.persEnc || 'hex');
          assert(
            entropy.length >= this.minEntropy / 8,
            'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits'
          );
          this._init(entropy, nonce, pers);
        }
        module.exports = HmacDRBG;

        HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
          var seed = entropy.concat(nonce).concat(pers);

          this.K = new Array(this.outLen / 8);
          this.V = new Array(this.outLen / 8);
          for (var i = 0; i < this.V.length; i++) {
            this.K[i] = 0x00;
            this.V[i] = 0x01;
          }

          this._update(seed);
          this._reseed = 1;
          this.reseedInterval = 0x1000000000000; // 2^48
        };

        HmacDRBG.prototype._hmac = function hmac() {
          return new hash.hmac(this.hash, this.K);
        };

        HmacDRBG.prototype._update = function update(seed) {
          var kmac = this._hmac().update(this.V).update([0x00]);
          if (seed) kmac = kmac.update(seed);
          this.K = kmac.digest();
          this.V = this._hmac().update(this.V).digest();
          if (!seed) return;

          this.K = this._hmac()
            .update(this.V)
            .update([0x01])
            .update(seed)
            .digest();
          this.V = this._hmac().update(this.V).digest();
        };

        HmacDRBG.prototype.reseed = function reseed(
          entropy,
          entropyEnc,
          add,
          addEnc
        ) {
          // Optional entropy enc
          if (typeof entropyEnc !== 'string') {
            addEnc = add;
            add = entropyEnc;
            entropyEnc = null;
          }

          entropy = utils.toArray(entropy, entropyEnc);
          add = utils.toArray(add, addEnc);

          assert(
            entropy.length >= this.minEntropy / 8,
            'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits'
          );

          this._update(entropy.concat(add || []));
          this._reseed = 1;
        };

        HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
          if (this._reseed > this.reseedInterval)
            throw new Error('Reseed is required');

          // Optional encoding
          if (typeof enc !== 'string') {
            addEnc = add;
            add = enc;
            enc = null;
          }

          // Optional additional data
          if (add) {
            add = utils.toArray(add, addEnc || 'hex');
            this._update(add);
          }

          var temp = [];
          while (temp.length < len) {
            this.V = this._hmac().update(this.V).digest();
            temp = temp.concat(this.V);
          }

          var res = temp.slice(0, len);
          this._update(add);
          this._reseed++;
          return utils.encode(res, enc);
        };

        /***/
      },

    /***/ '../node_modules/ieee754/index.js':
      /*!****************************************!*\
  !*** ../node_modules/ieee754/index.js ***!
  \****************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        exports.read = function (buffer, offset, isLE, mLen, nBytes) {
          var e, m;
          var eLen = nBytes * 8 - mLen - 1;
          var eMax = (1 << eLen) - 1;
          var eBias = eMax >> 1;
          var nBits = -7;
          var i = isLE ? nBytes - 1 : 0;
          var d = isLE ? -1 : 1;
          var s = buffer[offset + i];

          i += d;

          e = s & ((1 << -nBits) - 1);
          s >>= -nBits;
          nBits += eLen;
          for (
            ;
            nBits > 0;
            e = e * 256 + buffer[offset + i], i += d, nBits -= 8
          ) {}

          m = e & ((1 << -nBits) - 1);
          e >>= -nBits;
          nBits += mLen;
          for (
            ;
            nBits > 0;
            m = m * 256 + buffer[offset + i], i += d, nBits -= 8
          ) {}

          if (e === 0) {
            e = 1 - eBias;
          } else if (e === eMax) {
            return m ? NaN : (s ? -1 : 1) * Infinity;
          } else {
            m = m + Math.pow(2, mLen);
            e = e - eBias;
          }
          return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
        };

        exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
          var e, m, c;
          var eLen = nBytes * 8 - mLen - 1;
          var eMax = (1 << eLen) - 1;
          var eBias = eMax >> 1;
          var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
          var i = isLE ? 0 : nBytes - 1;
          var d = isLE ? 1 : -1;
          var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;

          value = Math.abs(value);

          if (isNaN(value) || value === Infinity) {
            m = isNaN(value) ? 1 : 0;
            e = eMax;
          } else {
            e = Math.floor(Math.log(value) / Math.LN2);
            if (value * (c = Math.pow(2, -e)) < 1) {
              e--;
              c *= 2;
            }
            if (e + eBias >= 1) {
              value += rt / c;
            } else {
              value += rt * Math.pow(2, 1 - eBias);
            }
            if (value * c >= 2) {
              e++;
              c /= 2;
            }

            if (e + eBias >= eMax) {
              m = 0;
              e = eMax;
            } else if (e + eBias >= 1) {
              m = (value * c - 1) * Math.pow(2, mLen);
              e = e + eBias;
            } else {
              m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
              e = 0;
            }
          }

          for (
            ;
            mLen >= 8;
            buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8
          ) {}

          e = (e << mLen) | m;
          eLen += mLen;
          for (
            ;
            eLen > 0;
            buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8
          ) {}

          buffer[offset + i - d] |= s * 128;
        };

        /***/
      },

    /***/ '../node_modules/inherits/inherits_browser.js':
      /*!****************************************************!*\
  !*** ../node_modules/inherits/inherits_browser.js ***!
  \****************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        if (typeof Object.create === 'function') {
          // implementation from standard node.js 'util' module
          module.exports = function inherits(ctor, superCtor) {
            if (superCtor) {
              ctor.super_ = superCtor;
              ctor.prototype = Object.create(superCtor.prototype, {
                constructor: {
                  value: ctor,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              });
            }
          };
        } else {
          // old school shim for old browsers
          module.exports = function inherits(ctor, superCtor) {
            if (superCtor) {
              ctor.super_ = superCtor;
              var TempCtor = function () {};
              TempCtor.prototype = superCtor.prototype;
              ctor.prototype = new TempCtor();
              ctor.prototype.constructor = ctor;
            }
          };
        }

        /***/
      },

    /***/ '../node_modules/isarray/index.js':
      /*!****************************************!*\
  !*** ../node_modules/isarray/index.js ***!
  \****************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        var toString = {}.toString;

        module.exports =
          Array.isArray ||
          function (arr) {
            return toString.call(arr) == '[object Array]';
          };

        /***/
      },

    /***/ '../node_modules/md5.js/index.js':
      /*!***************************************!*\
  !*** ../node_modules/md5.js/index.js ***!
  \***************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );
        var HashBase = __webpack_require__(
          /*! hash-base */ '../node_modules/hash-base/index.js'
        );
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;

        var ARRAY16 = new Array(16);

        function MD5() {
          HashBase.call(this, 64);

          // state
          this._a = 0x67452301;
          this._b = 0xefcdab89;
          this._c = 0x98badcfe;
          this._d = 0x10325476;
        }

        inherits(MD5, HashBase);

        MD5.prototype._update = function () {
          var M = ARRAY16;
          for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4);

          var a = this._a;
          var b = this._b;
          var c = this._c;
          var d = this._d;

          a = fnF(a, b, c, d, M[0], 0xd76aa478, 7);
          d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12);
          c = fnF(c, d, a, b, M[2], 0x242070db, 17);
          b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22);
          a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7);
          d = fnF(d, a, b, c, M[5], 0x4787c62a, 12);
          c = fnF(c, d, a, b, M[6], 0xa8304613, 17);
          b = fnF(b, c, d, a, M[7], 0xfd469501, 22);
          a = fnF(a, b, c, d, M[8], 0x698098d8, 7);
          d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12);
          c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17);
          b = fnF(b, c, d, a, M[11], 0x895cd7be, 22);
          a = fnF(a, b, c, d, M[12], 0x6b901122, 7);
          d = fnF(d, a, b, c, M[13], 0xfd987193, 12);
          c = fnF(c, d, a, b, M[14], 0xa679438e, 17);
          b = fnF(b, c, d, a, M[15], 0x49b40821, 22);

          a = fnG(a, b, c, d, M[1], 0xf61e2562, 5);
          d = fnG(d, a, b, c, M[6], 0xc040b340, 9);
          c = fnG(c, d, a, b, M[11], 0x265e5a51, 14);
          b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20);
          a = fnG(a, b, c, d, M[5], 0xd62f105d, 5);
          d = fnG(d, a, b, c, M[10], 0x02441453, 9);
          c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14);
          b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20);
          a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5);
          d = fnG(d, a, b, c, M[14], 0xc33707d6, 9);
          c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14);
          b = fnG(b, c, d, a, M[8], 0x455a14ed, 20);
          a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5);
          d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9);
          c = fnG(c, d, a, b, M[7], 0x676f02d9, 14);
          b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20);

          a = fnH(a, b, c, d, M[5], 0xfffa3942, 4);
          d = fnH(d, a, b, c, M[8], 0x8771f681, 11);
          c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16);
          b = fnH(b, c, d, a, M[14], 0xfde5380c, 23);
          a = fnH(a, b, c, d, M[1], 0xa4beea44, 4);
          d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11);
          c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16);
          b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23);
          a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4);
          d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11);
          c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16);
          b = fnH(b, c, d, a, M[6], 0x04881d05, 23);
          a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4);
          d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11);
          c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16);
          b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23);

          a = fnI(a, b, c, d, M[0], 0xf4292244, 6);
          d = fnI(d, a, b, c, M[7], 0x432aff97, 10);
          c = fnI(c, d, a, b, M[14], 0xab9423a7, 15);
          b = fnI(b, c, d, a, M[5], 0xfc93a039, 21);
          a = fnI(a, b, c, d, M[12], 0x655b59c3, 6);
          d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10);
          c = fnI(c, d, a, b, M[10], 0xffeff47d, 15);
          b = fnI(b, c, d, a, M[1], 0x85845dd1, 21);
          a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6);
          d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10);
          c = fnI(c, d, a, b, M[6], 0xa3014314, 15);
          b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21);
          a = fnI(a, b, c, d, M[4], 0xf7537e82, 6);
          d = fnI(d, a, b, c, M[11], 0xbd3af235, 10);
          c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15);
          b = fnI(b, c, d, a, M[9], 0xeb86d391, 21);

          this._a = (this._a + a) | 0;
          this._b = (this._b + b) | 0;
          this._c = (this._c + c) | 0;
          this._d = (this._d + d) | 0;
        };

        MD5.prototype._digest = function () {
          // create padding and handle blocks
          this._block[this._blockOffset++] = 0x80;
          if (this._blockOffset > 56) {
            this._block.fill(0, this._blockOffset, 64);
            this._update();
            this._blockOffset = 0;
          }

          this._block.fill(0, this._blockOffset, 56);
          this._block.writeUInt32LE(this._length[0], 56);
          this._block.writeUInt32LE(this._length[1], 60);
          this._update();

          // produce result
          var buffer = Buffer.allocUnsafe(16);
          buffer.writeInt32LE(this._a, 0);
          buffer.writeInt32LE(this._b, 4);
          buffer.writeInt32LE(this._c, 8);
          buffer.writeInt32LE(this._d, 12);
          return buffer;
        };

        function rotl(x, n) {
          return (x << n) | (x >>> (32 - n));
        }

        function fnF(a, b, c, d, m, k, s) {
          return (rotl((a + ((b & c) | (~b & d)) + m + k) | 0, s) + b) | 0;
        }

        function fnG(a, b, c, d, m, k, s) {
          return (rotl((a + ((b & d) | (c & ~d)) + m + k) | 0, s) + b) | 0;
        }

        function fnH(a, b, c, d, m, k, s) {
          return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0;
        }

        function fnI(a, b, c, d, m, k, s) {
          return (rotl((a + (c ^ (b | ~d)) + m + k) | 0, s) + b) | 0;
        }

        module.exports = MD5;

        /***/
      },

    /***/ '../node_modules/miller-rabin/lib/mr.js':
      /*!**********************************************!*\
  !*** ../node_modules/miller-rabin/lib/mr.js ***!
  \**********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var bn = __webpack_require__(
          /*! bn.js */ '../node_modules/miller-rabin/node_modules/bn.js/lib/bn.js'
        );
        var brorand = __webpack_require__(
          /*! brorand */ '../node_modules/brorand/index.js'
        );

        function MillerRabin(rand) {
          this.rand = rand || new brorand.Rand();
        }
        module.exports = MillerRabin;

        MillerRabin.create = function create(rand) {
          return new MillerRabin(rand);
        };

        MillerRabin.prototype._randbelow = function _randbelow(n) {
          var len = n.bitLength();
          var min_bytes = Math.ceil(len / 8);

          // Generage random bytes until a number less than n is found.
          // This ensures that 0..n-1 have an equal probability of being selected.
          do var a = new bn(this.rand.generate(min_bytes));
          while (a.cmp(n) >= 0);

          return a;
        };

        MillerRabin.prototype._randrange = function _randrange(start, stop) {
          // Generate a random number greater than or equal to start and less than stop.
          var size = stop.sub(start);
          return start.add(this._randbelow(size));
        };

        MillerRabin.prototype.test = function test(n, k, cb) {
          var len = n.bitLength();
          var red = bn.mont(n);
          var rone = new bn(1).toRed(red);

          if (!k) k = Math.max(1, (len / 48) | 0);

          // Find d and s, (n - 1) = (2 ^ s) * d;
          var n1 = n.subn(1);
          for (var s = 0; !n1.testn(s); s++) {}
          var d = n.shrn(s);

          var rn1 = n1.toRed(red);

          var prime = true;
          for (; k > 0; k--) {
            var a = this._randrange(new bn(2), n1);
            if (cb) cb(a);

            var x = a.toRed(red).redPow(d);
            if (x.cmp(rone) === 0 || x.cmp(rn1) === 0) continue;

            for (var i = 1; i < s; i++) {
              x = x.redSqr();

              if (x.cmp(rone) === 0) return false;
              if (x.cmp(rn1) === 0) break;
            }

            if (i === s) return false;
          }

          return prime;
        };

        MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
          var len = n.bitLength();
          var red = bn.mont(n);
          var rone = new bn(1).toRed(red);

          if (!k) k = Math.max(1, (len / 48) | 0);

          // Find d and s, (n - 1) = (2 ^ s) * d;
          var n1 = n.subn(1);
          for (var s = 0; !n1.testn(s); s++) {}
          var d = n.shrn(s);

          var rn1 = n1.toRed(red);

          for (; k > 0; k--) {
            var a = this._randrange(new bn(2), n1);

            var g = n.gcd(a);
            if (g.cmpn(1) !== 0) return g;

            var x = a.toRed(red).redPow(d);
            if (x.cmp(rone) === 0 || x.cmp(rn1) === 0) continue;

            for (var i = 1; i < s; i++) {
              x = x.redSqr();

              if (x.cmp(rone) === 0) return x.fromRed().subn(1).gcd(n);
              if (x.cmp(rn1) === 0) break;
            }

            if (i === s) {
              x = x.redSqr();
              return x.fromRed().subn(1).gcd(n);
            }
          }

          return false;
        };

        /***/
      },

    /***/ '../node_modules/miller-rabin/node_modules/bn.js/lib/bn.js':
      /*!*****************************************************************!*\
  !*** ../node_modules/miller-rabin/node_modules/bn.js/lib/bn.js ***!
  \*****************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function (module) {
          (function (module, exports) {
            'use strict';

            // Utils
            function assert(val, msg) {
              if (!val) throw new Error(msg || 'Assertion failed');
            }

            // Could use `inherits` module, but don't want to move from single file
            // architecture yet.
            function inherits(ctor, superCtor) {
              ctor.super_ = superCtor;
              var TempCtor = function () {};
              TempCtor.prototype = superCtor.prototype;
              ctor.prototype = new TempCtor();
              ctor.prototype.constructor = ctor;
            }

            // BN

            function BN(number, base, endian) {
              if (BN.isBN(number)) {
                return number;
              }

              this.negative = 0;
              this.words = null;
              this.length = 0;

              // Reduction context
              this.red = null;

              if (number !== null) {
                if (base === 'le' || base === 'be') {
                  endian = base;
                  base = 10;
                }

                this._init(number || 0, base || 10, endian || 'be');
              }
            }
            if (typeof module === 'object') {
              module.exports = BN;
            } else {
              exports.BN = BN;
            }

            BN.BN = BN;
            BN.wordSize = 26;

            var Buffer;
            try {
              Buffer = __webpack_require__(/*! buffer */ 6).Buffer;
            } catch (e) {}

            BN.isBN = function isBN(num) {
              if (num instanceof BN) {
                return true;
              }

              return (
                num !== null &&
                typeof num === 'object' &&
                num.constructor.wordSize === BN.wordSize &&
                Array.isArray(num.words)
              );
            };

            BN.max = function max(left, right) {
              if (left.cmp(right) > 0) return left;
              return right;
            };

            BN.min = function min(left, right) {
              if (left.cmp(right) < 0) return left;
              return right;
            };

            BN.prototype._init = function init(number, base, endian) {
              if (typeof number === 'number') {
                return this._initNumber(number, base, endian);
              }

              if (typeof number === 'object') {
                return this._initArray(number, base, endian);
              }

              if (base === 'hex') {
                base = 16;
              }
              assert(base === (base | 0) && base >= 2 && base <= 36);

              number = number.toString().replace(/\s+/g, '');
              var start = 0;
              if (number[0] === '-') {
                start++;
              }

              if (base === 16) {
                this._parseHex(number, start);
              } else {
                this._parseBase(number, base, start);
              }

              if (number[0] === '-') {
                this.negative = 1;
              }

              this.strip();

              if (endian !== 'le') return;

              this._initArray(this.toArray(), base, endian);
            };

            BN.prototype._initNumber = function _initNumber(
              number,
              base,
              endian
            ) {
              if (number < 0) {
                this.negative = 1;
                number = -number;
              }
              if (number < 0x4000000) {
                this.words = [number & 0x3ffffff];
                this.length = 1;
              } else if (number < 0x10000000000000) {
                this.words = [
                  number & 0x3ffffff,
                  (number / 0x4000000) & 0x3ffffff,
                ];
                this.length = 2;
              } else {
                assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
                this.words = [
                  number & 0x3ffffff,
                  (number / 0x4000000) & 0x3ffffff,
                  1,
                ];
                this.length = 3;
              }

              if (endian !== 'le') return;

              // Reverse the bytes
              this._initArray(this.toArray(), base, endian);
            };

            BN.prototype._initArray = function _initArray(
              number,
              base,
              endian
            ) {
              // Perhaps a Uint8Array
              assert(typeof number.length === 'number');
              if (number.length <= 0) {
                this.words = [0];
                this.length = 1;
                return this;
              }

              this.length = Math.ceil(number.length / 3);
              this.words = new Array(this.length);
              for (var i = 0; i < this.length; i++) {
                this.words[i] = 0;
              }

              var j, w;
              var off = 0;
              if (endian === 'be') {
                for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
                  w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
                  this.words[j] |= (w << off) & 0x3ffffff;
                  this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
                  off += 24;
                  if (off >= 26) {
                    off -= 26;
                    j++;
                  }
                }
              } else if (endian === 'le') {
                for (i = 0, j = 0; i < number.length; i += 3) {
                  w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
                  this.words[j] |= (w << off) & 0x3ffffff;
                  this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
                  off += 24;
                  if (off >= 26) {
                    off -= 26;
                    j++;
                  }
                }
              }
              return this.strip();
            };

            function parseHex(str, start, end) {
              var r = 0;
              var len = Math.min(str.length, end);
              for (var i = start; i < len; i++) {
                var c = str.charCodeAt(i) - 48;

                r <<= 4;

                // 'a' - 'f'
                if (c >= 49 && c <= 54) {
                  r |= c - 49 + 0xa;

                  // 'A' - 'F'
                } else if (c >= 17 && c <= 22) {
                  r |= c - 17 + 0xa;

                  // '0' - '9'
                } else {
                  r |= c & 0xf;
                }
              }
              return r;
            }

            BN.prototype._parseHex = function _parseHex(number, start) {
              // Create possibly bigger array to ensure that it fits the number
              this.length = Math.ceil((number.length - start) / 6);
              this.words = new Array(this.length);
              for (var i = 0; i < this.length; i++) {
                this.words[i] = 0;
              }

              var j, w;
              // Scan 24-bit chunks and add them to the number
              var off = 0;
              for (i = number.length - 6, j = 0; i >= start; i -= 6) {
                w = parseHex(number, i, i + 6);
                this.words[j] |= (w << off) & 0x3ffffff;
                // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
                this.words[j + 1] |= (w >>> (26 - off)) & 0x3fffff;
                off += 24;
                if (off >= 26) {
                  off -= 26;
                  j++;
                }
              }
              if (i + 6 !== start) {
                w = parseHex(number, start, i + 6);
                this.words[j] |= (w << off) & 0x3ffffff;
                this.words[j + 1] |= (w >>> (26 - off)) & 0x3fffff;
              }
              this.strip();
            };

            function parseBase(str, start, end, mul) {
              var r = 0;
              var len = Math.min(str.length, end);
              for (var i = start; i < len; i++) {
                var c = str.charCodeAt(i) - 48;

                r *= mul;

                // 'a'
                if (c >= 49) {
                  r += c - 49 + 0xa;

                  // 'A'
                } else if (c >= 17) {
                  r += c - 17 + 0xa;

                  // '0' - '9'
                } else {
                  r += c;
                }
              }
              return r;
            }

            BN.prototype._parseBase = function _parseBase(number, base, start) {
              // Initialize as zero
              this.words = [0];
              this.length = 1;

              // Find length of limb in base
              for (
                var limbLen = 0, limbPow = 1;
                limbPow <= 0x3ffffff;
                limbPow *= base
              ) {
                limbLen++;
              }
              limbLen--;
              limbPow = (limbPow / base) | 0;

              var total = number.length - start;
              var mod = total % limbLen;
              var end = Math.min(total, total - mod) + start;

              var word = 0;
              for (var i = start; i < end; i += limbLen) {
                word = parseBase(number, i, i + limbLen, base);

                this.imuln(limbPow);
                if (this.words[0] + word < 0x4000000) {
                  this.words[0] += word;
                } else {
                  this._iaddn(word);
                }
              }

              if (mod !== 0) {
                var pow = 1;
                word = parseBase(number, i, number.length, base);

                for (i = 0; i < mod; i++) {
                  pow *= base;
                }

                this.imuln(pow);
                if (this.words[0] + word < 0x4000000) {
                  this.words[0] += word;
                } else {
                  this._iaddn(word);
                }
              }
            };

            BN.prototype.copy = function copy(dest) {
              dest.words = new Array(this.length);
              for (var i = 0; i < this.length; i++) {
                dest.words[i] = this.words[i];
              }
              dest.length = this.length;
              dest.negative = this.negative;
              dest.red = this.red;
            };

            BN.prototype.clone = function clone() {
              var r = new BN(null);
              this.copy(r);
              return r;
            };

            BN.prototype._expand = function _expand(size) {
              while (this.length < size) {
                this.words[this.length++] = 0;
              }
              return this;
            };

            // Remove leading `0` from `this`
            BN.prototype.strip = function strip() {
              while (this.length > 1 && this.words[this.length - 1] === 0) {
                this.length--;
              }
              return this._normSign();
            };

            BN.prototype._normSign = function _normSign() {
              // -0 = 0
              if (this.length === 1 && this.words[0] === 0) {
                this.negative = 0;
              }
              return this;
            };

            BN.prototype.inspect = function inspect() {
              return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
            };

            /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

            var zeros = [
              '',
              '0',
              '00',
              '000',
              '0000',
              '00000',
              '000000',
              '0000000',
              '00000000',
              '000000000',
              '0000000000',
              '00000000000',
              '000000000000',
              '0000000000000',
              '00000000000000',
              '000000000000000',
              '0000000000000000',
              '00000000000000000',
              '000000000000000000',
              '0000000000000000000',
              '00000000000000000000',
              '000000000000000000000',
              '0000000000000000000000',
              '00000000000000000000000',
              '000000000000000000000000',
              '0000000000000000000000000',
            ];

            var groupSizes = [
              0,
              0,
              25,
              16,
              12,
              11,
              10,
              9,
              8,
              8,
              7,
              7,
              7,
              7,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
            ];

            var groupBases = [
              0,
              0,
              33554432,
              43046721,
              16777216,
              48828125,
              60466176,
              40353607,
              16777216,
              43046721,
              10000000,
              19487171,
              35831808,
              62748517,
              7529536,
              11390625,
              16777216,
              24137569,
              34012224,
              47045881,
              64000000,
              4084101,
              5153632,
              6436343,
              7962624,
              9765625,
              11881376,
              14348907,
              17210368,
              20511149,
              24300000,
              28629151,
              33554432,
              39135393,
              45435424,
              52521875,
              60466176,
            ];

            BN.prototype.toString = function toString(base, padding) {
              base = base || 10;
              padding = padding | 0 || 1;

              var out;
              if (base === 16 || base === 'hex') {
                out = '';
                var off = 0;
                var carry = 0;
                for (var i = 0; i < this.length; i++) {
                  var w = this.words[i];
                  var word = (((w << off) | carry) & 0xffffff).toString(16);
                  carry = (w >>> (24 - off)) & 0xffffff;
                  if (carry !== 0 || i !== this.length - 1) {
                    out = zeros[6 - word.length] + word + out;
                  } else {
                    out = word + out;
                  }
                  off += 2;
                  if (off >= 26) {
                    off -= 26;
                    i--;
                  }
                }
                if (carry !== 0) {
                  out = carry.toString(16) + out;
                }
                while (out.length % padding !== 0) {
                  out = '0' + out;
                }
                if (this.negative !== 0) {
                  out = '-' + out;
                }
                return out;
              }

              if (base === (base | 0) && base >= 2 && base <= 36) {
                // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
                var groupSize = groupSizes[base];
                // var groupBase = Math.pow(base, groupSize);
                var groupBase = groupBases[base];
                out = '';
                var c = this.clone();
                c.negative = 0;
                while (!c.isZero()) {
                  var r = c.modn(groupBase).toString(base);
                  c = c.idivn(groupBase);

                  if (!c.isZero()) {
                    out = zeros[groupSize - r.length] + r + out;
                  } else {
                    out = r + out;
                  }
                }
                if (this.isZero()) {
                  out = '0' + out;
                }
                while (out.length % padding !== 0) {
                  out = '0' + out;
                }
                if (this.negative !== 0) {
                  out = '-' + out;
                }
                return out;
              }

              assert(false, 'Base should be between 2 and 36');
            };

            BN.prototype.toNumber = function toNumber() {
              var ret = this.words[0];
              if (this.length === 2) {
                ret += this.words[1] * 0x4000000;
              } else if (this.length === 3 && this.words[2] === 0x01) {
                // NOTE: at this stage it is known that the top bit is set
                ret += 0x10000000000000 + this.words[1] * 0x4000000;
              } else if (this.length > 2) {
                assert(false, 'Number can only safely store up to 53 bits');
              }
              return this.negative !== 0 ? -ret : ret;
            };

            BN.prototype.toJSON = function toJSON() {
              return this.toString(16);
            };

            BN.prototype.toBuffer = function toBuffer(endian, length) {
              assert(typeof Buffer !== 'undefined');
              return this.toArrayLike(Buffer, endian, length);
            };

            BN.prototype.toArray = function toArray(endian, length) {
              return this.toArrayLike(Array, endian, length);
            };

            BN.prototype.toArrayLike = function toArrayLike(
              ArrayType,
              endian,
              length
            ) {
              var byteLength = this.byteLength();
              var reqLength = length || Math.max(1, byteLength);
              assert(
                byteLength <= reqLength,
                'byte array longer than desired length'
              );
              assert(reqLength > 0, 'Requested array length <= 0');

              this.strip();
              var littleEndian = endian === 'le';
              var res = new ArrayType(reqLength);

              var b, i;
              var q = this.clone();
              if (!littleEndian) {
                // Assume big-endian
                for (i = 0; i < reqLength - byteLength; i++) {
                  res[i] = 0;
                }

                for (i = 0; !q.isZero(); i++) {
                  b = q.andln(0xff);
                  q.iushrn(8);

                  res[reqLength - i - 1] = b;
                }
              } else {
                for (i = 0; !q.isZero(); i++) {
                  b = q.andln(0xff);
                  q.iushrn(8);

                  res[i] = b;
                }

                for (; i < reqLength; i++) {
                  res[i] = 0;
                }
              }

              return res;
            };

            if (Math.clz32) {
              BN.prototype._countBits = function _countBits(w) {
                return 32 - Math.clz32(w);
              };
            } else {
              BN.prototype._countBits = function _countBits(w) {
                var t = w;
                var r = 0;
                if (t >= 0x1000) {
                  r += 13;
                  t >>>= 13;
                }
                if (t >= 0x40) {
                  r += 7;
                  t >>>= 7;
                }
                if (t >= 0x8) {
                  r += 4;
                  t >>>= 4;
                }
                if (t >= 0x02) {
                  r += 2;
                  t >>>= 2;
                }
                return r + t;
              };
            }

            BN.prototype._zeroBits = function _zeroBits(w) {
              // Short-cut
              if (w === 0) return 26;

              var t = w;
              var r = 0;
              if ((t & 0x1fff) === 0) {
                r += 13;
                t >>>= 13;
              }
              if ((t & 0x7f) === 0) {
                r += 7;
                t >>>= 7;
              }
              if ((t & 0xf) === 0) {
                r += 4;
                t >>>= 4;
              }
              if ((t & 0x3) === 0) {
                r += 2;
                t >>>= 2;
              }
              if ((t & 0x1) === 0) {
                r++;
              }
              return r;
            };

            // Return number of used bits in a BN
            BN.prototype.bitLength = function bitLength() {
              var w = this.words[this.length - 1];
              var hi = this._countBits(w);
              return (this.length - 1) * 26 + hi;
            };

            function toBitArray(num) {
              var w = new Array(num.bitLength());

              for (var bit = 0; bit < w.length; bit++) {
                var off = (bit / 26) | 0;
                var wbit = bit % 26;

                w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
              }

              return w;
            }

            // Number of trailing zero bits
            BN.prototype.zeroBits = function zeroBits() {
              if (this.isZero()) return 0;

              var r = 0;
              for (var i = 0; i < this.length; i++) {
                var b = this._zeroBits(this.words[i]);
                r += b;
                if (b !== 26) break;
              }
              return r;
            };

            BN.prototype.byteLength = function byteLength() {
              return Math.ceil(this.bitLength() / 8);
            };

            BN.prototype.toTwos = function toTwos(width) {
              if (this.negative !== 0) {
                return this.abs().inotn(width).iaddn(1);
              }
              return this.clone();
            };

            BN.prototype.fromTwos = function fromTwos(width) {
              if (this.testn(width - 1)) {
                return this.notn(width).iaddn(1).ineg();
              }
              return this.clone();
            };

            BN.prototype.isNeg = function isNeg() {
              return this.negative !== 0;
            };

            // Return negative clone of `this`
            BN.prototype.neg = function neg() {
              return this.clone().ineg();
            };

            BN.prototype.ineg = function ineg() {
              if (!this.isZero()) {
                this.negative ^= 1;
              }

              return this;
            };

            // Or `num` with `this` in-place
            BN.prototype.iuor = function iuor(num) {
              while (this.length < num.length) {
                this.words[this.length++] = 0;
              }

              for (var i = 0; i < num.length; i++) {
                this.words[i] = this.words[i] | num.words[i];
              }

              return this.strip();
            };

            BN.prototype.ior = function ior(num) {
              assert((this.negative | num.negative) === 0);
              return this.iuor(num);
            };

            // Or `num` with `this`
            BN.prototype.or = function or(num) {
              if (this.length > num.length) return this.clone().ior(num);
              return num.clone().ior(this);
            };

            BN.prototype.uor = function uor(num) {
              if (this.length > num.length) return this.clone().iuor(num);
              return num.clone().iuor(this);
            };

            // And `num` with `this` in-place
            BN.prototype.iuand = function iuand(num) {
              // b = min-length(num, this)
              var b;
              if (this.length > num.length) {
                b = num;
              } else {
                b = this;
              }

              for (var i = 0; i < b.length; i++) {
                this.words[i] = this.words[i] & num.words[i];
              }

              this.length = b.length;

              return this.strip();
            };

            BN.prototype.iand = function iand(num) {
              assert((this.negative | num.negative) === 0);
              return this.iuand(num);
            };

            // And `num` with `this`
            BN.prototype.and = function and(num) {
              if (this.length > num.length) return this.clone().iand(num);
              return num.clone().iand(this);
            };

            BN.prototype.uand = function uand(num) {
              if (this.length > num.length) return this.clone().iuand(num);
              return num.clone().iuand(this);
            };

            // Xor `num` with `this` in-place
            BN.prototype.iuxor = function iuxor(num) {
              // a.length > b.length
              var a;
              var b;
              if (this.length > num.length) {
                a = this;
                b = num;
              } else {
                a = num;
                b = this;
              }

              for (var i = 0; i < b.length; i++) {
                this.words[i] = a.words[i] ^ b.words[i];
              }

              if (this !== a) {
                for (; i < a.length; i++) {
                  this.words[i] = a.words[i];
                }
              }

              this.length = a.length;

              return this.strip();
            };

            BN.prototype.ixor = function ixor(num) {
              assert((this.negative | num.negative) === 0);
              return this.iuxor(num);
            };

            // Xor `num` with `this`
            BN.prototype.xor = function xor(num) {
              if (this.length > num.length) return this.clone().ixor(num);
              return num.clone().ixor(this);
            };

            BN.prototype.uxor = function uxor(num) {
              if (this.length > num.length) return this.clone().iuxor(num);
              return num.clone().iuxor(this);
            };

            // Not ``this`` with ``width`` bitwidth
            BN.prototype.inotn = function inotn(width) {
              assert(typeof width === 'number' && width >= 0);

              var bytesNeeded = Math.ceil(width / 26) | 0;
              var bitsLeft = width % 26;

              // Extend the buffer with leading zeroes
              this._expand(bytesNeeded);

              if (bitsLeft > 0) {
                bytesNeeded--;
              }

              // Handle complete words
              for (var i = 0; i < bytesNeeded; i++) {
                this.words[i] = ~this.words[i] & 0x3ffffff;
              }

              // Handle the residue
              if (bitsLeft > 0) {
                this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
              }

              // And remove leading zeroes
              return this.strip();
            };

            BN.prototype.notn = function notn(width) {
              return this.clone().inotn(width);
            };

            // Set `bit` of `this`
            BN.prototype.setn = function setn(bit, val) {
              assert(typeof bit === 'number' && bit >= 0);

              var off = (bit / 26) | 0;
              var wbit = bit % 26;

              this._expand(off + 1);

              if (val) {
                this.words[off] = this.words[off] | (1 << wbit);
              } else {
                this.words[off] = this.words[off] & ~(1 << wbit);
              }

              return this.strip();
            };

            // Add `num` to `this` in-place
            BN.prototype.iadd = function iadd(num) {
              var r;

              // negative + positive
              if (this.negative !== 0 && num.negative === 0) {
                this.negative = 0;
                r = this.isub(num);
                this.negative ^= 1;
                return this._normSign();

                // positive + negative
              } else if (this.negative === 0 && num.negative !== 0) {
                num.negative = 0;
                r = this.isub(num);
                num.negative = 1;
                return r._normSign();
              }

              // a.length > b.length
              var a, b;
              if (this.length > num.length) {
                a = this;
                b = num;
              } else {
                a = num;
                b = this;
              }

              var carry = 0;
              for (var i = 0; i < b.length; i++) {
                r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
                this.words[i] = r & 0x3ffffff;
                carry = r >>> 26;
              }
              for (; carry !== 0 && i < a.length; i++) {
                r = (a.words[i] | 0) + carry;
                this.words[i] = r & 0x3ffffff;
                carry = r >>> 26;
              }

              this.length = a.length;
              if (carry !== 0) {
                this.words[this.length] = carry;
                this.length++;
                // Copy the rest of the words
              } else if (a !== this) {
                for (; i < a.length; i++) {
                  this.words[i] = a.words[i];
                }
              }

              return this;
            };

            // Add `num` to `this`
            BN.prototype.add = function add(num) {
              var res;
              if (num.negative !== 0 && this.negative === 0) {
                num.negative = 0;
                res = this.sub(num);
                num.negative ^= 1;
                return res;
              } else if (num.negative === 0 && this.negative !== 0) {
                this.negative = 0;
                res = num.sub(this);
                this.negative = 1;
                return res;
              }

              if (this.length > num.length) return this.clone().iadd(num);

              return num.clone().iadd(this);
            };

            // Subtract `num` from `this` in-place
            BN.prototype.isub = function isub(num) {
              // this - (-num) = this + num
              if (num.negative !== 0) {
                num.negative = 0;
                var r = this.iadd(num);
                num.negative = 1;
                return r._normSign();

                // -this - num = -(this + num)
              } else if (this.negative !== 0) {
                this.negative = 0;
                this.iadd(num);
                this.negative = 1;
                return this._normSign();
              }

              // At this point both numbers are positive
              var cmp = this.cmp(num);

              // Optimization - zeroify
              if (cmp === 0) {
                this.negative = 0;
                this.length = 1;
                this.words[0] = 0;
                return this;
              }

              // a > b
              var a, b;
              if (cmp > 0) {
                a = this;
                b = num;
              } else {
                a = num;
                b = this;
              }

              var carry = 0;
              for (var i = 0; i < b.length; i++) {
                r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
                carry = r >> 26;
                this.words[i] = r & 0x3ffffff;
              }
              for (; carry !== 0 && i < a.length; i++) {
                r = (a.words[i] | 0) + carry;
                carry = r >> 26;
                this.words[i] = r & 0x3ffffff;
              }

              // Copy rest of the words
              if (carry === 0 && i < a.length && a !== this) {
                for (; i < a.length; i++) {
                  this.words[i] = a.words[i];
                }
              }

              this.length = Math.max(this.length, i);

              if (a !== this) {
                this.negative = 1;
              }

              return this.strip();
            };

            // Subtract `num` from `this`
            BN.prototype.sub = function sub(num) {
              return this.clone().isub(num);
            };

            function smallMulTo(self, num, out) {
              out.negative = num.negative ^ self.negative;
              var len = (self.length + num.length) | 0;
              out.length = len;
              len = (len - 1) | 0;

              // Peel one iteration (compiler can't do it, because of code complexity)
              var a = self.words[0] | 0;
              var b = num.words[0] | 0;
              var r = a * b;

              var lo = r & 0x3ffffff;
              var carry = (r / 0x4000000) | 0;
              out.words[0] = lo;

              for (var k = 1; k < len; k++) {
                // Sum all words with the same `i + j = k` and accumulate `ncarry`,
                // note that ncarry could be >= 0x3ffffff
                var ncarry = carry >>> 26;
                var rword = carry & 0x3ffffff;
                var maxJ = Math.min(k, num.length - 1);
                for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                  var i = (k - j) | 0;
                  a = self.words[i] | 0;
                  b = num.words[j] | 0;
                  r = a * b + rword;
                  ncarry += (r / 0x4000000) | 0;
                  rword = r & 0x3ffffff;
                }
                out.words[k] = rword | 0;
                carry = ncarry | 0;
              }
              if (carry !== 0) {
                out.words[k] = carry | 0;
              } else {
                out.length--;
              }

              return out.strip();
            }

            // TODO(indutny): it may be reasonable to omit it for users who don't need
            // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
            // multiplication (like elliptic secp256k1).
            var comb10MulTo = function comb10MulTo(self, num, out) {
              var a = self.words;
              var b = num.words;
              var o = out.words;
              var c = 0;
              var lo;
              var mid;
              var hi;
              var a0 = a[0] | 0;
              var al0 = a0 & 0x1fff;
              var ah0 = a0 >>> 13;
              var a1 = a[1] | 0;
              var al1 = a1 & 0x1fff;
              var ah1 = a1 >>> 13;
              var a2 = a[2] | 0;
              var al2 = a2 & 0x1fff;
              var ah2 = a2 >>> 13;
              var a3 = a[3] | 0;
              var al3 = a3 & 0x1fff;
              var ah3 = a3 >>> 13;
              var a4 = a[4] | 0;
              var al4 = a4 & 0x1fff;
              var ah4 = a4 >>> 13;
              var a5 = a[5] | 0;
              var al5 = a5 & 0x1fff;
              var ah5 = a5 >>> 13;
              var a6 = a[6] | 0;
              var al6 = a6 & 0x1fff;
              var ah6 = a6 >>> 13;
              var a7 = a[7] | 0;
              var al7 = a7 & 0x1fff;
              var ah7 = a7 >>> 13;
              var a8 = a[8] | 0;
              var al8 = a8 & 0x1fff;
              var ah8 = a8 >>> 13;
              var a9 = a[9] | 0;
              var al9 = a9 & 0x1fff;
              var ah9 = a9 >>> 13;
              var b0 = b[0] | 0;
              var bl0 = b0 & 0x1fff;
              var bh0 = b0 >>> 13;
              var b1 = b[1] | 0;
              var bl1 = b1 & 0x1fff;
              var bh1 = b1 >>> 13;
              var b2 = b[2] | 0;
              var bl2 = b2 & 0x1fff;
              var bh2 = b2 >>> 13;
              var b3 = b[3] | 0;
              var bl3 = b3 & 0x1fff;
              var bh3 = b3 >>> 13;
              var b4 = b[4] | 0;
              var bl4 = b4 & 0x1fff;
              var bh4 = b4 >>> 13;
              var b5 = b[5] | 0;
              var bl5 = b5 & 0x1fff;
              var bh5 = b5 >>> 13;
              var b6 = b[6] | 0;
              var bl6 = b6 & 0x1fff;
              var bh6 = b6 >>> 13;
              var b7 = b[7] | 0;
              var bl7 = b7 & 0x1fff;
              var bh7 = b7 >>> 13;
              var b8 = b[8] | 0;
              var bl8 = b8 & 0x1fff;
              var bh8 = b8 >>> 13;
              var b9 = b[9] | 0;
              var bl9 = b9 & 0x1fff;
              var bh9 = b9 >>> 13;

              out.negative = self.negative ^ num.negative;
              out.length = 19;
              /* k = 0 */
              lo = Math.imul(al0, bl0);
              mid = Math.imul(al0, bh0);
              mid = (mid + Math.imul(ah0, bl0)) | 0;
              hi = Math.imul(ah0, bh0);
              var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
              w0 &= 0x3ffffff;
              /* k = 1 */
              lo = Math.imul(al1, bl0);
              mid = Math.imul(al1, bh0);
              mid = (mid + Math.imul(ah1, bl0)) | 0;
              hi = Math.imul(ah1, bh0);
              lo = (lo + Math.imul(al0, bl1)) | 0;
              mid = (mid + Math.imul(al0, bh1)) | 0;
              mid = (mid + Math.imul(ah0, bl1)) | 0;
              hi = (hi + Math.imul(ah0, bh1)) | 0;
              var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
              w1 &= 0x3ffffff;
              /* k = 2 */
              lo = Math.imul(al2, bl0);
              mid = Math.imul(al2, bh0);
              mid = (mid + Math.imul(ah2, bl0)) | 0;
              hi = Math.imul(ah2, bh0);
              lo = (lo + Math.imul(al1, bl1)) | 0;
              mid = (mid + Math.imul(al1, bh1)) | 0;
              mid = (mid + Math.imul(ah1, bl1)) | 0;
              hi = (hi + Math.imul(ah1, bh1)) | 0;
              lo = (lo + Math.imul(al0, bl2)) | 0;
              mid = (mid + Math.imul(al0, bh2)) | 0;
              mid = (mid + Math.imul(ah0, bl2)) | 0;
              hi = (hi + Math.imul(ah0, bh2)) | 0;
              var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
              w2 &= 0x3ffffff;
              /* k = 3 */
              lo = Math.imul(al3, bl0);
              mid = Math.imul(al3, bh0);
              mid = (mid + Math.imul(ah3, bl0)) | 0;
              hi = Math.imul(ah3, bh0);
              lo = (lo + Math.imul(al2, bl1)) | 0;
              mid = (mid + Math.imul(al2, bh1)) | 0;
              mid = (mid + Math.imul(ah2, bl1)) | 0;
              hi = (hi + Math.imul(ah2, bh1)) | 0;
              lo = (lo + Math.imul(al1, bl2)) | 0;
              mid = (mid + Math.imul(al1, bh2)) | 0;
              mid = (mid + Math.imul(ah1, bl2)) | 0;
              hi = (hi + Math.imul(ah1, bh2)) | 0;
              lo = (lo + Math.imul(al0, bl3)) | 0;
              mid = (mid + Math.imul(al0, bh3)) | 0;
              mid = (mid + Math.imul(ah0, bl3)) | 0;
              hi = (hi + Math.imul(ah0, bh3)) | 0;
              var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
              w3 &= 0x3ffffff;
              /* k = 4 */
              lo = Math.imul(al4, bl0);
              mid = Math.imul(al4, bh0);
              mid = (mid + Math.imul(ah4, bl0)) | 0;
              hi = Math.imul(ah4, bh0);
              lo = (lo + Math.imul(al3, bl1)) | 0;
              mid = (mid + Math.imul(al3, bh1)) | 0;
              mid = (mid + Math.imul(ah3, bl1)) | 0;
              hi = (hi + Math.imul(ah3, bh1)) | 0;
              lo = (lo + Math.imul(al2, bl2)) | 0;
              mid = (mid + Math.imul(al2, bh2)) | 0;
              mid = (mid + Math.imul(ah2, bl2)) | 0;
              hi = (hi + Math.imul(ah2, bh2)) | 0;
              lo = (lo + Math.imul(al1, bl3)) | 0;
              mid = (mid + Math.imul(al1, bh3)) | 0;
              mid = (mid + Math.imul(ah1, bl3)) | 0;
              hi = (hi + Math.imul(ah1, bh3)) | 0;
              lo = (lo + Math.imul(al0, bl4)) | 0;
              mid = (mid + Math.imul(al0, bh4)) | 0;
              mid = (mid + Math.imul(ah0, bl4)) | 0;
              hi = (hi + Math.imul(ah0, bh4)) | 0;
              var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
              w4 &= 0x3ffffff;
              /* k = 5 */
              lo = Math.imul(al5, bl0);
              mid = Math.imul(al5, bh0);
              mid = (mid + Math.imul(ah5, bl0)) | 0;
              hi = Math.imul(ah5, bh0);
              lo = (lo + Math.imul(al4, bl1)) | 0;
              mid = (mid + Math.imul(al4, bh1)) | 0;
              mid = (mid + Math.imul(ah4, bl1)) | 0;
              hi = (hi + Math.imul(ah4, bh1)) | 0;
              lo = (lo + Math.imul(al3, bl2)) | 0;
              mid = (mid + Math.imul(al3, bh2)) | 0;
              mid = (mid + Math.imul(ah3, bl2)) | 0;
              hi = (hi + Math.imul(ah3, bh2)) | 0;
              lo = (lo + Math.imul(al2, bl3)) | 0;
              mid = (mid + Math.imul(al2, bh3)) | 0;
              mid = (mid + Math.imul(ah2, bl3)) | 0;
              hi = (hi + Math.imul(ah2, bh3)) | 0;
              lo = (lo + Math.imul(al1, bl4)) | 0;
              mid = (mid + Math.imul(al1, bh4)) | 0;
              mid = (mid + Math.imul(ah1, bl4)) | 0;
              hi = (hi + Math.imul(ah1, bh4)) | 0;
              lo = (lo + Math.imul(al0, bl5)) | 0;
              mid = (mid + Math.imul(al0, bh5)) | 0;
              mid = (mid + Math.imul(ah0, bl5)) | 0;
              hi = (hi + Math.imul(ah0, bh5)) | 0;
              var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
              w5 &= 0x3ffffff;
              /* k = 6 */
              lo = Math.imul(al6, bl0);
              mid = Math.imul(al6, bh0);
              mid = (mid + Math.imul(ah6, bl0)) | 0;
              hi = Math.imul(ah6, bh0);
              lo = (lo + Math.imul(al5, bl1)) | 0;
              mid = (mid + Math.imul(al5, bh1)) | 0;
              mid = (mid + Math.imul(ah5, bl1)) | 0;
              hi = (hi + Math.imul(ah5, bh1)) | 0;
              lo = (lo + Math.imul(al4, bl2)) | 0;
              mid = (mid + Math.imul(al4, bh2)) | 0;
              mid = (mid + Math.imul(ah4, bl2)) | 0;
              hi = (hi + Math.imul(ah4, bh2)) | 0;
              lo = (lo + Math.imul(al3, bl3)) | 0;
              mid = (mid + Math.imul(al3, bh3)) | 0;
              mid = (mid + Math.imul(ah3, bl3)) | 0;
              hi = (hi + Math.imul(ah3, bh3)) | 0;
              lo = (lo + Math.imul(al2, bl4)) | 0;
              mid = (mid + Math.imul(al2, bh4)) | 0;
              mid = (mid + Math.imul(ah2, bl4)) | 0;
              hi = (hi + Math.imul(ah2, bh4)) | 0;
              lo = (lo + Math.imul(al1, bl5)) | 0;
              mid = (mid + Math.imul(al1, bh5)) | 0;
              mid = (mid + Math.imul(ah1, bl5)) | 0;
              hi = (hi + Math.imul(ah1, bh5)) | 0;
              lo = (lo + Math.imul(al0, bl6)) | 0;
              mid = (mid + Math.imul(al0, bh6)) | 0;
              mid = (mid + Math.imul(ah0, bl6)) | 0;
              hi = (hi + Math.imul(ah0, bh6)) | 0;
              var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
              w6 &= 0x3ffffff;
              /* k = 7 */
              lo = Math.imul(al7, bl0);
              mid = Math.imul(al7, bh0);
              mid = (mid + Math.imul(ah7, bl0)) | 0;
              hi = Math.imul(ah7, bh0);
              lo = (lo + Math.imul(al6, bl1)) | 0;
              mid = (mid + Math.imul(al6, bh1)) | 0;
              mid = (mid + Math.imul(ah6, bl1)) | 0;
              hi = (hi + Math.imul(ah6, bh1)) | 0;
              lo = (lo + Math.imul(al5, bl2)) | 0;
              mid = (mid + Math.imul(al5, bh2)) | 0;
              mid = (mid + Math.imul(ah5, bl2)) | 0;
              hi = (hi + Math.imul(ah5, bh2)) | 0;
              lo = (lo + Math.imul(al4, bl3)) | 0;
              mid = (mid + Math.imul(al4, bh3)) | 0;
              mid = (mid + Math.imul(ah4, bl3)) | 0;
              hi = (hi + Math.imul(ah4, bh3)) | 0;
              lo = (lo + Math.imul(al3, bl4)) | 0;
              mid = (mid + Math.imul(al3, bh4)) | 0;
              mid = (mid + Math.imul(ah3, bl4)) | 0;
              hi = (hi + Math.imul(ah3, bh4)) | 0;
              lo = (lo + Math.imul(al2, bl5)) | 0;
              mid = (mid + Math.imul(al2, bh5)) | 0;
              mid = (mid + Math.imul(ah2, bl5)) | 0;
              hi = (hi + Math.imul(ah2, bh5)) | 0;
              lo = (lo + Math.imul(al1, bl6)) | 0;
              mid = (mid + Math.imul(al1, bh6)) | 0;
              mid = (mid + Math.imul(ah1, bl6)) | 0;
              hi = (hi + Math.imul(ah1, bh6)) | 0;
              lo = (lo + Math.imul(al0, bl7)) | 0;
              mid = (mid + Math.imul(al0, bh7)) | 0;
              mid = (mid + Math.imul(ah0, bl7)) | 0;
              hi = (hi + Math.imul(ah0, bh7)) | 0;
              var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
              w7 &= 0x3ffffff;
              /* k = 8 */
              lo = Math.imul(al8, bl0);
              mid = Math.imul(al8, bh0);
              mid = (mid + Math.imul(ah8, bl0)) | 0;
              hi = Math.imul(ah8, bh0);
              lo = (lo + Math.imul(al7, bl1)) | 0;
              mid = (mid + Math.imul(al7, bh1)) | 0;
              mid = (mid + Math.imul(ah7, bl1)) | 0;
              hi = (hi + Math.imul(ah7, bh1)) | 0;
              lo = (lo + Math.imul(al6, bl2)) | 0;
              mid = (mid + Math.imul(al6, bh2)) | 0;
              mid = (mid + Math.imul(ah6, bl2)) | 0;
              hi = (hi + Math.imul(ah6, bh2)) | 0;
              lo = (lo + Math.imul(al5, bl3)) | 0;
              mid = (mid + Math.imul(al5, bh3)) | 0;
              mid = (mid + Math.imul(ah5, bl3)) | 0;
              hi = (hi + Math.imul(ah5, bh3)) | 0;
              lo = (lo + Math.imul(al4, bl4)) | 0;
              mid = (mid + Math.imul(al4, bh4)) | 0;
              mid = (mid + Math.imul(ah4, bl4)) | 0;
              hi = (hi + Math.imul(ah4, bh4)) | 0;
              lo = (lo + Math.imul(al3, bl5)) | 0;
              mid = (mid + Math.imul(al3, bh5)) | 0;
              mid = (mid + Math.imul(ah3, bl5)) | 0;
              hi = (hi + Math.imul(ah3, bh5)) | 0;
              lo = (lo + Math.imul(al2, bl6)) | 0;
              mid = (mid + Math.imul(al2, bh6)) | 0;
              mid = (mid + Math.imul(ah2, bl6)) | 0;
              hi = (hi + Math.imul(ah2, bh6)) | 0;
              lo = (lo + Math.imul(al1, bl7)) | 0;
              mid = (mid + Math.imul(al1, bh7)) | 0;
              mid = (mid + Math.imul(ah1, bl7)) | 0;
              hi = (hi + Math.imul(ah1, bh7)) | 0;
              lo = (lo + Math.imul(al0, bl8)) | 0;
              mid = (mid + Math.imul(al0, bh8)) | 0;
              mid = (mid + Math.imul(ah0, bl8)) | 0;
              hi = (hi + Math.imul(ah0, bh8)) | 0;
              var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
              w8 &= 0x3ffffff;
              /* k = 9 */
              lo = Math.imul(al9, bl0);
              mid = Math.imul(al9, bh0);
              mid = (mid + Math.imul(ah9, bl0)) | 0;
              hi = Math.imul(ah9, bh0);
              lo = (lo + Math.imul(al8, bl1)) | 0;
              mid = (mid + Math.imul(al8, bh1)) | 0;
              mid = (mid + Math.imul(ah8, bl1)) | 0;
              hi = (hi + Math.imul(ah8, bh1)) | 0;
              lo = (lo + Math.imul(al7, bl2)) | 0;
              mid = (mid + Math.imul(al7, bh2)) | 0;
              mid = (mid + Math.imul(ah7, bl2)) | 0;
              hi = (hi + Math.imul(ah7, bh2)) | 0;
              lo = (lo + Math.imul(al6, bl3)) | 0;
              mid = (mid + Math.imul(al6, bh3)) | 0;
              mid = (mid + Math.imul(ah6, bl3)) | 0;
              hi = (hi + Math.imul(ah6, bh3)) | 0;
              lo = (lo + Math.imul(al5, bl4)) | 0;
              mid = (mid + Math.imul(al5, bh4)) | 0;
              mid = (mid + Math.imul(ah5, bl4)) | 0;
              hi = (hi + Math.imul(ah5, bh4)) | 0;
              lo = (lo + Math.imul(al4, bl5)) | 0;
              mid = (mid + Math.imul(al4, bh5)) | 0;
              mid = (mid + Math.imul(ah4, bl5)) | 0;
              hi = (hi + Math.imul(ah4, bh5)) | 0;
              lo = (lo + Math.imul(al3, bl6)) | 0;
              mid = (mid + Math.imul(al3, bh6)) | 0;
              mid = (mid + Math.imul(ah3, bl6)) | 0;
              hi = (hi + Math.imul(ah3, bh6)) | 0;
              lo = (lo + Math.imul(al2, bl7)) | 0;
              mid = (mid + Math.imul(al2, bh7)) | 0;
              mid = (mid + Math.imul(ah2, bl7)) | 0;
              hi = (hi + Math.imul(ah2, bh7)) | 0;
              lo = (lo + Math.imul(al1, bl8)) | 0;
              mid = (mid + Math.imul(al1, bh8)) | 0;
              mid = (mid + Math.imul(ah1, bl8)) | 0;
              hi = (hi + Math.imul(ah1, bh8)) | 0;
              lo = (lo + Math.imul(al0, bl9)) | 0;
              mid = (mid + Math.imul(al0, bh9)) | 0;
              mid = (mid + Math.imul(ah0, bl9)) | 0;
              hi = (hi + Math.imul(ah0, bh9)) | 0;
              var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
              w9 &= 0x3ffffff;
              /* k = 10 */
              lo = Math.imul(al9, bl1);
              mid = Math.imul(al9, bh1);
              mid = (mid + Math.imul(ah9, bl1)) | 0;
              hi = Math.imul(ah9, bh1);
              lo = (lo + Math.imul(al8, bl2)) | 0;
              mid = (mid + Math.imul(al8, bh2)) | 0;
              mid = (mid + Math.imul(ah8, bl2)) | 0;
              hi = (hi + Math.imul(ah8, bh2)) | 0;
              lo = (lo + Math.imul(al7, bl3)) | 0;
              mid = (mid + Math.imul(al7, bh3)) | 0;
              mid = (mid + Math.imul(ah7, bl3)) | 0;
              hi = (hi + Math.imul(ah7, bh3)) | 0;
              lo = (lo + Math.imul(al6, bl4)) | 0;
              mid = (mid + Math.imul(al6, bh4)) | 0;
              mid = (mid + Math.imul(ah6, bl4)) | 0;
              hi = (hi + Math.imul(ah6, bh4)) | 0;
              lo = (lo + Math.imul(al5, bl5)) | 0;
              mid = (mid + Math.imul(al5, bh5)) | 0;
              mid = (mid + Math.imul(ah5, bl5)) | 0;
              hi = (hi + Math.imul(ah5, bh5)) | 0;
              lo = (lo + Math.imul(al4, bl6)) | 0;
              mid = (mid + Math.imul(al4, bh6)) | 0;
              mid = (mid + Math.imul(ah4, bl6)) | 0;
              hi = (hi + Math.imul(ah4, bh6)) | 0;
              lo = (lo + Math.imul(al3, bl7)) | 0;
              mid = (mid + Math.imul(al3, bh7)) | 0;
              mid = (mid + Math.imul(ah3, bl7)) | 0;
              hi = (hi + Math.imul(ah3, bh7)) | 0;
              lo = (lo + Math.imul(al2, bl8)) | 0;
              mid = (mid + Math.imul(al2, bh8)) | 0;
              mid = (mid + Math.imul(ah2, bl8)) | 0;
              hi = (hi + Math.imul(ah2, bh8)) | 0;
              lo = (lo + Math.imul(al1, bl9)) | 0;
              mid = (mid + Math.imul(al1, bh9)) | 0;
              mid = (mid + Math.imul(ah1, bl9)) | 0;
              hi = (hi + Math.imul(ah1, bh9)) | 0;
              var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
              w10 &= 0x3ffffff;
              /* k = 11 */
              lo = Math.imul(al9, bl2);
              mid = Math.imul(al9, bh2);
              mid = (mid + Math.imul(ah9, bl2)) | 0;
              hi = Math.imul(ah9, bh2);
              lo = (lo + Math.imul(al8, bl3)) | 0;
              mid = (mid + Math.imul(al8, bh3)) | 0;
              mid = (mid + Math.imul(ah8, bl3)) | 0;
              hi = (hi + Math.imul(ah8, bh3)) | 0;
              lo = (lo + Math.imul(al7, bl4)) | 0;
              mid = (mid + Math.imul(al7, bh4)) | 0;
              mid = (mid + Math.imul(ah7, bl4)) | 0;
              hi = (hi + Math.imul(ah7, bh4)) | 0;
              lo = (lo + Math.imul(al6, bl5)) | 0;
              mid = (mid + Math.imul(al6, bh5)) | 0;
              mid = (mid + Math.imul(ah6, bl5)) | 0;
              hi = (hi + Math.imul(ah6, bh5)) | 0;
              lo = (lo + Math.imul(al5, bl6)) | 0;
              mid = (mid + Math.imul(al5, bh6)) | 0;
              mid = (mid + Math.imul(ah5, bl6)) | 0;
              hi = (hi + Math.imul(ah5, bh6)) | 0;
              lo = (lo + Math.imul(al4, bl7)) | 0;
              mid = (mid + Math.imul(al4, bh7)) | 0;
              mid = (mid + Math.imul(ah4, bl7)) | 0;
              hi = (hi + Math.imul(ah4, bh7)) | 0;
              lo = (lo + Math.imul(al3, bl8)) | 0;
              mid = (mid + Math.imul(al3, bh8)) | 0;
              mid = (mid + Math.imul(ah3, bl8)) | 0;
              hi = (hi + Math.imul(ah3, bh8)) | 0;
              lo = (lo + Math.imul(al2, bl9)) | 0;
              mid = (mid + Math.imul(al2, bh9)) | 0;
              mid = (mid + Math.imul(ah2, bl9)) | 0;
              hi = (hi + Math.imul(ah2, bh9)) | 0;
              var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
              w11 &= 0x3ffffff;
              /* k = 12 */
              lo = Math.imul(al9, bl3);
              mid = Math.imul(al9, bh3);
              mid = (mid + Math.imul(ah9, bl3)) | 0;
              hi = Math.imul(ah9, bh3);
              lo = (lo + Math.imul(al8, bl4)) | 0;
              mid = (mid + Math.imul(al8, bh4)) | 0;
              mid = (mid + Math.imul(ah8, bl4)) | 0;
              hi = (hi + Math.imul(ah8, bh4)) | 0;
              lo = (lo + Math.imul(al7, bl5)) | 0;
              mid = (mid + Math.imul(al7, bh5)) | 0;
              mid = (mid + Math.imul(ah7, bl5)) | 0;
              hi = (hi + Math.imul(ah7, bh5)) | 0;
              lo = (lo + Math.imul(al6, bl6)) | 0;
              mid = (mid + Math.imul(al6, bh6)) | 0;
              mid = (mid + Math.imul(ah6, bl6)) | 0;
              hi = (hi + Math.imul(ah6, bh6)) | 0;
              lo = (lo + Math.imul(al5, bl7)) | 0;
              mid = (mid + Math.imul(al5, bh7)) | 0;
              mid = (mid + Math.imul(ah5, bl7)) | 0;
              hi = (hi + Math.imul(ah5, bh7)) | 0;
              lo = (lo + Math.imul(al4, bl8)) | 0;
              mid = (mid + Math.imul(al4, bh8)) | 0;
              mid = (mid + Math.imul(ah4, bl8)) | 0;
              hi = (hi + Math.imul(ah4, bh8)) | 0;
              lo = (lo + Math.imul(al3, bl9)) | 0;
              mid = (mid + Math.imul(al3, bh9)) | 0;
              mid = (mid + Math.imul(ah3, bl9)) | 0;
              hi = (hi + Math.imul(ah3, bh9)) | 0;
              var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
              w12 &= 0x3ffffff;
              /* k = 13 */
              lo = Math.imul(al9, bl4);
              mid = Math.imul(al9, bh4);
              mid = (mid + Math.imul(ah9, bl4)) | 0;
              hi = Math.imul(ah9, bh4);
              lo = (lo + Math.imul(al8, bl5)) | 0;
              mid = (mid + Math.imul(al8, bh5)) | 0;
              mid = (mid + Math.imul(ah8, bl5)) | 0;
              hi = (hi + Math.imul(ah8, bh5)) | 0;
              lo = (lo + Math.imul(al7, bl6)) | 0;
              mid = (mid + Math.imul(al7, bh6)) | 0;
              mid = (mid + Math.imul(ah7, bl6)) | 0;
              hi = (hi + Math.imul(ah7, bh6)) | 0;
              lo = (lo + Math.imul(al6, bl7)) | 0;
              mid = (mid + Math.imul(al6, bh7)) | 0;
              mid = (mid + Math.imul(ah6, bl7)) | 0;
              hi = (hi + Math.imul(ah6, bh7)) | 0;
              lo = (lo + Math.imul(al5, bl8)) | 0;
              mid = (mid + Math.imul(al5, bh8)) | 0;
              mid = (mid + Math.imul(ah5, bl8)) | 0;
              hi = (hi + Math.imul(ah5, bh8)) | 0;
              lo = (lo + Math.imul(al4, bl9)) | 0;
              mid = (mid + Math.imul(al4, bh9)) | 0;
              mid = (mid + Math.imul(ah4, bl9)) | 0;
              hi = (hi + Math.imul(ah4, bh9)) | 0;
              var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
              w13 &= 0x3ffffff;
              /* k = 14 */
              lo = Math.imul(al9, bl5);
              mid = Math.imul(al9, bh5);
              mid = (mid + Math.imul(ah9, bl5)) | 0;
              hi = Math.imul(ah9, bh5);
              lo = (lo + Math.imul(al8, bl6)) | 0;
              mid = (mid + Math.imul(al8, bh6)) | 0;
              mid = (mid + Math.imul(ah8, bl6)) | 0;
              hi = (hi + Math.imul(ah8, bh6)) | 0;
              lo = (lo + Math.imul(al7, bl7)) | 0;
              mid = (mid + Math.imul(al7, bh7)) | 0;
              mid = (mid + Math.imul(ah7, bl7)) | 0;
              hi = (hi + Math.imul(ah7, bh7)) | 0;
              lo = (lo + Math.imul(al6, bl8)) | 0;
              mid = (mid + Math.imul(al6, bh8)) | 0;
              mid = (mid + Math.imul(ah6, bl8)) | 0;
              hi = (hi + Math.imul(ah6, bh8)) | 0;
              lo = (lo + Math.imul(al5, bl9)) | 0;
              mid = (mid + Math.imul(al5, bh9)) | 0;
              mid = (mid + Math.imul(ah5, bl9)) | 0;
              hi = (hi + Math.imul(ah5, bh9)) | 0;
              var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
              w14 &= 0x3ffffff;
              /* k = 15 */
              lo = Math.imul(al9, bl6);
              mid = Math.imul(al9, bh6);
              mid = (mid + Math.imul(ah9, bl6)) | 0;
              hi = Math.imul(ah9, bh6);
              lo = (lo + Math.imul(al8, bl7)) | 0;
              mid = (mid + Math.imul(al8, bh7)) | 0;
              mid = (mid + Math.imul(ah8, bl7)) | 0;
              hi = (hi + Math.imul(ah8, bh7)) | 0;
              lo = (lo + Math.imul(al7, bl8)) | 0;
              mid = (mid + Math.imul(al7, bh8)) | 0;
              mid = (mid + Math.imul(ah7, bl8)) | 0;
              hi = (hi + Math.imul(ah7, bh8)) | 0;
              lo = (lo + Math.imul(al6, bl9)) | 0;
              mid = (mid + Math.imul(al6, bh9)) | 0;
              mid = (mid + Math.imul(ah6, bl9)) | 0;
              hi = (hi + Math.imul(ah6, bh9)) | 0;
              var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
              w15 &= 0x3ffffff;
              /* k = 16 */
              lo = Math.imul(al9, bl7);
              mid = Math.imul(al9, bh7);
              mid = (mid + Math.imul(ah9, bl7)) | 0;
              hi = Math.imul(ah9, bh7);
              lo = (lo + Math.imul(al8, bl8)) | 0;
              mid = (mid + Math.imul(al8, bh8)) | 0;
              mid = (mid + Math.imul(ah8, bl8)) | 0;
              hi = (hi + Math.imul(ah8, bh8)) | 0;
              lo = (lo + Math.imul(al7, bl9)) | 0;
              mid = (mid + Math.imul(al7, bh9)) | 0;
              mid = (mid + Math.imul(ah7, bl9)) | 0;
              hi = (hi + Math.imul(ah7, bh9)) | 0;
              var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
              w16 &= 0x3ffffff;
              /* k = 17 */
              lo = Math.imul(al9, bl8);
              mid = Math.imul(al9, bh8);
              mid = (mid + Math.imul(ah9, bl8)) | 0;
              hi = Math.imul(ah9, bh8);
              lo = (lo + Math.imul(al8, bl9)) | 0;
              mid = (mid + Math.imul(al8, bh9)) | 0;
              mid = (mid + Math.imul(ah8, bl9)) | 0;
              hi = (hi + Math.imul(ah8, bh9)) | 0;
              var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
              w17 &= 0x3ffffff;
              /* k = 18 */
              lo = Math.imul(al9, bl9);
              mid = Math.imul(al9, bh9);
              mid = (mid + Math.imul(ah9, bl9)) | 0;
              hi = Math.imul(ah9, bh9);
              var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
              w18 &= 0x3ffffff;
              o[0] = w0;
              o[1] = w1;
              o[2] = w2;
              o[3] = w3;
              o[4] = w4;
              o[5] = w5;
              o[6] = w6;
              o[7] = w7;
              o[8] = w8;
              o[9] = w9;
              o[10] = w10;
              o[11] = w11;
              o[12] = w12;
              o[13] = w13;
              o[14] = w14;
              o[15] = w15;
              o[16] = w16;
              o[17] = w17;
              o[18] = w18;
              if (c !== 0) {
                o[19] = c;
                out.length++;
              }
              return out;
            };

            // Polyfill comb
            if (!Math.imul) {
              comb10MulTo = smallMulTo;
            }

            function bigMulTo(self, num, out) {
              out.negative = num.negative ^ self.negative;
              out.length = self.length + num.length;

              var carry = 0;
              var hncarry = 0;
              for (var k = 0; k < out.length - 1; k++) {
                // Sum all words with the same `i + j = k` and accumulate `ncarry`,
                // note that ncarry could be >= 0x3ffffff
                var ncarry = hncarry;
                hncarry = 0;
                var rword = carry & 0x3ffffff;
                var maxJ = Math.min(k, num.length - 1);
                for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                  var i = k - j;
                  var a = self.words[i] | 0;
                  var b = num.words[j] | 0;
                  var r = a * b;

                  var lo = r & 0x3ffffff;
                  ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
                  lo = (lo + rword) | 0;
                  rword = lo & 0x3ffffff;
                  ncarry = (ncarry + (lo >>> 26)) | 0;

                  hncarry += ncarry >>> 26;
                  ncarry &= 0x3ffffff;
                }
                out.words[k] = rword;
                carry = ncarry;
                ncarry = hncarry;
              }
              if (carry !== 0) {
                out.words[k] = carry;
              } else {
                out.length--;
              }

              return out.strip();
            }

            function jumboMulTo(self, num, out) {
              var fftm = new FFTM();
              return fftm.mulp(self, num, out);
            }

            BN.prototype.mulTo = function mulTo(num, out) {
              var res;
              var len = this.length + num.length;
              if (this.length === 10 && num.length === 10) {
                res = comb10MulTo(this, num, out);
              } else if (len < 63) {
                res = smallMulTo(this, num, out);
              } else if (len < 1024) {
                res = bigMulTo(this, num, out);
              } else {
                res = jumboMulTo(this, num, out);
              }

              return res;
            };

            // Cooley-Tukey algorithm for FFT
            // slightly revisited to rely on looping instead of recursion

            function FFTM(x, y) {
              this.x = x;
              this.y = y;
            }

            FFTM.prototype.makeRBT = function makeRBT(N) {
              var t = new Array(N);
              var l = BN.prototype._countBits(N) - 1;
              for (var i = 0; i < N; i++) {
                t[i] = this.revBin(i, l, N);
              }

              return t;
            };

            // Returns binary-reversed representation of `x`
            FFTM.prototype.revBin = function revBin(x, l, N) {
              if (x === 0 || x === N - 1) return x;

              var rb = 0;
              for (var i = 0; i < l; i++) {
                rb |= (x & 1) << (l - i - 1);
                x >>= 1;
              }

              return rb;
            };

            // Performs "tweedling" phase, therefore 'emulating'
            // behaviour of the recursive algorithm
            FFTM.prototype.permute = function permute(
              rbt,
              rws,
              iws,
              rtws,
              itws,
              N
            ) {
              for (var i = 0; i < N; i++) {
                rtws[i] = rws[rbt[i]];
                itws[i] = iws[rbt[i]];
              }
            };

            FFTM.prototype.transform = function transform(
              rws,
              iws,
              rtws,
              itws,
              N,
              rbt
            ) {
              this.permute(rbt, rws, iws, rtws, itws, N);

              for (var s = 1; s < N; s <<= 1) {
                var l = s << 1;

                var rtwdf = Math.cos((2 * Math.PI) / l);
                var itwdf = Math.sin((2 * Math.PI) / l);

                for (var p = 0; p < N; p += l) {
                  var rtwdf_ = rtwdf;
                  var itwdf_ = itwdf;

                  for (var j = 0; j < s; j++) {
                    var re = rtws[p + j];
                    var ie = itws[p + j];

                    var ro = rtws[p + j + s];
                    var io = itws[p + j + s];

                    var rx = rtwdf_ * ro - itwdf_ * io;

                    io = rtwdf_ * io + itwdf_ * ro;
                    ro = rx;

                    rtws[p + j] = re + ro;
                    itws[p + j] = ie + io;

                    rtws[p + j + s] = re - ro;
                    itws[p + j + s] = ie - io;

                    /* jshint maxdepth : false */
                    if (j !== l) {
                      rx = rtwdf * rtwdf_ - itwdf * itwdf_;

                      itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                      rtwdf_ = rx;
                    }
                  }
                }
              }
            };

            FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
              var N = Math.max(m, n) | 1;
              var odd = N & 1;
              var i = 0;
              for (N = (N / 2) | 0; N; N = N >>> 1) {
                i++;
              }

              return 1 << (i + 1 + odd);
            };

            FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
              if (N <= 1) return;

              for (var i = 0; i < N / 2; i++) {
                var t = rws[i];

                rws[i] = rws[N - i - 1];
                rws[N - i - 1] = t;

                t = iws[i];

                iws[i] = -iws[N - i - 1];
                iws[N - i - 1] = -t;
              }
            };

            FFTM.prototype.normalize13b = function normalize13b(ws, N) {
              var carry = 0;
              for (var i = 0; i < N / 2; i++) {
                var w =
                  Math.round(ws[2 * i + 1] / N) * 0x2000 +
                  Math.round(ws[2 * i] / N) +
                  carry;

                ws[i] = w & 0x3ffffff;

                if (w < 0x4000000) {
                  carry = 0;
                } else {
                  carry = (w / 0x4000000) | 0;
                }
              }

              return ws;
            };

            FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
              var carry = 0;
              for (var i = 0; i < len; i++) {
                carry = carry + (ws[i] | 0);

                rws[2 * i] = carry & 0x1fff;
                carry = carry >>> 13;
                rws[2 * i + 1] = carry & 0x1fff;
                carry = carry >>> 13;
              }

              // Pad with zeroes
              for (i = 2 * len; i < N; ++i) {
                rws[i] = 0;
              }

              assert(carry === 0);
              assert((carry & ~0x1fff) === 0);
            };

            FFTM.prototype.stub = function stub(N) {
              var ph = new Array(N);
              for (var i = 0; i < N; i++) {
                ph[i] = 0;
              }

              return ph;
            };

            FFTM.prototype.mulp = function mulp(x, y, out) {
              var N = 2 * this.guessLen13b(x.length, y.length);

              var rbt = this.makeRBT(N);

              var _ = this.stub(N);

              var rws = new Array(N);
              var rwst = new Array(N);
              var iwst = new Array(N);

              var nrws = new Array(N);
              var nrwst = new Array(N);
              var niwst = new Array(N);

              var rmws = out.words;
              rmws.length = N;

              this.convert13b(x.words, x.length, rws, N);
              this.convert13b(y.words, y.length, nrws, N);

              this.transform(rws, _, rwst, iwst, N, rbt);
              this.transform(nrws, _, nrwst, niwst, N, rbt);

              for (var i = 0; i < N; i++) {
                var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
                iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
                rwst[i] = rx;
              }

              this.conjugate(rwst, iwst, N);
              this.transform(rwst, iwst, rmws, _, N, rbt);
              this.conjugate(rmws, _, N);
              this.normalize13b(rmws, N);

              out.negative = x.negative ^ y.negative;
              out.length = x.length + y.length;
              return out.strip();
            };

            // Multiply `this` by `num`
            BN.prototype.mul = function mul(num) {
              var out = new BN(null);
              out.words = new Array(this.length + num.length);
              return this.mulTo(num, out);
            };

            // Multiply employing FFT
            BN.prototype.mulf = function mulf(num) {
              var out = new BN(null);
              out.words = new Array(this.length + num.length);
              return jumboMulTo(this, num, out);
            };

            // In-place Multiplication
            BN.prototype.imul = function imul(num) {
              return this.clone().mulTo(num, this);
            };

            BN.prototype.imuln = function imuln(num) {
              assert(typeof num === 'number');
              assert(num < 0x4000000);

              // Carry
              var carry = 0;
              for (var i = 0; i < this.length; i++) {
                var w = (this.words[i] | 0) * num;
                var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
                carry >>= 26;
                carry += (w / 0x4000000) | 0;
                // NOTE: lo is 27bit maximum
                carry += lo >>> 26;
                this.words[i] = lo & 0x3ffffff;
              }

              if (carry !== 0) {
                this.words[i] = carry;
                this.length++;
              }

              return this;
            };

            BN.prototype.muln = function muln(num) {
              return this.clone().imuln(num);
            };

            // `this` * `this`
            BN.prototype.sqr = function sqr() {
              return this.mul(this);
            };

            // `this` * `this` in-place
            BN.prototype.isqr = function isqr() {
              return this.imul(this.clone());
            };

            // Math.pow(`this`, `num`)
            BN.prototype.pow = function pow(num) {
              var w = toBitArray(num);
              if (w.length === 0) return new BN(1);

              // Skip leading zeroes
              var res = this;
              for (var i = 0; i < w.length; i++, res = res.sqr()) {
                if (w[i] !== 0) break;
              }

              if (++i < w.length) {
                for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
                  if (w[i] === 0) continue;

                  res = res.mul(q);
                }
              }

              return res;
            };

            // Shift-left in-place
            BN.prototype.iushln = function iushln(bits) {
              assert(typeof bits === 'number' && bits >= 0);
              var r = bits % 26;
              var s = (bits - r) / 26;
              var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
              var i;

              if (r !== 0) {
                var carry = 0;

                for (i = 0; i < this.length; i++) {
                  var newCarry = this.words[i] & carryMask;
                  var c = ((this.words[i] | 0) - newCarry) << r;
                  this.words[i] = c | carry;
                  carry = newCarry >>> (26 - r);
                }

                if (carry) {
                  this.words[i] = carry;
                  this.length++;
                }
              }

              if (s !== 0) {
                for (i = this.length - 1; i >= 0; i--) {
                  this.words[i + s] = this.words[i];
                }

                for (i = 0; i < s; i++) {
                  this.words[i] = 0;
                }

                this.length += s;
              }

              return this.strip();
            };

            BN.prototype.ishln = function ishln(bits) {
              // TODO(indutny): implement me
              assert(this.negative === 0);
              return this.iushln(bits);
            };

            // Shift-right in-place
            // NOTE: `hint` is a lowest bit before trailing zeroes
            // NOTE: if `extended` is present - it will be filled with destroyed bits
            BN.prototype.iushrn = function iushrn(bits, hint, extended) {
              assert(typeof bits === 'number' && bits >= 0);
              var h;
              if (hint) {
                h = (hint - (hint % 26)) / 26;
              } else {
                h = 0;
              }

              var r = bits % 26;
              var s = Math.min((bits - r) / 26, this.length);
              var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
              var maskedWords = extended;

              h -= s;
              h = Math.max(0, h);

              // Extended mode, copy masked part
              if (maskedWords) {
                for (var i = 0; i < s; i++) {
                  maskedWords.words[i] = this.words[i];
                }
                maskedWords.length = s;
              }

              if (s === 0) {
                // No-op, we should not move anything at all
              } else if (this.length > s) {
                this.length -= s;
                for (i = 0; i < this.length; i++) {
                  this.words[i] = this.words[i + s];
                }
              } else {
                this.words[0] = 0;
                this.length = 1;
              }

              var carry = 0;
              for (
                i = this.length - 1;
                i >= 0 && (carry !== 0 || i >= h);
                i--
              ) {
                var word = this.words[i] | 0;
                this.words[i] = (carry << (26 - r)) | (word >>> r);
                carry = word & mask;
              }

              // Push carried bits as a mask
              if (maskedWords && carry !== 0) {
                maskedWords.words[maskedWords.length++] = carry;
              }

              if (this.length === 0) {
                this.words[0] = 0;
                this.length = 1;
              }

              return this.strip();
            };

            BN.prototype.ishrn = function ishrn(bits, hint, extended) {
              // TODO(indutny): implement me
              assert(this.negative === 0);
              return this.iushrn(bits, hint, extended);
            };

            // Shift-left
            BN.prototype.shln = function shln(bits) {
              return this.clone().ishln(bits);
            };

            BN.prototype.ushln = function ushln(bits) {
              return this.clone().iushln(bits);
            };

            // Shift-right
            BN.prototype.shrn = function shrn(bits) {
              return this.clone().ishrn(bits);
            };

            BN.prototype.ushrn = function ushrn(bits) {
              return this.clone().iushrn(bits);
            };

            // Test if n bit is set
            BN.prototype.testn = function testn(bit) {
              assert(typeof bit === 'number' && bit >= 0);
              var r = bit % 26;
              var s = (bit - r) / 26;
              var q = 1 << r;

              // Fast case: bit is much higher than all existing words
              if (this.length <= s) return false;

              // Check bit and return
              var w = this.words[s];

              return !!(w & q);
            };

            // Return only lowers bits of number (in-place)
            BN.prototype.imaskn = function imaskn(bits) {
              assert(typeof bits === 'number' && bits >= 0);
              var r = bits % 26;
              var s = (bits - r) / 26;

              assert(
                this.negative === 0,
                'imaskn works only with positive numbers'
              );

              if (this.length <= s) {
                return this;
              }

              if (r !== 0) {
                s++;
              }
              this.length = Math.min(s, this.length);

              if (r !== 0) {
                var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
                this.words[this.length - 1] &= mask;
              }

              return this.strip();
            };

            // Return only lowers bits of number
            BN.prototype.maskn = function maskn(bits) {
              return this.clone().imaskn(bits);
            };

            // Add plain number `num` to `this`
            BN.prototype.iaddn = function iaddn(num) {
              assert(typeof num === 'number');
              assert(num < 0x4000000);
              if (num < 0) return this.isubn(-num);

              // Possible sign change
              if (this.negative !== 0) {
                if (this.length === 1 && (this.words[0] | 0) < num) {
                  this.words[0] = num - (this.words[0] | 0);
                  this.negative = 0;
                  return this;
                }

                this.negative = 0;
                this.isubn(num);
                this.negative = 1;
                return this;
              }

              // Add without checks
              return this._iaddn(num);
            };

            BN.prototype._iaddn = function _iaddn(num) {
              this.words[0] += num;

              // Carry
              for (
                var i = 0;
                i < this.length && this.words[i] >= 0x4000000;
                i++
              ) {
                this.words[i] -= 0x4000000;
                if (i === this.length - 1) {
                  this.words[i + 1] = 1;
                } else {
                  this.words[i + 1]++;
                }
              }
              this.length = Math.max(this.length, i + 1);

              return this;
            };

            // Subtract plain number `num` from `this`
            BN.prototype.isubn = function isubn(num) {
              assert(typeof num === 'number');
              assert(num < 0x4000000);
              if (num < 0) return this.iaddn(-num);

              if (this.negative !== 0) {
                this.negative = 0;
                this.iaddn(num);
                this.negative = 1;
                return this;
              }

              this.words[0] -= num;

              if (this.length === 1 && this.words[0] < 0) {
                this.words[0] = -this.words[0];
                this.negative = 1;
              } else {
                // Carry
                for (var i = 0; i < this.length && this.words[i] < 0; i++) {
                  this.words[i] += 0x4000000;
                  this.words[i + 1] -= 1;
                }
              }

              return this.strip();
            };

            BN.prototype.addn = function addn(num) {
              return this.clone().iaddn(num);
            };

            BN.prototype.subn = function subn(num) {
              return this.clone().isubn(num);
            };

            BN.prototype.iabs = function iabs() {
              this.negative = 0;

              return this;
            };

            BN.prototype.abs = function abs() {
              return this.clone().iabs();
            };

            BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
              var len = num.length + shift;
              var i;

              this._expand(len);

              var w;
              var carry = 0;
              for (i = 0; i < num.length; i++) {
                w = (this.words[i + shift] | 0) + carry;
                var right = (num.words[i] | 0) * mul;
                w -= right & 0x3ffffff;
                carry = (w >> 26) - ((right / 0x4000000) | 0);
                this.words[i + shift] = w & 0x3ffffff;
              }
              for (; i < this.length - shift; i++) {
                w = (this.words[i + shift] | 0) + carry;
                carry = w >> 26;
                this.words[i + shift] = w & 0x3ffffff;
              }

              if (carry === 0) return this.strip();

              // Subtraction overflow
              assert(carry === -1);
              carry = 0;
              for (i = 0; i < this.length; i++) {
                w = -(this.words[i] | 0) + carry;
                carry = w >> 26;
                this.words[i] = w & 0x3ffffff;
              }
              this.negative = 1;

              return this.strip();
            };

            BN.prototype._wordDiv = function _wordDiv(num, mode) {
              var shift = this.length - num.length;

              var a = this.clone();
              var b = num;

              // Normalize
              var bhi = b.words[b.length - 1] | 0;
              var bhiBits = this._countBits(bhi);
              shift = 26 - bhiBits;
              if (shift !== 0) {
                b = b.ushln(shift);
                a.iushln(shift);
                bhi = b.words[b.length - 1] | 0;
              }

              // Initialize quotient
              var m = a.length - b.length;
              var q;

              if (mode !== 'mod') {
                q = new BN(null);
                q.length = m + 1;
                q.words = new Array(q.length);
                for (var i = 0; i < q.length; i++) {
                  q.words[i] = 0;
                }
              }

              var diff = a.clone()._ishlnsubmul(b, 1, m);
              if (diff.negative === 0) {
                a = diff;
                if (q) {
                  q.words[m] = 1;
                }
              }

              for (var j = m - 1; j >= 0; j--) {
                var qj =
                  (a.words[b.length + j] | 0) * 0x4000000 +
                  (a.words[b.length + j - 1] | 0);

                // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
                // (0x7ffffff)
                qj = Math.min((qj / bhi) | 0, 0x3ffffff);

                a._ishlnsubmul(b, qj, j);
                while (a.negative !== 0) {
                  qj--;
                  a.negative = 0;
                  a._ishlnsubmul(b, 1, j);
                  if (!a.isZero()) {
                    a.negative ^= 1;
                  }
                }
                if (q) {
                  q.words[j] = qj;
                }
              }
              if (q) {
                q.strip();
              }
              a.strip();

              // Denormalize
              if (mode !== 'div' && shift !== 0) {
                a.iushrn(shift);
              }

              return {
                div: q || null,
                mod: a,
              };
            };

            // NOTE: 1) `mode` can be set to `mod` to request mod only,
            //       to `div` to request div only, or be absent to
            //       request both div & mod
            //       2) `positive` is true if unsigned mod is requested
            BN.prototype.divmod = function divmod(num, mode, positive) {
              assert(!num.isZero());

              if (this.isZero()) {
                return {
                  div: new BN(0),
                  mod: new BN(0),
                };
              }

              var div, mod, res;
              if (this.negative !== 0 && num.negative === 0) {
                res = this.neg().divmod(num, mode);

                if (mode !== 'mod') {
                  div = res.div.neg();
                }

                if (mode !== 'div') {
                  mod = res.mod.neg();
                  if (positive && mod.negative !== 0) {
                    mod.iadd(num);
                  }
                }

                return {
                  div: div,
                  mod: mod,
                };
              }

              if (this.negative === 0 && num.negative !== 0) {
                res = this.divmod(num.neg(), mode);

                if (mode !== 'mod') {
                  div = res.div.neg();
                }

                return {
                  div: div,
                  mod: res.mod,
                };
              }

              if ((this.negative & num.negative) !== 0) {
                res = this.neg().divmod(num.neg(), mode);

                if (mode !== 'div') {
                  mod = res.mod.neg();
                  if (positive && mod.negative !== 0) {
                    mod.isub(num);
                  }
                }

                return {
                  div: res.div,
                  mod: mod,
                };
              }

              // Both numbers are positive at this point

              // Strip both numbers to approximate shift value
              if (num.length > this.length || this.cmp(num) < 0) {
                return {
                  div: new BN(0),
                  mod: this,
                };
              }

              // Very short reduction
              if (num.length === 1) {
                if (mode === 'div') {
                  return {
                    div: this.divn(num.words[0]),
                    mod: null,
                  };
                }

                if (mode === 'mod') {
                  return {
                    div: null,
                    mod: new BN(this.modn(num.words[0])),
                  };
                }

                return {
                  div: this.divn(num.words[0]),
                  mod: new BN(this.modn(num.words[0])),
                };
              }

              return this._wordDiv(num, mode);
            };

            // Find `this` / `num`
            BN.prototype.div = function div(num) {
              return this.divmod(num, 'div', false).div;
            };

            // Find `this` % `num`
            BN.prototype.mod = function mod(num) {
              return this.divmod(num, 'mod', false).mod;
            };

            BN.prototype.umod = function umod(num) {
              return this.divmod(num, 'mod', true).mod;
            };

            // Find Round(`this` / `num`)
            BN.prototype.divRound = function divRound(num) {
              var dm = this.divmod(num);

              // Fast case - exact division
              if (dm.mod.isZero()) return dm.div;

              var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

              var half = num.ushrn(1);
              var r2 = num.andln(1);
              var cmp = mod.cmp(half);

              // Round down
              if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;

              // Round up
              return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
            };

            BN.prototype.modn = function modn(num) {
              assert(num <= 0x3ffffff);
              var p = (1 << 26) % num;

              var acc = 0;
              for (var i = this.length - 1; i >= 0; i--) {
                acc = (p * acc + (this.words[i] | 0)) % num;
              }

              return acc;
            };

            // In-place division by number
            BN.prototype.idivn = function idivn(num) {
              assert(num <= 0x3ffffff);

              var carry = 0;
              for (var i = this.length - 1; i >= 0; i--) {
                var w = (this.words[i] | 0) + carry * 0x4000000;
                this.words[i] = (w / num) | 0;
                carry = w % num;
              }

              return this.strip();
            };

            BN.prototype.divn = function divn(num) {
              return this.clone().idivn(num);
            };

            BN.prototype.egcd = function egcd(p) {
              assert(p.negative === 0);
              assert(!p.isZero());

              var x = this;
              var y = p.clone();

              if (x.negative !== 0) {
                x = x.umod(p);
              } else {
                x = x.clone();
              }

              // A * x + B * y = x
              var A = new BN(1);
              var B = new BN(0);

              // C * x + D * y = y
              var C = new BN(0);
              var D = new BN(1);

              var g = 0;

              while (x.isEven() && y.isEven()) {
                x.iushrn(1);
                y.iushrn(1);
                ++g;
              }

              var yp = y.clone();
              var xp = x.clone();

              while (!x.isZero()) {
                for (
                  var i = 0, im = 1;
                  (x.words[0] & im) === 0 && i < 26;
                  ++i, im <<= 1
                );
                if (i > 0) {
                  x.iushrn(i);
                  while (i-- > 0) {
                    if (A.isOdd() || B.isOdd()) {
                      A.iadd(yp);
                      B.isub(xp);
                    }

                    A.iushrn(1);
                    B.iushrn(1);
                  }
                }

                for (
                  var j = 0, jm = 1;
                  (y.words[0] & jm) === 0 && j < 26;
                  ++j, jm <<= 1
                );
                if (j > 0) {
                  y.iushrn(j);
                  while (j-- > 0) {
                    if (C.isOdd() || D.isOdd()) {
                      C.iadd(yp);
                      D.isub(xp);
                    }

                    C.iushrn(1);
                    D.iushrn(1);
                  }
                }

                if (x.cmp(y) >= 0) {
                  x.isub(y);
                  A.isub(C);
                  B.isub(D);
                } else {
                  y.isub(x);
                  C.isub(A);
                  D.isub(B);
                }
              }

              return {
                a: C,
                b: D,
                gcd: y.iushln(g),
              };
            };

            // This is reduced incarnation of the binary EEA
            // above, designated to invert members of the
            // _prime_ fields F(p) at a maximal speed
            BN.prototype._invmp = function _invmp(p) {
              assert(p.negative === 0);
              assert(!p.isZero());

              var a = this;
              var b = p.clone();

              if (a.negative !== 0) {
                a = a.umod(p);
              } else {
                a = a.clone();
              }

              var x1 = new BN(1);
              var x2 = new BN(0);

              var delta = b.clone();

              while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
                for (
                  var i = 0, im = 1;
                  (a.words[0] & im) === 0 && i < 26;
                  ++i, im <<= 1
                );
                if (i > 0) {
                  a.iushrn(i);
                  while (i-- > 0) {
                    if (x1.isOdd()) {
                      x1.iadd(delta);
                    }

                    x1.iushrn(1);
                  }
                }

                for (
                  var j = 0, jm = 1;
                  (b.words[0] & jm) === 0 && j < 26;
                  ++j, jm <<= 1
                );
                if (j > 0) {
                  b.iushrn(j);
                  while (j-- > 0) {
                    if (x2.isOdd()) {
                      x2.iadd(delta);
                    }

                    x2.iushrn(1);
                  }
                }

                if (a.cmp(b) >= 0) {
                  a.isub(b);
                  x1.isub(x2);
                } else {
                  b.isub(a);
                  x2.isub(x1);
                }
              }

              var res;
              if (a.cmpn(1) === 0) {
                res = x1;
              } else {
                res = x2;
              }

              if (res.cmpn(0) < 0) {
                res.iadd(p);
              }

              return res;
            };

            BN.prototype.gcd = function gcd(num) {
              if (this.isZero()) return num.abs();
              if (num.isZero()) return this.abs();

              var a = this.clone();
              var b = num.clone();
              a.negative = 0;
              b.negative = 0;

              // Remove common factor of two
              for (var shift = 0; a.isEven() && b.isEven(); shift++) {
                a.iushrn(1);
                b.iushrn(1);
              }

              do {
                while (a.isEven()) {
                  a.iushrn(1);
                }
                while (b.isEven()) {
                  b.iushrn(1);
                }

                var r = a.cmp(b);
                if (r < 0) {
                  // Swap `a` and `b` to make `a` always bigger than `b`
                  var t = a;
                  a = b;
                  b = t;
                } else if (r === 0 || b.cmpn(1) === 0) {
                  break;
                }

                a.isub(b);
              } while (true);

              return b.iushln(shift);
            };

            // Invert number in the field F(num)
            BN.prototype.invm = function invm(num) {
              return this.egcd(num).a.umod(num);
            };

            BN.prototype.isEven = function isEven() {
              return (this.words[0] & 1) === 0;
            };

            BN.prototype.isOdd = function isOdd() {
              return (this.words[0] & 1) === 1;
            };

            // And first word and num
            BN.prototype.andln = function andln(num) {
              return this.words[0] & num;
            };

            // Increment at the bit position in-line
            BN.prototype.bincn = function bincn(bit) {
              assert(typeof bit === 'number');
              var r = bit % 26;
              var s = (bit - r) / 26;
              var q = 1 << r;

              // Fast case: bit is much higher than all existing words
              if (this.length <= s) {
                this._expand(s + 1);
                this.words[s] |= q;
                return this;
              }

              // Add bit and propagate, if needed
              var carry = q;
              for (var i = s; carry !== 0 && i < this.length; i++) {
                var w = this.words[i] | 0;
                w += carry;
                carry = w >>> 26;
                w &= 0x3ffffff;
                this.words[i] = w;
              }
              if (carry !== 0) {
                this.words[i] = carry;
                this.length++;
              }
              return this;
            };

            BN.prototype.isZero = function isZero() {
              return this.length === 1 && this.words[0] === 0;
            };

            BN.prototype.cmpn = function cmpn(num) {
              var negative = num < 0;

              if (this.negative !== 0 && !negative) return -1;
              if (this.negative === 0 && negative) return 1;

              this.strip();

              var res;
              if (this.length > 1) {
                res = 1;
              } else {
                if (negative) {
                  num = -num;
                }

                assert(num <= 0x3ffffff, 'Number is too big');

                var w = this.words[0] | 0;
                res = w === num ? 0 : w < num ? -1 : 1;
              }
              if (this.negative !== 0) return -res | 0;
              return res;
            };

            // Compare two numbers and return:
            // 1 - if `this` > `num`
            // 0 - if `this` == `num`
            // -1 - if `this` < `num`
            BN.prototype.cmp = function cmp(num) {
              if (this.negative !== 0 && num.negative === 0) return -1;
              if (this.negative === 0 && num.negative !== 0) return 1;

              var res = this.ucmp(num);
              if (this.negative !== 0) return -res | 0;
              return res;
            };

            // Unsigned comparison
            BN.prototype.ucmp = function ucmp(num) {
              // At this point both numbers have the same sign
              if (this.length > num.length) return 1;
              if (this.length < num.length) return -1;

              var res = 0;
              for (var i = this.length - 1; i >= 0; i--) {
                var a = this.words[i] | 0;
                var b = num.words[i] | 0;

                if (a === b) continue;
                if (a < b) {
                  res = -1;
                } else if (a > b) {
                  res = 1;
                }
                break;
              }
              return res;
            };

            BN.prototype.gtn = function gtn(num) {
              return this.cmpn(num) === 1;
            };

            BN.prototype.gt = function gt(num) {
              return this.cmp(num) === 1;
            };

            BN.prototype.gten = function gten(num) {
              return this.cmpn(num) >= 0;
            };

            BN.prototype.gte = function gte(num) {
              return this.cmp(num) >= 0;
            };

            BN.prototype.ltn = function ltn(num) {
              return this.cmpn(num) === -1;
            };

            BN.prototype.lt = function lt(num) {
              return this.cmp(num) === -1;
            };

            BN.prototype.lten = function lten(num) {
              return this.cmpn(num) <= 0;
            };

            BN.prototype.lte = function lte(num) {
              return this.cmp(num) <= 0;
            };

            BN.prototype.eqn = function eqn(num) {
              return this.cmpn(num) === 0;
            };

            BN.prototype.eq = function eq(num) {
              return this.cmp(num) === 0;
            };

            //
            // A reduce context, could be using montgomery or something better, depending
            // on the `m` itself.
            //
            BN.red = function red(num) {
              return new Red(num);
            };

            BN.prototype.toRed = function toRed(ctx) {
              assert(!this.red, 'Already a number in reduction context');
              assert(this.negative === 0, 'red works only with positives');
              return ctx.convertTo(this)._forceRed(ctx);
            };

            BN.prototype.fromRed = function fromRed() {
              assert(
                this.red,
                'fromRed works only with numbers in reduction context'
              );
              return this.red.convertFrom(this);
            };

            BN.prototype._forceRed = function _forceRed(ctx) {
              this.red = ctx;
              return this;
            };

            BN.prototype.forceRed = function forceRed(ctx) {
              assert(!this.red, 'Already a number in reduction context');
              return this._forceRed(ctx);
            };

            BN.prototype.redAdd = function redAdd(num) {
              assert(this.red, 'redAdd works only with red numbers');
              return this.red.add(this, num);
            };

            BN.prototype.redIAdd = function redIAdd(num) {
              assert(this.red, 'redIAdd works only with red numbers');
              return this.red.iadd(this, num);
            };

            BN.prototype.redSub = function redSub(num) {
              assert(this.red, 'redSub works only with red numbers');
              return this.red.sub(this, num);
            };

            BN.prototype.redISub = function redISub(num) {
              assert(this.red, 'redISub works only with red numbers');
              return this.red.isub(this, num);
            };

            BN.prototype.redShl = function redShl(num) {
              assert(this.red, 'redShl works only with red numbers');
              return this.red.shl(this, num);
            };

            BN.prototype.redMul = function redMul(num) {
              assert(this.red, 'redMul works only with red numbers');
              this.red._verify2(this, num);
              return this.red.mul(this, num);
            };

            BN.prototype.redIMul = function redIMul(num) {
              assert(this.red, 'redMul works only with red numbers');
              this.red._verify2(this, num);
              return this.red.imul(this, num);
            };

            BN.prototype.redSqr = function redSqr() {
              assert(this.red, 'redSqr works only with red numbers');
              this.red._verify1(this);
              return this.red.sqr(this);
            };

            BN.prototype.redISqr = function redISqr() {
              assert(this.red, 'redISqr works only with red numbers');
              this.red._verify1(this);
              return this.red.isqr(this);
            };

            // Square root over p
            BN.prototype.redSqrt = function redSqrt() {
              assert(this.red, 'redSqrt works only with red numbers');
              this.red._verify1(this);
              return this.red.sqrt(this);
            };

            BN.prototype.redInvm = function redInvm() {
              assert(this.red, 'redInvm works only with red numbers');
              this.red._verify1(this);
              return this.red.invm(this);
            };

            // Return negative clone of `this` % `red modulo`
            BN.prototype.redNeg = function redNeg() {
              assert(this.red, 'redNeg works only with red numbers');
              this.red._verify1(this);
              return this.red.neg(this);
            };

            BN.prototype.redPow = function redPow(num) {
              assert(this.red && !num.red, 'redPow(normalNum)');
              this.red._verify1(this);
              return this.red.pow(this, num);
            };

            // Prime numbers with efficient reduction
            var primes = {
              k256: null,
              p224: null,
              p192: null,
              p25519: null,
            };

            // Pseudo-Mersenne prime
            function MPrime(name, p) {
              // P = 2 ^ N - K
              this.name = name;
              this.p = new BN(p, 16);
              this.n = this.p.bitLength();
              this.k = new BN(1).iushln(this.n).isub(this.p);

              this.tmp = this._tmp();
            }

            MPrime.prototype._tmp = function _tmp() {
              var tmp = new BN(null);
              tmp.words = new Array(Math.ceil(this.n / 13));
              return tmp;
            };

            MPrime.prototype.ireduce = function ireduce(num) {
              // Assumes that `num` is less than `P^2`
              // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
              var r = num;
              var rlen;

              do {
                this.split(r, this.tmp);
                r = this.imulK(r);
                r = r.iadd(this.tmp);
                rlen = r.bitLength();
              } while (rlen > this.n);

              var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
              if (cmp === 0) {
                r.words[0] = 0;
                r.length = 1;
              } else if (cmp > 0) {
                r.isub(this.p);
              } else {
                if (r.strip !== undefined) {
                  // r is BN v4 instance
                  r.strip();
                } else {
                  // r is BN v5 instance
                  r._strip();
                }
              }

              return r;
            };

            MPrime.prototype.split = function split(input, out) {
              input.iushrn(this.n, 0, out);
            };

            MPrime.prototype.imulK = function imulK(num) {
              return num.imul(this.k);
            };

            function K256() {
              MPrime.call(
                this,
                'k256',
                'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f'
              );
            }
            inherits(K256, MPrime);

            K256.prototype.split = function split(input, output) {
              // 256 = 9 * 26 + 22
              var mask = 0x3fffff;

              var outLen = Math.min(input.length, 9);
              for (var i = 0; i < outLen; i++) {
                output.words[i] = input.words[i];
              }
              output.length = outLen;

              if (input.length <= 9) {
                input.words[0] = 0;
                input.length = 1;
                return;
              }

              // Shift by 9 limbs
              var prev = input.words[9];
              output.words[output.length++] = prev & mask;

              for (i = 10; i < input.length; i++) {
                var next = input.words[i] | 0;
                input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
                prev = next;
              }
              prev >>>= 22;
              input.words[i - 10] = prev;
              if (prev === 0 && input.length > 10) {
                input.length -= 10;
              } else {
                input.length -= 9;
              }
            };

            K256.prototype.imulK = function imulK(num) {
              // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
              num.words[num.length] = 0;
              num.words[num.length + 1] = 0;
              num.length += 2;

              // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
              var lo = 0;
              for (var i = 0; i < num.length; i++) {
                var w = num.words[i] | 0;
                lo += w * 0x3d1;
                num.words[i] = lo & 0x3ffffff;
                lo = w * 0x40 + ((lo / 0x4000000) | 0);
              }

              // Fast length reduction
              if (num.words[num.length - 1] === 0) {
                num.length--;
                if (num.words[num.length - 1] === 0) {
                  num.length--;
                }
              }
              return num;
            };

            function P224() {
              MPrime.call(
                this,
                'p224',
                'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001'
              );
            }
            inherits(P224, MPrime);

            function P192() {
              MPrime.call(
                this,
                'p192',
                'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff'
              );
            }
            inherits(P192, MPrime);

            function P25519() {
              // 2 ^ 255 - 19
              MPrime.call(
                this,
                '25519',
                '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed'
              );
            }
            inherits(P25519, MPrime);

            P25519.prototype.imulK = function imulK(num) {
              // K = 0x13
              var carry = 0;
              for (var i = 0; i < num.length; i++) {
                var hi = (num.words[i] | 0) * 0x13 + carry;
                var lo = hi & 0x3ffffff;
                hi >>>= 26;

                num.words[i] = lo;
                carry = hi;
              }
              if (carry !== 0) {
                num.words[num.length++] = carry;
              }
              return num;
            };

            // Exported mostly for testing purposes, use plain name instead
            BN._prime = function prime(name) {
              // Cached version of prime
              if (primes[name]) return primes[name];

              var prime;
              if (name === 'k256') {
                prime = new K256();
              } else if (name === 'p224') {
                prime = new P224();
              } else if (name === 'p192') {
                prime = new P192();
              } else if (name === 'p25519') {
                prime = new P25519();
              } else {
                throw new Error('Unknown prime ' + name);
              }
              primes[name] = prime;

              return prime;
            };

            //
            // Base reduction engine
            //
            function Red(m) {
              if (typeof m === 'string') {
                var prime = BN._prime(m);
                this.m = prime.p;
                this.prime = prime;
              } else {
                assert(m.gtn(1), 'modulus must be greater than 1');
                this.m = m;
                this.prime = null;
              }
            }

            Red.prototype._verify1 = function _verify1(a) {
              assert(a.negative === 0, 'red works only with positives');
              assert(a.red, 'red works only with red numbers');
            };

            Red.prototype._verify2 = function _verify2(a, b) {
              assert(
                (a.negative | b.negative) === 0,
                'red works only with positives'
              );
              assert(
                a.red && a.red === b.red,
                'red works only with red numbers'
              );
            };

            Red.prototype.imod = function imod(a) {
              if (this.prime) return this.prime.ireduce(a)._forceRed(this);
              return a.umod(this.m)._forceRed(this);
            };

            Red.prototype.neg = function neg(a) {
              if (a.isZero()) {
                return a.clone();
              }

              return this.m.sub(a)._forceRed(this);
            };

            Red.prototype.add = function add(a, b) {
              this._verify2(a, b);

              var res = a.add(b);
              if (res.cmp(this.m) >= 0) {
                res.isub(this.m);
              }
              return res._forceRed(this);
            };

            Red.prototype.iadd = function iadd(a, b) {
              this._verify2(a, b);

              var res = a.iadd(b);
              if (res.cmp(this.m) >= 0) {
                res.isub(this.m);
              }
              return res;
            };

            Red.prototype.sub = function sub(a, b) {
              this._verify2(a, b);

              var res = a.sub(b);
              if (res.cmpn(0) < 0) {
                res.iadd(this.m);
              }
              return res._forceRed(this);
            };

            Red.prototype.isub = function isub(a, b) {
              this._verify2(a, b);

              var res = a.isub(b);
              if (res.cmpn(0) < 0) {
                res.iadd(this.m);
              }
              return res;
            };

            Red.prototype.shl = function shl(a, num) {
              this._verify1(a);
              return this.imod(a.ushln(num));
            };

            Red.prototype.imul = function imul(a, b) {
              this._verify2(a, b);
              return this.imod(a.imul(b));
            };

            Red.prototype.mul = function mul(a, b) {
              this._verify2(a, b);
              return this.imod(a.mul(b));
            };

            Red.prototype.isqr = function isqr(a) {
              return this.imul(a, a.clone());
            };

            Red.prototype.sqr = function sqr(a) {
              return this.mul(a, a);
            };

            Red.prototype.sqrt = function sqrt(a) {
              if (a.isZero()) return a.clone();

              var mod3 = this.m.andln(3);
              assert(mod3 % 2 === 1);

              // Fast case
              if (mod3 === 3) {
                var pow = this.m.add(new BN(1)).iushrn(2);
                return this.pow(a, pow);
              }

              // Tonelli-Shanks algorithm (Totally unoptimized and slow)
              //
              // Find Q and S, that Q * 2 ^ S = (P - 1)
              var q = this.m.subn(1);
              var s = 0;
              while (!q.isZero() && q.andln(1) === 0) {
                s++;
                q.iushrn(1);
              }
              assert(!q.isZero());

              var one = new BN(1).toRed(this);
              var nOne = one.redNeg();

              // Find quadratic non-residue
              // NOTE: Max is such because of generalized Riemann hypothesis.
              var lpow = this.m.subn(1).iushrn(1);
              var z = this.m.bitLength();
              z = new BN(2 * z * z).toRed(this);

              while (this.pow(z, lpow).cmp(nOne) !== 0) {
                z.redIAdd(nOne);
              }

              var c = this.pow(z, q);
              var r = this.pow(a, q.addn(1).iushrn(1));
              var t = this.pow(a, q);
              var m = s;
              while (t.cmp(one) !== 0) {
                var tmp = t;
                for (var i = 0; tmp.cmp(one) !== 0; i++) {
                  tmp = tmp.redSqr();
                }
                assert(i < m);
                var b = this.pow(c, new BN(1).iushln(m - i - 1));

                r = r.redMul(b);
                c = b.redSqr();
                t = t.redMul(c);
                m = i;
              }

              return r;
            };

            Red.prototype.invm = function invm(a) {
              var inv = a._invmp(this.m);
              if (inv.negative !== 0) {
                inv.negative = 0;
                return this.imod(inv).redNeg();
              } else {
                return this.imod(inv);
              }
            };

            Red.prototype.pow = function pow(a, num) {
              if (num.isZero()) return new BN(1).toRed(this);
              if (num.cmpn(1) === 0) return a.clone();

              var windowSize = 4;
              var wnd = new Array(1 << windowSize);
              wnd[0] = new BN(1).toRed(this);
              wnd[1] = a;
              for (var i = 2; i < wnd.length; i++) {
                wnd[i] = this.mul(wnd[i - 1], a);
              }

              var res = wnd[0];
              var current = 0;
              var currentLen = 0;
              var start = num.bitLength() % 26;
              if (start === 0) {
                start = 26;
              }

              for (i = num.length - 1; i >= 0; i--) {
                var word = num.words[i];
                for (var j = start - 1; j >= 0; j--) {
                  var bit = (word >> j) & 1;
                  if (res !== wnd[0]) {
                    res = this.sqr(res);
                  }

                  if (bit === 0 && current === 0) {
                    currentLen = 0;
                    continue;
                  }

                  current <<= 1;
                  current |= bit;
                  currentLen++;
                  if (currentLen !== windowSize && (i !== 0 || j !== 0))
                    continue;

                  res = this.mul(res, wnd[current]);
                  currentLen = 0;
                  current = 0;
                }
                start = 26;
              }

              return res;
            };

            Red.prototype.convertTo = function convertTo(num) {
              var r = num.umod(this.m);

              return r === num ? r.clone() : r;
            };

            Red.prototype.convertFrom = function convertFrom(num) {
              var res = num.clone();
              res.red = null;
              return res;
            };

            //
            // Montgomery method engine
            //

            BN.mont = function mont(num) {
              return new Mont(num);
            };

            function Mont(m) {
              Red.call(this, m);

              this.shift = this.m.bitLength();
              if (this.shift % 26 !== 0) {
                this.shift += 26 - (this.shift % 26);
              }

              this.r = new BN(1).iushln(this.shift);
              this.r2 = this.imod(this.r.sqr());
              this.rinv = this.r._invmp(this.m);

              this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
              this.minv = this.minv.umod(this.r);
              this.minv = this.r.sub(this.minv);
            }
            inherits(Mont, Red);

            Mont.prototype.convertTo = function convertTo(num) {
              return this.imod(num.ushln(this.shift));
            };

            Mont.prototype.convertFrom = function convertFrom(num) {
              var r = this.imod(num.mul(this.rinv));
              r.red = null;
              return r;
            };

            Mont.prototype.imul = function imul(a, b) {
              if (a.isZero() || b.isZero()) {
                a.words[0] = 0;
                a.length = 1;
                return a;
              }

              var t = a.imul(b);
              var c = t
                .maskn(this.shift)
                .mul(this.minv)
                .imaskn(this.shift)
                .mul(this.m);
              var u = t.isub(c).iushrn(this.shift);
              var res = u;

              if (u.cmp(this.m) >= 0) {
                res = u.isub(this.m);
              } else if (u.cmpn(0) < 0) {
                res = u.iadd(this.m);
              }

              return res._forceRed(this);
            };

            Mont.prototype.mul = function mul(a, b) {
              if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

              var t = a.mul(b);
              var c = t
                .maskn(this.shift)
                .mul(this.minv)
                .imaskn(this.shift)
                .mul(this.m);
              var u = t.isub(c).iushrn(this.shift);
              var res = u;
              if (u.cmp(this.m) >= 0) {
                res = u.isub(this.m);
              } else if (u.cmpn(0) < 0) {
                res = u.iadd(this.m);
              }

              return res._forceRed(this);
            };

            Mont.prototype.invm = function invm(a) {
              // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
              var res = this.imod(a._invmp(this.m).mul(this.r2));
              return res._forceRed(this);
            };
          })(false || module, this);

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/module.js */ '../node_modules/webpack/buildin/module.js'
          )(module)
        ));

        /***/
      },

    /***/ '../node_modules/minimalistic-assert/index.js':
      /*!****************************************************!*\
  !*** ../node_modules/minimalistic-assert/index.js ***!
  \****************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        module.exports = assert;

        function assert(val, msg) {
          if (!val) throw new Error(msg || 'Assertion failed');
        }

        assert.equal = function assertEqual(l, r, msg) {
          if (l != r)
            throw new Error(msg || 'Assertion failed: ' + l + ' != ' + r);
        };

        /***/
      },

    /***/ '../node_modules/minimalistic-crypto-utils/lib/utils.js':
      /*!**************************************************************!*\
  !*** ../node_modules/minimalistic-crypto-utils/lib/utils.js ***!
  \**************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var utils = exports;

        function toArray(msg, enc) {
          if (Array.isArray(msg)) return msg.slice();
          if (!msg) return [];
          var res = [];
          if (typeof msg !== 'string') {
            for (var i = 0; i < msg.length; i++) res[i] = msg[i] | 0;
            return res;
          }
          if (enc === 'hex') {
            msg = msg.replace(/[^a-z0-9]+/gi, '');
            if (msg.length % 2 !== 0) msg = '0' + msg;
            for (var i = 0; i < msg.length; i += 2)
              res.push(parseInt(msg[i] + msg[i + 1], 16));
          } else {
            for (var i = 0; i < msg.length; i++) {
              var c = msg.charCodeAt(i);
              var hi = c >> 8;
              var lo = c & 0xff;
              if (hi) res.push(hi, lo);
              else res.push(lo);
            }
          }
          return res;
        }
        utils.toArray = toArray;

        function zero2(word) {
          if (word.length === 1) return '0' + word;
          else return word;
        }
        utils.zero2 = zero2;

        function toHex(msg) {
          var res = '';
          for (var i = 0; i < msg.length; i++)
            res += zero2(msg[i].toString(16));
          return res;
        }
        utils.toHex = toHex;

        utils.encode = function encode(arr, enc) {
          if (enc === 'hex') return toHex(arr);
          else return arr;
        };

        /***/
      },

    /***/ '../node_modules/moment/locale sync recursive [/\\\\](pl(\\.js)?)$':
      /*!************************************************************!*\
  !*** ../node_modules/moment/locale sync [/\\](pl(\.js)?)$ ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var map = {
          './pl': '../node_modules/moment/locale/pl.js',
          './pl.js': '../node_modules/moment/locale/pl.js',
        };

        function webpackContext(req) {
          var id = webpackContextResolve(req);
          return __webpack_require__(id);
        }
        function webpackContextResolve(req) {
          if (!__webpack_require__.o(map, req)) {
            var e = new Error("Cannot find module '" + req + "'");
            e.code = 'MODULE_NOT_FOUND';
            throw e;
          }
          return map[req];
        }
        webpackContext.keys = function webpackContextKeys() {
          return Object.keys(map);
        };
        webpackContext.resolve = webpackContextResolve;
        module.exports = webpackContext;
        webpackContext.id =
          '../node_modules/moment/locale sync recursive [/\\\\](pl(\\.js)?)$';

        /***/
      },

    /***/ '../node_modules/moment/locale/pl.js':
      /*!*******************************************!*\
  !*** ../node_modules/moment/locale/pl.js ***!
  \*******************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        //! moment.js locale configuration
        //! locale : Polish [pl]
        //! author : Rafal Hirsz : https://github.com/evoL

        (function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ '../node_modules/moment/moment.js'
                )
              )
            : undefined;
        })(this, function (moment) {
          'use strict';

          //! moment.js locale configuration

          var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split(
              '_'
            ),
            monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split(
              '_'
            );
          function plural(n) {
            return n % 10 < 5 && n % 10 > 1 && ~~(n / 10) % 10 !== 1;
          }
          function translate(number, withoutSuffix, key) {
            var result = number + ' ';
            switch (key) {
              case 'ss':
                return result + (plural(number) ? 'sekundy' : 'sekund');
              case 'm':
                return withoutSuffix ? 'minuta' : 'minutę';
              case 'mm':
                return result + (plural(number) ? 'minuty' : 'minut');
              case 'h':
                return withoutSuffix ? 'godzina' : 'godzinę';
              case 'hh':
                return result + (plural(number) ? 'godziny' : 'godzin');
              case 'MM':
                return result + (plural(number) ? 'miesiące' : 'miesięcy');
              case 'yy':
                return result + (plural(number) ? 'lata' : 'lat');
            }
          }

          var pl = moment.defineLocale('pl', {
            months: function (momentToFormat, format) {
              if (!momentToFormat) {
                return monthsNominative;
              } else if (format === '') {
                // Hack: if format empty we know this is used to generate
                // RegExp by moment. Give then back both valid forms of months
                // in RegExp ready format.
                return (
                  '(' +
                  monthsSubjective[momentToFormat.month()] +
                  '|' +
                  monthsNominative[momentToFormat.month()] +
                  ')'
                );
              } else if (/D MMMM/.test(format)) {
                return monthsSubjective[momentToFormat.month()];
              } else {
                return monthsNominative[momentToFormat.month()];
              }
            },
            monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split(
              '_'
            ),
            weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split(
              '_'
            ),
            weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),
            weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd, D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[Dziś o] LT',
              nextDay: '[Jutro o] LT',
              nextWeek: function () {
                switch (this.day()) {
                  case 0:
                    return '[W niedzielę o] LT';

                  case 2:
                    return '[We wtorek o] LT';

                  case 3:
                    return '[W środę o] LT';

                  case 6:
                    return '[W sobotę o] LT';

                  default:
                    return '[W] dddd [o] LT';
                }
              },
              lastDay: '[Wczoraj o] LT',
              lastWeek: function () {
                switch (this.day()) {
                  case 0:
                    return '[W zeszłą niedzielę o] LT';
                  case 3:
                    return '[W zeszłą środę o] LT';
                  case 6:
                    return '[W zeszłą sobotę o] LT';
                  default:
                    return '[W zeszły] dddd [o] LT';
                }
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: 'za %s',
              past: '%s temu',
              s: 'kilka sekund',
              ss: translate,
              m: translate,
              mm: translate,
              h: translate,
              hh: translate,
              d: '1 dzień',
              dd: '%d dni',
              M: 'miesiąc',
              MM: translate,
              y: 'rok',
              yy: translate,
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          });

          return pl;
        });

        /***/
      },

    /***/ '../node_modules/moment/moment.js':
      /*!****************************************!*\
  !*** ../node_modules/moment/moment.js ***!
  \****************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function (module) {
          var require; //! moment.js
          //! version : 2.27.0
          //! authors : Tim Wood, Iskren Chernev, Moment.js contributors
          //! license : MIT
          //! momentjs.com

          (function (global, factory) {
            true ? (module.exports = factory()) : undefined;
          })(this, function () {
            'use strict';

            var hookCallback;

            function hooks() {
              return hookCallback.apply(null, arguments);
            }

            // This is done to register the method called with moment()
            // without creating circular dependencies.
            function setHookCallback(callback) {
              hookCallback = callback;
            }

            function isArray(input) {
              return (
                input instanceof Array ||
                Object.prototype.toString.call(input) === '[object Array]'
              );
            }

            function isObject(input) {
              // IE8 will treat undefined and null as object if it wasn't for
              // input != null
              return (
                input != null &&
                Object.prototype.toString.call(input) === '[object Object]'
              );
            }

            function hasOwnProp(a, b) {
              return Object.prototype.hasOwnProperty.call(a, b);
            }

            function isObjectEmpty(obj) {
              if (Object.getOwnPropertyNames) {
                return Object.getOwnPropertyNames(obj).length === 0;
              } else {
                var k;
                for (k in obj) {
                  if (hasOwnProp(obj, k)) {
                    return false;
                  }
                }
                return true;
              }
            }

            function isUndefined(input) {
              return input === void 0;
            }

            function isNumber(input) {
              return (
                typeof input === 'number' ||
                Object.prototype.toString.call(input) === '[object Number]'
              );
            }

            function isDate(input) {
              return (
                input instanceof Date ||
                Object.prototype.toString.call(input) === '[object Date]'
              );
            }

            function map(arr, fn) {
              var res = [],
                i;
              for (i = 0; i < arr.length; ++i) {
                res.push(fn(arr[i], i));
              }
              return res;
            }

            function extend(a, b) {
              for (var i in b) {
                if (hasOwnProp(b, i)) {
                  a[i] = b[i];
                }
              }

              if (hasOwnProp(b, 'toString')) {
                a.toString = b.toString;
              }

              if (hasOwnProp(b, 'valueOf')) {
                a.valueOf = b.valueOf;
              }

              return a;
            }

            function createUTC(input, format, locale, strict) {
              return createLocalOrUTC(
                input,
                format,
                locale,
                strict,
                true
              ).utc();
            }

            function defaultParsingFlags() {
              // We need to deep clone this object.
              return {
                empty: false,
                unusedTokens: [],
                unusedInput: [],
                overflow: -2,
                charsLeftOver: 0,
                nullInput: false,
                invalidEra: null,
                invalidMonth: null,
                invalidFormat: false,
                userInvalidated: false,
                iso: false,
                parsedDateParts: [],
                era: null,
                meridiem: null,
                rfc2822: false,
                weekdayMismatch: false,
              };
            }

            function getParsingFlags(m) {
              if (m._pf == null) {
                m._pf = defaultParsingFlags();
              }
              return m._pf;
            }

            var some;
            if (Array.prototype.some) {
              some = Array.prototype.some;
            } else {
              some = function (fun) {
                var t = Object(this),
                  len = t.length >>> 0,
                  i;

                for (i = 0; i < len; i++) {
                  if (i in t && fun.call(this, t[i], i, t)) {
                    return true;
                  }
                }

                return false;
              };
            }

            function isValid(m) {
              if (m._isValid == null) {
                var flags = getParsingFlags(m),
                  parsedParts = some.call(flags.parsedDateParts, function (i) {
                    return i != null;
                  }),
                  isNowValid =
                    !isNaN(m._d.getTime()) &&
                    flags.overflow < 0 &&
                    !flags.empty &&
                    !flags.invalidEra &&
                    !flags.invalidMonth &&
                    !flags.invalidWeekday &&
                    !flags.weekdayMismatch &&
                    !flags.nullInput &&
                    !flags.invalidFormat &&
                    !flags.userInvalidated &&
                    (!flags.meridiem || (flags.meridiem && parsedParts));

                if (m._strict) {
                  isNowValid =
                    isNowValid &&
                    flags.charsLeftOver === 0 &&
                    flags.unusedTokens.length === 0 &&
                    flags.bigHour === undefined;
                }

                if (Object.isFrozen == null || !Object.isFrozen(m)) {
                  m._isValid = isNowValid;
                } else {
                  return isNowValid;
                }
              }
              return m._isValid;
            }

            function createInvalid(flags) {
              var m = createUTC(NaN);
              if (flags != null) {
                extend(getParsingFlags(m), flags);
              } else {
                getParsingFlags(m).userInvalidated = true;
              }

              return m;
            }

            // Plugins that add properties should also add the key here (null value),
            // so we can properly clone ourselves.
            var momentProperties = (hooks.momentProperties = []),
              updateInProgress = false;

            function copyConfig(to, from) {
              var i, prop, val;

              if (!isUndefined(from._isAMomentObject)) {
                to._isAMomentObject = from._isAMomentObject;
              }
              if (!isUndefined(from._i)) {
                to._i = from._i;
              }
              if (!isUndefined(from._f)) {
                to._f = from._f;
              }
              if (!isUndefined(from._l)) {
                to._l = from._l;
              }
              if (!isUndefined(from._strict)) {
                to._strict = from._strict;
              }
              if (!isUndefined(from._tzm)) {
                to._tzm = from._tzm;
              }
              if (!isUndefined(from._isUTC)) {
                to._isUTC = from._isUTC;
              }
              if (!isUndefined(from._offset)) {
                to._offset = from._offset;
              }
              if (!isUndefined(from._pf)) {
                to._pf = getParsingFlags(from);
              }
              if (!isUndefined(from._locale)) {
                to._locale = from._locale;
              }

              if (momentProperties.length > 0) {
                for (i = 0; i < momentProperties.length; i++) {
                  prop = momentProperties[i];
                  val = from[prop];
                  if (!isUndefined(val)) {
                    to[prop] = val;
                  }
                }
              }

              return to;
            }

            // Moment prototype object
            function Moment(config) {
              copyConfig(this, config);
              this._d = new Date(config._d != null ? config._d.getTime() : NaN);
              if (!this.isValid()) {
                this._d = new Date(NaN);
              }
              // Prevent infinite loop in case updateOffset creates new moment
              // objects.
              if (updateInProgress === false) {
                updateInProgress = true;
                hooks.updateOffset(this);
                updateInProgress = false;
              }
            }

            function isMoment(obj) {
              return (
                obj instanceof Moment ||
                (obj != null && obj._isAMomentObject != null)
              );
            }

            function warn(msg) {
              if (
                hooks.suppressDeprecationWarnings === false &&
                typeof console !== 'undefined' &&
                console.warn
              ) {
                console.warn('Deprecation warning: ' + msg);
              }
            }

            function deprecate(msg, fn) {
              var firstTime = true;

              return extend(function () {
                if (hooks.deprecationHandler != null) {
                  hooks.deprecationHandler(null, msg);
                }
                if (firstTime) {
                  var args = [],
                    arg,
                    i,
                    key;
                  for (i = 0; i < arguments.length; i++) {
                    arg = '';
                    if (typeof arguments[i] === 'object') {
                      arg += '\n[' + i + '] ';
                      for (key in arguments[0]) {
                        if (hasOwnProp(arguments[0], key)) {
                          arg += key + ': ' + arguments[0][key] + ', ';
                        }
                      }
                      arg = arg.slice(0, -2); // Remove trailing comma and space
                    } else {
                      arg = arguments[i];
                    }
                    args.push(arg);
                  }
                  warn(
                    msg +
                      '\nArguments: ' +
                      Array.prototype.slice.call(args).join('') +
                      '\n' +
                      new Error().stack
                  );
                  firstTime = false;
                }
                return fn.apply(this, arguments);
              }, fn);
            }

            var deprecations = {};

            function deprecateSimple(name, msg) {
              if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(name, msg);
              }
              if (!deprecations[name]) {
                warn(msg);
                deprecations[name] = true;
              }
            }

            hooks.suppressDeprecationWarnings = false;
            hooks.deprecationHandler = null;

            function isFunction(input) {
              return (
                (typeof Function !== 'undefined' &&
                  input instanceof Function) ||
                Object.prototype.toString.call(input) === '[object Function]'
              );
            }

            function set(config) {
              var prop, i;
              for (i in config) {
                if (hasOwnProp(config, i)) {
                  prop = config[i];
                  if (isFunction(prop)) {
                    this[i] = prop;
                  } else {
                    this['_' + i] = prop;
                  }
                }
              }
              this._config = config;
              // Lenient ordinal parsing accepts just a number in addition to
              // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
              // TODO: Remove "ordinalParse" fallback in next major release.
              this._dayOfMonthOrdinalParseLenient = new RegExp(
                (this._dayOfMonthOrdinalParse.source ||
                  this._ordinalParse.source) +
                  '|' +
                  /\d{1,2}/.source
              );
            }

            function mergeConfigs(parentConfig, childConfig) {
              var res = extend({}, parentConfig),
                prop;
              for (prop in childConfig) {
                if (hasOwnProp(childConfig, prop)) {
                  if (
                    isObject(parentConfig[prop]) &&
                    isObject(childConfig[prop])
                  ) {
                    res[prop] = {};
                    extend(res[prop], parentConfig[prop]);
                    extend(res[prop], childConfig[prop]);
                  } else if (childConfig[prop] != null) {
                    res[prop] = childConfig[prop];
                  } else {
                    delete res[prop];
                  }
                }
              }
              for (prop in parentConfig) {
                if (
                  hasOwnProp(parentConfig, prop) &&
                  !hasOwnProp(childConfig, prop) &&
                  isObject(parentConfig[prop])
                ) {
                  // make sure changes to properties don't modify parent config
                  res[prop] = extend({}, res[prop]);
                }
              }
              return res;
            }

            function Locale(config) {
              if (config != null) {
                this.set(config);
              }
            }

            var keys;

            if (Object.keys) {
              keys = Object.keys;
            } else {
              keys = function (obj) {
                var i,
                  res = [];
                for (i in obj) {
                  if (hasOwnProp(obj, i)) {
                    res.push(i);
                  }
                }
                return res;
              };
            }

            var defaultCalendar = {
              sameDay: '[Today at] LT',
              nextDay: '[Tomorrow at] LT',
              nextWeek: 'dddd [at] LT',
              lastDay: '[Yesterday at] LT',
              lastWeek: '[Last] dddd [at] LT',
              sameElse: 'L',
            };

            function calendar(key, mom, now) {
              var output = this._calendar[key] || this._calendar['sameElse'];
              return isFunction(output) ? output.call(mom, now) : output;
            }

            function zeroFill(number, targetLength, forceSign) {
              var absNumber = '' + Math.abs(number),
                zerosToFill = targetLength - absNumber.length,
                sign = number >= 0;
              return (
                (sign ? (forceSign ? '+' : '') : '-') +
                Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +
                absNumber
              );
            }

            var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
              localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
              formatFunctions = {},
              formatTokenFunctions = {};

            // token:    'M'
            // padded:   ['MM', 2]
            // ordinal:  'Mo'
            // callback: function () { this.month() + 1 }
            function addFormatToken(token, padded, ordinal, callback) {
              var func = callback;
              if (typeof callback === 'string') {
                func = function () {
                  return this[callback]();
                };
              }
              if (token) {
                formatTokenFunctions[token] = func;
              }
              if (padded) {
                formatTokenFunctions[padded[0]] = function () {
                  return zeroFill(
                    func.apply(this, arguments),
                    padded[1],
                    padded[2]
                  );
                };
              }
              if (ordinal) {
                formatTokenFunctions[ordinal] = function () {
                  return this.localeData().ordinal(
                    func.apply(this, arguments),
                    token
                  );
                };
              }
            }

            function removeFormattingTokens(input) {
              if (input.match(/\[[\s\S]/)) {
                return input.replace(/^\[|\]$/g, '');
              }
              return input.replace(/\\/g, '');
            }

            function makeFormatFunction(format) {
              var array = format.match(formattingTokens),
                i,
                length;

              for (i = 0, length = array.length; i < length; i++) {
                if (formatTokenFunctions[array[i]]) {
                  array[i] = formatTokenFunctions[array[i]];
                } else {
                  array[i] = removeFormattingTokens(array[i]);
                }
              }

              return function (mom) {
                var output = '',
                  i;
                for (i = 0; i < length; i++) {
                  output += isFunction(array[i])
                    ? array[i].call(mom, format)
                    : array[i];
                }
                return output;
              };
            }

            // format date using native date object
            function formatMoment(m, format) {
              if (!m.isValid()) {
                return m.localeData().invalidDate();
              }

              format = expandFormat(format, m.localeData());
              formatFunctions[format] =
                formatFunctions[format] || makeFormatFunction(format);

              return formatFunctions[format](m);
            }

            function expandFormat(format, locale) {
              var i = 5;

              function replaceLongDateFormatTokens(input) {
                return locale.longDateFormat(input) || input;
              }

              localFormattingTokens.lastIndex = 0;
              while (i >= 0 && localFormattingTokens.test(format)) {
                format = format.replace(
                  localFormattingTokens,
                  replaceLongDateFormatTokens
                );
                localFormattingTokens.lastIndex = 0;
                i -= 1;
              }

              return format;
            }

            var defaultLongDateFormat = {
              LTS: 'h:mm:ss A',
              LT: 'h:mm A',
              L: 'MM/DD/YYYY',
              LL: 'MMMM D, YYYY',
              LLL: 'MMMM D, YYYY h:mm A',
              LLLL: 'dddd, MMMM D, YYYY h:mm A',
            };

            function longDateFormat(key) {
              var format = this._longDateFormat[key],
                formatUpper = this._longDateFormat[key.toUpperCase()];

              if (format || !formatUpper) {
                return format;
              }

              this._longDateFormat[key] = formatUpper
                .match(formattingTokens)
                .map(function (tok) {
                  if (
                    tok === 'MMMM' ||
                    tok === 'MM' ||
                    tok === 'DD' ||
                    tok === 'dddd'
                  ) {
                    return tok.slice(1);
                  }
                  return tok;
                })
                .join('');

              return this._longDateFormat[key];
            }

            var defaultInvalidDate = 'Invalid date';

            function invalidDate() {
              return this._invalidDate;
            }

            var defaultOrdinal = '%d',
              defaultDayOfMonthOrdinalParse = /\d{1,2}/;

            function ordinal(number) {
              return this._ordinal.replace('%d', number);
            }

            var defaultRelativeTime = {
              future: 'in %s',
              past: '%s ago',
              s: 'a few seconds',
              ss: '%d seconds',
              m: 'a minute',
              mm: '%d minutes',
              h: 'an hour',
              hh: '%d hours',
              d: 'a day',
              dd: '%d days',
              w: 'a week',
              ww: '%d weeks',
              M: 'a month',
              MM: '%d months',
              y: 'a year',
              yy: '%d years',
            };

            function relativeTime(number, withoutSuffix, string, isFuture) {
              var output = this._relativeTime[string];
              return isFunction(output)
                ? output(number, withoutSuffix, string, isFuture)
                : output.replace(/%d/i, number);
            }

            function pastFuture(diff, output) {
              var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
              return isFunction(format)
                ? format(output)
                : format.replace(/%s/i, output);
            }

            var aliases = {};

            function addUnitAlias(unit, shorthand) {
              var lowerCase = unit.toLowerCase();
              aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[
                shorthand
              ] = unit;
            }

            function normalizeUnits(units) {
              return typeof units === 'string'
                ? aliases[units] || aliases[units.toLowerCase()]
                : undefined;
            }

            function normalizeObjectUnits(inputObject) {
              var normalizedInput = {},
                normalizedProp,
                prop;

              for (prop in inputObject) {
                if (hasOwnProp(inputObject, prop)) {
                  normalizedProp = normalizeUnits(prop);
                  if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                  }
                }
              }

              return normalizedInput;
            }

            var priorities = {};

            function addUnitPriority(unit, priority) {
              priorities[unit] = priority;
            }

            function getPrioritizedUnits(unitsObj) {
              var units = [],
                u;
              for (u in unitsObj) {
                if (hasOwnProp(unitsObj, u)) {
                  units.push({ unit: u, priority: priorities[u] });
                }
              }
              units.sort(function (a, b) {
                return a.priority - b.priority;
              });
              return units;
            }

            function isLeapYear(year) {
              return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
            }

            function absFloor(number) {
              if (number < 0) {
                // -0 -> 0
                return Math.ceil(number) || 0;
              } else {
                return Math.floor(number);
              }
            }

            function toInt(argumentForCoercion) {
              var coercedNumber = +argumentForCoercion,
                value = 0;

              if (coercedNumber !== 0 && isFinite(coercedNumber)) {
                value = absFloor(coercedNumber);
              }

              return value;
            }

            function makeGetSet(unit, keepTime) {
              return function (value) {
                if (value != null) {
                  set$1(this, unit, value);
                  hooks.updateOffset(this, keepTime);
                  return this;
                } else {
                  return get(this, unit);
                }
              };
            }

            function get(mom, unit) {
              return mom.isValid()
                ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()
                : NaN;
            }

            function set$1(mom, unit, value) {
              if (mom.isValid() && !isNaN(value)) {
                if (
                  unit === 'FullYear' &&
                  isLeapYear(mom.year()) &&
                  mom.month() === 1 &&
                  mom.date() === 29
                ) {
                  value = toInt(value);
                  mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](
                    value,
                    mom.month(),
                    daysInMonth(value, mom.month())
                  );
                } else {
                  mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
                }
              }
            }

            // MOMENTS

            function stringGet(units) {
              units = normalizeUnits(units);
              if (isFunction(this[units])) {
                return this[units]();
              }
              return this;
            }

            function stringSet(units, value) {
              if (typeof units === 'object') {
                units = normalizeObjectUnits(units);
                var prioritized = getPrioritizedUnits(units),
                  i;
                for (i = 0; i < prioritized.length; i++) {
                  this[prioritized[i].unit](units[prioritized[i].unit]);
                }
              } else {
                units = normalizeUnits(units);
                if (isFunction(this[units])) {
                  return this[units](value);
                }
              }
              return this;
            }

            var match1 = /\d/, //       0 - 9
              match2 = /\d\d/, //      00 - 99
              match3 = /\d{3}/, //     000 - 999
              match4 = /\d{4}/, //    0000 - 9999
              match6 = /[+-]?\d{6}/, // -999999 - 999999
              match1to2 = /\d\d?/, //       0 - 99
              match3to4 = /\d\d\d\d?/, //     999 - 9999
              match5to6 = /\d\d\d\d\d\d?/, //   99999 - 999999
              match1to3 = /\d{1,3}/, //       0 - 999
              match1to4 = /\d{1,4}/, //       0 - 9999
              match1to6 = /[+-]?\d{1,6}/, // -999999 - 999999
              matchUnsigned = /\d+/, //       0 - inf
              matchSigned = /[+-]?\d+/, //    -inf - inf
              matchOffset = /Z|[+-]\d\d:?\d\d/gi, // +00:00 -00:00 +0000 -0000 or Z
              matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z
              matchTimestamp = /[+-]?\d+(\.\d{1,3})?/, // 123456789 123456789.123
              // any word (or two) characters or numbers including two/three word month in arabic.
              // includes scottish gaelic two word and hyphenated months
              matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,
              regexes;

            regexes = {};

            function addRegexToken(token, regex, strictRegex) {
              regexes[token] = isFunction(regex)
                ? regex
                : function (isStrict, localeData) {
                    return isStrict && strictRegex ? strictRegex : regex;
                  };
            }

            function getParseRegexForToken(token, config) {
              if (!hasOwnProp(regexes, token)) {
                return new RegExp(unescapeFormat(token));
              }

              return regexes[token](config._strict, config._locale);
            }

            // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
            function unescapeFormat(s) {
              return regexEscape(
                s
                  .replace('\\', '')
                  .replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (
                    matched,
                    p1,
                    p2,
                    p3,
                    p4
                  ) {
                    return p1 || p2 || p3 || p4;
                  })
              );
            }

            function regexEscape(s) {
              return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
            }

            var tokens = {};

            function addParseToken(token, callback) {
              var i,
                func = callback;
              if (typeof token === 'string') {
                token = [token];
              }
              if (isNumber(callback)) {
                func = function (input, array) {
                  array[callback] = toInt(input);
                };
              }
              for (i = 0; i < token.length; i++) {
                tokens[token[i]] = func;
              }
            }

            function addWeekParseToken(token, callback) {
              addParseToken(token, function (input, array, config, token) {
                config._w = config._w || {};
                callback(input, config._w, config, token);
              });
            }

            function addTimeToArrayFromToken(token, input, config) {
              if (input != null && hasOwnProp(tokens, token)) {
                tokens[token](input, config._a, config, token);
              }
            }

            var YEAR = 0,
              MONTH = 1,
              DATE = 2,
              HOUR = 3,
              MINUTE = 4,
              SECOND = 5,
              MILLISECOND = 6,
              WEEK = 7,
              WEEKDAY = 8;

            function mod(n, x) {
              return ((n % x) + x) % x;
            }

            var indexOf;

            if (Array.prototype.indexOf) {
              indexOf = Array.prototype.indexOf;
            } else {
              indexOf = function (o) {
                // I know
                var i;
                for (i = 0; i < this.length; ++i) {
                  if (this[i] === o) {
                    return i;
                  }
                }
                return -1;
              };
            }

            function daysInMonth(year, month) {
              if (isNaN(year) || isNaN(month)) {
                return NaN;
              }
              var modMonth = mod(month, 12);
              year += (month - modMonth) / 12;
              return modMonth === 1
                ? isLeapYear(year)
                  ? 29
                  : 28
                : 31 - ((modMonth % 7) % 2);
            }

            // FORMATTING

            addFormatToken('M', ['MM', 2], 'Mo', function () {
              return this.month() + 1;
            });

            addFormatToken('MMM', 0, 0, function (format) {
              return this.localeData().monthsShort(this, format);
            });

            addFormatToken('MMMM', 0, 0, function (format) {
              return this.localeData().months(this, format);
            });

            // ALIASES

            addUnitAlias('month', 'M');

            // PRIORITY

            addUnitPriority('month', 8);

            // PARSING

            addRegexToken('M', match1to2);
            addRegexToken('MM', match1to2, match2);
            addRegexToken('MMM', function (isStrict, locale) {
              return locale.monthsShortRegex(isStrict);
            });
            addRegexToken('MMMM', function (isStrict, locale) {
              return locale.monthsRegex(isStrict);
            });

            addParseToken(['M', 'MM'], function (input, array) {
              array[MONTH] = toInt(input) - 1;
            });

            addParseToken(['MMM', 'MMMM'], function (
              input,
              array,
              config,
              token
            ) {
              var month = config._locale.monthsParse(
                input,
                token,
                config._strict
              );
              // if we didn't find a month name, mark the date as invalid.
              if (month != null) {
                array[MONTH] = month;
              } else {
                getParsingFlags(config).invalidMonth = input;
              }
            });

            // LOCALES

            var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
                '_'
              ),
              defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
                '_'
              ),
              MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
              defaultMonthsShortRegex = matchWord,
              defaultMonthsRegex = matchWord;

            function localeMonths(m, format) {
              if (!m) {
                return isArray(this._months)
                  ? this._months
                  : this._months['standalone'];
              }
              return isArray(this._months)
                ? this._months[m.month()]
                : this._months[
                    (this._months.isFormat || MONTHS_IN_FORMAT).test(format)
                      ? 'format'
                      : 'standalone'
                  ][m.month()];
            }

            function localeMonthsShort(m, format) {
              if (!m) {
                return isArray(this._monthsShort)
                  ? this._monthsShort
                  : this._monthsShort['standalone'];
              }
              return isArray(this._monthsShort)
                ? this._monthsShort[m.month()]
                : this._monthsShort[
                    MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'
                  ][m.month()];
            }

            function handleStrictParse(monthName, format, strict) {
              var i,
                ii,
                mom,
                llc = monthName.toLocaleLowerCase();
              if (!this._monthsParse) {
                // this is not used
                this._monthsParse = [];
                this._longMonthsParse = [];
                this._shortMonthsParse = [];
                for (i = 0; i < 12; ++i) {
                  mom = createUTC([2000, i]);
                  this._shortMonthsParse[i] = this.monthsShort(
                    mom,
                    ''
                  ).toLocaleLowerCase();
                  this._longMonthsParse[i] = this.months(
                    mom,
                    ''
                  ).toLocaleLowerCase();
                }
              }

              if (strict) {
                if (format === 'MMM') {
                  ii = indexOf.call(this._shortMonthsParse, llc);
                  return ii !== -1 ? ii : null;
                } else {
                  ii = indexOf.call(this._longMonthsParse, llc);
                  return ii !== -1 ? ii : null;
                }
              } else {
                if (format === 'MMM') {
                  ii = indexOf.call(this._shortMonthsParse, llc);
                  if (ii !== -1) {
                    return ii;
                  }
                  ii = indexOf.call(this._longMonthsParse, llc);
                  return ii !== -1 ? ii : null;
                } else {
                  ii = indexOf.call(this._longMonthsParse, llc);
                  if (ii !== -1) {
                    return ii;
                  }
                  ii = indexOf.call(this._shortMonthsParse, llc);
                  return ii !== -1 ? ii : null;
                }
              }
            }

            function localeMonthsParse(monthName, format, strict) {
              var i, mom, regex;

              if (this._monthsParseExact) {
                return handleStrictParse.call(this, monthName, format, strict);
              }

              if (!this._monthsParse) {
                this._monthsParse = [];
                this._longMonthsParse = [];
                this._shortMonthsParse = [];
              }

              // TODO: add sorting
              // Sorting makes sure if one month (or abbr) is a prefix of another
              // see sorting in computeMonthsParse
              for (i = 0; i < 12; i++) {
                // make the regex if we don't have it already
                mom = createUTC([2000, i]);
                if (strict && !this._longMonthsParse[i]) {
                  this._longMonthsParse[i] = new RegExp(
                    '^' + this.months(mom, '').replace('.', '') + '$',
                    'i'
                  );
                  this._shortMonthsParse[i] = new RegExp(
                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',
                    'i'
                  );
                }
                if (!strict && !this._monthsParse[i]) {
                  regex =
                    '^' +
                    this.months(mom, '') +
                    '|^' +
                    this.monthsShort(mom, '');
                  this._monthsParse[i] = new RegExp(
                    regex.replace('.', ''),
                    'i'
                  );
                }
                // test the regex
                if (
                  strict &&
                  format === 'MMMM' &&
                  this._longMonthsParse[i].test(monthName)
                ) {
                  return i;
                } else if (
                  strict &&
                  format === 'MMM' &&
                  this._shortMonthsParse[i].test(monthName)
                ) {
                  return i;
                } else if (!strict && this._monthsParse[i].test(monthName)) {
                  return i;
                }
              }
            }

            // MOMENTS

            function setMonth(mom, value) {
              var dayOfMonth;

              if (!mom.isValid()) {
                // No op
                return mom;
              }

              if (typeof value === 'string') {
                if (/^\d+$/.test(value)) {
                  value = toInt(value);
                } else {
                  value = mom.localeData().monthsParse(value);
                  // TODO: Another silent failure?
                  if (!isNumber(value)) {
                    return mom;
                  }
                }
              }

              dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
              mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](
                value,
                dayOfMonth
              );
              return mom;
            }

            function getSetMonth(value) {
              if (value != null) {
                setMonth(this, value);
                hooks.updateOffset(this, true);
                return this;
              } else {
                return get(this, 'Month');
              }
            }

            function getDaysInMonth() {
              return daysInMonth(this.year(), this.month());
            }

            function monthsShortRegex(isStrict) {
              if (this._monthsParseExact) {
                if (!hasOwnProp(this, '_monthsRegex')) {
                  computeMonthsParse.call(this);
                }
                if (isStrict) {
                  return this._monthsShortStrictRegex;
                } else {
                  return this._monthsShortRegex;
                }
              } else {
                if (!hasOwnProp(this, '_monthsShortRegex')) {
                  this._monthsShortRegex = defaultMonthsShortRegex;
                }
                return this._monthsShortStrictRegex && isStrict
                  ? this._monthsShortStrictRegex
                  : this._monthsShortRegex;
              }
            }

            function monthsRegex(isStrict) {
              if (this._monthsParseExact) {
                if (!hasOwnProp(this, '_monthsRegex')) {
                  computeMonthsParse.call(this);
                }
                if (isStrict) {
                  return this._monthsStrictRegex;
                } else {
                  return this._monthsRegex;
                }
              } else {
                if (!hasOwnProp(this, '_monthsRegex')) {
                  this._monthsRegex = defaultMonthsRegex;
                }
                return this._monthsStrictRegex && isStrict
                  ? this._monthsStrictRegex
                  : this._monthsRegex;
              }
            }

            function computeMonthsParse() {
              function cmpLenRev(a, b) {
                return b.length - a.length;
              }

              var shortPieces = [],
                longPieces = [],
                mixedPieces = [],
                i,
                mom;
              for (i = 0; i < 12; i++) {
                // make the regex if we don't have it already
                mom = createUTC([2000, i]);
                shortPieces.push(this.monthsShort(mom, ''));
                longPieces.push(this.months(mom, ''));
                mixedPieces.push(this.months(mom, ''));
                mixedPieces.push(this.monthsShort(mom, ''));
              }
              // Sorting makes sure if one month (or abbr) is a prefix of another it
              // will match the longer piece.
              shortPieces.sort(cmpLenRev);
              longPieces.sort(cmpLenRev);
              mixedPieces.sort(cmpLenRev);
              for (i = 0; i < 12; i++) {
                shortPieces[i] = regexEscape(shortPieces[i]);
                longPieces[i] = regexEscape(longPieces[i]);
              }
              for (i = 0; i < 24; i++) {
                mixedPieces[i] = regexEscape(mixedPieces[i]);
              }

              this._monthsRegex = new RegExp(
                '^(' + mixedPieces.join('|') + ')',
                'i'
              );
              this._monthsShortRegex = this._monthsRegex;
              this._monthsStrictRegex = new RegExp(
                '^(' + longPieces.join('|') + ')',
                'i'
              );
              this._monthsShortStrictRegex = new RegExp(
                '^(' + shortPieces.join('|') + ')',
                'i'
              );
            }

            // FORMATTING

            addFormatToken('Y', 0, 0, function () {
              var y = this.year();
              return y <= 9999 ? zeroFill(y, 4) : '+' + y;
            });

            addFormatToken(0, ['YY', 2], 0, function () {
              return this.year() % 100;
            });

            addFormatToken(0, ['YYYY', 4], 0, 'year');
            addFormatToken(0, ['YYYYY', 5], 0, 'year');
            addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

            // ALIASES

            addUnitAlias('year', 'y');

            // PRIORITIES

            addUnitPriority('year', 1);

            // PARSING

            addRegexToken('Y', matchSigned);
            addRegexToken('YY', match1to2, match2);
            addRegexToken('YYYY', match1to4, match4);
            addRegexToken('YYYYY', match1to6, match6);
            addRegexToken('YYYYYY', match1to6, match6);

            addParseToken(['YYYYY', 'YYYYYY'], YEAR);
            addParseToken('YYYY', function (input, array) {
              array[YEAR] =
                input.length === 2
                  ? hooks.parseTwoDigitYear(input)
                  : toInt(input);
            });
            addParseToken('YY', function (input, array) {
              array[YEAR] = hooks.parseTwoDigitYear(input);
            });
            addParseToken('Y', function (input, array) {
              array[YEAR] = parseInt(input, 10);
            });

            // HELPERS

            function daysInYear(year) {
              return isLeapYear(year) ? 366 : 365;
            }

            // HOOKS

            hooks.parseTwoDigitYear = function (input) {
              return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
            };

            // MOMENTS

            var getSetYear = makeGetSet('FullYear', true);

            function getIsLeapYear() {
              return isLeapYear(this.year());
            }

            function createDate(y, m, d, h, M, s, ms) {
              // can't just apply() to create a date:
              // https://stackoverflow.com/q/181348
              var date;
              // the date constructor remaps years 0-99 to 1900-1999
              if (y < 100 && y >= 0) {
                // preserve leap years using a full 400 year cycle, then reset
                date = new Date(y + 400, m, d, h, M, s, ms);
                if (isFinite(date.getFullYear())) {
                  date.setFullYear(y);
                }
              } else {
                date = new Date(y, m, d, h, M, s, ms);
              }

              return date;
            }

            function createUTCDate(y) {
              var date, args;
              // the Date.UTC function remaps years 0-99 to 1900-1999
              if (y < 100 && y >= 0) {
                args = Array.prototype.slice.call(arguments);
                // preserve leap years using a full 400 year cycle, then reset
                args[0] = y + 400;
                date = new Date(Date.UTC.apply(null, args));
                if (isFinite(date.getUTCFullYear())) {
                  date.setUTCFullYear(y);
                }
              } else {
                date = new Date(Date.UTC.apply(null, arguments));
              }

              return date;
            }

            // start-of-first-week - start-of-year
            function firstWeekOffset(year, dow, doy) {
              var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
                fwd = 7 + dow - doy,
                // first-week day local weekday -- which local weekday is fwd
                fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

              return -fwdlw + fwd - 1;
            }

            // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
            function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
              var localWeekday = (7 + weekday - dow) % 7,
                weekOffset = firstWeekOffset(year, dow, doy),
                dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
                resYear,
                resDayOfYear;

              if (dayOfYear <= 0) {
                resYear = year - 1;
                resDayOfYear = daysInYear(resYear) + dayOfYear;
              } else if (dayOfYear > daysInYear(year)) {
                resYear = year + 1;
                resDayOfYear = dayOfYear - daysInYear(year);
              } else {
                resYear = year;
                resDayOfYear = dayOfYear;
              }

              return {
                year: resYear,
                dayOfYear: resDayOfYear,
              };
            }

            function weekOfYear(mom, dow, doy) {
              var weekOffset = firstWeekOffset(mom.year(), dow, doy),
                week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
                resWeek,
                resYear;

              if (week < 1) {
                resYear = mom.year() - 1;
                resWeek = week + weeksInYear(resYear, dow, doy);
              } else if (week > weeksInYear(mom.year(), dow, doy)) {
                resWeek = week - weeksInYear(mom.year(), dow, doy);
                resYear = mom.year() + 1;
              } else {
                resYear = mom.year();
                resWeek = week;
              }

              return {
                week: resWeek,
                year: resYear,
              };
            }

            function weeksInYear(year, dow, doy) {
              var weekOffset = firstWeekOffset(year, dow, doy),
                weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
              return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
            }

            // FORMATTING

            addFormatToken('w', ['ww', 2], 'wo', 'week');
            addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

            // ALIASES

            addUnitAlias('week', 'w');
            addUnitAlias('isoWeek', 'W');

            // PRIORITIES

            addUnitPriority('week', 5);
            addUnitPriority('isoWeek', 5);

            // PARSING

            addRegexToken('w', match1to2);
            addRegexToken('ww', match1to2, match2);
            addRegexToken('W', match1to2);
            addRegexToken('WW', match1to2, match2);

            addWeekParseToken(['w', 'ww', 'W', 'WW'], function (
              input,
              week,
              config,
              token
            ) {
              week[token.substr(0, 1)] = toInt(input);
            });

            // HELPERS

            // LOCALES

            function localeWeek(mom) {
              return weekOfYear(mom, this._week.dow, this._week.doy).week;
            }

            var defaultLocaleWeek = {
              dow: 0, // Sunday is the first day of the week.
              doy: 6, // The week that contains Jan 6th is the first week of the year.
            };

            function localeFirstDayOfWeek() {
              return this._week.dow;
            }

            function localeFirstDayOfYear() {
              return this._week.doy;
            }

            // MOMENTS

            function getSetWeek(input) {
              var week = this.localeData().week(this);
              return input == null ? week : this.add((input - week) * 7, 'd');
            }

            function getSetISOWeek(input) {
              var week = weekOfYear(this, 1, 4).week;
              return input == null ? week : this.add((input - week) * 7, 'd');
            }

            // FORMATTING

            addFormatToken('d', 0, 'do', 'day');

            addFormatToken('dd', 0, 0, function (format) {
              return this.localeData().weekdaysMin(this, format);
            });

            addFormatToken('ddd', 0, 0, function (format) {
              return this.localeData().weekdaysShort(this, format);
            });

            addFormatToken('dddd', 0, 0, function (format) {
              return this.localeData().weekdays(this, format);
            });

            addFormatToken('e', 0, 0, 'weekday');
            addFormatToken('E', 0, 0, 'isoWeekday');

            // ALIASES

            addUnitAlias('day', 'd');
            addUnitAlias('weekday', 'e');
            addUnitAlias('isoWeekday', 'E');

            // PRIORITY
            addUnitPriority('day', 11);
            addUnitPriority('weekday', 11);
            addUnitPriority('isoWeekday', 11);

            // PARSING

            addRegexToken('d', match1to2);
            addRegexToken('e', match1to2);
            addRegexToken('E', match1to2);
            addRegexToken('dd', function (isStrict, locale) {
              return locale.weekdaysMinRegex(isStrict);
            });
            addRegexToken('ddd', function (isStrict, locale) {
              return locale.weekdaysShortRegex(isStrict);
            });
            addRegexToken('dddd', function (isStrict, locale) {
              return locale.weekdaysRegex(isStrict);
            });

            addWeekParseToken(['dd', 'ddd', 'dddd'], function (
              input,
              week,
              config,
              token
            ) {
              var weekday = config._locale.weekdaysParse(
                input,
                token,
                config._strict
              );
              // if we didn't get a weekday name, mark the date as invalid
              if (weekday != null) {
                week.d = weekday;
              } else {
                getParsingFlags(config).invalidWeekday = input;
              }
            });

            addWeekParseToken(['d', 'e', 'E'], function (
              input,
              week,
              config,
              token
            ) {
              week[token] = toInt(input);
            });

            // HELPERS

            function parseWeekday(input, locale) {
              if (typeof input !== 'string') {
                return input;
              }

              if (!isNaN(input)) {
                return parseInt(input, 10);
              }

              input = locale.weekdaysParse(input);
              if (typeof input === 'number') {
                return input;
              }

              return null;
            }

            function parseIsoWeekday(input, locale) {
              if (typeof input === 'string') {
                return locale.weekdaysParse(input) % 7 || 7;
              }
              return isNaN(input) ? null : input;
            }

            // LOCALES
            function shiftWeekdays(ws, n) {
              return ws.slice(n, 7).concat(ws.slice(0, n));
            }

            var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
                '_'
              ),
              defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split(
                '_'
              ),
              defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
              defaultWeekdaysRegex = matchWord,
              defaultWeekdaysShortRegex = matchWord,
              defaultWeekdaysMinRegex = matchWord;

            function localeWeekdays(m, format) {
              var weekdays = isArray(this._weekdays)
                ? this._weekdays
                : this._weekdays[
                    m && m !== true && this._weekdays.isFormat.test(format)
                      ? 'format'
                      : 'standalone'
                  ];
              return m === true
                ? shiftWeekdays(weekdays, this._week.dow)
                : m
                ? weekdays[m.day()]
                : weekdays;
            }

            function localeWeekdaysShort(m) {
              return m === true
                ? shiftWeekdays(this._weekdaysShort, this._week.dow)
                : m
                ? this._weekdaysShort[m.day()]
                : this._weekdaysShort;
            }

            function localeWeekdaysMin(m) {
              return m === true
                ? shiftWeekdays(this._weekdaysMin, this._week.dow)
                : m
                ? this._weekdaysMin[m.day()]
                : this._weekdaysMin;
            }

            function handleStrictParse$1(weekdayName, format, strict) {
              var i,
                ii,
                mom,
                llc = weekdayName.toLocaleLowerCase();
              if (!this._weekdaysParse) {
                this._weekdaysParse = [];
                this._shortWeekdaysParse = [];
                this._minWeekdaysParse = [];

                for (i = 0; i < 7; ++i) {
                  mom = createUTC([2000, 1]).day(i);
                  this._minWeekdaysParse[i] = this.weekdaysMin(
                    mom,
                    ''
                  ).toLocaleLowerCase();
                  this._shortWeekdaysParse[i] = this.weekdaysShort(
                    mom,
                    ''
                  ).toLocaleLowerCase();
                  this._weekdaysParse[i] = this.weekdays(
                    mom,
                    ''
                  ).toLocaleLowerCase();
                }
              }

              if (strict) {
                if (format === 'dddd') {
                  ii = indexOf.call(this._weekdaysParse, llc);
                  return ii !== -1 ? ii : null;
                } else if (format === 'ddd') {
                  ii = indexOf.call(this._shortWeekdaysParse, llc);
                  return ii !== -1 ? ii : null;
                } else {
                  ii = indexOf.call(this._minWeekdaysParse, llc);
                  return ii !== -1 ? ii : null;
                }
              } else {
                if (format === 'dddd') {
                  ii = indexOf.call(this._weekdaysParse, llc);
                  if (ii !== -1) {
                    return ii;
                  }
                  ii = indexOf.call(this._shortWeekdaysParse, llc);
                  if (ii !== -1) {
                    return ii;
                  }
                  ii = indexOf.call(this._minWeekdaysParse, llc);
                  return ii !== -1 ? ii : null;
                } else if (format === 'ddd') {
                  ii = indexOf.call(this._shortWeekdaysParse, llc);
                  if (ii !== -1) {
                    return ii;
                  }
                  ii = indexOf.call(this._weekdaysParse, llc);
                  if (ii !== -1) {
                    return ii;
                  }
                  ii = indexOf.call(this._minWeekdaysParse, llc);
                  return ii !== -1 ? ii : null;
                } else {
                  ii = indexOf.call(this._minWeekdaysParse, llc);
                  if (ii !== -1) {
                    return ii;
                  }
                  ii = indexOf.call(this._weekdaysParse, llc);
                  if (ii !== -1) {
                    return ii;
                  }
                  ii = indexOf.call(this._shortWeekdaysParse, llc);
                  return ii !== -1 ? ii : null;
                }
              }
            }

            function localeWeekdaysParse(weekdayName, format, strict) {
              var i, mom, regex;

              if (this._weekdaysParseExact) {
                return handleStrictParse$1.call(
                  this,
                  weekdayName,
                  format,
                  strict
                );
              }

              if (!this._weekdaysParse) {
                this._weekdaysParse = [];
                this._minWeekdaysParse = [];
                this._shortWeekdaysParse = [];
                this._fullWeekdaysParse = [];
              }

              for (i = 0; i < 7; i++) {
                // make the regex if we don't have it already

                mom = createUTC([2000, 1]).day(i);
                if (strict && !this._fullWeekdaysParse[i]) {
                  this._fullWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdays(mom, '').replace('.', '\\.?') + '$',
                    'i'
                  );
                  this._shortWeekdaysParse[i] = new RegExp(
                    '^' +
                      this.weekdaysShort(mom, '').replace('.', '\\.?') +
                      '$',
                    'i'
                  );
                  this._minWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$',
                    'i'
                  );
                }
                if (!this._weekdaysParse[i]) {
                  regex =
                    '^' +
                    this.weekdays(mom, '') +
                    '|^' +
                    this.weekdaysShort(mom, '') +
                    '|^' +
                    this.weekdaysMin(mom, '');
                  this._weekdaysParse[i] = new RegExp(
                    regex.replace('.', ''),
                    'i'
                  );
                }
                // test the regex
                if (
                  strict &&
                  format === 'dddd' &&
                  this._fullWeekdaysParse[i].test(weekdayName)
                ) {
                  return i;
                } else if (
                  strict &&
                  format === 'ddd' &&
                  this._shortWeekdaysParse[i].test(weekdayName)
                ) {
                  return i;
                } else if (
                  strict &&
                  format === 'dd' &&
                  this._minWeekdaysParse[i].test(weekdayName)
                ) {
                  return i;
                } else if (
                  !strict &&
                  this._weekdaysParse[i].test(weekdayName)
                ) {
                  return i;
                }
              }
            }

            // MOMENTS

            function getSetDayOfWeek(input) {
              if (!this.isValid()) {
                return input != null ? this : NaN;
              }
              var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
              if (input != null) {
                input = parseWeekday(input, this.localeData());
                return this.add(input - day, 'd');
              } else {
                return day;
              }
            }

            function getSetLocaleDayOfWeek(input) {
              if (!this.isValid()) {
                return input != null ? this : NaN;
              }
              var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
              return input == null ? weekday : this.add(input - weekday, 'd');
            }

            function getSetISODayOfWeek(input) {
              if (!this.isValid()) {
                return input != null ? this : NaN;
              }

              // behaves the same as moment#day except
              // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
              // as a setter, sunday should belong to the previous week.

              if (input != null) {
                var weekday = parseIsoWeekday(input, this.localeData());
                return this.day(this.day() % 7 ? weekday : weekday - 7);
              } else {
                return this.day() || 7;
              }
            }

            function weekdaysRegex(isStrict) {
              if (this._weekdaysParseExact) {
                if (!hasOwnProp(this, '_weekdaysRegex')) {
                  computeWeekdaysParse.call(this);
                }
                if (isStrict) {
                  return this._weekdaysStrictRegex;
                } else {
                  return this._weekdaysRegex;
                }
              } else {
                if (!hasOwnProp(this, '_weekdaysRegex')) {
                  this._weekdaysRegex = defaultWeekdaysRegex;
                }
                return this._weekdaysStrictRegex && isStrict
                  ? this._weekdaysStrictRegex
                  : this._weekdaysRegex;
              }
            }

            function weekdaysShortRegex(isStrict) {
              if (this._weekdaysParseExact) {
                if (!hasOwnProp(this, '_weekdaysRegex')) {
                  computeWeekdaysParse.call(this);
                }
                if (isStrict) {
                  return this._weekdaysShortStrictRegex;
                } else {
                  return this._weekdaysShortRegex;
                }
              } else {
                if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                  this._weekdaysShortRegex = defaultWeekdaysShortRegex;
                }
                return this._weekdaysShortStrictRegex && isStrict
                  ? this._weekdaysShortStrictRegex
                  : this._weekdaysShortRegex;
              }
            }

            function weekdaysMinRegex(isStrict) {
              if (this._weekdaysParseExact) {
                if (!hasOwnProp(this, '_weekdaysRegex')) {
                  computeWeekdaysParse.call(this);
                }
                if (isStrict) {
                  return this._weekdaysMinStrictRegex;
                } else {
                  return this._weekdaysMinRegex;
                }
              } else {
                if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                  this._weekdaysMinRegex = defaultWeekdaysMinRegex;
                }
                return this._weekdaysMinStrictRegex && isStrict
                  ? this._weekdaysMinStrictRegex
                  : this._weekdaysMinRegex;
              }
            }

            function computeWeekdaysParse() {
              function cmpLenRev(a, b) {
                return b.length - a.length;
              }

              var minPieces = [],
                shortPieces = [],
                longPieces = [],
                mixedPieces = [],
                i,
                mom,
                minp,
                shortp,
                longp;
              for (i = 0; i < 7; i++) {
                // make the regex if we don't have it already
                mom = createUTC([2000, 1]).day(i);
                minp = regexEscape(this.weekdaysMin(mom, ''));
                shortp = regexEscape(this.weekdaysShort(mom, ''));
                longp = regexEscape(this.weekdays(mom, ''));
                minPieces.push(minp);
                shortPieces.push(shortp);
                longPieces.push(longp);
                mixedPieces.push(minp);
                mixedPieces.push(shortp);
                mixedPieces.push(longp);
              }
              // Sorting makes sure if one weekday (or abbr) is a prefix of another it
              // will match the longer piece.
              minPieces.sort(cmpLenRev);
              shortPieces.sort(cmpLenRev);
              longPieces.sort(cmpLenRev);
              mixedPieces.sort(cmpLenRev);

              this._weekdaysRegex = new RegExp(
                '^(' + mixedPieces.join('|') + ')',
                'i'
              );
              this._weekdaysShortRegex = this._weekdaysRegex;
              this._weekdaysMinRegex = this._weekdaysRegex;

              this._weekdaysStrictRegex = new RegExp(
                '^(' + longPieces.join('|') + ')',
                'i'
              );
              this._weekdaysShortStrictRegex = new RegExp(
                '^(' + shortPieces.join('|') + ')',
                'i'
              );
              this._weekdaysMinStrictRegex = new RegExp(
                '^(' + minPieces.join('|') + ')',
                'i'
              );
            }

            // FORMATTING

            function hFormat() {
              return this.hours() % 12 || 12;
            }

            function kFormat() {
              return this.hours() || 24;
            }

            addFormatToken('H', ['HH', 2], 0, 'hour');
            addFormatToken('h', ['hh', 2], 0, hFormat);
            addFormatToken('k', ['kk', 2], 0, kFormat);

            addFormatToken('hmm', 0, 0, function () {
              return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
            });

            addFormatToken('hmmss', 0, 0, function () {
              return (
                '' +
                hFormat.apply(this) +
                zeroFill(this.minutes(), 2) +
                zeroFill(this.seconds(), 2)
              );
            });

            addFormatToken('Hmm', 0, 0, function () {
              return '' + this.hours() + zeroFill(this.minutes(), 2);
            });

            addFormatToken('Hmmss', 0, 0, function () {
              return (
                '' +
                this.hours() +
                zeroFill(this.minutes(), 2) +
                zeroFill(this.seconds(), 2)
              );
            });

            function meridiem(token, lowercase) {
              addFormatToken(token, 0, 0, function () {
                return this.localeData().meridiem(
                  this.hours(),
                  this.minutes(),
                  lowercase
                );
              });
            }

            meridiem('a', true);
            meridiem('A', false);

            // ALIASES

            addUnitAlias('hour', 'h');

            // PRIORITY
            addUnitPriority('hour', 13);

            // PARSING

            function matchMeridiem(isStrict, locale) {
              return locale._meridiemParse;
            }

            addRegexToken('a', matchMeridiem);
            addRegexToken('A', matchMeridiem);
            addRegexToken('H', match1to2);
            addRegexToken('h', match1to2);
            addRegexToken('k', match1to2);
            addRegexToken('HH', match1to2, match2);
            addRegexToken('hh', match1to2, match2);
            addRegexToken('kk', match1to2, match2);

            addRegexToken('hmm', match3to4);
            addRegexToken('hmmss', match5to6);
            addRegexToken('Hmm', match3to4);
            addRegexToken('Hmmss', match5to6);

            addParseToken(['H', 'HH'], HOUR);
            addParseToken(['k', 'kk'], function (input, array, config) {
              var kInput = toInt(input);
              array[HOUR] = kInput === 24 ? 0 : kInput;
            });
            addParseToken(['a', 'A'], function (input, array, config) {
              config._isPm = config._locale.isPM(input);
              config._meridiem = input;
            });
            addParseToken(['h', 'hh'], function (input, array, config) {
              array[HOUR] = toInt(input);
              getParsingFlags(config).bigHour = true;
            });
            addParseToken('hmm', function (input, array, config) {
              var pos = input.length - 2;
              array[HOUR] = toInt(input.substr(0, pos));
              array[MINUTE] = toInt(input.substr(pos));
              getParsingFlags(config).bigHour = true;
            });
            addParseToken('hmmss', function (input, array, config) {
              var pos1 = input.length - 4,
                pos2 = input.length - 2;
              array[HOUR] = toInt(input.substr(0, pos1));
              array[MINUTE] = toInt(input.substr(pos1, 2));
              array[SECOND] = toInt(input.substr(pos2));
              getParsingFlags(config).bigHour = true;
            });
            addParseToken('Hmm', function (input, array, config) {
              var pos = input.length - 2;
              array[HOUR] = toInt(input.substr(0, pos));
              array[MINUTE] = toInt(input.substr(pos));
            });
            addParseToken('Hmmss', function (input, array, config) {
              var pos1 = input.length - 4,
                pos2 = input.length - 2;
              array[HOUR] = toInt(input.substr(0, pos1));
              array[MINUTE] = toInt(input.substr(pos1, 2));
              array[SECOND] = toInt(input.substr(pos2));
            });

            // LOCALES

            function localeIsPM(input) {
              // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
              // Using charAt should be more compatible.
              return (input + '').toLowerCase().charAt(0) === 'p';
            }

            var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i,
              // Setting the hour should keep the time, because the user explicitly
              // specified which hour they want. So trying to maintain the same hour (in
              // a new timezone) makes sense. Adding/subtracting hours does not follow
              // this rule.
              getSetHour = makeGetSet('Hours', true);

            function localeMeridiem(hours, minutes, isLower) {
              if (hours > 11) {
                return isLower ? 'pm' : 'PM';
              } else {
                return isLower ? 'am' : 'AM';
              }
            }

            var baseConfig = {
              calendar: defaultCalendar,
              longDateFormat: defaultLongDateFormat,
              invalidDate: defaultInvalidDate,
              ordinal: defaultOrdinal,
              dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
              relativeTime: defaultRelativeTime,

              months: defaultLocaleMonths,
              monthsShort: defaultLocaleMonthsShort,

              week: defaultLocaleWeek,

              weekdays: defaultLocaleWeekdays,
              weekdaysMin: defaultLocaleWeekdaysMin,
              weekdaysShort: defaultLocaleWeekdaysShort,

              meridiemParse: defaultLocaleMeridiemParse,
            };

            // internal storage for locale config files
            var locales = {},
              localeFamilies = {},
              globalLocale;

            function commonPrefix(arr1, arr2) {
              var i,
                minl = Math.min(arr1.length, arr2.length);
              for (i = 0; i < minl; i += 1) {
                if (arr1[i] !== arr2[i]) {
                  return i;
                }
              }
              return minl;
            }

            function normalizeLocale(key) {
              return key ? key.toLowerCase().replace('_', '-') : key;
            }

            // pick the locale from the array
            // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
            // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
            function chooseLocale(names) {
              var i = 0,
                j,
                next,
                locale,
                split;

              while (i < names.length) {
                split = normalizeLocale(names[i]).split('-');
                j = split.length;
                next = normalizeLocale(names[i + 1]);
                next = next ? next.split('-') : null;
                while (j > 0) {
                  locale = loadLocale(split.slice(0, j).join('-'));
                  if (locale) {
                    return locale;
                  }
                  if (
                    next &&
                    next.length >= j &&
                    commonPrefix(split, next) >= j - 1
                  ) {
                    //the next array item is better than a shallower substring of this one
                    break;
                  }
                  j--;
                }
                i++;
              }
              return globalLocale;
            }

            function loadLocale(name) {
              var oldLocale = null,
                aliasedRequire;
              // TODO: Find a better way to register and load all the locales in Node
              if (
                locales[name] === undefined &&
                typeof module !== 'undefined' &&
                module &&
                module.exports
              ) {
                try {
                  oldLocale = globalLocale._abbr;
                  aliasedRequire = require;
                  __webpack_require__(
                    '../node_modules/moment/locale sync recursive [/\\\\](pl(\\.js)?)$'
                  )('./' + name);
                  getSetGlobalLocale(oldLocale);
                } catch (e) {
                  // mark as not found to avoid repeating expensive file require call causing high CPU
                  // when trying to find en-US, en_US, en-us for every format call
                  locales[name] = null; // null means not found
                }
              }
              return locales[name];
            }

            // This function will load locale and then set the global locale.  If
            // no arguments are passed in, it will simply return the current global
            // locale key.
            function getSetGlobalLocale(key, values) {
              var data;
              if (key) {
                if (isUndefined(values)) {
                  data = getLocale(key);
                } else {
                  data = defineLocale(key, values);
                }

                if (data) {
                  // moment.duration._locale = moment._locale = data;
                  globalLocale = data;
                } else {
                  if (typeof console !== 'undefined' && console.warn) {
                    //warn user if arguments are passed but the locale could not be set
                    console.warn(
                      'Locale ' + key + ' not found. Did you forget to load it?'
                    );
                  }
                }
              }

              return globalLocale._abbr;
            }

            function defineLocale(name, config) {
              if (config !== null) {
                var locale,
                  parentConfig = baseConfig;
                config.abbr = name;
                if (locales[name] != null) {
                  deprecateSimple(
                    'defineLocaleOverride',
                    'use moment.updateLocale(localeName, config) to change ' +
                      'an existing locale. moment.defineLocale(localeName, ' +
                      'config) should only be used for creating a new locale ' +
                      'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'
                  );
                  parentConfig = locales[name]._config;
                } else if (config.parentLocale != null) {
                  if (locales[config.parentLocale] != null) {
                    parentConfig = locales[config.parentLocale]._config;
                  } else {
                    locale = loadLocale(config.parentLocale);
                    if (locale != null) {
                      parentConfig = locale._config;
                    } else {
                      if (!localeFamilies[config.parentLocale]) {
                        localeFamilies[config.parentLocale] = [];
                      }
                      localeFamilies[config.parentLocale].push({
                        name: name,
                        config: config,
                      });
                      return null;
                    }
                  }
                }
                locales[name] = new Locale(mergeConfigs(parentConfig, config));

                if (localeFamilies[name]) {
                  localeFamilies[name].forEach(function (x) {
                    defineLocale(x.name, x.config);
                  });
                }

                // backwards compat for now: also set the locale
                // make sure we set the locale AFTER all child locales have been
                // created, so we won't end up with the child locale set.
                getSetGlobalLocale(name);

                return locales[name];
              } else {
                // useful for testing
                delete locales[name];
                return null;
              }
            }

            function updateLocale(name, config) {
              if (config != null) {
                var locale,
                  tmpLocale,
                  parentConfig = baseConfig;

                if (
                  locales[name] != null &&
                  locales[name].parentLocale != null
                ) {
                  // Update existing child locale in-place to avoid memory-leaks
                  locales[name].set(
                    mergeConfigs(locales[name]._config, config)
                  );
                } else {
                  // MERGE
                  tmpLocale = loadLocale(name);
                  if (tmpLocale != null) {
                    parentConfig = tmpLocale._config;
                  }
                  config = mergeConfigs(parentConfig, config);
                  if (tmpLocale == null) {
                    // updateLocale is called for creating a new locale
                    // Set abbr so it will have a name (getters return
                    // undefined otherwise).
                    config.abbr = name;
                  }
                  locale = new Locale(config);
                  locale.parentLocale = locales[name];
                  locales[name] = locale;
                }

                // backwards compat for now: also set the locale
                getSetGlobalLocale(name);
              } else {
                // pass null for config to unupdate, useful for tests
                if (locales[name] != null) {
                  if (locales[name].parentLocale != null) {
                    locales[name] = locales[name].parentLocale;
                    if (name === getSetGlobalLocale()) {
                      getSetGlobalLocale(name);
                    }
                  } else if (locales[name] != null) {
                    delete locales[name];
                  }
                }
              }
              return locales[name];
            }

            // returns locale data
            function getLocale(key) {
              var locale;

              if (key && key._locale && key._locale._abbr) {
                key = key._locale._abbr;
              }

              if (!key) {
                return globalLocale;
              }

              if (!isArray(key)) {
                //short-circuit everything else
                locale = loadLocale(key);
                if (locale) {
                  return locale;
                }
                key = [key];
              }

              return chooseLocale(key);
            }

            function listLocales() {
              return keys(locales);
            }

            function checkOverflow(m) {
              var overflow,
                a = m._a;

              if (a && getParsingFlags(m).overflow === -2) {
                overflow =
                  a[MONTH] < 0 || a[MONTH] > 11
                    ? MONTH
                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])
                    ? DATE
                    : a[HOUR] < 0 ||
                      a[HOUR] > 24 ||
                      (a[HOUR] === 24 &&
                        (a[MINUTE] !== 0 ||
                          a[SECOND] !== 0 ||
                          a[MILLISECOND] !== 0))
                    ? HOUR
                    : a[MINUTE] < 0 || a[MINUTE] > 59
                    ? MINUTE
                    : a[SECOND] < 0 || a[SECOND] > 59
                    ? SECOND
                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999
                    ? MILLISECOND
                    : -1;

                if (
                  getParsingFlags(m)._overflowDayOfYear &&
                  (overflow < YEAR || overflow > DATE)
                ) {
                  overflow = DATE;
                }
                if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                  overflow = WEEK;
                }
                if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                  overflow = WEEKDAY;
                }

                getParsingFlags(m).overflow = overflow;
              }

              return m;
            }

            // iso 8601 regex
            // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
            var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
              basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
              tzRegex = /Z|[+-]\d\d(?::?\d\d)?/,
              isoDates = [
                ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
                ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
                ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
                ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
                ['YYYY-DDD', /\d{4}-\d{3}/],
                ['YYYY-MM', /\d{4}-\d\d/, false],
                ['YYYYYYMMDD', /[+-]\d{10}/],
                ['YYYYMMDD', /\d{8}/],
                ['GGGG[W]WWE', /\d{4}W\d{3}/],
                ['GGGG[W]WW', /\d{4}W\d{2}/, false],
                ['YYYYDDD', /\d{7}/],
                ['YYYYMM', /\d{6}/, false],
                ['YYYY', /\d{4}/, false],
              ],
              // iso time formats and regexes
              isoTimes = [
                ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
                ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
                ['HH:mm:ss', /\d\d:\d\d:\d\d/],
                ['HH:mm', /\d\d:\d\d/],
                ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
                ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
                ['HHmmss', /\d\d\d\d\d\d/],
                ['HHmm', /\d\d\d\d/],
                ['HH', /\d\d/],
              ],
              aspNetJsonRegex = /^\/?Date\((-?\d+)/i,
              // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
              rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
              obsOffsets = {
                UT: 0,
                GMT: 0,
                EDT: -4 * 60,
                EST: -5 * 60,
                CDT: -5 * 60,
                CST: -6 * 60,
                MDT: -6 * 60,
                MST: -7 * 60,
                PDT: -7 * 60,
                PST: -8 * 60,
              };

            // date from iso format
            function configFromISO(config) {
              var i,
                l,
                string = config._i,
                match =
                  extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
                allowTime,
                dateFormat,
                timeFormat,
                tzFormat;

              if (match) {
                getParsingFlags(config).iso = true;

                for (i = 0, l = isoDates.length; i < l; i++) {
                  if (isoDates[i][1].exec(match[1])) {
                    dateFormat = isoDates[i][0];
                    allowTime = isoDates[i][2] !== false;
                    break;
                  }
                }
                if (dateFormat == null) {
                  config._isValid = false;
                  return;
                }
                if (match[3]) {
                  for (i = 0, l = isoTimes.length; i < l; i++) {
                    if (isoTimes[i][1].exec(match[3])) {
                      // match[2] should be 'T' or space
                      timeFormat = (match[2] || ' ') + isoTimes[i][0];
                      break;
                    }
                  }
                  if (timeFormat == null) {
                    config._isValid = false;
                    return;
                  }
                }
                if (!allowTime && timeFormat != null) {
                  config._isValid = false;
                  return;
                }
                if (match[4]) {
                  if (tzRegex.exec(match[4])) {
                    tzFormat = 'Z';
                  } else {
                    config._isValid = false;
                    return;
                  }
                }
                config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
                configFromStringAndFormat(config);
              } else {
                config._isValid = false;
              }
            }

            function extractFromRFC2822Strings(
              yearStr,
              monthStr,
              dayStr,
              hourStr,
              minuteStr,
              secondStr
            ) {
              var result = [
                untruncateYear(yearStr),
                defaultLocaleMonthsShort.indexOf(monthStr),
                parseInt(dayStr, 10),
                parseInt(hourStr, 10),
                parseInt(minuteStr, 10),
              ];

              if (secondStr) {
                result.push(parseInt(secondStr, 10));
              }

              return result;
            }

            function untruncateYear(yearStr) {
              var year = parseInt(yearStr, 10);
              if (year <= 49) {
                return 2000 + year;
              } else if (year <= 999) {
                return 1900 + year;
              }
              return year;
            }

            function preprocessRFC2822(s) {
              // Remove comments and folding whitespace and replace multiple-spaces with a single space
              return s
                .replace(/\([^)]*\)|[\n\t]/g, ' ')
                .replace(/(\s\s+)/g, ' ')
                .replace(/^\s\s*/, '')
                .replace(/\s\s*$/, '');
            }

            function checkWeekday(weekdayStr, parsedInput, config) {
              if (weekdayStr) {
                // TODO: Replace the vanilla JS Date object with an independent day-of-week check.
                var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(
                    weekdayStr
                  ),
                  weekdayActual = new Date(
                    parsedInput[0],
                    parsedInput[1],
                    parsedInput[2]
                  ).getDay();
                if (weekdayProvided !== weekdayActual) {
                  getParsingFlags(config).weekdayMismatch = true;
                  config._isValid = false;
                  return false;
                }
              }
              return true;
            }

            function calculateOffset(obsOffset, militaryOffset, numOffset) {
              if (obsOffset) {
                return obsOffsets[obsOffset];
              } else if (militaryOffset) {
                // the only allowed military tz is Z
                return 0;
              } else {
                var hm = parseInt(numOffset, 10),
                  m = hm % 100,
                  h = (hm - m) / 100;
                return h * 60 + m;
              }
            }

            // date and time from ref 2822 format
            function configFromRFC2822(config) {
              var match = rfc2822.exec(preprocessRFC2822(config._i)),
                parsedArray;
              if (match) {
                parsedArray = extractFromRFC2822Strings(
                  match[4],
                  match[3],
                  match[2],
                  match[5],
                  match[6],
                  match[7]
                );
                if (!checkWeekday(match[1], parsedArray, config)) {
                  return;
                }

                config._a = parsedArray;
                config._tzm = calculateOffset(match[8], match[9], match[10]);

                config._d = createUTCDate.apply(null, config._a);
                config._d.setUTCMinutes(
                  config._d.getUTCMinutes() - config._tzm
                );

                getParsingFlags(config).rfc2822 = true;
              } else {
                config._isValid = false;
              }
            }

            // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict
            function configFromString(config) {
              var matched = aspNetJsonRegex.exec(config._i);
              if (matched !== null) {
                config._d = new Date(+matched[1]);
                return;
              }

              configFromISO(config);
              if (config._isValid === false) {
                delete config._isValid;
              } else {
                return;
              }

              configFromRFC2822(config);
              if (config._isValid === false) {
                delete config._isValid;
              } else {
                return;
              }

              if (config._strict) {
                config._isValid = false;
              } else {
                // Final attempt, use Input Fallback
                hooks.createFromInputFallback(config);
              }
            }

            hooks.createFromInputFallback = deprecate(
              'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
                'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
                'discouraged and will be removed in an upcoming major release. Please refer to ' +
                'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
              function (config) {
                config._d = new Date(
                  config._i + (config._useUTC ? ' UTC' : '')
                );
              }
            );

            // Pick the first defined of two or three arguments.
            function defaults(a, b, c) {
              if (a != null) {
                return a;
              }
              if (b != null) {
                return b;
              }
              return c;
            }

            function currentDateArray(config) {
              // hooks is actually the exported moment object
              var nowValue = new Date(hooks.now());
              if (config._useUTC) {
                return [
                  nowValue.getUTCFullYear(),
                  nowValue.getUTCMonth(),
                  nowValue.getUTCDate(),
                ];
              }
              return [
                nowValue.getFullYear(),
                nowValue.getMonth(),
                nowValue.getDate(),
              ];
            }

            // convert an array to a date.
            // the array should mirror the parameters below
            // note: all values past the year are optional and will default to the lowest possible value.
            // [year, month, day , hour, minute, second, millisecond]
            function configFromArray(config) {
              var i,
                date,
                input = [],
                currentDate,
                expectedWeekday,
                yearToUse;

              if (config._d) {
                return;
              }

              currentDate = currentDateArray(config);

              //compute day of the year from weeks and weekdays
              if (
                config._w &&
                config._a[DATE] == null &&
                config._a[MONTH] == null
              ) {
                dayOfYearFromWeekInfo(config);
              }

              //if the day of the year is set, figure out what it is
              if (config._dayOfYear != null) {
                yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

                if (
                  config._dayOfYear > daysInYear(yearToUse) ||
                  config._dayOfYear === 0
                ) {
                  getParsingFlags(config)._overflowDayOfYear = true;
                }

                date = createUTCDate(yearToUse, 0, config._dayOfYear);
                config._a[MONTH] = date.getUTCMonth();
                config._a[DATE] = date.getUTCDate();
              }

              // Default to current date.
              // * if no year, month, day of month are given, default to today
              // * if day of month is given, default month and year
              // * if month is given, default only year
              // * if year is given, don't default anything
              for (i = 0; i < 3 && config._a[i] == null; ++i) {
                config._a[i] = input[i] = currentDate[i];
              }

              // Zero out whatever was not defaulted, including time
              for (; i < 7; i++) {
                config._a[i] = input[i] =
                  config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];
              }

              // Check for 24:00:00.000
              if (
                config._a[HOUR] === 24 &&
                config._a[MINUTE] === 0 &&
                config._a[SECOND] === 0 &&
                config._a[MILLISECOND] === 0
              ) {
                config._nextDay = true;
                config._a[HOUR] = 0;
              }

              config._d = (config._useUTC ? createUTCDate : createDate).apply(
                null,
                input
              );
              expectedWeekday = config._useUTC
                ? config._d.getUTCDay()
                : config._d.getDay();

              // Apply timezone offset from input. The actual utcOffset can be changed
              // with parseZone.
              if (config._tzm != null) {
                config._d.setUTCMinutes(
                  config._d.getUTCMinutes() - config._tzm
                );
              }

              if (config._nextDay) {
                config._a[HOUR] = 24;
              }

              // check for mismatching day of week
              if (
                config._w &&
                typeof config._w.d !== 'undefined' &&
                config._w.d !== expectedWeekday
              ) {
                getParsingFlags(config).weekdayMismatch = true;
              }
            }

            function dayOfYearFromWeekInfo(config) {
              var w,
                weekYear,
                week,
                weekday,
                dow,
                doy,
                temp,
                weekdayOverflow,
                curWeek;

              w = config._w;
              if (w.GG != null || w.W != null || w.E != null) {
                dow = 1;
                doy = 4;

                // TODO: We need to take the current isoWeekYear, but that depends on
                // how we interpret now (local, utc, fixed offset). So create
                // a now version of current config (take local/utc/offset flags, and
                // create now).
                weekYear = defaults(
                  w.GG,
                  config._a[YEAR],
                  weekOfYear(createLocal(), 1, 4).year
                );
                week = defaults(w.W, 1);
                weekday = defaults(w.E, 1);
                if (weekday < 1 || weekday > 7) {
                  weekdayOverflow = true;
                }
              } else {
                dow = config._locale._week.dow;
                doy = config._locale._week.doy;

                curWeek = weekOfYear(createLocal(), dow, doy);

                weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

                // Default to current week.
                week = defaults(w.w, curWeek.week);

                if (w.d != null) {
                  // weekday -- low day numbers are considered next week
                  weekday = w.d;
                  if (weekday < 0 || weekday > 6) {
                    weekdayOverflow = true;
                  }
                } else if (w.e != null) {
                  // local weekday -- counting starts from beginning of week
                  weekday = w.e + dow;
                  if (w.e < 0 || w.e > 6) {
                    weekdayOverflow = true;
                  }
                } else {
                  // default to beginning of week
                  weekday = dow;
                }
              }
              if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
                getParsingFlags(config)._overflowWeeks = true;
              } else if (weekdayOverflow != null) {
                getParsingFlags(config)._overflowWeekday = true;
              } else {
                temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
                config._a[YEAR] = temp.year;
                config._dayOfYear = temp.dayOfYear;
              }
            }

            // constant that refers to the ISO standard
            hooks.ISO_8601 = function () {};

            // constant that refers to the RFC 2822 form
            hooks.RFC_2822 = function () {};

            // date from string and format string
            function configFromStringAndFormat(config) {
              // TODO: Move this to another part of the creation flow to prevent circular deps
              if (config._f === hooks.ISO_8601) {
                configFromISO(config);
                return;
              }
              if (config._f === hooks.RFC_2822) {
                configFromRFC2822(config);
                return;
              }
              config._a = [];
              getParsingFlags(config).empty = true;

              // This array is used to make a Date, either with `new Date` or `Date.UTC`
              var string = '' + config._i,
                i,
                parsedInput,
                tokens,
                token,
                skipped,
                stringLength = string.length,
                totalParsedInputLength = 0,
                era;

              tokens =
                expandFormat(config._f, config._locale).match(
                  formattingTokens
                ) || [];

              for (i = 0; i < tokens.length; i++) {
                token = tokens[i];
                parsedInput = (string.match(
                  getParseRegexForToken(token, config)
                ) || [])[0];
                if (parsedInput) {
                  skipped = string.substr(0, string.indexOf(parsedInput));
                  if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped);
                  }
                  string = string.slice(
                    string.indexOf(parsedInput) + parsedInput.length
                  );
                  totalParsedInputLength += parsedInput.length;
                }
                // don't parse if it's not a known token
                if (formatTokenFunctions[token]) {
                  if (parsedInput) {
                    getParsingFlags(config).empty = false;
                  } else {
                    getParsingFlags(config).unusedTokens.push(token);
                  }
                  addTimeToArrayFromToken(token, parsedInput, config);
                } else if (config._strict && !parsedInput) {
                  getParsingFlags(config).unusedTokens.push(token);
                }
              }

              // add remaining unparsed input length to the string
              getParsingFlags(config).charsLeftOver =
                stringLength - totalParsedInputLength;
              if (string.length > 0) {
                getParsingFlags(config).unusedInput.push(string);
              }

              // clear _12h flag if hour is <= 12
              if (
                config._a[HOUR] <= 12 &&
                getParsingFlags(config).bigHour === true &&
                config._a[HOUR] > 0
              ) {
                getParsingFlags(config).bigHour = undefined;
              }

              getParsingFlags(config).parsedDateParts = config._a.slice(0);
              getParsingFlags(config).meridiem = config._meridiem;
              // handle meridiem
              config._a[HOUR] = meridiemFixWrap(
                config._locale,
                config._a[HOUR],
                config._meridiem
              );

              // handle era
              era = getParsingFlags(config).era;
              if (era !== null) {
                config._a[YEAR] = config._locale.erasConvertYear(
                  era,
                  config._a[YEAR]
                );
              }

              configFromArray(config);
              checkOverflow(config);
            }

            function meridiemFixWrap(locale, hour, meridiem) {
              var isPm;

              if (meridiem == null) {
                // nothing to do
                return hour;
              }
              if (locale.meridiemHour != null) {
                return locale.meridiemHour(hour, meridiem);
              } else if (locale.isPM != null) {
                // Fallback
                isPm = locale.isPM(meridiem);
                if (isPm && hour < 12) {
                  hour += 12;
                }
                if (!isPm && hour === 12) {
                  hour = 0;
                }
                return hour;
              } else {
                // this is not supposed to happen
                return hour;
              }
            }

            // date from string and array of format strings
            function configFromStringAndArray(config) {
              var tempConfig,
                bestMoment,
                scoreToBeat,
                i,
                currentScore,
                validFormatFound,
                bestFormatIsValid = false;

              if (config._f.length === 0) {
                getParsingFlags(config).invalidFormat = true;
                config._d = new Date(NaN);
                return;
              }

              for (i = 0; i < config._f.length; i++) {
                currentScore = 0;
                validFormatFound = false;
                tempConfig = copyConfig({}, config);
                if (config._useUTC != null) {
                  tempConfig._useUTC = config._useUTC;
                }
                tempConfig._f = config._f[i];
                configFromStringAndFormat(tempConfig);

                if (isValid(tempConfig)) {
                  validFormatFound = true;
                }

                // if there is any input that was not parsed add a penalty for that format
                currentScore += getParsingFlags(tempConfig).charsLeftOver;

                //or tokens
                currentScore +=
                  getParsingFlags(tempConfig).unusedTokens.length * 10;

                getParsingFlags(tempConfig).score = currentScore;

                if (!bestFormatIsValid) {
                  if (
                    scoreToBeat == null ||
                    currentScore < scoreToBeat ||
                    validFormatFound
                  ) {
                    scoreToBeat = currentScore;
                    bestMoment = tempConfig;
                    if (validFormatFound) {
                      bestFormatIsValid = true;
                    }
                  }
                } else {
                  if (currentScore < scoreToBeat) {
                    scoreToBeat = currentScore;
                    bestMoment = tempConfig;
                  }
                }
              }

              extend(config, bestMoment || tempConfig);
            }

            function configFromObject(config) {
              if (config._d) {
                return;
              }

              var i = normalizeObjectUnits(config._i),
                dayOrDate = i.day === undefined ? i.date : i.day;
              config._a = map(
                [
                  i.year,
                  i.month,
                  dayOrDate,
                  i.hour,
                  i.minute,
                  i.second,
                  i.millisecond,
                ],
                function (obj) {
                  return obj && parseInt(obj, 10);
                }
              );

              configFromArray(config);
            }

            function createFromConfig(config) {
              var res = new Moment(checkOverflow(prepareConfig(config)));
              if (res._nextDay) {
                // Adding is smart enough around DST
                res.add(1, 'd');
                res._nextDay = undefined;
              }

              return res;
            }

            function prepareConfig(config) {
              var input = config._i,
                format = config._f;

              config._locale = config._locale || getLocale(config._l);

              if (input === null || (format === undefined && input === '')) {
                return createInvalid({ nullInput: true });
              }

              if (typeof input === 'string') {
                config._i = input = config._locale.preparse(input);
              }

              if (isMoment(input)) {
                return new Moment(checkOverflow(input));
              } else if (isDate(input)) {
                config._d = input;
              } else if (isArray(format)) {
                configFromStringAndArray(config);
              } else if (format) {
                configFromStringAndFormat(config);
              } else {
                configFromInput(config);
              }

              if (!isValid(config)) {
                config._d = null;
              }

              return config;
            }

            function configFromInput(config) {
              var input = config._i;
              if (isUndefined(input)) {
                config._d = new Date(hooks.now());
              } else if (isDate(input)) {
                config._d = new Date(input.valueOf());
              } else if (typeof input === 'string') {
                configFromString(config);
              } else if (isArray(input)) {
                config._a = map(input.slice(0), function (obj) {
                  return parseInt(obj, 10);
                });
                configFromArray(config);
              } else if (isObject(input)) {
                configFromObject(config);
              } else if (isNumber(input)) {
                // from milliseconds
                config._d = new Date(input);
              } else {
                hooks.createFromInputFallback(config);
              }
            }

            function createLocalOrUTC(input, format, locale, strict, isUTC) {
              var c = {};

              if (format === true || format === false) {
                strict = format;
                format = undefined;
              }

              if (locale === true || locale === false) {
                strict = locale;
                locale = undefined;
              }

              if (
                (isObject(input) && isObjectEmpty(input)) ||
                (isArray(input) && input.length === 0)
              ) {
                input = undefined;
              }
              // object construction must be done this way.
              // https://github.com/moment/moment/issues/1423
              c._isAMomentObject = true;
              c._useUTC = c._isUTC = isUTC;
              c._l = locale;
              c._i = input;
              c._f = format;
              c._strict = strict;

              return createFromConfig(c);
            }

            function createLocal(input, format, locale, strict) {
              return createLocalOrUTC(input, format, locale, strict, false);
            }

            var prototypeMin = deprecate(
                'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
                function () {
                  var other = createLocal.apply(null, arguments);
                  if (this.isValid() && other.isValid()) {
                    return other < this ? this : other;
                  } else {
                    return createInvalid();
                  }
                }
              ),
              prototypeMax = deprecate(
                'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
                function () {
                  var other = createLocal.apply(null, arguments);
                  if (this.isValid() && other.isValid()) {
                    return other > this ? this : other;
                  } else {
                    return createInvalid();
                  }
                }
              );

            // Pick a moment m from moments so that m[fn](other) is true for all
            // other. This relies on the function fn to be transitive.
            //
            // moments should either be an array of moment objects or an array, whose
            // first element is an array of moment objects.
            function pickBy(fn, moments) {
              var res, i;
              if (moments.length === 1 && isArray(moments[0])) {
                moments = moments[0];
              }
              if (!moments.length) {
                return createLocal();
              }
              res = moments[0];
              for (i = 1; i < moments.length; ++i) {
                if (!moments[i].isValid() || moments[i][fn](res)) {
                  res = moments[i];
                }
              }
              return res;
            }

            // TODO: Use [].sort instead?
            function min() {
              var args = [].slice.call(arguments, 0);

              return pickBy('isBefore', args);
            }

            function max() {
              var args = [].slice.call(arguments, 0);

              return pickBy('isAfter', args);
            }

            var now = function () {
              return Date.now ? Date.now() : +new Date();
            };

            var ordering = [
              'year',
              'quarter',
              'month',
              'week',
              'day',
              'hour',
              'minute',
              'second',
              'millisecond',
            ];

            function isDurationValid(m) {
              var key,
                unitHasDecimal = false,
                i;
              for (key in m) {
                if (
                  hasOwnProp(m, key) &&
                  !(
                    indexOf.call(ordering, key) !== -1 &&
                    (m[key] == null || !isNaN(m[key]))
                  )
                ) {
                  return false;
                }
              }

              for (i = 0; i < ordering.length; ++i) {
                if (m[ordering[i]]) {
                  if (unitHasDecimal) {
                    return false; // only allow non-integers for smallest unit
                  }
                  if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                    unitHasDecimal = true;
                  }
                }
              }

              return true;
            }

            function isValid$1() {
              return this._isValid;
            }

            function createInvalid$1() {
              return createDuration(NaN);
            }

            function Duration(duration) {
              var normalizedInput = normalizeObjectUnits(duration),
                years = normalizedInput.year || 0,
                quarters = normalizedInput.quarter || 0,
                months = normalizedInput.month || 0,
                weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
                days = normalizedInput.day || 0,
                hours = normalizedInput.hour || 0,
                minutes = normalizedInput.minute || 0,
                seconds = normalizedInput.second || 0,
                milliseconds = normalizedInput.millisecond || 0;

              this._isValid = isDurationValid(normalizedInput);

              // representation for dateAddRemove
              this._milliseconds =
                +milliseconds +
                seconds * 1e3 + // 1000
                minutes * 6e4 + // 1000 * 60
                hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
              // Because of dateAddRemove treats 24 hours as different from a
              // day when working around DST, we need to store them separately
              this._days = +days + weeks * 7;
              // It is impossible to translate months into days without knowing
              // which months you are are talking about, so we have to store
              // it separately.
              this._months = +months + quarters * 3 + years * 12;

              this._data = {};

              this._locale = getLocale();

              this._bubble();
            }

            function isDuration(obj) {
              return obj instanceof Duration;
            }

            function absRound(number) {
              if (number < 0) {
                return Math.round(-1 * number) * -1;
              } else {
                return Math.round(number);
              }
            }

            // compare two arrays, return the number of differences
            function compareArrays(array1, array2, dontConvert) {
              var len = Math.min(array1.length, array2.length),
                lengthDiff = Math.abs(array1.length - array2.length),
                diffs = 0,
                i;
              for (i = 0; i < len; i++) {
                if (
                  (dontConvert && array1[i] !== array2[i]) ||
                  (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))
                ) {
                  diffs++;
                }
              }
              return diffs + lengthDiff;
            }

            // FORMATTING

            function offset(token, separator) {
              addFormatToken(token, 0, 0, function () {
                var offset = this.utcOffset(),
                  sign = '+';
                if (offset < 0) {
                  offset = -offset;
                  sign = '-';
                }
                return (
                  sign +
                  zeroFill(~~(offset / 60), 2) +
                  separator +
                  zeroFill(~~offset % 60, 2)
                );
              });
            }

            offset('Z', ':');
            offset('ZZ', '');

            // PARSING

            addRegexToken('Z', matchShortOffset);
            addRegexToken('ZZ', matchShortOffset);
            addParseToken(['Z', 'ZZ'], function (input, array, config) {
              config._useUTC = true;
              config._tzm = offsetFromString(matchShortOffset, input);
            });

            // HELPERS

            // timezone chunker
            // '+10:00' > ['10',  '00']
            // '-1530'  > ['-15', '30']
            var chunkOffset = /([\+\-]|\d\d)/gi;

            function offsetFromString(matcher, string) {
              var matches = (string || '').match(matcher),
                chunk,
                parts,
                minutes;

              if (matches === null) {
                return null;
              }

              chunk = matches[matches.length - 1] || [];
              parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
              minutes = +(parts[1] * 60) + toInt(parts[2]);

              return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;
            }

            // Return a moment from input, that is local/utc/zone equivalent to model.
            function cloneWithOffset(input, model) {
              var res, diff;
              if (model._isUTC) {
                res = model.clone();
                diff =
                  (isMoment(input) || isDate(input)
                    ? input.valueOf()
                    : createLocal(input).valueOf()) - res.valueOf();
                // Use low-level api, because this fn is low-level api.
                res._d.setTime(res._d.valueOf() + diff);
                hooks.updateOffset(res, false);
                return res;
              } else {
                return createLocal(input).local();
              }
            }

            function getDateOffset(m) {
              // On Firefox.24 Date#getTimezoneOffset returns a floating point.
              // https://github.com/moment/moment/pull/1871
              return -Math.round(m._d.getTimezoneOffset());
            }

            // HOOKS

            // This function will be called whenever a moment is mutated.
            // It is intended to keep the offset in sync with the timezone.
            hooks.updateOffset = function () {};

            // MOMENTS

            // keepLocalTime = true means only change the timezone, without
            // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
            // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
            // +0200, so we adjust the time as needed, to be valid.
            //
            // Keeping the time actually adds/subtracts (one hour)
            // from the actual represented time. That is why we call updateOffset
            // a second time. In case it wants us to change the offset again
            // _changeInProgress == true case, then we have to adjust, because
            // there is no such time in the given timezone.
            function getSetOffset(input, keepLocalTime, keepMinutes) {
              var offset = this._offset || 0,
                localAdjust;
              if (!this.isValid()) {
                return input != null ? this : NaN;
              }
              if (input != null) {
                if (typeof input === 'string') {
                  input = offsetFromString(matchShortOffset, input);
                  if (input === null) {
                    return this;
                  }
                } else if (Math.abs(input) < 16 && !keepMinutes) {
                  input = input * 60;
                }
                if (!this._isUTC && keepLocalTime) {
                  localAdjust = getDateOffset(this);
                }
                this._offset = input;
                this._isUTC = true;
                if (localAdjust != null) {
                  this.add(localAdjust, 'm');
                }
                if (offset !== input) {
                  if (!keepLocalTime || this._changeInProgress) {
                    addSubtract(
                      this,
                      createDuration(input - offset, 'm'),
                      1,
                      false
                    );
                  } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                  }
                }
                return this;
              } else {
                return this._isUTC ? offset : getDateOffset(this);
              }
            }

            function getSetZone(input, keepLocalTime) {
              if (input != null) {
                if (typeof input !== 'string') {
                  input = -input;
                }

                this.utcOffset(input, keepLocalTime);

                return this;
              } else {
                return -this.utcOffset();
              }
            }

            function setOffsetToUTC(keepLocalTime) {
              return this.utcOffset(0, keepLocalTime);
            }

            function setOffsetToLocal(keepLocalTime) {
              if (this._isUTC) {
                this.utcOffset(0, keepLocalTime);
                this._isUTC = false;

                if (keepLocalTime) {
                  this.subtract(getDateOffset(this), 'm');
                }
              }
              return this;
            }

            function setOffsetToParsedOffset() {
              if (this._tzm != null) {
                this.utcOffset(this._tzm, false, true);
              } else if (typeof this._i === 'string') {
                var tZone = offsetFromString(matchOffset, this._i);
                if (tZone != null) {
                  this.utcOffset(tZone);
                } else {
                  this.utcOffset(0, true);
                }
              }
              return this;
            }

            function hasAlignedHourOffset(input) {
              if (!this.isValid()) {
                return false;
              }
              input = input ? createLocal(input).utcOffset() : 0;

              return (this.utcOffset() - input) % 60 === 0;
            }

            function isDaylightSavingTime() {
              return (
                this.utcOffset() > this.clone().month(0).utcOffset() ||
                this.utcOffset() > this.clone().month(5).utcOffset()
              );
            }

            function isDaylightSavingTimeShifted() {
              if (!isUndefined(this._isDSTShifted)) {
                return this._isDSTShifted;
              }

              var c = {},
                other;

              copyConfig(c, this);
              c = prepareConfig(c);

              if (c._a) {
                other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
                this._isDSTShifted =
                  this.isValid() && compareArrays(c._a, other.toArray()) > 0;
              } else {
                this._isDSTShifted = false;
              }

              return this._isDSTShifted;
            }

            function isLocal() {
              return this.isValid() ? !this._isUTC : false;
            }

            function isUtcOffset() {
              return this.isValid() ? this._isUTC : false;
            }

            function isUtc() {
              return this.isValid() ? this._isUTC && this._offset === 0 : false;
            }

            // ASP.NET json date format regex
            var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
              // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
              // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
              // and further modified to allow for strings containing both week and day
              isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

            function createDuration(input, key) {
              var duration = input,
                // matching against regexp is expensive, do it on demand
                match = null,
                sign,
                ret,
                diffRes;

              if (isDuration(input)) {
                duration = {
                  ms: input._milliseconds,
                  d: input._days,
                  M: input._months,
                };
              } else if (isNumber(input) || !isNaN(+input)) {
                duration = {};
                if (key) {
                  duration[key] = +input;
                } else {
                  duration.milliseconds = +input;
                }
              } else if ((match = aspNetRegex.exec(input))) {
                sign = match[1] === '-' ? -1 : 1;
                duration = {
                  y: 0,
                  d: toInt(match[DATE]) * sign,
                  h: toInt(match[HOUR]) * sign,
                  m: toInt(match[MINUTE]) * sign,
                  s: toInt(match[SECOND]) * sign,
                  ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match
                };
              } else if ((match = isoRegex.exec(input))) {
                sign = match[1] === '-' ? -1 : 1;
                duration = {
                  y: parseIso(match[2], sign),
                  M: parseIso(match[3], sign),
                  w: parseIso(match[4], sign),
                  d: parseIso(match[5], sign),
                  h: parseIso(match[6], sign),
                  m: parseIso(match[7], sign),
                  s: parseIso(match[8], sign),
                };
              } else if (duration == null) {
                // checks for null or undefined
                duration = {};
              } else if (
                typeof duration === 'object' &&
                ('from' in duration || 'to' in duration)
              ) {
                diffRes = momentsDifference(
                  createLocal(duration.from),
                  createLocal(duration.to)
                );

                duration = {};
                duration.ms = diffRes.milliseconds;
                duration.M = diffRes.months;
              }

              ret = new Duration(duration);

              if (isDuration(input) && hasOwnProp(input, '_locale')) {
                ret._locale = input._locale;
              }

              if (isDuration(input) && hasOwnProp(input, '_isValid')) {
                ret._isValid = input._isValid;
              }

              return ret;
            }

            createDuration.fn = Duration.prototype;
            createDuration.invalid = createInvalid$1;

            function parseIso(inp, sign) {
              // We'd normally use ~~inp for this, but unfortunately it also
              // converts floats to ints.
              // inp may be undefined, so careful calling replace on it.
              var res = inp && parseFloat(inp.replace(',', '.'));
              // apply sign while we're at it
              return (isNaN(res) ? 0 : res) * sign;
            }

            function positiveMomentsDifference(base, other) {
              var res = {};

              res.months =
                other.month() -
                base.month() +
                (other.year() - base.year()) * 12;
              if (base.clone().add(res.months, 'M').isAfter(other)) {
                --res.months;
              }

              res.milliseconds = +other - +base.clone().add(res.months, 'M');

              return res;
            }

            function momentsDifference(base, other) {
              var res;
              if (!(base.isValid() && other.isValid())) {
                return { milliseconds: 0, months: 0 };
              }

              other = cloneWithOffset(other, base);
              if (base.isBefore(other)) {
                res = positiveMomentsDifference(base, other);
              } else {
                res = positiveMomentsDifference(other, base);
                res.milliseconds = -res.milliseconds;
                res.months = -res.months;
              }

              return res;
            }

            // TODO: remove 'name' arg after deprecation is removed
            function createAdder(direction, name) {
              return function (val, period) {
                var dur, tmp;
                //invert the arguments, but complain about it
                if (period !== null && !isNaN(+period)) {
                  deprecateSimple(
                    name,
                    'moment().' +
                      name +
                      '(period, number) is deprecated. Please use moment().' +
                      name +
                      '(number, period). ' +
                      'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'
                  );
                  tmp = val;
                  val = period;
                  period = tmp;
                }

                dur = createDuration(val, period);
                addSubtract(this, dur, direction);
                return this;
              };
            }

            function addSubtract(mom, duration, isAdding, updateOffset) {
              var milliseconds = duration._milliseconds,
                days = absRound(duration._days),
                months = absRound(duration._months);

              if (!mom.isValid()) {
                // No op
                return;
              }

              updateOffset = updateOffset == null ? true : updateOffset;

              if (months) {
                setMonth(mom, get(mom, 'Month') + months * isAdding);
              }
              if (days) {
                set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
              }
              if (milliseconds) {
                mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
              }
              if (updateOffset) {
                hooks.updateOffset(mom, days || months);
              }
            }

            var add = createAdder(1, 'add'),
              subtract = createAdder(-1, 'subtract');

            function isString(input) {
              return typeof input === 'string' || input instanceof String;
            }

            // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined
            function isMomentInput(input) {
              return (
                isMoment(input) ||
                isDate(input) ||
                isString(input) ||
                isNumber(input) ||
                isNumberOrStringArray(input) ||
                isMomentInputObject(input) ||
                input === null ||
                input === undefined
              );
            }

            function isMomentInputObject(input) {
              var objectTest = isObject(input) && !isObjectEmpty(input),
                propertyTest = false,
                properties = [
                  'years',
                  'year',
                  'y',
                  'months',
                  'month',
                  'M',
                  'days',
                  'day',
                  'd',
                  'dates',
                  'date',
                  'D',
                  'hours',
                  'hour',
                  'h',
                  'minutes',
                  'minute',
                  'm',
                  'seconds',
                  'second',
                  's',
                  'milliseconds',
                  'millisecond',
                  'ms',
                ],
                i,
                property;

              for (i = 0; i < properties.length; i += 1) {
                property = properties[i];
                propertyTest = propertyTest || hasOwnProp(input, property);
              }

              return objectTest && propertyTest;
            }

            function isNumberOrStringArray(input) {
              var arrayTest = isArray(input),
                dataTypeTest = false;
              if (arrayTest) {
                dataTypeTest =
                  input.filter(function (item) {
                    return !isNumber(item) && isString(input);
                  }).length === 0;
              }
              return arrayTest && dataTypeTest;
            }

            function isCalendarSpec(input) {
              var objectTest = isObject(input) && !isObjectEmpty(input),
                propertyTest = false,
                properties = [
                  'sameDay',
                  'nextDay',
                  'lastDay',
                  'nextWeek',
                  'lastWeek',
                  'sameElse',
                ],
                i,
                property;

              for (i = 0; i < properties.length; i += 1) {
                property = properties[i];
                propertyTest = propertyTest || hasOwnProp(input, property);
              }

              return objectTest && propertyTest;
            }

            function getCalendarFormat(myMoment, now) {
              var diff = myMoment.diff(now, 'days', true);
              return diff < -6
                ? 'sameElse'
                : diff < -1
                ? 'lastWeek'
                : diff < 0
                ? 'lastDay'
                : diff < 1
                ? 'sameDay'
                : diff < 2
                ? 'nextDay'
                : diff < 7
                ? 'nextWeek'
                : 'sameElse';
            }

            function calendar$1(time, formats) {
              // Support for single parameter, formats only overload to the calendar function
              if (arguments.length === 1) {
                if (isMomentInput(arguments[0])) {
                  time = arguments[0];
                  formats = undefined;
                } else if (isCalendarSpec(arguments[0])) {
                  formats = arguments[0];
                  time = undefined;
                }
              }
              // We want to compare the start of today, vs this.
              // Getting start-of-today depends on whether we're local/utc/offset or not.
              var now = time || createLocal(),
                sod = cloneWithOffset(now, this).startOf('day'),
                format = hooks.calendarFormat(this, sod) || 'sameElse',
                output =
                  formats &&
                  (isFunction(formats[format])
                    ? formats[format].call(this, now)
                    : formats[format]);

              return this.format(
                output ||
                  this.localeData().calendar(format, this, createLocal(now))
              );
            }

            function clone() {
              return new Moment(this);
            }

            function isAfter(input, units) {
              var localInput = isMoment(input) ? input : createLocal(input);
              if (!(this.isValid() && localInput.isValid())) {
                return false;
              }
              units = normalizeUnits(units) || 'millisecond';
              if (units === 'millisecond') {
                return this.valueOf() > localInput.valueOf();
              } else {
                return (
                  localInput.valueOf() < this.clone().startOf(units).valueOf()
                );
              }
            }

            function isBefore(input, units) {
              var localInput = isMoment(input) ? input : createLocal(input);
              if (!(this.isValid() && localInput.isValid())) {
                return false;
              }
              units = normalizeUnits(units) || 'millisecond';
              if (units === 'millisecond') {
                return this.valueOf() < localInput.valueOf();
              } else {
                return (
                  this.clone().endOf(units).valueOf() < localInput.valueOf()
                );
              }
            }

            function isBetween(from, to, units, inclusivity) {
              var localFrom = isMoment(from) ? from : createLocal(from),
                localTo = isMoment(to) ? to : createLocal(to);
              if (
                !(this.isValid() && localFrom.isValid() && localTo.isValid())
              ) {
                return false;
              }
              inclusivity = inclusivity || '()';
              return (
                (inclusivity[0] === '('
                  ? this.isAfter(localFrom, units)
                  : !this.isBefore(localFrom, units)) &&
                (inclusivity[1] === ')'
                  ? this.isBefore(localTo, units)
                  : !this.isAfter(localTo, units))
              );
            }

            function isSame(input, units) {
              var localInput = isMoment(input) ? input : createLocal(input),
                inputMs;
              if (!(this.isValid() && localInput.isValid())) {
                return false;
              }
              units = normalizeUnits(units) || 'millisecond';
              if (units === 'millisecond') {
                return this.valueOf() === localInput.valueOf();
              } else {
                inputMs = localInput.valueOf();
                return (
                  this.clone().startOf(units).valueOf() <= inputMs &&
                  inputMs <= this.clone().endOf(units).valueOf()
                );
              }
            }

            function isSameOrAfter(input, units) {
              return this.isSame(input, units) || this.isAfter(input, units);
            }

            function isSameOrBefore(input, units) {
              return this.isSame(input, units) || this.isBefore(input, units);
            }

            function diff(input, units, asFloat) {
              var that, zoneDelta, output;

              if (!this.isValid()) {
                return NaN;
              }

              that = cloneWithOffset(input, this);

              if (!that.isValid()) {
                return NaN;
              }

              zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

              units = normalizeUnits(units);

              switch (units) {
                case 'year':
                  output = monthDiff(this, that) / 12;
                  break;
                case 'month':
                  output = monthDiff(this, that);
                  break;
                case 'quarter':
                  output = monthDiff(this, that) / 3;
                  break;
                case 'second':
                  output = (this - that) / 1e3;
                  break; // 1000
                case 'minute':
                  output = (this - that) / 6e4;
                  break; // 1000 * 60
                case 'hour':
                  output = (this - that) / 36e5;
                  break; // 1000 * 60 * 60
                case 'day':
                  output = (this - that - zoneDelta) / 864e5;
                  break; // 1000 * 60 * 60 * 24, negate dst
                case 'week':
                  output = (this - that - zoneDelta) / 6048e5;
                  break; // 1000 * 60 * 60 * 24 * 7, negate dst
                default:
                  output = this - that;
              }

              return asFloat ? output : absFloor(output);
            }

            function monthDiff(a, b) {
              if (a.date() < b.date()) {
                // end-of-month calculations work correct when the start month has more
                // days than the end month.
                return -monthDiff(b, a);
              }
              // difference in months
              var wholeMonthDiff =
                  (b.year() - a.year()) * 12 + (b.month() - a.month()),
                // b is in (anchor - 1 month, anchor + 1 month)
                anchor = a.clone().add(wholeMonthDiff, 'months'),
                anchor2,
                adjust;

              if (b - anchor < 0) {
                anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
                // linear across the month
                adjust = (b - anchor) / (anchor - anchor2);
              } else {
                anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
                // linear across the month
                adjust = (b - anchor) / (anchor2 - anchor);
              }

              //check for negative zero, return zero if negative zero
              return -(wholeMonthDiff + adjust) || 0;
            }

            hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
            hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

            function toString() {
              return this.clone()
                .locale('en')
                .format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
            }

            function toISOString(keepOffset) {
              if (!this.isValid()) {
                return null;
              }
              var utc = keepOffset !== true,
                m = utc ? this.clone().utc() : this;
              if (m.year() < 0 || m.year() > 9999) {
                return formatMoment(
                  m,
                  utc
                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'
                );
              }
              if (isFunction(Date.prototype.toISOString)) {
                // native implementation is ~50x faster, use it when we can
                if (utc) {
                  return this.toDate().toISOString();
                } else {
                  return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)
                    .toISOString()
                    .replace('Z', formatMoment(m, 'Z'));
                }
              }
              return formatMoment(
                m,
                utc
                  ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
                  : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'
              );
            }

            /**
             * Return a human readable representation of a moment that can
             * also be evaluated to get a new moment which is the same
             *
             * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
             */
            function inspect() {
              if (!this.isValid()) {
                return 'moment.invalid(/* ' + this._i + ' */)';
              }
              var func = 'moment',
                zone = '',
                prefix,
                year,
                datetime,
                suffix;
              if (!this.isLocal()) {
                func =
                  this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
                zone = 'Z';
              }
              prefix = '[' + func + '("]';
              year =
                0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';
              datetime = '-MM-DD[T]HH:mm:ss.SSS';
              suffix = zone + '[")]';

              return this.format(prefix + year + datetime + suffix);
            }

            function format(inputString) {
              if (!inputString) {
                inputString = this.isUtc()
                  ? hooks.defaultFormatUtc
                  : hooks.defaultFormat;
              }
              var output = formatMoment(this, inputString);
              return this.localeData().postformat(output);
            }

            function from(time, withoutSuffix) {
              if (
                this.isValid() &&
                ((isMoment(time) && time.isValid()) ||
                  createLocal(time).isValid())
              ) {
                return createDuration({ to: this, from: time })
                  .locale(this.locale())
                  .humanize(!withoutSuffix);
              } else {
                return this.localeData().invalidDate();
              }
            }

            function fromNow(withoutSuffix) {
              return this.from(createLocal(), withoutSuffix);
            }

            function to(time, withoutSuffix) {
              if (
                this.isValid() &&
                ((isMoment(time) && time.isValid()) ||
                  createLocal(time).isValid())
              ) {
                return createDuration({ from: this, to: time })
                  .locale(this.locale())
                  .humanize(!withoutSuffix);
              } else {
                return this.localeData().invalidDate();
              }
            }

            function toNow(withoutSuffix) {
              return this.to(createLocal(), withoutSuffix);
            }

            // If passed a locale key, it will set the locale for this
            // instance.  Otherwise, it will return the locale configuration
            // variables for this instance.
            function locale(key) {
              var newLocaleData;

              if (key === undefined) {
                return this._locale._abbr;
              } else {
                newLocaleData = getLocale(key);
                if (newLocaleData != null) {
                  this._locale = newLocaleData;
                }
                return this;
              }
            }

            var lang = deprecate(
              'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
              function (key) {
                if (key === undefined) {
                  return this.localeData();
                } else {
                  return this.locale(key);
                }
              }
            );

            function localeData() {
              return this._locale;
            }

            var MS_PER_SECOND = 1000,
              MS_PER_MINUTE = 60 * MS_PER_SECOND,
              MS_PER_HOUR = 60 * MS_PER_MINUTE,
              MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;

            // actual modulo - handles negative numbers (for dates before 1970):
            function mod$1(dividend, divisor) {
              return ((dividend % divisor) + divisor) % divisor;
            }

            function localStartOfDate(y, m, d) {
              // the date constructor remaps years 0-99 to 1900-1999
              if (y < 100 && y >= 0) {
                // preserve leap years using a full 400 year cycle, then reset
                return new Date(y + 400, m, d) - MS_PER_400_YEARS;
              } else {
                return new Date(y, m, d).valueOf();
              }
            }

            function utcStartOfDate(y, m, d) {
              // Date.UTC remaps years 0-99 to 1900-1999
              if (y < 100 && y >= 0) {
                // preserve leap years using a full 400 year cycle, then reset
                return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
              } else {
                return Date.UTC(y, m, d);
              }
            }

            function startOf(units) {
              var time, startOfDate;
              units = normalizeUnits(units);
              if (
                units === undefined ||
                units === 'millisecond' ||
                !this.isValid()
              ) {
                return this;
              }

              startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

              switch (units) {
                case 'year':
                  time = startOfDate(this.year(), 0, 1);
                  break;
                case 'quarter':
                  time = startOfDate(
                    this.year(),
                    this.month() - (this.month() % 3),
                    1
                  );
                  break;
                case 'month':
                  time = startOfDate(this.year(), this.month(), 1);
                  break;
                case 'week':
                  time = startOfDate(
                    this.year(),
                    this.month(),
                    this.date() - this.weekday()
                  );
                  break;
                case 'isoWeek':
                  time = startOfDate(
                    this.year(),
                    this.month(),
                    this.date() - (this.isoWeekday() - 1)
                  );
                  break;
                case 'day':
                case 'date':
                  time = startOfDate(this.year(), this.month(), this.date());
                  break;
                case 'hour':
                  time = this._d.valueOf();
                  time -= mod$1(
                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
                    MS_PER_HOUR
                  );
                  break;
                case 'minute':
                  time = this._d.valueOf();
                  time -= mod$1(time, MS_PER_MINUTE);
                  break;
                case 'second':
                  time = this._d.valueOf();
                  time -= mod$1(time, MS_PER_SECOND);
                  break;
              }

              this._d.setTime(time);
              hooks.updateOffset(this, true);
              return this;
            }

            function endOf(units) {
              var time, startOfDate;
              units = normalizeUnits(units);
              if (
                units === undefined ||
                units === 'millisecond' ||
                !this.isValid()
              ) {
                return this;
              }

              startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

              switch (units) {
                case 'year':
                  time = startOfDate(this.year() + 1, 0, 1) - 1;
                  break;
                case 'quarter':
                  time =
                    startOfDate(
                      this.year(),
                      this.month() - (this.month() % 3) + 3,
                      1
                    ) - 1;
                  break;
                case 'month':
                  time = startOfDate(this.year(), this.month() + 1, 1) - 1;
                  break;
                case 'week':
                  time =
                    startOfDate(
                      this.year(),
                      this.month(),
                      this.date() - this.weekday() + 7
                    ) - 1;
                  break;
                case 'isoWeek':
                  time =
                    startOfDate(
                      this.year(),
                      this.month(),
                      this.date() - (this.isoWeekday() - 1) + 7
                    ) - 1;
                  break;
                case 'day':
                case 'date':
                  time =
                    startOfDate(this.year(), this.month(), this.date() + 1) - 1;
                  break;
                case 'hour':
                  time = this._d.valueOf();
                  time +=
                    MS_PER_HOUR -
                    mod$1(
                      time +
                        (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
                      MS_PER_HOUR
                    ) -
                    1;
                  break;
                case 'minute':
                  time = this._d.valueOf();
                  time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
                  break;
                case 'second':
                  time = this._d.valueOf();
                  time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
                  break;
              }

              this._d.setTime(time);
              hooks.updateOffset(this, true);
              return this;
            }

            function valueOf() {
              return this._d.valueOf() - (this._offset || 0) * 60000;
            }

            function unix() {
              return Math.floor(this.valueOf() / 1000);
            }

            function toDate() {
              return new Date(this.valueOf());
            }

            function toArray() {
              var m = this;
              return [
                m.year(),
                m.month(),
                m.date(),
                m.hour(),
                m.minute(),
                m.second(),
                m.millisecond(),
              ];
            }

            function toObject() {
              var m = this;
              return {
                years: m.year(),
                months: m.month(),
                date: m.date(),
                hours: m.hours(),
                minutes: m.minutes(),
                seconds: m.seconds(),
                milliseconds: m.milliseconds(),
              };
            }

            function toJSON() {
              // new Date(NaN).toJSON() === null
              return this.isValid() ? this.toISOString() : null;
            }

            function isValid$2() {
              return isValid(this);
            }

            function parsingFlags() {
              return extend({}, getParsingFlags(this));
            }

            function invalidAt() {
              return getParsingFlags(this).overflow;
            }

            function creationData() {
              return {
                input: this._i,
                format: this._f,
                locale: this._locale,
                isUTC: this._isUTC,
                strict: this._strict,
              };
            }

            addFormatToken('N', 0, 0, 'eraAbbr');
            addFormatToken('NN', 0, 0, 'eraAbbr');
            addFormatToken('NNN', 0, 0, 'eraAbbr');
            addFormatToken('NNNN', 0, 0, 'eraName');
            addFormatToken('NNNNN', 0, 0, 'eraNarrow');

            addFormatToken('y', ['y', 1], 'yo', 'eraYear');
            addFormatToken('y', ['yy', 2], 0, 'eraYear');
            addFormatToken('y', ['yyy', 3], 0, 'eraYear');
            addFormatToken('y', ['yyyy', 4], 0, 'eraYear');

            addRegexToken('N', matchEraAbbr);
            addRegexToken('NN', matchEraAbbr);
            addRegexToken('NNN', matchEraAbbr);
            addRegexToken('NNNN', matchEraName);
            addRegexToken('NNNNN', matchEraNarrow);

            addParseToken(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (
              input,
              array,
              config,
              token
            ) {
              var era = config._locale.erasParse(input, token, config._strict);
              if (era) {
                getParsingFlags(config).era = era;
              } else {
                getParsingFlags(config).invalidEra = input;
              }
            });

            addRegexToken('y', matchUnsigned);
            addRegexToken('yy', matchUnsigned);
            addRegexToken('yyy', matchUnsigned);
            addRegexToken('yyyy', matchUnsigned);
            addRegexToken('yo', matchEraYearOrdinal);

            addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);
            addParseToken(['yo'], function (input, array, config, token) {
              var match;
              if (config._locale._eraYearOrdinalRegex) {
                match = input.match(config._locale._eraYearOrdinalRegex);
              }

              if (config._locale.eraYearOrdinalParse) {
                array[YEAR] = config._locale.eraYearOrdinalParse(input, match);
              } else {
                array[YEAR] = parseInt(input, 10);
              }
            });

            function localeEras(m, format) {
              var i,
                l,
                date,
                eras = this._eras || getLocale('en')._eras;
              for (i = 0, l = eras.length; i < l; ++i) {
                switch (typeof eras[i].since) {
                  case 'string':
                    // truncate time
                    date = hooks(eras[i].since).startOf('day');
                    eras[i].since = date.valueOf();
                    break;
                }

                switch (typeof eras[i].until) {
                  case 'undefined':
                    eras[i].until = +Infinity;
                    break;
                  case 'string':
                    // truncate time
                    date = hooks(eras[i].until).startOf('day').valueOf();
                    eras[i].until = date.valueOf();
                    break;
                }
              }
              return eras;
            }

            function localeErasParse(eraName, format, strict) {
              var i,
                l,
                eras = this.eras(),
                name,
                abbr,
                narrow;
              eraName = eraName.toUpperCase();

              for (i = 0, l = eras.length; i < l; ++i) {
                name = eras[i].name.toUpperCase();
                abbr = eras[i].abbr.toUpperCase();
                narrow = eras[i].narrow.toUpperCase();

                if (strict) {
                  switch (format) {
                    case 'N':
                    case 'NN':
                    case 'NNN':
                      if (abbr === eraName) {
                        return eras[i];
                      }
                      break;

                    case 'NNNN':
                      if (name === eraName) {
                        return eras[i];
                      }
                      break;

                    case 'NNNNN':
                      if (narrow === eraName) {
                        return eras[i];
                      }
                      break;
                  }
                } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
                  return eras[i];
                }
              }
            }

            function localeErasConvertYear(era, year) {
              var dir = era.since <= era.until ? +1 : -1;
              if (year === undefined) {
                return hooks(era.since).year();
              } else {
                return hooks(era.since).year() + (year - era.offset) * dir;
              }
            }

            function getEraName() {
              var i,
                l,
                val,
                eras = this.localeData().eras();
              for (i = 0, l = eras.length; i < l; ++i) {
                // truncate time
                val = this.startOf('day').valueOf();

                if (eras[i].since <= val && val <= eras[i].until) {
                  return eras[i].name;
                }
                if (eras[i].until <= val && val <= eras[i].since) {
                  return eras[i].name;
                }
              }

              return '';
            }

            function getEraNarrow() {
              var i,
                l,
                val,
                eras = this.localeData().eras();
              for (i = 0, l = eras.length; i < l; ++i) {
                // truncate time
                val = this.startOf('day').valueOf();

                if (eras[i].since <= val && val <= eras[i].until) {
                  return eras[i].narrow;
                }
                if (eras[i].until <= val && val <= eras[i].since) {
                  return eras[i].narrow;
                }
              }

              return '';
            }

            function getEraAbbr() {
              var i,
                l,
                val,
                eras = this.localeData().eras();
              for (i = 0, l = eras.length; i < l; ++i) {
                // truncate time
                val = this.startOf('day').valueOf();

                if (eras[i].since <= val && val <= eras[i].until) {
                  return eras[i].abbr;
                }
                if (eras[i].until <= val && val <= eras[i].since) {
                  return eras[i].abbr;
                }
              }

              return '';
            }

            function getEraYear() {
              var i,
                l,
                dir,
                val,
                eras = this.localeData().eras();
              for (i = 0, l = eras.length; i < l; ++i) {
                dir = eras[i].since <= eras[i].until ? +1 : -1;

                // truncate time
                val = this.startOf('day').valueOf();

                if (
                  (eras[i].since <= val && val <= eras[i].until) ||
                  (eras[i].until <= val && val <= eras[i].since)
                ) {
                  return (
                    (this.year() - hooks(eras[i].since).year()) * dir +
                    eras[i].offset
                  );
                }
              }

              return this.year();
            }

            function erasNameRegex(isStrict) {
              if (!hasOwnProp(this, '_erasNameRegex')) {
                computeErasParse.call(this);
              }
              return isStrict ? this._erasNameRegex : this._erasRegex;
            }

            function erasAbbrRegex(isStrict) {
              if (!hasOwnProp(this, '_erasAbbrRegex')) {
                computeErasParse.call(this);
              }
              return isStrict ? this._erasAbbrRegex : this._erasRegex;
            }

            function erasNarrowRegex(isStrict) {
              if (!hasOwnProp(this, '_erasNarrowRegex')) {
                computeErasParse.call(this);
              }
              return isStrict ? this._erasNarrowRegex : this._erasRegex;
            }

            function matchEraAbbr(isStrict, locale) {
              return locale.erasAbbrRegex(isStrict);
            }

            function matchEraName(isStrict, locale) {
              return locale.erasNameRegex(isStrict);
            }

            function matchEraNarrow(isStrict, locale) {
              return locale.erasNarrowRegex(isStrict);
            }

            function matchEraYearOrdinal(isStrict, locale) {
              return locale._eraYearOrdinalRegex || matchUnsigned;
            }

            function computeErasParse() {
              var abbrPieces = [],
                namePieces = [],
                narrowPieces = [],
                mixedPieces = [],
                i,
                l,
                eras = this.eras();

              for (i = 0, l = eras.length; i < l; ++i) {
                namePieces.push(regexEscape(eras[i].name));
                abbrPieces.push(regexEscape(eras[i].abbr));
                narrowPieces.push(regexEscape(eras[i].narrow));

                mixedPieces.push(regexEscape(eras[i].name));
                mixedPieces.push(regexEscape(eras[i].abbr));
                mixedPieces.push(regexEscape(eras[i].narrow));
              }

              this._erasRegex = new RegExp(
                '^(' + mixedPieces.join('|') + ')',
                'i'
              );
              this._erasNameRegex = new RegExp(
                '^(' + namePieces.join('|') + ')',
                'i'
              );
              this._erasAbbrRegex = new RegExp(
                '^(' + abbrPieces.join('|') + ')',
                'i'
              );
              this._erasNarrowRegex = new RegExp(
                '^(' + narrowPieces.join('|') + ')',
                'i'
              );
            }

            // FORMATTING

            addFormatToken(0, ['gg', 2], 0, function () {
              return this.weekYear() % 100;
            });

            addFormatToken(0, ['GG', 2], 0, function () {
              return this.isoWeekYear() % 100;
            });

            function addWeekYearFormatToken(token, getter) {
              addFormatToken(0, [token, token.length], 0, getter);
            }

            addWeekYearFormatToken('gggg', 'weekYear');
            addWeekYearFormatToken('ggggg', 'weekYear');
            addWeekYearFormatToken('GGGG', 'isoWeekYear');
            addWeekYearFormatToken('GGGGG', 'isoWeekYear');

            // ALIASES

            addUnitAlias('weekYear', 'gg');
            addUnitAlias('isoWeekYear', 'GG');

            // PRIORITY

            addUnitPriority('weekYear', 1);
            addUnitPriority('isoWeekYear', 1);

            // PARSING

            addRegexToken('G', matchSigned);
            addRegexToken('g', matchSigned);
            addRegexToken('GG', match1to2, match2);
            addRegexToken('gg', match1to2, match2);
            addRegexToken('GGGG', match1to4, match4);
            addRegexToken('gggg', match1to4, match4);
            addRegexToken('GGGGG', match1to6, match6);
            addRegexToken('ggggg', match1to6, match6);

            addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (
              input,
              week,
              config,
              token
            ) {
              week[token.substr(0, 2)] = toInt(input);
            });

            addWeekParseToken(['gg', 'GG'], function (
              input,
              week,
              config,
              token
            ) {
              week[token] = hooks.parseTwoDigitYear(input);
            });

            // MOMENTS

            function getSetWeekYear(input) {
              return getSetWeekYearHelper.call(
                this,
                input,
                this.week(),
                this.weekday(),
                this.localeData()._week.dow,
                this.localeData()._week.doy
              );
            }

            function getSetISOWeekYear(input) {
              return getSetWeekYearHelper.call(
                this,
                input,
                this.isoWeek(),
                this.isoWeekday(),
                1,
                4
              );
            }

            function getISOWeeksInYear() {
              return weeksInYear(this.year(), 1, 4);
            }

            function getISOWeeksInISOWeekYear() {
              return weeksInYear(this.isoWeekYear(), 1, 4);
            }

            function getWeeksInYear() {
              var weekInfo = this.localeData()._week;
              return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
            }

            function getWeeksInWeekYear() {
              var weekInfo = this.localeData()._week;
              return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
            }

            function getSetWeekYearHelper(input, week, weekday, dow, doy) {
              var weeksTarget;
              if (input == null) {
                return weekOfYear(this, dow, doy).year;
              } else {
                weeksTarget = weeksInYear(input, dow, doy);
                if (week > weeksTarget) {
                  week = weeksTarget;
                }
                return setWeekAll.call(this, input, week, weekday, dow, doy);
              }
            }

            function setWeekAll(weekYear, week, weekday, dow, doy) {
              var dayOfYearData = dayOfYearFromWeeks(
                  weekYear,
                  week,
                  weekday,
                  dow,
                  doy
                ),
                date = createUTCDate(
                  dayOfYearData.year,
                  0,
                  dayOfYearData.dayOfYear
                );

              this.year(date.getUTCFullYear());
              this.month(date.getUTCMonth());
              this.date(date.getUTCDate());
              return this;
            }

            // FORMATTING

            addFormatToken('Q', 0, 'Qo', 'quarter');

            // ALIASES

            addUnitAlias('quarter', 'Q');

            // PRIORITY

            addUnitPriority('quarter', 7);

            // PARSING

            addRegexToken('Q', match1);
            addParseToken('Q', function (input, array) {
              array[MONTH] = (toInt(input) - 1) * 3;
            });

            // MOMENTS

            function getSetQuarter(input) {
              return input == null
                ? Math.ceil((this.month() + 1) / 3)
                : this.month((input - 1) * 3 + (this.month() % 3));
            }

            // FORMATTING

            addFormatToken('D', ['DD', 2], 'Do', 'date');

            // ALIASES

            addUnitAlias('date', 'D');

            // PRIORITY
            addUnitPriority('date', 9);

            // PARSING

            addRegexToken('D', match1to2);
            addRegexToken('DD', match1to2, match2);
            addRegexToken('Do', function (isStrict, locale) {
              // TODO: Remove "ordinalParse" fallback in next major release.
              return isStrict
                ? locale._dayOfMonthOrdinalParse || locale._ordinalParse
                : locale._dayOfMonthOrdinalParseLenient;
            });

            addParseToken(['D', 'DD'], DATE);
            addParseToken('Do', function (input, array) {
              array[DATE] = toInt(input.match(match1to2)[0]);
            });

            // MOMENTS

            var getSetDayOfMonth = makeGetSet('Date', true);

            // FORMATTING

            addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

            // ALIASES

            addUnitAlias('dayOfYear', 'DDD');

            // PRIORITY
            addUnitPriority('dayOfYear', 4);

            // PARSING

            addRegexToken('DDD', match1to3);
            addRegexToken('DDDD', match3);
            addParseToken(['DDD', 'DDDD'], function (input, array, config) {
              config._dayOfYear = toInt(input);
            });

            // HELPERS

            // MOMENTS

            function getSetDayOfYear(input) {
              var dayOfYear =
                Math.round(
                  (this.clone().startOf('day') - this.clone().startOf('year')) /
                    864e5
                ) + 1;
              return input == null
                ? dayOfYear
                : this.add(input - dayOfYear, 'd');
            }

            // FORMATTING

            addFormatToken('m', ['mm', 2], 0, 'minute');

            // ALIASES

            addUnitAlias('minute', 'm');

            // PRIORITY

            addUnitPriority('minute', 14);

            // PARSING

            addRegexToken('m', match1to2);
            addRegexToken('mm', match1to2, match2);
            addParseToken(['m', 'mm'], MINUTE);

            // MOMENTS

            var getSetMinute = makeGetSet('Minutes', false);

            // FORMATTING

            addFormatToken('s', ['ss', 2], 0, 'second');

            // ALIASES

            addUnitAlias('second', 's');

            // PRIORITY

            addUnitPriority('second', 15);

            // PARSING

            addRegexToken('s', match1to2);
            addRegexToken('ss', match1to2, match2);
            addParseToken(['s', 'ss'], SECOND);

            // MOMENTS

            var getSetSecond = makeGetSet('Seconds', false);

            // FORMATTING

            addFormatToken('S', 0, 0, function () {
              return ~~(this.millisecond() / 100);
            });

            addFormatToken(0, ['SS', 2], 0, function () {
              return ~~(this.millisecond() / 10);
            });

            addFormatToken(0, ['SSS', 3], 0, 'millisecond');
            addFormatToken(0, ['SSSS', 4], 0, function () {
              return this.millisecond() * 10;
            });
            addFormatToken(0, ['SSSSS', 5], 0, function () {
              return this.millisecond() * 100;
            });
            addFormatToken(0, ['SSSSSS', 6], 0, function () {
              return this.millisecond() * 1000;
            });
            addFormatToken(0, ['SSSSSSS', 7], 0, function () {
              return this.millisecond() * 10000;
            });
            addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
              return this.millisecond() * 100000;
            });
            addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
              return this.millisecond() * 1000000;
            });

            // ALIASES

            addUnitAlias('millisecond', 'ms');

            // PRIORITY

            addUnitPriority('millisecond', 16);

            // PARSING

            addRegexToken('S', match1to3, match1);
            addRegexToken('SS', match1to3, match2);
            addRegexToken('SSS', match1to3, match3);

            var token, getSetMillisecond;
            for (token = 'SSSS'; token.length <= 9; token += 'S') {
              addRegexToken(token, matchUnsigned);
            }

            function parseMs(input, array) {
              array[MILLISECOND] = toInt(('0.' + input) * 1000);
            }

            for (token = 'S'; token.length <= 9; token += 'S') {
              addParseToken(token, parseMs);
            }

            getSetMillisecond = makeGetSet('Milliseconds', false);

            // FORMATTING

            addFormatToken('z', 0, 0, 'zoneAbbr');
            addFormatToken('zz', 0, 0, 'zoneName');

            // MOMENTS

            function getZoneAbbr() {
              return this._isUTC ? 'UTC' : '';
            }

            function getZoneName() {
              return this._isUTC ? 'Coordinated Universal Time' : '';
            }

            var proto = Moment.prototype;

            proto.add = add;
            proto.calendar = calendar$1;
            proto.clone = clone;
            proto.diff = diff;
            proto.endOf = endOf;
            proto.format = format;
            proto.from = from;
            proto.fromNow = fromNow;
            proto.to = to;
            proto.toNow = toNow;
            proto.get = stringGet;
            proto.invalidAt = invalidAt;
            proto.isAfter = isAfter;
            proto.isBefore = isBefore;
            proto.isBetween = isBetween;
            proto.isSame = isSame;
            proto.isSameOrAfter = isSameOrAfter;
            proto.isSameOrBefore = isSameOrBefore;
            proto.isValid = isValid$2;
            proto.lang = lang;
            proto.locale = locale;
            proto.localeData = localeData;
            proto.max = prototypeMax;
            proto.min = prototypeMin;
            proto.parsingFlags = parsingFlags;
            proto.set = stringSet;
            proto.startOf = startOf;
            proto.subtract = subtract;
            proto.toArray = toArray;
            proto.toObject = toObject;
            proto.toDate = toDate;
            proto.toISOString = toISOString;
            proto.inspect = inspect;
            if (typeof Symbol !== 'undefined' && Symbol.for != null) {
              proto[Symbol.for('nodejs.util.inspect.custom')] = function () {
                return 'Moment<' + this.format() + '>';
              };
            }
            proto.toJSON = toJSON;
            proto.toString = toString;
            proto.unix = unix;
            proto.valueOf = valueOf;
            proto.creationData = creationData;
            proto.eraName = getEraName;
            proto.eraNarrow = getEraNarrow;
            proto.eraAbbr = getEraAbbr;
            proto.eraYear = getEraYear;
            proto.year = getSetYear;
            proto.isLeapYear = getIsLeapYear;
            proto.weekYear = getSetWeekYear;
            proto.isoWeekYear = getSetISOWeekYear;
            proto.quarter = proto.quarters = getSetQuarter;
            proto.month = getSetMonth;
            proto.daysInMonth = getDaysInMonth;
            proto.week = proto.weeks = getSetWeek;
            proto.isoWeek = proto.isoWeeks = getSetISOWeek;
            proto.weeksInYear = getWeeksInYear;
            proto.weeksInWeekYear = getWeeksInWeekYear;
            proto.isoWeeksInYear = getISOWeeksInYear;
            proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
            proto.date = getSetDayOfMonth;
            proto.day = proto.days = getSetDayOfWeek;
            proto.weekday = getSetLocaleDayOfWeek;
            proto.isoWeekday = getSetISODayOfWeek;
            proto.dayOfYear = getSetDayOfYear;
            proto.hour = proto.hours = getSetHour;
            proto.minute = proto.minutes = getSetMinute;
            proto.second = proto.seconds = getSetSecond;
            proto.millisecond = proto.milliseconds = getSetMillisecond;
            proto.utcOffset = getSetOffset;
            proto.utc = setOffsetToUTC;
            proto.local = setOffsetToLocal;
            proto.parseZone = setOffsetToParsedOffset;
            proto.hasAlignedHourOffset = hasAlignedHourOffset;
            proto.isDST = isDaylightSavingTime;
            proto.isLocal = isLocal;
            proto.isUtcOffset = isUtcOffset;
            proto.isUtc = isUtc;
            proto.isUTC = isUtc;
            proto.zoneAbbr = getZoneAbbr;
            proto.zoneName = getZoneName;
            proto.dates = deprecate(
              'dates accessor is deprecated. Use date instead.',
              getSetDayOfMonth
            );
            proto.months = deprecate(
              'months accessor is deprecated. Use month instead',
              getSetMonth
            );
            proto.years = deprecate(
              'years accessor is deprecated. Use year instead',
              getSetYear
            );
            proto.zone = deprecate(
              'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',
              getSetZone
            );
            proto.isDSTShifted = deprecate(
              'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',
              isDaylightSavingTimeShifted
            );

            function createUnix(input) {
              return createLocal(input * 1000);
            }

            function createInZone() {
              return createLocal.apply(null, arguments).parseZone();
            }

            function preParsePostFormat(string) {
              return string;
            }

            var proto$1 = Locale.prototype;

            proto$1.calendar = calendar;
            proto$1.longDateFormat = longDateFormat;
            proto$1.invalidDate = invalidDate;
            proto$1.ordinal = ordinal;
            proto$1.preparse = preParsePostFormat;
            proto$1.postformat = preParsePostFormat;
            proto$1.relativeTime = relativeTime;
            proto$1.pastFuture = pastFuture;
            proto$1.set = set;
            proto$1.eras = localeEras;
            proto$1.erasParse = localeErasParse;
            proto$1.erasConvertYear = localeErasConvertYear;
            proto$1.erasAbbrRegex = erasAbbrRegex;
            proto$1.erasNameRegex = erasNameRegex;
            proto$1.erasNarrowRegex = erasNarrowRegex;

            proto$1.months = localeMonths;
            proto$1.monthsShort = localeMonthsShort;
            proto$1.monthsParse = localeMonthsParse;
            proto$1.monthsRegex = monthsRegex;
            proto$1.monthsShortRegex = monthsShortRegex;
            proto$1.week = localeWeek;
            proto$1.firstDayOfYear = localeFirstDayOfYear;
            proto$1.firstDayOfWeek = localeFirstDayOfWeek;

            proto$1.weekdays = localeWeekdays;
            proto$1.weekdaysMin = localeWeekdaysMin;
            proto$1.weekdaysShort = localeWeekdaysShort;
            proto$1.weekdaysParse = localeWeekdaysParse;

            proto$1.weekdaysRegex = weekdaysRegex;
            proto$1.weekdaysShortRegex = weekdaysShortRegex;
            proto$1.weekdaysMinRegex = weekdaysMinRegex;

            proto$1.isPM = localeIsPM;
            proto$1.meridiem = localeMeridiem;

            function get$1(format, index, field, setter) {
              var locale = getLocale(),
                utc = createUTC().set(setter, index);
              return locale[field](utc, format);
            }

            function listMonthsImpl(format, index, field) {
              if (isNumber(format)) {
                index = format;
                format = undefined;
              }

              format = format || '';

              if (index != null) {
                return get$1(format, index, field, 'month');
              }

              var i,
                out = [];
              for (i = 0; i < 12; i++) {
                out[i] = get$1(format, i, field, 'month');
              }
              return out;
            }

            // ()
            // (5)
            // (fmt, 5)
            // (fmt)
            // (true)
            // (true, 5)
            // (true, fmt, 5)
            // (true, fmt)
            function listWeekdaysImpl(localeSorted, format, index, field) {
              if (typeof localeSorted === 'boolean') {
                if (isNumber(format)) {
                  index = format;
                  format = undefined;
                }

                format = format || '';
              } else {
                format = localeSorted;
                index = format;
                localeSorted = false;

                if (isNumber(format)) {
                  index = format;
                  format = undefined;
                }

                format = format || '';
              }

              var locale = getLocale(),
                shift = localeSorted ? locale._week.dow : 0,
                i,
                out = [];

              if (index != null) {
                return get$1(format, (index + shift) % 7, field, 'day');
              }

              for (i = 0; i < 7; i++) {
                out[i] = get$1(format, (i + shift) % 7, field, 'day');
              }
              return out;
            }

            function listMonths(format, index) {
              return listMonthsImpl(format, index, 'months');
            }

            function listMonthsShort(format, index) {
              return listMonthsImpl(format, index, 'monthsShort');
            }

            function listWeekdays(localeSorted, format, index) {
              return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
            }

            function listWeekdaysShort(localeSorted, format, index) {
              return listWeekdaysImpl(
                localeSorted,
                format,
                index,
                'weekdaysShort'
              );
            }

            function listWeekdaysMin(localeSorted, format, index) {
              return listWeekdaysImpl(
                localeSorted,
                format,
                index,
                'weekdaysMin'
              );
            }

            getSetGlobalLocale('en', {
              eras: [
                {
                  since: '0001-01-01',
                  until: +Infinity,
                  offset: 1,
                  name: 'Anno Domini',
                  narrow: 'AD',
                  abbr: 'AD',
                },
                {
                  since: '0000-12-31',
                  until: -Infinity,
                  offset: 1,
                  name: 'Before Christ',
                  narrow: 'BC',
                  abbr: 'BC',
                },
              ],
              dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
              ordinal: function (number) {
                var b = number % 10,
                  output =
                    toInt((number % 100) / 10) === 1
                      ? 'th'
                      : b === 1
                      ? 'st'
                      : b === 2
                      ? 'nd'
                      : b === 3
                      ? 'rd'
                      : 'th';
                return number + output;
              },
            });

            // Side effect imports

            hooks.lang = deprecate(
              'moment.lang is deprecated. Use moment.locale instead.',
              getSetGlobalLocale
            );
            hooks.langData = deprecate(
              'moment.langData is deprecated. Use moment.localeData instead.',
              getLocale
            );

            var mathAbs = Math.abs;

            function abs() {
              var data = this._data;

              this._milliseconds = mathAbs(this._milliseconds);
              this._days = mathAbs(this._days);
              this._months = mathAbs(this._months);

              data.milliseconds = mathAbs(data.milliseconds);
              data.seconds = mathAbs(data.seconds);
              data.minutes = mathAbs(data.minutes);
              data.hours = mathAbs(data.hours);
              data.months = mathAbs(data.months);
              data.years = mathAbs(data.years);

              return this;
            }

            function addSubtract$1(duration, input, value, direction) {
              var other = createDuration(input, value);

              duration._milliseconds += direction * other._milliseconds;
              duration._days += direction * other._days;
              duration._months += direction * other._months;

              return duration._bubble();
            }

            // supports only 2.0-style add(1, 's') or add(duration)
            function add$1(input, value) {
              return addSubtract$1(this, input, value, 1);
            }

            // supports only 2.0-style subtract(1, 's') or subtract(duration)
            function subtract$1(input, value) {
              return addSubtract$1(this, input, value, -1);
            }

            function absCeil(number) {
              if (number < 0) {
                return Math.floor(number);
              } else {
                return Math.ceil(number);
              }
            }

            function bubble() {
              var milliseconds = this._milliseconds,
                days = this._days,
                months = this._months,
                data = this._data,
                seconds,
                minutes,
                hours,
                years,
                monthsFromDays;

              // if we have a mix of positive and negative values, bubble down first
              // check: https://github.com/moment/moment/issues/2166
              if (
                !(
                  (milliseconds >= 0 && days >= 0 && months >= 0) ||
                  (milliseconds <= 0 && days <= 0 && months <= 0)
                )
              ) {
                milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
                days = 0;
                months = 0;
              }

              // The following code bubbles up values, see the tests for
              // examples of what that means.
              data.milliseconds = milliseconds % 1000;

              seconds = absFloor(milliseconds / 1000);
              data.seconds = seconds % 60;

              minutes = absFloor(seconds / 60);
              data.minutes = minutes % 60;

              hours = absFloor(minutes / 60);
              data.hours = hours % 24;

              days += absFloor(hours / 24);

              // convert days to months
              monthsFromDays = absFloor(daysToMonths(days));
              months += monthsFromDays;
              days -= absCeil(monthsToDays(monthsFromDays));

              // 12 months -> 1 year
              years = absFloor(months / 12);
              months %= 12;

              data.days = days;
              data.months = months;
              data.years = years;

              return this;
            }

            function daysToMonths(days) {
              // 400 years have 146097 days (taking into account leap year rules)
              // 400 years have 12 months === 4800
              return (days * 4800) / 146097;
            }

            function monthsToDays(months) {
              // the reverse of daysToMonths
              return (months * 146097) / 4800;
            }

            function as(units) {
              if (!this.isValid()) {
                return NaN;
              }
              var days,
                months,
                milliseconds = this._milliseconds;

              units = normalizeUnits(units);

              if (
                units === 'month' ||
                units === 'quarter' ||
                units === 'year'
              ) {
                days = this._days + milliseconds / 864e5;
                months = this._months + daysToMonths(days);
                switch (units) {
                  case 'month':
                    return months;
                  case 'quarter':
                    return months / 3;
                  case 'year':
                    return months / 12;
                }
              } else {
                // handle milliseconds separately because of floating point math errors (issue #1867)
                days = this._days + Math.round(monthsToDays(this._months));
                switch (units) {
                  case 'week':
                    return days / 7 + milliseconds / 6048e5;
                  case 'day':
                    return days + milliseconds / 864e5;
                  case 'hour':
                    return days * 24 + milliseconds / 36e5;
                  case 'minute':
                    return days * 1440 + milliseconds / 6e4;
                  case 'second':
                    return days * 86400 + milliseconds / 1000;
                  // Math.floor prevents floating point math errors here
                  case 'millisecond':
                    return Math.floor(days * 864e5) + milliseconds;
                  default:
                    throw new Error('Unknown unit ' + units);
                }
              }
            }

            // TODO: Use this.as('ms')?
            function valueOf$1() {
              if (!this.isValid()) {
                return NaN;
              }
              return (
                this._milliseconds +
                this._days * 864e5 +
                (this._months % 12) * 2592e6 +
                toInt(this._months / 12) * 31536e6
              );
            }

            function makeAs(alias) {
              return function () {
                return this.as(alias);
              };
            }

            var asMilliseconds = makeAs('ms'),
              asSeconds = makeAs('s'),
              asMinutes = makeAs('m'),
              asHours = makeAs('h'),
              asDays = makeAs('d'),
              asWeeks = makeAs('w'),
              asMonths = makeAs('M'),
              asQuarters = makeAs('Q'),
              asYears = makeAs('y');

            function clone$1() {
              return createDuration(this);
            }

            function get$2(units) {
              units = normalizeUnits(units);
              return this.isValid() ? this[units + 's']() : NaN;
            }

            function makeGetter(name) {
              return function () {
                return this.isValid() ? this._data[name] : NaN;
              };
            }

            var milliseconds = makeGetter('milliseconds'),
              seconds = makeGetter('seconds'),
              minutes = makeGetter('minutes'),
              hours = makeGetter('hours'),
              days = makeGetter('days'),
              months = makeGetter('months'),
              years = makeGetter('years');

            function weeks() {
              return absFloor(this.days() / 7);
            }

            var round = Math.round,
              thresholds = {
                ss: 44, // a few seconds to seconds
                s: 45, // seconds to minute
                m: 45, // minutes to hour
                h: 22, // hours to day
                d: 26, // days to month/week
                w: null, // weeks to month
                M: 11, // months to year
              };

            // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
            function substituteTimeAgo(
              string,
              number,
              withoutSuffix,
              isFuture,
              locale
            ) {
              return locale.relativeTime(
                number || 1,
                !!withoutSuffix,
                string,
                isFuture
              );
            }

            function relativeTime$1(
              posNegDuration,
              withoutSuffix,
              thresholds,
              locale
            ) {
              var duration = createDuration(posNegDuration).abs(),
                seconds = round(duration.as('s')),
                minutes = round(duration.as('m')),
                hours = round(duration.as('h')),
                days = round(duration.as('d')),
                months = round(duration.as('M')),
                weeks = round(duration.as('w')),
                years = round(duration.as('y')),
                a =
                  (seconds <= thresholds.ss && ['s', seconds]) ||
                  (seconds < thresholds.s && ['ss', seconds]) ||
                  (minutes <= 1 && ['m']) ||
                  (minutes < thresholds.m && ['mm', minutes]) ||
                  (hours <= 1 && ['h']) ||
                  (hours < thresholds.h && ['hh', hours]) ||
                  (days <= 1 && ['d']) ||
                  (days < thresholds.d && ['dd', days]);

              if (thresholds.w != null) {
                a =
                  a ||
                  (weeks <= 1 && ['w']) ||
                  (weeks < thresholds.w && ['ww', weeks]);
              }
              a = a ||
                (months <= 1 && ['M']) ||
                (months < thresholds.M && ['MM', months]) ||
                (years <= 1 && ['y']) || ['yy', years];

              a[2] = withoutSuffix;
              a[3] = +posNegDuration > 0;
              a[4] = locale;
              return substituteTimeAgo.apply(null, a);
            }

            // This function allows you to set the rounding function for relative time strings
            function getSetRelativeTimeRounding(roundingFunction) {
              if (roundingFunction === undefined) {
                return round;
              }
              if (typeof roundingFunction === 'function') {
                round = roundingFunction;
                return true;
              }
              return false;
            }

            // This function allows you to set a threshold for relative time strings
            function getSetRelativeTimeThreshold(threshold, limit) {
              if (thresholds[threshold] === undefined) {
                return false;
              }
              if (limit === undefined) {
                return thresholds[threshold];
              }
              thresholds[threshold] = limit;
              if (threshold === 's') {
                thresholds.ss = limit - 1;
              }
              return true;
            }

            function humanize(argWithSuffix, argThresholds) {
              if (!this.isValid()) {
                return this.localeData().invalidDate();
              }

              var withSuffix = false,
                th = thresholds,
                locale,
                output;

              if (typeof argWithSuffix === 'object') {
                argThresholds = argWithSuffix;
                argWithSuffix = false;
              }
              if (typeof argWithSuffix === 'boolean') {
                withSuffix = argWithSuffix;
              }
              if (typeof argThresholds === 'object') {
                th = Object.assign({}, thresholds, argThresholds);
                if (argThresholds.s != null && argThresholds.ss == null) {
                  th.ss = argThresholds.s - 1;
                }
              }

              locale = this.localeData();
              output = relativeTime$1(this, !withSuffix, th, locale);

              if (withSuffix) {
                output = locale.pastFuture(+this, output);
              }

              return locale.postformat(output);
            }

            var abs$1 = Math.abs;

            function sign(x) {
              return (x > 0) - (x < 0) || +x;
            }

            function toISOString$1() {
              // for ISO strings we do not use the normal bubbling rules:
              //  * milliseconds bubble up until they become hours
              //  * days do not bubble at all
              //  * months bubble up until they become years
              // This is because there is no context-free conversion between hours and days
              // (think of clock changes)
              // and also not between days and months (28-31 days per month)
              if (!this.isValid()) {
                return this.localeData().invalidDate();
              }

              var seconds = abs$1(this._milliseconds) / 1000,
                days = abs$1(this._days),
                months = abs$1(this._months),
                minutes,
                hours,
                years,
                s,
                total = this.asSeconds(),
                totalSign,
                ymSign,
                daysSign,
                hmsSign;

              if (!total) {
                // this is the same as C#'s (Noda) and python (isodate)...
                // but not other JS (goog.date)
                return 'P0D';
              }

              // 3600 seconds -> 60 minutes -> 1 hour
              minutes = absFloor(seconds / 60);
              hours = absFloor(minutes / 60);
              seconds %= 60;
              minutes %= 60;

              // 12 months -> 1 year
              years = absFloor(months / 12);
              months %= 12;

              // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
              s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';

              totalSign = total < 0 ? '-' : '';
              ymSign = sign(this._months) !== sign(total) ? '-' : '';
              daysSign = sign(this._days) !== sign(total) ? '-' : '';
              hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

              return (
                totalSign +
                'P' +
                (years ? ymSign + years + 'Y' : '') +
                (months ? ymSign + months + 'M' : '') +
                (days ? daysSign + days + 'D' : '') +
                (hours || minutes || seconds ? 'T' : '') +
                (hours ? hmsSign + hours + 'H' : '') +
                (minutes ? hmsSign + minutes + 'M' : '') +
                (seconds ? hmsSign + s + 'S' : '')
              );
            }

            var proto$2 = Duration.prototype;

            proto$2.isValid = isValid$1;
            proto$2.abs = abs;
            proto$2.add = add$1;
            proto$2.subtract = subtract$1;
            proto$2.as = as;
            proto$2.asMilliseconds = asMilliseconds;
            proto$2.asSeconds = asSeconds;
            proto$2.asMinutes = asMinutes;
            proto$2.asHours = asHours;
            proto$2.asDays = asDays;
            proto$2.asWeeks = asWeeks;
            proto$2.asMonths = asMonths;
            proto$2.asQuarters = asQuarters;
            proto$2.asYears = asYears;
            proto$2.valueOf = valueOf$1;
            proto$2._bubble = bubble;
            proto$2.clone = clone$1;
            proto$2.get = get$2;
            proto$2.milliseconds = milliseconds;
            proto$2.seconds = seconds;
            proto$2.minutes = minutes;
            proto$2.hours = hours;
            proto$2.days = days;
            proto$2.weeks = weeks;
            proto$2.months = months;
            proto$2.years = years;
            proto$2.humanize = humanize;
            proto$2.toISOString = toISOString$1;
            proto$2.toString = toISOString$1;
            proto$2.toJSON = toISOString$1;
            proto$2.locale = locale;
            proto$2.localeData = localeData;

            proto$2.toIsoString = deprecate(
              'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',
              toISOString$1
            );
            proto$2.lang = lang;

            // FORMATTING

            addFormatToken('X', 0, 0, 'unix');
            addFormatToken('x', 0, 0, 'valueOf');

            // PARSING

            addRegexToken('x', matchSigned);
            addRegexToken('X', matchTimestamp);
            addParseToken('X', function (input, array, config) {
              config._d = new Date(parseFloat(input) * 1000);
            });
            addParseToken('x', function (input, array, config) {
              config._d = new Date(toInt(input));
            });

            //! moment.js

            hooks.version = '2.27.0';

            setHookCallback(createLocal);

            hooks.fn = proto;
            hooks.min = min;
            hooks.max = max;
            hooks.now = now;
            hooks.utc = createUTC;
            hooks.unix = createUnix;
            hooks.months = listMonths;
            hooks.isDate = isDate;
            hooks.locale = getSetGlobalLocale;
            hooks.invalid = createInvalid;
            hooks.duration = createDuration;
            hooks.isMoment = isMoment;
            hooks.weekdays = listWeekdays;
            hooks.parseZone = createInZone;
            hooks.localeData = getLocale;
            hooks.isDuration = isDuration;
            hooks.monthsShort = listMonthsShort;
            hooks.weekdaysMin = listWeekdaysMin;
            hooks.defineLocale = defineLocale;
            hooks.updateLocale = updateLocale;
            hooks.locales = listLocales;
            hooks.weekdaysShort = listWeekdaysShort;
            hooks.normalizeUnits = normalizeUnits;
            hooks.relativeTimeRounding = getSetRelativeTimeRounding;
            hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
            hooks.calendarFormat = getCalendarFormat;
            hooks.prototype = proto;

            // currently HTML5 input type only supports 24-hour formats
            hooks.HTML5_FMT = {
              DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type="datetime-local" />
              DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type="datetime-local" step="1" />
              DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type="datetime-local" step="0.001" />
              DATE: 'YYYY-MM-DD', // <input type="date" />
              TIME: 'HH:mm', // <input type="time" />
              TIME_SECONDS: 'HH:mm:ss', // <input type="time" step="1" />
              TIME_MS: 'HH:mm:ss.SSS', // <input type="time" step="0.001" />
              WEEK: 'GGGG-[W]WW', // <input type="week" />
              MONTH: 'YYYY-MM', // <input type="month" />
            };

            return hooks;
          });

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../webpack/buildin/module.js */ '../node_modules/webpack/buildin/module.js'
          )(module)
        ));

        /***/
      },

    /***/ '../node_modules/parse-asn1/aesid.json':
      /*!*********************************************!*\
  !*** ../node_modules/parse-asn1/aesid.json ***!
  \*********************************************/
      /*! exports provided: 2.16.840.1.101.3.4.1.1, 2.16.840.1.101.3.4.1.2, 2.16.840.1.101.3.4.1.3, 2.16.840.1.101.3.4.1.4, 2.16.840.1.101.3.4.1.21, 2.16.840.1.101.3.4.1.22, 2.16.840.1.101.3.4.1.23, 2.16.840.1.101.3.4.1.24, 2.16.840.1.101.3.4.1.41, 2.16.840.1.101.3.4.1.42, 2.16.840.1.101.3.4.1.43, 2.16.840.1.101.3.4.1.44, default */
      /***/ function (module) {
        module.exports = JSON.parse(
          '{"2.16.840.1.101.3.4.1.1":"aes-128-ecb","2.16.840.1.101.3.4.1.2":"aes-128-cbc","2.16.840.1.101.3.4.1.3":"aes-128-ofb","2.16.840.1.101.3.4.1.4":"aes-128-cfb","2.16.840.1.101.3.4.1.21":"aes-192-ecb","2.16.840.1.101.3.4.1.22":"aes-192-cbc","2.16.840.1.101.3.4.1.23":"aes-192-ofb","2.16.840.1.101.3.4.1.24":"aes-192-cfb","2.16.840.1.101.3.4.1.41":"aes-256-ecb","2.16.840.1.101.3.4.1.42":"aes-256-cbc","2.16.840.1.101.3.4.1.43":"aes-256-ofb","2.16.840.1.101.3.4.1.44":"aes-256-cfb"}'
        );

        /***/
      },

    /***/ '../node_modules/parse-asn1/asn1.js':
      /*!******************************************!*\
  !*** ../node_modules/parse-asn1/asn1.js ***!
  \******************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        // from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js
        // Fedor, you are amazing.

        var asn1 = __webpack_require__(
          /*! asn1.js */ '../node_modules/asn1.js/lib/asn1.js'
        );

        exports.certificate = __webpack_require__(
          /*! ./certificate */ '../node_modules/parse-asn1/certificate.js'
        );

        var RSAPrivateKey = asn1.define('RSAPrivateKey', function () {
          this.seq().obj(
            this.key('version').int(),
            this.key('modulus').int(),
            this.key('publicExponent').int(),
            this.key('privateExponent').int(),
            this.key('prime1').int(),
            this.key('prime2').int(),
            this.key('exponent1').int(),
            this.key('exponent2').int(),
            this.key('coefficient').int()
          );
        });
        exports.RSAPrivateKey = RSAPrivateKey;

        var RSAPublicKey = asn1.define('RSAPublicKey', function () {
          this.seq().obj(
            this.key('modulus').int(),
            this.key('publicExponent').int()
          );
        });
        exports.RSAPublicKey = RSAPublicKey;

        var PublicKey = asn1.define('SubjectPublicKeyInfo', function () {
          this.seq().obj(
            this.key('algorithm').use(AlgorithmIdentifier),
            this.key('subjectPublicKey').bitstr()
          );
        });
        exports.PublicKey = PublicKey;

        var AlgorithmIdentifier = asn1.define(
          'AlgorithmIdentifier',
          function () {
            this.seq().obj(
              this.key('algorithm').objid(),
              this.key('none').null_().optional(),
              this.key('curve').objid().optional(),
              this.key('params')
                .seq()
                .obj(
                  this.key('p').int(),
                  this.key('q').int(),
                  this.key('g').int()
                )
                .optional()
            );
          }
        );

        var PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {
          this.seq().obj(
            this.key('version').int(),
            this.key('algorithm').use(AlgorithmIdentifier),
            this.key('subjectPrivateKey').octstr()
          );
        });
        exports.PrivateKey = PrivateKeyInfo;
        var EncryptedPrivateKeyInfo = asn1.define(
          'EncryptedPrivateKeyInfo',
          function () {
            this.seq().obj(
              this.key('algorithm')
                .seq()
                .obj(
                  this.key('id').objid(),
                  this.key('decrypt')
                    .seq()
                    .obj(
                      this.key('kde')
                        .seq()
                        .obj(
                          this.key('id').objid(),
                          this.key('kdeparams')
                            .seq()
                            .obj(
                              this.key('salt').octstr(),
                              this.key('iters').int()
                            )
                        ),
                      this.key('cipher')
                        .seq()
                        .obj(this.key('algo').objid(), this.key('iv').octstr())
                    )
                ),
              this.key('subjectPrivateKey').octstr()
            );
          }
        );

        exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo;

        var DSAPrivateKey = asn1.define('DSAPrivateKey', function () {
          this.seq().obj(
            this.key('version').int(),
            this.key('p').int(),
            this.key('q').int(),
            this.key('g').int(),
            this.key('pub_key').int(),
            this.key('priv_key').int()
          );
        });
        exports.DSAPrivateKey = DSAPrivateKey;

        exports.DSAparam = asn1.define('DSAparam', function () {
          this.int();
        });

        var ECPrivateKey = asn1.define('ECPrivateKey', function () {
          this.seq().obj(
            this.key('version').int(),
            this.key('privateKey').octstr(),
            this.key('parameters').optional().explicit(0).use(ECParameters),
            this.key('publicKey').optional().explicit(1).bitstr()
          );
        });
        exports.ECPrivateKey = ECPrivateKey;

        var ECParameters = asn1.define('ECParameters', function () {
          this.choice({
            namedCurve: this.objid(),
          });
        });

        exports.signature = asn1.define('signature', function () {
          this.seq().obj(this.key('r').int(), this.key('s').int());
        });

        /***/
      },

    /***/ '../node_modules/parse-asn1/certificate.js':
      /*!*************************************************!*\
  !*** ../node_modules/parse-asn1/certificate.js ***!
  \*************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        // from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js
        // thanks to @Rantanen

        var asn = __webpack_require__(
          /*! asn1.js */ '../node_modules/asn1.js/lib/asn1.js'
        );

        var Time = asn.define('Time', function () {
          this.choice({
            utcTime: this.utctime(),
            generalTime: this.gentime(),
          });
        });

        var AttributeTypeValue = asn.define('AttributeTypeValue', function () {
          this.seq().obj(this.key('type').objid(), this.key('value').any());
        });

        var AlgorithmIdentifier = asn.define(
          'AlgorithmIdentifier',
          function () {
            this.seq().obj(
              this.key('algorithm').objid(),
              this.key('parameters').optional(),
              this.key('curve').objid().optional()
            );
          }
        );

        var SubjectPublicKeyInfo = asn.define(
          'SubjectPublicKeyInfo',
          function () {
            this.seq().obj(
              this.key('algorithm').use(AlgorithmIdentifier),
              this.key('subjectPublicKey').bitstr()
            );
          }
        );

        var RelativeDistinguishedName = asn.define(
          'RelativeDistinguishedName',
          function () {
            this.setof(AttributeTypeValue);
          }
        );

        var RDNSequence = asn.define('RDNSequence', function () {
          this.seqof(RelativeDistinguishedName);
        });

        var Name = asn.define('Name', function () {
          this.choice({
            rdnSequence: this.use(RDNSequence),
          });
        });

        var Validity = asn.define('Validity', function () {
          this.seq().obj(
            this.key('notBefore').use(Time),
            this.key('notAfter').use(Time)
          );
        });

        var Extension = asn.define('Extension', function () {
          this.seq().obj(
            this.key('extnID').objid(),
            this.key('critical').bool().def(false),
            this.key('extnValue').octstr()
          );
        });

        var TBSCertificate = asn.define('TBSCertificate', function () {
          this.seq().obj(
            this.key('version').explicit(0).int().optional(),
            this.key('serialNumber').int(),
            this.key('signature').use(AlgorithmIdentifier),
            this.key('issuer').use(Name),
            this.key('validity').use(Validity),
            this.key('subject').use(Name),
            this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),
            this.key('issuerUniqueID').implicit(1).bitstr().optional(),
            this.key('subjectUniqueID').implicit(2).bitstr().optional(),
            this.key('extensions').explicit(3).seqof(Extension).optional()
          );
        });

        var X509Certificate = asn.define('X509Certificate', function () {
          this.seq().obj(
            this.key('tbsCertificate').use(TBSCertificate),
            this.key('signatureAlgorithm').use(AlgorithmIdentifier),
            this.key('signatureValue').bitstr()
          );
        });

        module.exports = X509Certificate;

        /***/
      },

    /***/ '../node_modules/parse-asn1/fixProc.js':
      /*!*********************************************!*\
  !*** ../node_modules/parse-asn1/fixProc.js ***!
  \*********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        // adapted from https://github.com/apatil/pemstrip
        var findProc = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r\+\/\=]+)[\n\r]+/m;
        var startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m;
        var fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r\+\/\=]+)-----END \1-----$/m;
        var evp = __webpack_require__(
          /*! evp_bytestokey */ '../node_modules/evp_bytestokey/index.js'
        );
        var ciphers = __webpack_require__(
          /*! browserify-aes */ '../node_modules/browserify-aes/browser.js'
        );
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;
        module.exports = function (okey, password) {
          var key = okey.toString();
          var match = key.match(findProc);
          var decrypted;
          if (!match) {
            var match2 = key.match(fullRegex);
            decrypted = new Buffer(match2[2].replace(/[\r\n]/g, ''), 'base64');
          } else {
            var suite = 'aes' + match[1];
            var iv = Buffer.from(match[2], 'hex');
            var cipherText = Buffer.from(
              match[3].replace(/[\r\n]/g, ''),
              'base64'
            );
            var cipherKey = evp(
              password,
              iv.slice(0, 8),
              parseInt(match[1], 10)
            ).key;
            var out = [];
            var cipher = ciphers.createDecipheriv(suite, cipherKey, iv);
            out.push(cipher.update(cipherText));
            out.push(cipher.final());
            decrypted = Buffer.concat(out);
          }
          var tag = key.match(startRegex)[1];
          return {
            tag: tag,
            data: decrypted,
          };
        };

        /***/
      },

    /***/ '../node_modules/parse-asn1/index.js':
      /*!*******************************************!*\
  !*** ../node_modules/parse-asn1/index.js ***!
  \*******************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var asn1 = __webpack_require__(
          /*! ./asn1 */ '../node_modules/parse-asn1/asn1.js'
        );
        var aesid = __webpack_require__(
          /*! ./aesid.json */ '../node_modules/parse-asn1/aesid.json'
        );
        var fixProc = __webpack_require__(
          /*! ./fixProc */ '../node_modules/parse-asn1/fixProc.js'
        );
        var ciphers = __webpack_require__(
          /*! browserify-aes */ '../node_modules/browserify-aes/browser.js'
        );
        var compat = __webpack_require__(
          /*! pbkdf2 */ '../node_modules/pbkdf2/browser.js'
        );
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;
        module.exports = parseKeys;

        function parseKeys(buffer) {
          var password;
          if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {
            password = buffer.passphrase;
            buffer = buffer.key;
          }
          if (typeof buffer === 'string') {
            buffer = Buffer.from(buffer);
          }

          var stripped = fixProc(buffer, password);

          var type = stripped.tag;
          var data = stripped.data;
          var subtype, ndata;
          switch (type) {
            case 'CERTIFICATE':
              ndata = asn1.certificate.decode(data, 'der').tbsCertificate
                .subjectPublicKeyInfo;
            // falls through
            case 'PUBLIC KEY':
              if (!ndata) {
                ndata = asn1.PublicKey.decode(data, 'der');
              }
              subtype = ndata.algorithm.algorithm.join('.');
              switch (subtype) {
                case '1.2.840.113549.1.1.1':
                  return asn1.RSAPublicKey.decode(
                    ndata.subjectPublicKey.data,
                    'der'
                  );
                case '1.2.840.10045.2.1':
                  ndata.subjectPrivateKey = ndata.subjectPublicKey;
                  return {
                    type: 'ec',
                    data: ndata,
                  };
                case '1.2.840.10040.4.1':
                  ndata.algorithm.params.pub_key = asn1.DSAparam.decode(
                    ndata.subjectPublicKey.data,
                    'der'
                  );
                  return {
                    type: 'dsa',
                    data: ndata.algorithm.params,
                  };
                default:
                  throw new Error('unknown key id ' + subtype);
              }
              throw new Error('unknown key type ' + type);
            case 'ENCRYPTED PRIVATE KEY':
              data = asn1.EncryptedPrivateKey.decode(data, 'der');
              data = decrypt(data, password);
            // falls through
            case 'PRIVATE KEY':
              ndata = asn1.PrivateKey.decode(data, 'der');
              subtype = ndata.algorithm.algorithm.join('.');
              switch (subtype) {
                case '1.2.840.113549.1.1.1':
                  return asn1.RSAPrivateKey.decode(
                    ndata.subjectPrivateKey,
                    'der'
                  );
                case '1.2.840.10045.2.1':
                  return {
                    curve: ndata.algorithm.curve,
                    privateKey: asn1.ECPrivateKey.decode(
                      ndata.subjectPrivateKey,
                      'der'
                    ).privateKey,
                  };
                case '1.2.840.10040.4.1':
                  ndata.algorithm.params.priv_key = asn1.DSAparam.decode(
                    ndata.subjectPrivateKey,
                    'der'
                  );
                  return {
                    type: 'dsa',
                    params: ndata.algorithm.params,
                  };
                default:
                  throw new Error('unknown key id ' + subtype);
              }
              throw new Error('unknown key type ' + type);
            case 'RSA PUBLIC KEY':
              return asn1.RSAPublicKey.decode(data, 'der');
            case 'RSA PRIVATE KEY':
              return asn1.RSAPrivateKey.decode(data, 'der');
            case 'DSA PRIVATE KEY':
              return {
                type: 'dsa',
                params: asn1.DSAPrivateKey.decode(data, 'der'),
              };
            case 'EC PRIVATE KEY':
              data = asn1.ECPrivateKey.decode(data, 'der');
              return {
                curve: data.parameters.value,
                privateKey: data.privateKey,
              };
            default:
              throw new Error('unknown key type ' + type);
          }
        }
        parseKeys.signature = asn1.signature;
        function decrypt(data, password) {
          var salt = data.algorithm.decrypt.kde.kdeparams.salt;
          var iters = parseInt(
            data.algorithm.decrypt.kde.kdeparams.iters.toString(),
            10
          );
          var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')];
          var iv = data.algorithm.decrypt.cipher.iv;
          var cipherText = data.subjectPrivateKey;
          var keylen = parseInt(algo.split('-')[1], 10) / 8;
          var key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1');
          var cipher = ciphers.createDecipheriv(algo, key, iv);
          var out = [];
          out.push(cipher.update(cipherText));
          out.push(cipher.final());
          return Buffer.concat(out);
        }

        /***/
      },

    /***/ '../node_modules/pbkdf2/browser.js':
      /*!*****************************************!*\
  !*** ../node_modules/pbkdf2/browser.js ***!
  \*****************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        exports.pbkdf2 = __webpack_require__(
          /*! ./lib/async */ '../node_modules/pbkdf2/lib/async.js'
        );
        exports.pbkdf2Sync = __webpack_require__(
          /*! ./lib/sync */ '../node_modules/pbkdf2/lib/sync-browser.js'
        );

        /***/
      },

    /***/ '../node_modules/pbkdf2/lib/async.js':
      /*!*******************************************!*\
  !*** ../node_modules/pbkdf2/lib/async.js ***!
  \*******************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function (global, process) {
          var Buffer = __webpack_require__(
            /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
          ).Buffer;

          var checkParameters = __webpack_require__(
            /*! ./precondition */ '../node_modules/pbkdf2/lib/precondition.js'
          );
          var defaultEncoding = __webpack_require__(
            /*! ./default-encoding */ '../node_modules/pbkdf2/lib/default-encoding.js'
          );
          var sync = __webpack_require__(
            /*! ./sync */ '../node_modules/pbkdf2/lib/sync-browser.js'
          );
          var toBuffer = __webpack_require__(
            /*! ./to-buffer */ '../node_modules/pbkdf2/lib/to-buffer.js'
          );

          var ZERO_BUF;
          var subtle = global.crypto && global.crypto.subtle;
          var toBrowser = {
            sha: 'SHA-1',
            'sha-1': 'SHA-1',
            sha1: 'SHA-1',
            sha256: 'SHA-256',
            'sha-256': 'SHA-256',
            sha384: 'SHA-384',
            'sha-384': 'SHA-384',
            'sha-512': 'SHA-512',
            sha512: 'SHA-512',
          };
          var checks = [];
          function checkNative(algo) {
            if (global.process && !global.process.browser) {
              return Promise.resolve(false);
            }
            if (!subtle || !subtle.importKey || !subtle.deriveBits) {
              return Promise.resolve(false);
            }
            if (checks[algo] !== undefined) {
              return checks[algo];
            }
            ZERO_BUF = ZERO_BUF || Buffer.alloc(8);
            var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)
              .then(function () {
                return true;
              })
              .catch(function () {
                return false;
              });
            checks[algo] = prom;
            return prom;
          }

          function browserPbkdf2(password, salt, iterations, length, algo) {
            return subtle
              .importKey('raw', password, { name: 'PBKDF2' }, false, [
                'deriveBits',
              ])
              .then(function (key) {
                return subtle.deriveBits(
                  {
                    name: 'PBKDF2',
                    salt: salt,
                    iterations: iterations,
                    hash: {
                      name: algo,
                    },
                  },
                  key,
                  length << 3
                );
              })
              .then(function (res) {
                return Buffer.from(res);
              });
          }

          function resolvePromise(promise, callback) {
            promise.then(
              function (out) {
                process.nextTick(function () {
                  callback(null, out);
                });
              },
              function (e) {
                process.nextTick(function () {
                  callback(e);
                });
              }
            );
          }
          module.exports = function (
            password,
            salt,
            iterations,
            keylen,
            digest,
            callback
          ) {
            if (typeof digest === 'function') {
              callback = digest;
              digest = undefined;
            }

            digest = digest || 'sha1';
            var algo = toBrowser[digest.toLowerCase()];

            if (!algo || typeof global.Promise !== 'function') {
              return process.nextTick(function () {
                var out;
                try {
                  out = sync(password, salt, iterations, keylen, digest);
                } catch (e) {
                  return callback(e);
                }
                callback(null, out);
              });
            }

            checkParameters(iterations, keylen);
            password = toBuffer(password, defaultEncoding, 'Password');
            salt = toBuffer(salt, defaultEncoding, 'Salt');
            if (typeof callback !== 'function')
              throw new Error('No callback provided to pbkdf2');

            resolvePromise(
              checkNative(algo).then(function (resp) {
                if (resp)
                  return browserPbkdf2(
                    password,
                    salt,
                    iterations,
                    keylen,
                    algo
                  );

                return sync(password, salt, iterations, keylen, digest);
              }),
              callback
            );
          };

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../webpack/buildin/global.js */ '../node_modules/webpack/buildin/global.js'
          ),
          __webpack_require__(
            /*! ./../../process/browser.js */ '../node_modules/process/browser.js'
          )
        ));

        /***/
      },

    /***/ '../node_modules/pbkdf2/lib/default-encoding.js':
      /*!******************************************************!*\
  !*** ../node_modules/pbkdf2/lib/default-encoding.js ***!
  \******************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function (process) {
          var defaultEncoding;
          /* istanbul ignore next */
          if (process.browser) {
            defaultEncoding = 'utf-8';
          } else if (process.version) {
            var pVersionMajor = parseInt(
              process.version.split('.')[0].slice(1),
              10
            );

            defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary';
          } else {
            defaultEncoding = 'utf-8';
          }
          module.exports = defaultEncoding;

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../process/browser.js */ '../node_modules/process/browser.js'
          )
        ));

        /***/
      },

    /***/ '../node_modules/pbkdf2/lib/precondition.js':
      /*!**************************************************!*\
  !*** ../node_modules/pbkdf2/lib/precondition.js ***!
  \**************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        var MAX_ALLOC = Math.pow(2, 30) - 1; // default in iojs

        module.exports = function (iterations, keylen) {
          if (typeof iterations !== 'number') {
            throw new TypeError('Iterations not a number');
          }

          if (iterations < 0) {
            throw new TypeError('Bad iterations');
          }

          if (typeof keylen !== 'number') {
            throw new TypeError('Key length not a number');
          }

          if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) {
            /* eslint no-self-compare: 0 */
            throw new TypeError('Bad key length');
          }
        };

        /***/
      },

    /***/ '../node_modules/pbkdf2/lib/sync-browser.js':
      /*!**************************************************!*\
  !*** ../node_modules/pbkdf2/lib/sync-browser.js ***!
  \**************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var md5 = __webpack_require__(
          /*! create-hash/md5 */ '../node_modules/create-hash/md5.js'
        );
        var RIPEMD160 = __webpack_require__(
          /*! ripemd160 */ '../node_modules/ripemd160/index.js'
        );
        var sha = __webpack_require__(
          /*! sha.js */ '../node_modules/sha.js/index.js'
        );
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;

        var checkParameters = __webpack_require__(
          /*! ./precondition */ '../node_modules/pbkdf2/lib/precondition.js'
        );
        var defaultEncoding = __webpack_require__(
          /*! ./default-encoding */ '../node_modules/pbkdf2/lib/default-encoding.js'
        );
        var toBuffer = __webpack_require__(
          /*! ./to-buffer */ '../node_modules/pbkdf2/lib/to-buffer.js'
        );

        var ZEROS = Buffer.alloc(128);
        var sizes = {
          md5: 16,
          sha1: 20,
          sha224: 28,
          sha256: 32,
          sha384: 48,
          sha512: 64,
          rmd160: 20,
          ripemd160: 20,
        };

        function Hmac(alg, key, saltLen) {
          var hash = getDigest(alg);
          var blocksize = alg === 'sha512' || alg === 'sha384' ? 128 : 64;

          if (key.length > blocksize) {
            key = hash(key);
          } else if (key.length < blocksize) {
            key = Buffer.concat([key, ZEROS], blocksize);
          }

          var ipad = Buffer.allocUnsafe(blocksize + sizes[alg]);
          var opad = Buffer.allocUnsafe(blocksize + sizes[alg]);
          for (var i = 0; i < blocksize; i++) {
            ipad[i] = key[i] ^ 0x36;
            opad[i] = key[i] ^ 0x5c;
          }

          var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4);
          ipad.copy(ipad1, 0, 0, blocksize);
          this.ipad1 = ipad1;
          this.ipad2 = ipad;
          this.opad = opad;
          this.alg = alg;
          this.blocksize = blocksize;
          this.hash = hash;
          this.size = sizes[alg];
        }

        Hmac.prototype.run = function (data, ipad) {
          data.copy(ipad, this.blocksize);
          var h = this.hash(ipad);
          h.copy(this.opad, this.blocksize);
          return this.hash(this.opad);
        };

        function getDigest(alg) {
          function shaFunc(data) {
            return sha(alg).update(data).digest();
          }
          function rmd160Func(data) {
            return new RIPEMD160().update(data).digest();
          }

          if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func;
          if (alg === 'md5') return md5;
          return shaFunc;
        }

        function pbkdf2(password, salt, iterations, keylen, digest) {
          checkParameters(iterations, keylen);
          password = toBuffer(password, defaultEncoding, 'Password');
          salt = toBuffer(salt, defaultEncoding, 'Salt');

          digest = digest || 'sha1';

          var hmac = new Hmac(digest, password, salt.length);

          var DK = Buffer.allocUnsafe(keylen);
          var block1 = Buffer.allocUnsafe(salt.length + 4);
          salt.copy(block1, 0, 0, salt.length);

          var destPos = 0;
          var hLen = sizes[digest];
          var l = Math.ceil(keylen / hLen);

          for (var i = 1; i <= l; i++) {
            block1.writeUInt32BE(i, salt.length);

            var T = hmac.run(block1, hmac.ipad1);
            var U = T;

            for (var j = 1; j < iterations; j++) {
              U = hmac.run(U, hmac.ipad2);
              for (var k = 0; k < hLen; k++) T[k] ^= U[k];
            }

            T.copy(DK, destPos);
            destPos += hLen;
          }

          return DK;
        }

        module.exports = pbkdf2;

        /***/
      },

    /***/ '../node_modules/pbkdf2/lib/to-buffer.js':
      /*!***********************************************!*\
  !*** ../node_modules/pbkdf2/lib/to-buffer.js ***!
  \***********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;

        module.exports = function (thing, encoding, name) {
          if (Buffer.isBuffer(thing)) {
            return thing;
          } else if (typeof thing === 'string') {
            return Buffer.from(thing, encoding);
          } else if (ArrayBuffer.isView(thing)) {
            return Buffer.from(thing.buffer);
          } else {
            throw new TypeError(
              name + ' must be a string, a Buffer, a typed array or a DataView'
            );
          }
        };

        /***/
      },

    /***/ '../node_modules/process-nextick-args/index.js':
      /*!*****************************************************!*\
  !*** ../node_modules/process-nextick-args/index.js ***!
  \*****************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (process) {
          if (
            typeof process === 'undefined' ||
            !process.version ||
            process.version.indexOf('v0.') === 0 ||
            (process.version.indexOf('v1.') === 0 &&
              process.version.indexOf('v1.8.') !== 0)
          ) {
            module.exports = { nextTick: nextTick };
          } else {
            module.exports = process;
          }

          function nextTick(fn, arg1, arg2, arg3) {
            if (typeof fn !== 'function') {
              throw new TypeError('"callback" argument must be a function');
            }
            var len = arguments.length;
            var args, i;
            switch (len) {
              case 0:
              case 1:
                return process.nextTick(fn);
              case 2:
                return process.nextTick(function afterTickOne() {
                  fn.call(null, arg1);
                });
              case 3:
                return process.nextTick(function afterTickTwo() {
                  fn.call(null, arg1, arg2);
                });
              case 4:
                return process.nextTick(function afterTickThree() {
                  fn.call(null, arg1, arg2, arg3);
                });
              default:
                args = new Array(len - 1);
                i = 0;
                while (i < args.length) {
                  args[i++] = arguments[i];
                }
                return process.nextTick(function afterTick() {
                  fn.apply(null, args);
                });
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../process/browser.js */ '../node_modules/process/browser.js'
          )
        ));

        /***/
      },

    /***/ '../node_modules/process/browser.js':
      /*!******************************************!*\
  !*** ../node_modules/process/browser.js ***!
  \******************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        // shim for using process in browser
        var process = (module.exports = {});

        // cached from whatever global is present so that test runners that stub it
        // don't break things.  But we need to wrap it in a try catch in case it is
        // wrapped in strict mode code which doesn't define any globals.  It's inside a
        // function because try/catches deoptimize in certain engines.

        var cachedSetTimeout;
        var cachedClearTimeout;

        function defaultSetTimout() {
          throw new Error('setTimeout has not been defined');
        }
        function defaultClearTimeout() {
          throw new Error('clearTimeout has not been defined');
        }
        (function () {
          try {
            if (typeof setTimeout === 'function') {
              cachedSetTimeout = setTimeout;
            } else {
              cachedSetTimeout = defaultSetTimout;
            }
          } catch (e) {
            cachedSetTimeout = defaultSetTimout;
          }
          try {
            if (typeof clearTimeout === 'function') {
              cachedClearTimeout = clearTimeout;
            } else {
              cachedClearTimeout = defaultClearTimeout;
            }
          } catch (e) {
            cachedClearTimeout = defaultClearTimeout;
          }
        })();
        function runTimeout(fun) {
          if (cachedSetTimeout === setTimeout) {
            //normal enviroments in sane situations
            return setTimeout(fun, 0);
          }
          // if setTimeout wasn't available but was latter defined
          if (
            (cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) &&
            setTimeout
          ) {
            cachedSetTimeout = setTimeout;
            return setTimeout(fun, 0);
          }
          try {
            // when when somebody has screwed with setTimeout but no I.E. maddness
            return cachedSetTimeout(fun, 0);
          } catch (e) {
            try {
              // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
              return cachedSetTimeout.call(null, fun, 0);
            } catch (e) {
              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
              return cachedSetTimeout.call(this, fun, 0);
            }
          }
        }
        function runClearTimeout(marker) {
          if (cachedClearTimeout === clearTimeout) {
            //normal enviroments in sane situations
            return clearTimeout(marker);
          }
          // if clearTimeout wasn't available but was latter defined
          if (
            (cachedClearTimeout === defaultClearTimeout ||
              !cachedClearTimeout) &&
            clearTimeout
          ) {
            cachedClearTimeout = clearTimeout;
            return clearTimeout(marker);
          }
          try {
            // when when somebody has screwed with setTimeout but no I.E. maddness
            return cachedClearTimeout(marker);
          } catch (e) {
            try {
              // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
              return cachedClearTimeout.call(null, marker);
            } catch (e) {
              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
              // Some versions of I.E. have different rules for clearTimeout vs setTimeout
              return cachedClearTimeout.call(this, marker);
            }
          }
        }
        var queue = [];
        var draining = false;
        var currentQueue;
        var queueIndex = -1;

        function cleanUpNextTick() {
          if (!draining || !currentQueue) {
            return;
          }
          draining = false;
          if (currentQueue.length) {
            queue = currentQueue.concat(queue);
          } else {
            queueIndex = -1;
          }
          if (queue.length) {
            drainQueue();
          }
        }

        function drainQueue() {
          if (draining) {
            return;
          }
          var timeout = runTimeout(cleanUpNextTick);
          draining = true;

          var len = queue.length;
          while (len) {
            currentQueue = queue;
            queue = [];
            while (++queueIndex < len) {
              if (currentQueue) {
                currentQueue[queueIndex].run();
              }
            }
            queueIndex = -1;
            len = queue.length;
          }
          currentQueue = null;
          draining = false;
          runClearTimeout(timeout);
        }

        process.nextTick = function (fun) {
          var args = new Array(arguments.length - 1);
          if (arguments.length > 1) {
            for (var i = 1; i < arguments.length; i++) {
              args[i - 1] = arguments[i];
            }
          }
          queue.push(new Item(fun, args));
          if (queue.length === 1 && !draining) {
            runTimeout(drainQueue);
          }
        };

        // v8 likes predictible objects
        function Item(fun, array) {
          this.fun = fun;
          this.array = array;
        }
        Item.prototype.run = function () {
          this.fun.apply(null, this.array);
        };
        process.title = 'browser';
        process.browser = true;
        process.env = {};
        process.argv = [];
        process.version = ''; // empty string to avoid regexp issues
        process.versions = {};

        function noop() {}

        process.on = noop;
        process.addListener = noop;
        process.once = noop;
        process.off = noop;
        process.removeListener = noop;
        process.removeAllListeners = noop;
        process.emit = noop;
        process.prependListener = noop;
        process.prependOnceListener = noop;

        process.listeners = function (name) {
          return [];
        };

        process.binding = function (name) {
          throw new Error('process.binding is not supported');
        };

        process.cwd = function () {
          return '/';
        };
        process.chdir = function (dir) {
          throw new Error('process.chdir is not supported');
        };
        process.umask = function () {
          return 0;
        };

        /***/
      },

    /***/ '../node_modules/public-encrypt/browser.js':
      /*!*************************************************!*\
  !*** ../node_modules/public-encrypt/browser.js ***!
  \*************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        exports.publicEncrypt = __webpack_require__(
          /*! ./publicEncrypt */ '../node_modules/public-encrypt/publicEncrypt.js'
        );
        exports.privateDecrypt = __webpack_require__(
          /*! ./privateDecrypt */ '../node_modules/public-encrypt/privateDecrypt.js'
        );

        exports.privateEncrypt = function privateEncrypt(key, buf) {
          return exports.publicEncrypt(key, buf, true);
        };

        exports.publicDecrypt = function publicDecrypt(key, buf) {
          return exports.privateDecrypt(key, buf, true);
        };

        /***/
      },

    /***/ '../node_modules/public-encrypt/mgf.js':
      /*!*********************************************!*\
  !*** ../node_modules/public-encrypt/mgf.js ***!
  \*********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var createHash = __webpack_require__(
          /*! create-hash */ '../node_modules/create-hash/browser.js'
        );
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;

        module.exports = function (seed, len) {
          var t = Buffer.alloc(0);
          var i = 0;
          var c;
          while (t.length < len) {
            c = i2ops(i++);
            t = Buffer.concat([
              t,
              createHash('sha1').update(seed).update(c).digest(),
            ]);
          }
          return t.slice(0, len);
        };

        function i2ops(c) {
          var out = Buffer.allocUnsafe(4);
          out.writeUInt32BE(c, 0);
          return out;
        }

        /***/
      },

    /***/ '../node_modules/public-encrypt/node_modules/bn.js/lib/bn.js':
      /*!*******************************************************************!*\
  !*** ../node_modules/public-encrypt/node_modules/bn.js/lib/bn.js ***!
  \*******************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function (module) {
          (function (module, exports) {
            'use strict';

            // Utils
            function assert(val, msg) {
              if (!val) throw new Error(msg || 'Assertion failed');
            }

            // Could use `inherits` module, but don't want to move from single file
            // architecture yet.
            function inherits(ctor, superCtor) {
              ctor.super_ = superCtor;
              var TempCtor = function () {};
              TempCtor.prototype = superCtor.prototype;
              ctor.prototype = new TempCtor();
              ctor.prototype.constructor = ctor;
            }

            // BN

            function BN(number, base, endian) {
              if (BN.isBN(number)) {
                return number;
              }

              this.negative = 0;
              this.words = null;
              this.length = 0;

              // Reduction context
              this.red = null;

              if (number !== null) {
                if (base === 'le' || base === 'be') {
                  endian = base;
                  base = 10;
                }

                this._init(number || 0, base || 10, endian || 'be');
              }
            }
            if (typeof module === 'object') {
              module.exports = BN;
            } else {
              exports.BN = BN;
            }

            BN.BN = BN;
            BN.wordSize = 26;

            var Buffer;
            try {
              Buffer = __webpack_require__(/*! buffer */ 15).Buffer;
            } catch (e) {}

            BN.isBN = function isBN(num) {
              if (num instanceof BN) {
                return true;
              }

              return (
                num !== null &&
                typeof num === 'object' &&
                num.constructor.wordSize === BN.wordSize &&
                Array.isArray(num.words)
              );
            };

            BN.max = function max(left, right) {
              if (left.cmp(right) > 0) return left;
              return right;
            };

            BN.min = function min(left, right) {
              if (left.cmp(right) < 0) return left;
              return right;
            };

            BN.prototype._init = function init(number, base, endian) {
              if (typeof number === 'number') {
                return this._initNumber(number, base, endian);
              }

              if (typeof number === 'object') {
                return this._initArray(number, base, endian);
              }

              if (base === 'hex') {
                base = 16;
              }
              assert(base === (base | 0) && base >= 2 && base <= 36);

              number = number.toString().replace(/\s+/g, '');
              var start = 0;
              if (number[0] === '-') {
                start++;
              }

              if (base === 16) {
                this._parseHex(number, start);
              } else {
                this._parseBase(number, base, start);
              }

              if (number[0] === '-') {
                this.negative = 1;
              }

              this.strip();

              if (endian !== 'le') return;

              this._initArray(this.toArray(), base, endian);
            };

            BN.prototype._initNumber = function _initNumber(
              number,
              base,
              endian
            ) {
              if (number < 0) {
                this.negative = 1;
                number = -number;
              }
              if (number < 0x4000000) {
                this.words = [number & 0x3ffffff];
                this.length = 1;
              } else if (number < 0x10000000000000) {
                this.words = [
                  number & 0x3ffffff,
                  (number / 0x4000000) & 0x3ffffff,
                ];
                this.length = 2;
              } else {
                assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
                this.words = [
                  number & 0x3ffffff,
                  (number / 0x4000000) & 0x3ffffff,
                  1,
                ];
                this.length = 3;
              }

              if (endian !== 'le') return;

              // Reverse the bytes
              this._initArray(this.toArray(), base, endian);
            };

            BN.prototype._initArray = function _initArray(
              number,
              base,
              endian
            ) {
              // Perhaps a Uint8Array
              assert(typeof number.length === 'number');
              if (number.length <= 0) {
                this.words = [0];
                this.length = 1;
                return this;
              }

              this.length = Math.ceil(number.length / 3);
              this.words = new Array(this.length);
              for (var i = 0; i < this.length; i++) {
                this.words[i] = 0;
              }

              var j, w;
              var off = 0;
              if (endian === 'be') {
                for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
                  w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
                  this.words[j] |= (w << off) & 0x3ffffff;
                  this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
                  off += 24;
                  if (off >= 26) {
                    off -= 26;
                    j++;
                  }
                }
              } else if (endian === 'le') {
                for (i = 0, j = 0; i < number.length; i += 3) {
                  w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
                  this.words[j] |= (w << off) & 0x3ffffff;
                  this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
                  off += 24;
                  if (off >= 26) {
                    off -= 26;
                    j++;
                  }
                }
              }
              return this.strip();
            };

            function parseHex(str, start, end) {
              var r = 0;
              var len = Math.min(str.length, end);
              for (var i = start; i < len; i++) {
                var c = str.charCodeAt(i) - 48;

                r <<= 4;

                // 'a' - 'f'
                if (c >= 49 && c <= 54) {
                  r |= c - 49 + 0xa;

                  // 'A' - 'F'
                } else if (c >= 17 && c <= 22) {
                  r |= c - 17 + 0xa;

                  // '0' - '9'
                } else {
                  r |= c & 0xf;
                }
              }
              return r;
            }

            BN.prototype._parseHex = function _parseHex(number, start) {
              // Create possibly bigger array to ensure that it fits the number
              this.length = Math.ceil((number.length - start) / 6);
              this.words = new Array(this.length);
              for (var i = 0; i < this.length; i++) {
                this.words[i] = 0;
              }

              var j, w;
              // Scan 24-bit chunks and add them to the number
              var off = 0;
              for (i = number.length - 6, j = 0; i >= start; i -= 6) {
                w = parseHex(number, i, i + 6);
                this.words[j] |= (w << off) & 0x3ffffff;
                // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
                this.words[j + 1] |= (w >>> (26 - off)) & 0x3fffff;
                off += 24;
                if (off >= 26) {
                  off -= 26;
                  j++;
                }
              }
              if (i + 6 !== start) {
                w = parseHex(number, start, i + 6);
                this.words[j] |= (w << off) & 0x3ffffff;
                this.words[j + 1] |= (w >>> (26 - off)) & 0x3fffff;
              }
              this.strip();
            };

            function parseBase(str, start, end, mul) {
              var r = 0;
              var len = Math.min(str.length, end);
              for (var i = start; i < len; i++) {
                var c = str.charCodeAt(i) - 48;

                r *= mul;

                // 'a'
                if (c >= 49) {
                  r += c - 49 + 0xa;

                  // 'A'
                } else if (c >= 17) {
                  r += c - 17 + 0xa;

                  // '0' - '9'
                } else {
                  r += c;
                }
              }
              return r;
            }

            BN.prototype._parseBase = function _parseBase(number, base, start) {
              // Initialize as zero
              this.words = [0];
              this.length = 1;

              // Find length of limb in base
              for (
                var limbLen = 0, limbPow = 1;
                limbPow <= 0x3ffffff;
                limbPow *= base
              ) {
                limbLen++;
              }
              limbLen--;
              limbPow = (limbPow / base) | 0;

              var total = number.length - start;
              var mod = total % limbLen;
              var end = Math.min(total, total - mod) + start;

              var word = 0;
              for (var i = start; i < end; i += limbLen) {
                word = parseBase(number, i, i + limbLen, base);

                this.imuln(limbPow);
                if (this.words[0] + word < 0x4000000) {
                  this.words[0] += word;
                } else {
                  this._iaddn(word);
                }
              }

              if (mod !== 0) {
                var pow = 1;
                word = parseBase(number, i, number.length, base);

                for (i = 0; i < mod; i++) {
                  pow *= base;
                }

                this.imuln(pow);
                if (this.words[0] + word < 0x4000000) {
                  this.words[0] += word;
                } else {
                  this._iaddn(word);
                }
              }
            };

            BN.prototype.copy = function copy(dest) {
              dest.words = new Array(this.length);
              for (var i = 0; i < this.length; i++) {
                dest.words[i] = this.words[i];
              }
              dest.length = this.length;
              dest.negative = this.negative;
              dest.red = this.red;
            };

            BN.prototype.clone = function clone() {
              var r = new BN(null);
              this.copy(r);
              return r;
            };

            BN.prototype._expand = function _expand(size) {
              while (this.length < size) {
                this.words[this.length++] = 0;
              }
              return this;
            };

            // Remove leading `0` from `this`
            BN.prototype.strip = function strip() {
              while (this.length > 1 && this.words[this.length - 1] === 0) {
                this.length--;
              }
              return this._normSign();
            };

            BN.prototype._normSign = function _normSign() {
              // -0 = 0
              if (this.length === 1 && this.words[0] === 0) {
                this.negative = 0;
              }
              return this;
            };

            BN.prototype.inspect = function inspect() {
              return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
            };

            /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

            var zeros = [
              '',
              '0',
              '00',
              '000',
              '0000',
              '00000',
              '000000',
              '0000000',
              '00000000',
              '000000000',
              '0000000000',
              '00000000000',
              '000000000000',
              '0000000000000',
              '00000000000000',
              '000000000000000',
              '0000000000000000',
              '00000000000000000',
              '000000000000000000',
              '0000000000000000000',
              '00000000000000000000',
              '000000000000000000000',
              '0000000000000000000000',
              '00000000000000000000000',
              '000000000000000000000000',
              '0000000000000000000000000',
            ];

            var groupSizes = [
              0,
              0,
              25,
              16,
              12,
              11,
              10,
              9,
              8,
              8,
              7,
              7,
              7,
              7,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
            ];

            var groupBases = [
              0,
              0,
              33554432,
              43046721,
              16777216,
              48828125,
              60466176,
              40353607,
              16777216,
              43046721,
              10000000,
              19487171,
              35831808,
              62748517,
              7529536,
              11390625,
              16777216,
              24137569,
              34012224,
              47045881,
              64000000,
              4084101,
              5153632,
              6436343,
              7962624,
              9765625,
              11881376,
              14348907,
              17210368,
              20511149,
              24300000,
              28629151,
              33554432,
              39135393,
              45435424,
              52521875,
              60466176,
            ];

            BN.prototype.toString = function toString(base, padding) {
              base = base || 10;
              padding = padding | 0 || 1;

              var out;
              if (base === 16 || base === 'hex') {
                out = '';
                var off = 0;
                var carry = 0;
                for (var i = 0; i < this.length; i++) {
                  var w = this.words[i];
                  var word = (((w << off) | carry) & 0xffffff).toString(16);
                  carry = (w >>> (24 - off)) & 0xffffff;
                  if (carry !== 0 || i !== this.length - 1) {
                    out = zeros[6 - word.length] + word + out;
                  } else {
                    out = word + out;
                  }
                  off += 2;
                  if (off >= 26) {
                    off -= 26;
                    i--;
                  }
                }
                if (carry !== 0) {
                  out = carry.toString(16) + out;
                }
                while (out.length % padding !== 0) {
                  out = '0' + out;
                }
                if (this.negative !== 0) {
                  out = '-' + out;
                }
                return out;
              }

              if (base === (base | 0) && base >= 2 && base <= 36) {
                // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
                var groupSize = groupSizes[base];
                // var groupBase = Math.pow(base, groupSize);
                var groupBase = groupBases[base];
                out = '';
                var c = this.clone();
                c.negative = 0;
                while (!c.isZero()) {
                  var r = c.modn(groupBase).toString(base);
                  c = c.idivn(groupBase);

                  if (!c.isZero()) {
                    out = zeros[groupSize - r.length] + r + out;
                  } else {
                    out = r + out;
                  }
                }
                if (this.isZero()) {
                  out = '0' + out;
                }
                while (out.length % padding !== 0) {
                  out = '0' + out;
                }
                if (this.negative !== 0) {
                  out = '-' + out;
                }
                return out;
              }

              assert(false, 'Base should be between 2 and 36');
            };

            BN.prototype.toNumber = function toNumber() {
              var ret = this.words[0];
              if (this.length === 2) {
                ret += this.words[1] * 0x4000000;
              } else if (this.length === 3 && this.words[2] === 0x01) {
                // NOTE: at this stage it is known that the top bit is set
                ret += 0x10000000000000 + this.words[1] * 0x4000000;
              } else if (this.length > 2) {
                assert(false, 'Number can only safely store up to 53 bits');
              }
              return this.negative !== 0 ? -ret : ret;
            };

            BN.prototype.toJSON = function toJSON() {
              return this.toString(16);
            };

            BN.prototype.toBuffer = function toBuffer(endian, length) {
              assert(typeof Buffer !== 'undefined');
              return this.toArrayLike(Buffer, endian, length);
            };

            BN.prototype.toArray = function toArray(endian, length) {
              return this.toArrayLike(Array, endian, length);
            };

            BN.prototype.toArrayLike = function toArrayLike(
              ArrayType,
              endian,
              length
            ) {
              var byteLength = this.byteLength();
              var reqLength = length || Math.max(1, byteLength);
              assert(
                byteLength <= reqLength,
                'byte array longer than desired length'
              );
              assert(reqLength > 0, 'Requested array length <= 0');

              this.strip();
              var littleEndian = endian === 'le';
              var res = new ArrayType(reqLength);

              var b, i;
              var q = this.clone();
              if (!littleEndian) {
                // Assume big-endian
                for (i = 0; i < reqLength - byteLength; i++) {
                  res[i] = 0;
                }

                for (i = 0; !q.isZero(); i++) {
                  b = q.andln(0xff);
                  q.iushrn(8);

                  res[reqLength - i - 1] = b;
                }
              } else {
                for (i = 0; !q.isZero(); i++) {
                  b = q.andln(0xff);
                  q.iushrn(8);

                  res[i] = b;
                }

                for (; i < reqLength; i++) {
                  res[i] = 0;
                }
              }

              return res;
            };

            if (Math.clz32) {
              BN.prototype._countBits = function _countBits(w) {
                return 32 - Math.clz32(w);
              };
            } else {
              BN.prototype._countBits = function _countBits(w) {
                var t = w;
                var r = 0;
                if (t >= 0x1000) {
                  r += 13;
                  t >>>= 13;
                }
                if (t >= 0x40) {
                  r += 7;
                  t >>>= 7;
                }
                if (t >= 0x8) {
                  r += 4;
                  t >>>= 4;
                }
                if (t >= 0x02) {
                  r += 2;
                  t >>>= 2;
                }
                return r + t;
              };
            }

            BN.prototype._zeroBits = function _zeroBits(w) {
              // Short-cut
              if (w === 0) return 26;

              var t = w;
              var r = 0;
              if ((t & 0x1fff) === 0) {
                r += 13;
                t >>>= 13;
              }
              if ((t & 0x7f) === 0) {
                r += 7;
                t >>>= 7;
              }
              if ((t & 0xf) === 0) {
                r += 4;
                t >>>= 4;
              }
              if ((t & 0x3) === 0) {
                r += 2;
                t >>>= 2;
              }
              if ((t & 0x1) === 0) {
                r++;
              }
              return r;
            };

            // Return number of used bits in a BN
            BN.prototype.bitLength = function bitLength() {
              var w = this.words[this.length - 1];
              var hi = this._countBits(w);
              return (this.length - 1) * 26 + hi;
            };

            function toBitArray(num) {
              var w = new Array(num.bitLength());

              for (var bit = 0; bit < w.length; bit++) {
                var off = (bit / 26) | 0;
                var wbit = bit % 26;

                w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
              }

              return w;
            }

            // Number of trailing zero bits
            BN.prototype.zeroBits = function zeroBits() {
              if (this.isZero()) return 0;

              var r = 0;
              for (var i = 0; i < this.length; i++) {
                var b = this._zeroBits(this.words[i]);
                r += b;
                if (b !== 26) break;
              }
              return r;
            };

            BN.prototype.byteLength = function byteLength() {
              return Math.ceil(this.bitLength() / 8);
            };

            BN.prototype.toTwos = function toTwos(width) {
              if (this.negative !== 0) {
                return this.abs().inotn(width).iaddn(1);
              }
              return this.clone();
            };

            BN.prototype.fromTwos = function fromTwos(width) {
              if (this.testn(width - 1)) {
                return this.notn(width).iaddn(1).ineg();
              }
              return this.clone();
            };

            BN.prototype.isNeg = function isNeg() {
              return this.negative !== 0;
            };

            // Return negative clone of `this`
            BN.prototype.neg = function neg() {
              return this.clone().ineg();
            };

            BN.prototype.ineg = function ineg() {
              if (!this.isZero()) {
                this.negative ^= 1;
              }

              return this;
            };

            // Or `num` with `this` in-place
            BN.prototype.iuor = function iuor(num) {
              while (this.length < num.length) {
                this.words[this.length++] = 0;
              }

              for (var i = 0; i < num.length; i++) {
                this.words[i] = this.words[i] | num.words[i];
              }

              return this.strip();
            };

            BN.prototype.ior = function ior(num) {
              assert((this.negative | num.negative) === 0);
              return this.iuor(num);
            };

            // Or `num` with `this`
            BN.prototype.or = function or(num) {
              if (this.length > num.length) return this.clone().ior(num);
              return num.clone().ior(this);
            };

            BN.prototype.uor = function uor(num) {
              if (this.length > num.length) return this.clone().iuor(num);
              return num.clone().iuor(this);
            };

            // And `num` with `this` in-place
            BN.prototype.iuand = function iuand(num) {
              // b = min-length(num, this)
              var b;
              if (this.length > num.length) {
                b = num;
              } else {
                b = this;
              }

              for (var i = 0; i < b.length; i++) {
                this.words[i] = this.words[i] & num.words[i];
              }

              this.length = b.length;

              return this.strip();
            };

            BN.prototype.iand = function iand(num) {
              assert((this.negative | num.negative) === 0);
              return this.iuand(num);
            };

            // And `num` with `this`
            BN.prototype.and = function and(num) {
              if (this.length > num.length) return this.clone().iand(num);
              return num.clone().iand(this);
            };

            BN.prototype.uand = function uand(num) {
              if (this.length > num.length) return this.clone().iuand(num);
              return num.clone().iuand(this);
            };

            // Xor `num` with `this` in-place
            BN.prototype.iuxor = function iuxor(num) {
              // a.length > b.length
              var a;
              var b;
              if (this.length > num.length) {
                a = this;
                b = num;
              } else {
                a = num;
                b = this;
              }

              for (var i = 0; i < b.length; i++) {
                this.words[i] = a.words[i] ^ b.words[i];
              }

              if (this !== a) {
                for (; i < a.length; i++) {
                  this.words[i] = a.words[i];
                }
              }

              this.length = a.length;

              return this.strip();
            };

            BN.prototype.ixor = function ixor(num) {
              assert((this.negative | num.negative) === 0);
              return this.iuxor(num);
            };

            // Xor `num` with `this`
            BN.prototype.xor = function xor(num) {
              if (this.length > num.length) return this.clone().ixor(num);
              return num.clone().ixor(this);
            };

            BN.prototype.uxor = function uxor(num) {
              if (this.length > num.length) return this.clone().iuxor(num);
              return num.clone().iuxor(this);
            };

            // Not ``this`` with ``width`` bitwidth
            BN.prototype.inotn = function inotn(width) {
              assert(typeof width === 'number' && width >= 0);

              var bytesNeeded = Math.ceil(width / 26) | 0;
              var bitsLeft = width % 26;

              // Extend the buffer with leading zeroes
              this._expand(bytesNeeded);

              if (bitsLeft > 0) {
                bytesNeeded--;
              }

              // Handle complete words
              for (var i = 0; i < bytesNeeded; i++) {
                this.words[i] = ~this.words[i] & 0x3ffffff;
              }

              // Handle the residue
              if (bitsLeft > 0) {
                this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
              }

              // And remove leading zeroes
              return this.strip();
            };

            BN.prototype.notn = function notn(width) {
              return this.clone().inotn(width);
            };

            // Set `bit` of `this`
            BN.prototype.setn = function setn(bit, val) {
              assert(typeof bit === 'number' && bit >= 0);

              var off = (bit / 26) | 0;
              var wbit = bit % 26;

              this._expand(off + 1);

              if (val) {
                this.words[off] = this.words[off] | (1 << wbit);
              } else {
                this.words[off] = this.words[off] & ~(1 << wbit);
              }

              return this.strip();
            };

            // Add `num` to `this` in-place
            BN.prototype.iadd = function iadd(num) {
              var r;

              // negative + positive
              if (this.negative !== 0 && num.negative === 0) {
                this.negative = 0;
                r = this.isub(num);
                this.negative ^= 1;
                return this._normSign();

                // positive + negative
              } else if (this.negative === 0 && num.negative !== 0) {
                num.negative = 0;
                r = this.isub(num);
                num.negative = 1;
                return r._normSign();
              }

              // a.length > b.length
              var a, b;
              if (this.length > num.length) {
                a = this;
                b = num;
              } else {
                a = num;
                b = this;
              }

              var carry = 0;
              for (var i = 0; i < b.length; i++) {
                r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
                this.words[i] = r & 0x3ffffff;
                carry = r >>> 26;
              }
              for (; carry !== 0 && i < a.length; i++) {
                r = (a.words[i] | 0) + carry;
                this.words[i] = r & 0x3ffffff;
                carry = r >>> 26;
              }

              this.length = a.length;
              if (carry !== 0) {
                this.words[this.length] = carry;
                this.length++;
                // Copy the rest of the words
              } else if (a !== this) {
                for (; i < a.length; i++) {
                  this.words[i] = a.words[i];
                }
              }

              return this;
            };

            // Add `num` to `this`
            BN.prototype.add = function add(num) {
              var res;
              if (num.negative !== 0 && this.negative === 0) {
                num.negative = 0;
                res = this.sub(num);
                num.negative ^= 1;
                return res;
              } else if (num.negative === 0 && this.negative !== 0) {
                this.negative = 0;
                res = num.sub(this);
                this.negative = 1;
                return res;
              }

              if (this.length > num.length) return this.clone().iadd(num);

              return num.clone().iadd(this);
            };

            // Subtract `num` from `this` in-place
            BN.prototype.isub = function isub(num) {
              // this - (-num) = this + num
              if (num.negative !== 0) {
                num.negative = 0;
                var r = this.iadd(num);
                num.negative = 1;
                return r._normSign();

                // -this - num = -(this + num)
              } else if (this.negative !== 0) {
                this.negative = 0;
                this.iadd(num);
                this.negative = 1;
                return this._normSign();
              }

              // At this point both numbers are positive
              var cmp = this.cmp(num);

              // Optimization - zeroify
              if (cmp === 0) {
                this.negative = 0;
                this.length = 1;
                this.words[0] = 0;
                return this;
              }

              // a > b
              var a, b;
              if (cmp > 0) {
                a = this;
                b = num;
              } else {
                a = num;
                b = this;
              }

              var carry = 0;
              for (var i = 0; i < b.length; i++) {
                r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
                carry = r >> 26;
                this.words[i] = r & 0x3ffffff;
              }
              for (; carry !== 0 && i < a.length; i++) {
                r = (a.words[i] | 0) + carry;
                carry = r >> 26;
                this.words[i] = r & 0x3ffffff;
              }

              // Copy rest of the words
              if (carry === 0 && i < a.length && a !== this) {
                for (; i < a.length; i++) {
                  this.words[i] = a.words[i];
                }
              }

              this.length = Math.max(this.length, i);

              if (a !== this) {
                this.negative = 1;
              }

              return this.strip();
            };

            // Subtract `num` from `this`
            BN.prototype.sub = function sub(num) {
              return this.clone().isub(num);
            };

            function smallMulTo(self, num, out) {
              out.negative = num.negative ^ self.negative;
              var len = (self.length + num.length) | 0;
              out.length = len;
              len = (len - 1) | 0;

              // Peel one iteration (compiler can't do it, because of code complexity)
              var a = self.words[0] | 0;
              var b = num.words[0] | 0;
              var r = a * b;

              var lo = r & 0x3ffffff;
              var carry = (r / 0x4000000) | 0;
              out.words[0] = lo;

              for (var k = 1; k < len; k++) {
                // Sum all words with the same `i + j = k` and accumulate `ncarry`,
                // note that ncarry could be >= 0x3ffffff
                var ncarry = carry >>> 26;
                var rword = carry & 0x3ffffff;
                var maxJ = Math.min(k, num.length - 1);
                for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                  var i = (k - j) | 0;
                  a = self.words[i] | 0;
                  b = num.words[j] | 0;
                  r = a * b + rword;
                  ncarry += (r / 0x4000000) | 0;
                  rword = r & 0x3ffffff;
                }
                out.words[k] = rword | 0;
                carry = ncarry | 0;
              }
              if (carry !== 0) {
                out.words[k] = carry | 0;
              } else {
                out.length--;
              }

              return out.strip();
            }

            // TODO(indutny): it may be reasonable to omit it for users who don't need
            // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
            // multiplication (like elliptic secp256k1).
            var comb10MulTo = function comb10MulTo(self, num, out) {
              var a = self.words;
              var b = num.words;
              var o = out.words;
              var c = 0;
              var lo;
              var mid;
              var hi;
              var a0 = a[0] | 0;
              var al0 = a0 & 0x1fff;
              var ah0 = a0 >>> 13;
              var a1 = a[1] | 0;
              var al1 = a1 & 0x1fff;
              var ah1 = a1 >>> 13;
              var a2 = a[2] | 0;
              var al2 = a2 & 0x1fff;
              var ah2 = a2 >>> 13;
              var a3 = a[3] | 0;
              var al3 = a3 & 0x1fff;
              var ah3 = a3 >>> 13;
              var a4 = a[4] | 0;
              var al4 = a4 & 0x1fff;
              var ah4 = a4 >>> 13;
              var a5 = a[5] | 0;
              var al5 = a5 & 0x1fff;
              var ah5 = a5 >>> 13;
              var a6 = a[6] | 0;
              var al6 = a6 & 0x1fff;
              var ah6 = a6 >>> 13;
              var a7 = a[7] | 0;
              var al7 = a7 & 0x1fff;
              var ah7 = a7 >>> 13;
              var a8 = a[8] | 0;
              var al8 = a8 & 0x1fff;
              var ah8 = a8 >>> 13;
              var a9 = a[9] | 0;
              var al9 = a9 & 0x1fff;
              var ah9 = a9 >>> 13;
              var b0 = b[0] | 0;
              var bl0 = b0 & 0x1fff;
              var bh0 = b0 >>> 13;
              var b1 = b[1] | 0;
              var bl1 = b1 & 0x1fff;
              var bh1 = b1 >>> 13;
              var b2 = b[2] | 0;
              var bl2 = b2 & 0x1fff;
              var bh2 = b2 >>> 13;
              var b3 = b[3] | 0;
              var bl3 = b3 & 0x1fff;
              var bh3 = b3 >>> 13;
              var b4 = b[4] | 0;
              var bl4 = b4 & 0x1fff;
              var bh4 = b4 >>> 13;
              var b5 = b[5] | 0;
              var bl5 = b5 & 0x1fff;
              var bh5 = b5 >>> 13;
              var b6 = b[6] | 0;
              var bl6 = b6 & 0x1fff;
              var bh6 = b6 >>> 13;
              var b7 = b[7] | 0;
              var bl7 = b7 & 0x1fff;
              var bh7 = b7 >>> 13;
              var b8 = b[8] | 0;
              var bl8 = b8 & 0x1fff;
              var bh8 = b8 >>> 13;
              var b9 = b[9] | 0;
              var bl9 = b9 & 0x1fff;
              var bh9 = b9 >>> 13;

              out.negative = self.negative ^ num.negative;
              out.length = 19;
              /* k = 0 */
              lo = Math.imul(al0, bl0);
              mid = Math.imul(al0, bh0);
              mid = (mid + Math.imul(ah0, bl0)) | 0;
              hi = Math.imul(ah0, bh0);
              var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
              w0 &= 0x3ffffff;
              /* k = 1 */
              lo = Math.imul(al1, bl0);
              mid = Math.imul(al1, bh0);
              mid = (mid + Math.imul(ah1, bl0)) | 0;
              hi = Math.imul(ah1, bh0);
              lo = (lo + Math.imul(al0, bl1)) | 0;
              mid = (mid + Math.imul(al0, bh1)) | 0;
              mid = (mid + Math.imul(ah0, bl1)) | 0;
              hi = (hi + Math.imul(ah0, bh1)) | 0;
              var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
              w1 &= 0x3ffffff;
              /* k = 2 */
              lo = Math.imul(al2, bl0);
              mid = Math.imul(al2, bh0);
              mid = (mid + Math.imul(ah2, bl0)) | 0;
              hi = Math.imul(ah2, bh0);
              lo = (lo + Math.imul(al1, bl1)) | 0;
              mid = (mid + Math.imul(al1, bh1)) | 0;
              mid = (mid + Math.imul(ah1, bl1)) | 0;
              hi = (hi + Math.imul(ah1, bh1)) | 0;
              lo = (lo + Math.imul(al0, bl2)) | 0;
              mid = (mid + Math.imul(al0, bh2)) | 0;
              mid = (mid + Math.imul(ah0, bl2)) | 0;
              hi = (hi + Math.imul(ah0, bh2)) | 0;
              var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
              w2 &= 0x3ffffff;
              /* k = 3 */
              lo = Math.imul(al3, bl0);
              mid = Math.imul(al3, bh0);
              mid = (mid + Math.imul(ah3, bl0)) | 0;
              hi = Math.imul(ah3, bh0);
              lo = (lo + Math.imul(al2, bl1)) | 0;
              mid = (mid + Math.imul(al2, bh1)) | 0;
              mid = (mid + Math.imul(ah2, bl1)) | 0;
              hi = (hi + Math.imul(ah2, bh1)) | 0;
              lo = (lo + Math.imul(al1, bl2)) | 0;
              mid = (mid + Math.imul(al1, bh2)) | 0;
              mid = (mid + Math.imul(ah1, bl2)) | 0;
              hi = (hi + Math.imul(ah1, bh2)) | 0;
              lo = (lo + Math.imul(al0, bl3)) | 0;
              mid = (mid + Math.imul(al0, bh3)) | 0;
              mid = (mid + Math.imul(ah0, bl3)) | 0;
              hi = (hi + Math.imul(ah0, bh3)) | 0;
              var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
              w3 &= 0x3ffffff;
              /* k = 4 */
              lo = Math.imul(al4, bl0);
              mid = Math.imul(al4, bh0);
              mid = (mid + Math.imul(ah4, bl0)) | 0;
              hi = Math.imul(ah4, bh0);
              lo = (lo + Math.imul(al3, bl1)) | 0;
              mid = (mid + Math.imul(al3, bh1)) | 0;
              mid = (mid + Math.imul(ah3, bl1)) | 0;
              hi = (hi + Math.imul(ah3, bh1)) | 0;
              lo = (lo + Math.imul(al2, bl2)) | 0;
              mid = (mid + Math.imul(al2, bh2)) | 0;
              mid = (mid + Math.imul(ah2, bl2)) | 0;
              hi = (hi + Math.imul(ah2, bh2)) | 0;
              lo = (lo + Math.imul(al1, bl3)) | 0;
              mid = (mid + Math.imul(al1, bh3)) | 0;
              mid = (mid + Math.imul(ah1, bl3)) | 0;
              hi = (hi + Math.imul(ah1, bh3)) | 0;
              lo = (lo + Math.imul(al0, bl4)) | 0;
              mid = (mid + Math.imul(al0, bh4)) | 0;
              mid = (mid + Math.imul(ah0, bl4)) | 0;
              hi = (hi + Math.imul(ah0, bh4)) | 0;
              var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
              w4 &= 0x3ffffff;
              /* k = 5 */
              lo = Math.imul(al5, bl0);
              mid = Math.imul(al5, bh0);
              mid = (mid + Math.imul(ah5, bl0)) | 0;
              hi = Math.imul(ah5, bh0);
              lo = (lo + Math.imul(al4, bl1)) | 0;
              mid = (mid + Math.imul(al4, bh1)) | 0;
              mid = (mid + Math.imul(ah4, bl1)) | 0;
              hi = (hi + Math.imul(ah4, bh1)) | 0;
              lo = (lo + Math.imul(al3, bl2)) | 0;
              mid = (mid + Math.imul(al3, bh2)) | 0;
              mid = (mid + Math.imul(ah3, bl2)) | 0;
              hi = (hi + Math.imul(ah3, bh2)) | 0;
              lo = (lo + Math.imul(al2, bl3)) | 0;
              mid = (mid + Math.imul(al2, bh3)) | 0;
              mid = (mid + Math.imul(ah2, bl3)) | 0;
              hi = (hi + Math.imul(ah2, bh3)) | 0;
              lo = (lo + Math.imul(al1, bl4)) | 0;
              mid = (mid + Math.imul(al1, bh4)) | 0;
              mid = (mid + Math.imul(ah1, bl4)) | 0;
              hi = (hi + Math.imul(ah1, bh4)) | 0;
              lo = (lo + Math.imul(al0, bl5)) | 0;
              mid = (mid + Math.imul(al0, bh5)) | 0;
              mid = (mid + Math.imul(ah0, bl5)) | 0;
              hi = (hi + Math.imul(ah0, bh5)) | 0;
              var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
              w5 &= 0x3ffffff;
              /* k = 6 */
              lo = Math.imul(al6, bl0);
              mid = Math.imul(al6, bh0);
              mid = (mid + Math.imul(ah6, bl0)) | 0;
              hi = Math.imul(ah6, bh0);
              lo = (lo + Math.imul(al5, bl1)) | 0;
              mid = (mid + Math.imul(al5, bh1)) | 0;
              mid = (mid + Math.imul(ah5, bl1)) | 0;
              hi = (hi + Math.imul(ah5, bh1)) | 0;
              lo = (lo + Math.imul(al4, bl2)) | 0;
              mid = (mid + Math.imul(al4, bh2)) | 0;
              mid = (mid + Math.imul(ah4, bl2)) | 0;
              hi = (hi + Math.imul(ah4, bh2)) | 0;
              lo = (lo + Math.imul(al3, bl3)) | 0;
              mid = (mid + Math.imul(al3, bh3)) | 0;
              mid = (mid + Math.imul(ah3, bl3)) | 0;
              hi = (hi + Math.imul(ah3, bh3)) | 0;
              lo = (lo + Math.imul(al2, bl4)) | 0;
              mid = (mid + Math.imul(al2, bh4)) | 0;
              mid = (mid + Math.imul(ah2, bl4)) | 0;
              hi = (hi + Math.imul(ah2, bh4)) | 0;
              lo = (lo + Math.imul(al1, bl5)) | 0;
              mid = (mid + Math.imul(al1, bh5)) | 0;
              mid = (mid + Math.imul(ah1, bl5)) | 0;
              hi = (hi + Math.imul(ah1, bh5)) | 0;
              lo = (lo + Math.imul(al0, bl6)) | 0;
              mid = (mid + Math.imul(al0, bh6)) | 0;
              mid = (mid + Math.imul(ah0, bl6)) | 0;
              hi = (hi + Math.imul(ah0, bh6)) | 0;
              var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
              w6 &= 0x3ffffff;
              /* k = 7 */
              lo = Math.imul(al7, bl0);
              mid = Math.imul(al7, bh0);
              mid = (mid + Math.imul(ah7, bl0)) | 0;
              hi = Math.imul(ah7, bh0);
              lo = (lo + Math.imul(al6, bl1)) | 0;
              mid = (mid + Math.imul(al6, bh1)) | 0;
              mid = (mid + Math.imul(ah6, bl1)) | 0;
              hi = (hi + Math.imul(ah6, bh1)) | 0;
              lo = (lo + Math.imul(al5, bl2)) | 0;
              mid = (mid + Math.imul(al5, bh2)) | 0;
              mid = (mid + Math.imul(ah5, bl2)) | 0;
              hi = (hi + Math.imul(ah5, bh2)) | 0;
              lo = (lo + Math.imul(al4, bl3)) | 0;
              mid = (mid + Math.imul(al4, bh3)) | 0;
              mid = (mid + Math.imul(ah4, bl3)) | 0;
              hi = (hi + Math.imul(ah4, bh3)) | 0;
              lo = (lo + Math.imul(al3, bl4)) | 0;
              mid = (mid + Math.imul(al3, bh4)) | 0;
              mid = (mid + Math.imul(ah3, bl4)) | 0;
              hi = (hi + Math.imul(ah3, bh4)) | 0;
              lo = (lo + Math.imul(al2, bl5)) | 0;
              mid = (mid + Math.imul(al2, bh5)) | 0;
              mid = (mid + Math.imul(ah2, bl5)) | 0;
              hi = (hi + Math.imul(ah2, bh5)) | 0;
              lo = (lo + Math.imul(al1, bl6)) | 0;
              mid = (mid + Math.imul(al1, bh6)) | 0;
              mid = (mid + Math.imul(ah1, bl6)) | 0;
              hi = (hi + Math.imul(ah1, bh6)) | 0;
              lo = (lo + Math.imul(al0, bl7)) | 0;
              mid = (mid + Math.imul(al0, bh7)) | 0;
              mid = (mid + Math.imul(ah0, bl7)) | 0;
              hi = (hi + Math.imul(ah0, bh7)) | 0;
              var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
              w7 &= 0x3ffffff;
              /* k = 8 */
              lo = Math.imul(al8, bl0);
              mid = Math.imul(al8, bh0);
              mid = (mid + Math.imul(ah8, bl0)) | 0;
              hi = Math.imul(ah8, bh0);
              lo = (lo + Math.imul(al7, bl1)) | 0;
              mid = (mid + Math.imul(al7, bh1)) | 0;
              mid = (mid + Math.imul(ah7, bl1)) | 0;
              hi = (hi + Math.imul(ah7, bh1)) | 0;
              lo = (lo + Math.imul(al6, bl2)) | 0;
              mid = (mid + Math.imul(al6, bh2)) | 0;
              mid = (mid + Math.imul(ah6, bl2)) | 0;
              hi = (hi + Math.imul(ah6, bh2)) | 0;
              lo = (lo + Math.imul(al5, bl3)) | 0;
              mid = (mid + Math.imul(al5, bh3)) | 0;
              mid = (mid + Math.imul(ah5, bl3)) | 0;
              hi = (hi + Math.imul(ah5, bh3)) | 0;
              lo = (lo + Math.imul(al4, bl4)) | 0;
              mid = (mid + Math.imul(al4, bh4)) | 0;
              mid = (mid + Math.imul(ah4, bl4)) | 0;
              hi = (hi + Math.imul(ah4, bh4)) | 0;
              lo = (lo + Math.imul(al3, bl5)) | 0;
              mid = (mid + Math.imul(al3, bh5)) | 0;
              mid = (mid + Math.imul(ah3, bl5)) | 0;
              hi = (hi + Math.imul(ah3, bh5)) | 0;
              lo = (lo + Math.imul(al2, bl6)) | 0;
              mid = (mid + Math.imul(al2, bh6)) | 0;
              mid = (mid + Math.imul(ah2, bl6)) | 0;
              hi = (hi + Math.imul(ah2, bh6)) | 0;
              lo = (lo + Math.imul(al1, bl7)) | 0;
              mid = (mid + Math.imul(al1, bh7)) | 0;
              mid = (mid + Math.imul(ah1, bl7)) | 0;
              hi = (hi + Math.imul(ah1, bh7)) | 0;
              lo = (lo + Math.imul(al0, bl8)) | 0;
              mid = (mid + Math.imul(al0, bh8)) | 0;
              mid = (mid + Math.imul(ah0, bl8)) | 0;
              hi = (hi + Math.imul(ah0, bh8)) | 0;
              var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
              w8 &= 0x3ffffff;
              /* k = 9 */
              lo = Math.imul(al9, bl0);
              mid = Math.imul(al9, bh0);
              mid = (mid + Math.imul(ah9, bl0)) | 0;
              hi = Math.imul(ah9, bh0);
              lo = (lo + Math.imul(al8, bl1)) | 0;
              mid = (mid + Math.imul(al8, bh1)) | 0;
              mid = (mid + Math.imul(ah8, bl1)) | 0;
              hi = (hi + Math.imul(ah8, bh1)) | 0;
              lo = (lo + Math.imul(al7, bl2)) | 0;
              mid = (mid + Math.imul(al7, bh2)) | 0;
              mid = (mid + Math.imul(ah7, bl2)) | 0;
              hi = (hi + Math.imul(ah7, bh2)) | 0;
              lo = (lo + Math.imul(al6, bl3)) | 0;
              mid = (mid + Math.imul(al6, bh3)) | 0;
              mid = (mid + Math.imul(ah6, bl3)) | 0;
              hi = (hi + Math.imul(ah6, bh3)) | 0;
              lo = (lo + Math.imul(al5, bl4)) | 0;
              mid = (mid + Math.imul(al5, bh4)) | 0;
              mid = (mid + Math.imul(ah5, bl4)) | 0;
              hi = (hi + Math.imul(ah5, bh4)) | 0;
              lo = (lo + Math.imul(al4, bl5)) | 0;
              mid = (mid + Math.imul(al4, bh5)) | 0;
              mid = (mid + Math.imul(ah4, bl5)) | 0;
              hi = (hi + Math.imul(ah4, bh5)) | 0;
              lo = (lo + Math.imul(al3, bl6)) | 0;
              mid = (mid + Math.imul(al3, bh6)) | 0;
              mid = (mid + Math.imul(ah3, bl6)) | 0;
              hi = (hi + Math.imul(ah3, bh6)) | 0;
              lo = (lo + Math.imul(al2, bl7)) | 0;
              mid = (mid + Math.imul(al2, bh7)) | 0;
              mid = (mid + Math.imul(ah2, bl7)) | 0;
              hi = (hi + Math.imul(ah2, bh7)) | 0;
              lo = (lo + Math.imul(al1, bl8)) | 0;
              mid = (mid + Math.imul(al1, bh8)) | 0;
              mid = (mid + Math.imul(ah1, bl8)) | 0;
              hi = (hi + Math.imul(ah1, bh8)) | 0;
              lo = (lo + Math.imul(al0, bl9)) | 0;
              mid = (mid + Math.imul(al0, bh9)) | 0;
              mid = (mid + Math.imul(ah0, bl9)) | 0;
              hi = (hi + Math.imul(ah0, bh9)) | 0;
              var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
              w9 &= 0x3ffffff;
              /* k = 10 */
              lo = Math.imul(al9, bl1);
              mid = Math.imul(al9, bh1);
              mid = (mid + Math.imul(ah9, bl1)) | 0;
              hi = Math.imul(ah9, bh1);
              lo = (lo + Math.imul(al8, bl2)) | 0;
              mid = (mid + Math.imul(al8, bh2)) | 0;
              mid = (mid + Math.imul(ah8, bl2)) | 0;
              hi = (hi + Math.imul(ah8, bh2)) | 0;
              lo = (lo + Math.imul(al7, bl3)) | 0;
              mid = (mid + Math.imul(al7, bh3)) | 0;
              mid = (mid + Math.imul(ah7, bl3)) | 0;
              hi = (hi + Math.imul(ah7, bh3)) | 0;
              lo = (lo + Math.imul(al6, bl4)) | 0;
              mid = (mid + Math.imul(al6, bh4)) | 0;
              mid = (mid + Math.imul(ah6, bl4)) | 0;
              hi = (hi + Math.imul(ah6, bh4)) | 0;
              lo = (lo + Math.imul(al5, bl5)) | 0;
              mid = (mid + Math.imul(al5, bh5)) | 0;
              mid = (mid + Math.imul(ah5, bl5)) | 0;
              hi = (hi + Math.imul(ah5, bh5)) | 0;
              lo = (lo + Math.imul(al4, bl6)) | 0;
              mid = (mid + Math.imul(al4, bh6)) | 0;
              mid = (mid + Math.imul(ah4, bl6)) | 0;
              hi = (hi + Math.imul(ah4, bh6)) | 0;
              lo = (lo + Math.imul(al3, bl7)) | 0;
              mid = (mid + Math.imul(al3, bh7)) | 0;
              mid = (mid + Math.imul(ah3, bl7)) | 0;
              hi = (hi + Math.imul(ah3, bh7)) | 0;
              lo = (lo + Math.imul(al2, bl8)) | 0;
              mid = (mid + Math.imul(al2, bh8)) | 0;
              mid = (mid + Math.imul(ah2, bl8)) | 0;
              hi = (hi + Math.imul(ah2, bh8)) | 0;
              lo = (lo + Math.imul(al1, bl9)) | 0;
              mid = (mid + Math.imul(al1, bh9)) | 0;
              mid = (mid + Math.imul(ah1, bl9)) | 0;
              hi = (hi + Math.imul(ah1, bh9)) | 0;
              var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
              w10 &= 0x3ffffff;
              /* k = 11 */
              lo = Math.imul(al9, bl2);
              mid = Math.imul(al9, bh2);
              mid = (mid + Math.imul(ah9, bl2)) | 0;
              hi = Math.imul(ah9, bh2);
              lo = (lo + Math.imul(al8, bl3)) | 0;
              mid = (mid + Math.imul(al8, bh3)) | 0;
              mid = (mid + Math.imul(ah8, bl3)) | 0;
              hi = (hi + Math.imul(ah8, bh3)) | 0;
              lo = (lo + Math.imul(al7, bl4)) | 0;
              mid = (mid + Math.imul(al7, bh4)) | 0;
              mid = (mid + Math.imul(ah7, bl4)) | 0;
              hi = (hi + Math.imul(ah7, bh4)) | 0;
              lo = (lo + Math.imul(al6, bl5)) | 0;
              mid = (mid + Math.imul(al6, bh5)) | 0;
              mid = (mid + Math.imul(ah6, bl5)) | 0;
              hi = (hi + Math.imul(ah6, bh5)) | 0;
              lo = (lo + Math.imul(al5, bl6)) | 0;
              mid = (mid + Math.imul(al5, bh6)) | 0;
              mid = (mid + Math.imul(ah5, bl6)) | 0;
              hi = (hi + Math.imul(ah5, bh6)) | 0;
              lo = (lo + Math.imul(al4, bl7)) | 0;
              mid = (mid + Math.imul(al4, bh7)) | 0;
              mid = (mid + Math.imul(ah4, bl7)) | 0;
              hi = (hi + Math.imul(ah4, bh7)) | 0;
              lo = (lo + Math.imul(al3, bl8)) | 0;
              mid = (mid + Math.imul(al3, bh8)) | 0;
              mid = (mid + Math.imul(ah3, bl8)) | 0;
              hi = (hi + Math.imul(ah3, bh8)) | 0;
              lo = (lo + Math.imul(al2, bl9)) | 0;
              mid = (mid + Math.imul(al2, bh9)) | 0;
              mid = (mid + Math.imul(ah2, bl9)) | 0;
              hi = (hi + Math.imul(ah2, bh9)) | 0;
              var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
              w11 &= 0x3ffffff;
              /* k = 12 */
              lo = Math.imul(al9, bl3);
              mid = Math.imul(al9, bh3);
              mid = (mid + Math.imul(ah9, bl3)) | 0;
              hi = Math.imul(ah9, bh3);
              lo = (lo + Math.imul(al8, bl4)) | 0;
              mid = (mid + Math.imul(al8, bh4)) | 0;
              mid = (mid + Math.imul(ah8, bl4)) | 0;
              hi = (hi + Math.imul(ah8, bh4)) | 0;
              lo = (lo + Math.imul(al7, bl5)) | 0;
              mid = (mid + Math.imul(al7, bh5)) | 0;
              mid = (mid + Math.imul(ah7, bl5)) | 0;
              hi = (hi + Math.imul(ah7, bh5)) | 0;
              lo = (lo + Math.imul(al6, bl6)) | 0;
              mid = (mid + Math.imul(al6, bh6)) | 0;
              mid = (mid + Math.imul(ah6, bl6)) | 0;
              hi = (hi + Math.imul(ah6, bh6)) | 0;
              lo = (lo + Math.imul(al5, bl7)) | 0;
              mid = (mid + Math.imul(al5, bh7)) | 0;
              mid = (mid + Math.imul(ah5, bl7)) | 0;
              hi = (hi + Math.imul(ah5, bh7)) | 0;
              lo = (lo + Math.imul(al4, bl8)) | 0;
              mid = (mid + Math.imul(al4, bh8)) | 0;
              mid = (mid + Math.imul(ah4, bl8)) | 0;
              hi = (hi + Math.imul(ah4, bh8)) | 0;
              lo = (lo + Math.imul(al3, bl9)) | 0;
              mid = (mid + Math.imul(al3, bh9)) | 0;
              mid = (mid + Math.imul(ah3, bl9)) | 0;
              hi = (hi + Math.imul(ah3, bh9)) | 0;
              var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
              w12 &= 0x3ffffff;
              /* k = 13 */
              lo = Math.imul(al9, bl4);
              mid = Math.imul(al9, bh4);
              mid = (mid + Math.imul(ah9, bl4)) | 0;
              hi = Math.imul(ah9, bh4);
              lo = (lo + Math.imul(al8, bl5)) | 0;
              mid = (mid + Math.imul(al8, bh5)) | 0;
              mid = (mid + Math.imul(ah8, bl5)) | 0;
              hi = (hi + Math.imul(ah8, bh5)) | 0;
              lo = (lo + Math.imul(al7, bl6)) | 0;
              mid = (mid + Math.imul(al7, bh6)) | 0;
              mid = (mid + Math.imul(ah7, bl6)) | 0;
              hi = (hi + Math.imul(ah7, bh6)) | 0;
              lo = (lo + Math.imul(al6, bl7)) | 0;
              mid = (mid + Math.imul(al6, bh7)) | 0;
              mid = (mid + Math.imul(ah6, bl7)) | 0;
              hi = (hi + Math.imul(ah6, bh7)) | 0;
              lo = (lo + Math.imul(al5, bl8)) | 0;
              mid = (mid + Math.imul(al5, bh8)) | 0;
              mid = (mid + Math.imul(ah5, bl8)) | 0;
              hi = (hi + Math.imul(ah5, bh8)) | 0;
              lo = (lo + Math.imul(al4, bl9)) | 0;
              mid = (mid + Math.imul(al4, bh9)) | 0;
              mid = (mid + Math.imul(ah4, bl9)) | 0;
              hi = (hi + Math.imul(ah4, bh9)) | 0;
              var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
              w13 &= 0x3ffffff;
              /* k = 14 */
              lo = Math.imul(al9, bl5);
              mid = Math.imul(al9, bh5);
              mid = (mid + Math.imul(ah9, bl5)) | 0;
              hi = Math.imul(ah9, bh5);
              lo = (lo + Math.imul(al8, bl6)) | 0;
              mid = (mid + Math.imul(al8, bh6)) | 0;
              mid = (mid + Math.imul(ah8, bl6)) | 0;
              hi = (hi + Math.imul(ah8, bh6)) | 0;
              lo = (lo + Math.imul(al7, bl7)) | 0;
              mid = (mid + Math.imul(al7, bh7)) | 0;
              mid = (mid + Math.imul(ah7, bl7)) | 0;
              hi = (hi + Math.imul(ah7, bh7)) | 0;
              lo = (lo + Math.imul(al6, bl8)) | 0;
              mid = (mid + Math.imul(al6, bh8)) | 0;
              mid = (mid + Math.imul(ah6, bl8)) | 0;
              hi = (hi + Math.imul(ah6, bh8)) | 0;
              lo = (lo + Math.imul(al5, bl9)) | 0;
              mid = (mid + Math.imul(al5, bh9)) | 0;
              mid = (mid + Math.imul(ah5, bl9)) | 0;
              hi = (hi + Math.imul(ah5, bh9)) | 0;
              var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
              w14 &= 0x3ffffff;
              /* k = 15 */
              lo = Math.imul(al9, bl6);
              mid = Math.imul(al9, bh6);
              mid = (mid + Math.imul(ah9, bl6)) | 0;
              hi = Math.imul(ah9, bh6);
              lo = (lo + Math.imul(al8, bl7)) | 0;
              mid = (mid + Math.imul(al8, bh7)) | 0;
              mid = (mid + Math.imul(ah8, bl7)) | 0;
              hi = (hi + Math.imul(ah8, bh7)) | 0;
              lo = (lo + Math.imul(al7, bl8)) | 0;
              mid = (mid + Math.imul(al7, bh8)) | 0;
              mid = (mid + Math.imul(ah7, bl8)) | 0;
              hi = (hi + Math.imul(ah7, bh8)) | 0;
              lo = (lo + Math.imul(al6, bl9)) | 0;
              mid = (mid + Math.imul(al6, bh9)) | 0;
              mid = (mid + Math.imul(ah6, bl9)) | 0;
              hi = (hi + Math.imul(ah6, bh9)) | 0;
              var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
              w15 &= 0x3ffffff;
              /* k = 16 */
              lo = Math.imul(al9, bl7);
              mid = Math.imul(al9, bh7);
              mid = (mid + Math.imul(ah9, bl7)) | 0;
              hi = Math.imul(ah9, bh7);
              lo = (lo + Math.imul(al8, bl8)) | 0;
              mid = (mid + Math.imul(al8, bh8)) | 0;
              mid = (mid + Math.imul(ah8, bl8)) | 0;
              hi = (hi + Math.imul(ah8, bh8)) | 0;
              lo = (lo + Math.imul(al7, bl9)) | 0;
              mid = (mid + Math.imul(al7, bh9)) | 0;
              mid = (mid + Math.imul(ah7, bl9)) | 0;
              hi = (hi + Math.imul(ah7, bh9)) | 0;
              var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
              w16 &= 0x3ffffff;
              /* k = 17 */
              lo = Math.imul(al9, bl8);
              mid = Math.imul(al9, bh8);
              mid = (mid + Math.imul(ah9, bl8)) | 0;
              hi = Math.imul(ah9, bh8);
              lo = (lo + Math.imul(al8, bl9)) | 0;
              mid = (mid + Math.imul(al8, bh9)) | 0;
              mid = (mid + Math.imul(ah8, bl9)) | 0;
              hi = (hi + Math.imul(ah8, bh9)) | 0;
              var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
              w17 &= 0x3ffffff;
              /* k = 18 */
              lo = Math.imul(al9, bl9);
              mid = Math.imul(al9, bh9);
              mid = (mid + Math.imul(ah9, bl9)) | 0;
              hi = Math.imul(ah9, bh9);
              var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
              c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
              w18 &= 0x3ffffff;
              o[0] = w0;
              o[1] = w1;
              o[2] = w2;
              o[3] = w3;
              o[4] = w4;
              o[5] = w5;
              o[6] = w6;
              o[7] = w7;
              o[8] = w8;
              o[9] = w9;
              o[10] = w10;
              o[11] = w11;
              o[12] = w12;
              o[13] = w13;
              o[14] = w14;
              o[15] = w15;
              o[16] = w16;
              o[17] = w17;
              o[18] = w18;
              if (c !== 0) {
                o[19] = c;
                out.length++;
              }
              return out;
            };

            // Polyfill comb
            if (!Math.imul) {
              comb10MulTo = smallMulTo;
            }

            function bigMulTo(self, num, out) {
              out.negative = num.negative ^ self.negative;
              out.length = self.length + num.length;

              var carry = 0;
              var hncarry = 0;
              for (var k = 0; k < out.length - 1; k++) {
                // Sum all words with the same `i + j = k` and accumulate `ncarry`,
                // note that ncarry could be >= 0x3ffffff
                var ncarry = hncarry;
                hncarry = 0;
                var rword = carry & 0x3ffffff;
                var maxJ = Math.min(k, num.length - 1);
                for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                  var i = k - j;
                  var a = self.words[i] | 0;
                  var b = num.words[j] | 0;
                  var r = a * b;

                  var lo = r & 0x3ffffff;
                  ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
                  lo = (lo + rword) | 0;
                  rword = lo & 0x3ffffff;
                  ncarry = (ncarry + (lo >>> 26)) | 0;

                  hncarry += ncarry >>> 26;
                  ncarry &= 0x3ffffff;
                }
                out.words[k] = rword;
                carry = ncarry;
                ncarry = hncarry;
              }
              if (carry !== 0) {
                out.words[k] = carry;
              } else {
                out.length--;
              }

              return out.strip();
            }

            function jumboMulTo(self, num, out) {
              var fftm = new FFTM();
              return fftm.mulp(self, num, out);
            }

            BN.prototype.mulTo = function mulTo(num, out) {
              var res;
              var len = this.length + num.length;
              if (this.length === 10 && num.length === 10) {
                res = comb10MulTo(this, num, out);
              } else if (len < 63) {
                res = smallMulTo(this, num, out);
              } else if (len < 1024) {
                res = bigMulTo(this, num, out);
              } else {
                res = jumboMulTo(this, num, out);
              }

              return res;
            };

            // Cooley-Tukey algorithm for FFT
            // slightly revisited to rely on looping instead of recursion

            function FFTM(x, y) {
              this.x = x;
              this.y = y;
            }

            FFTM.prototype.makeRBT = function makeRBT(N) {
              var t = new Array(N);
              var l = BN.prototype._countBits(N) - 1;
              for (var i = 0; i < N; i++) {
                t[i] = this.revBin(i, l, N);
              }

              return t;
            };

            // Returns binary-reversed representation of `x`
            FFTM.prototype.revBin = function revBin(x, l, N) {
              if (x === 0 || x === N - 1) return x;

              var rb = 0;
              for (var i = 0; i < l; i++) {
                rb |= (x & 1) << (l - i - 1);
                x >>= 1;
              }

              return rb;
            };

            // Performs "tweedling" phase, therefore 'emulating'
            // behaviour of the recursive algorithm
            FFTM.prototype.permute = function permute(
              rbt,
              rws,
              iws,
              rtws,
              itws,
              N
            ) {
              for (var i = 0; i < N; i++) {
                rtws[i] = rws[rbt[i]];
                itws[i] = iws[rbt[i]];
              }
            };

            FFTM.prototype.transform = function transform(
              rws,
              iws,
              rtws,
              itws,
              N,
              rbt
            ) {
              this.permute(rbt, rws, iws, rtws, itws, N);

              for (var s = 1; s < N; s <<= 1) {
                var l = s << 1;

                var rtwdf = Math.cos((2 * Math.PI) / l);
                var itwdf = Math.sin((2 * Math.PI) / l);

                for (var p = 0; p < N; p += l) {
                  var rtwdf_ = rtwdf;
                  var itwdf_ = itwdf;

                  for (var j = 0; j < s; j++) {
                    var re = rtws[p + j];
                    var ie = itws[p + j];

                    var ro = rtws[p + j + s];
                    var io = itws[p + j + s];

                    var rx = rtwdf_ * ro - itwdf_ * io;

                    io = rtwdf_ * io + itwdf_ * ro;
                    ro = rx;

                    rtws[p + j] = re + ro;
                    itws[p + j] = ie + io;

                    rtws[p + j + s] = re - ro;
                    itws[p + j + s] = ie - io;

                    /* jshint maxdepth : false */
                    if (j !== l) {
                      rx = rtwdf * rtwdf_ - itwdf * itwdf_;

                      itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                      rtwdf_ = rx;
                    }
                  }
                }
              }
            };

            FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
              var N = Math.max(m, n) | 1;
              var odd = N & 1;
              var i = 0;
              for (N = (N / 2) | 0; N; N = N >>> 1) {
                i++;
              }

              return 1 << (i + 1 + odd);
            };

            FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
              if (N <= 1) return;

              for (var i = 0; i < N / 2; i++) {
                var t = rws[i];

                rws[i] = rws[N - i - 1];
                rws[N - i - 1] = t;

                t = iws[i];

                iws[i] = -iws[N - i - 1];
                iws[N - i - 1] = -t;
              }
            };

            FFTM.prototype.normalize13b = function normalize13b(ws, N) {
              var carry = 0;
              for (var i = 0; i < N / 2; i++) {
                var w =
                  Math.round(ws[2 * i + 1] / N) * 0x2000 +
                  Math.round(ws[2 * i] / N) +
                  carry;

                ws[i] = w & 0x3ffffff;

                if (w < 0x4000000) {
                  carry = 0;
                } else {
                  carry = (w / 0x4000000) | 0;
                }
              }

              return ws;
            };

            FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
              var carry = 0;
              for (var i = 0; i < len; i++) {
                carry = carry + (ws[i] | 0);

                rws[2 * i] = carry & 0x1fff;
                carry = carry >>> 13;
                rws[2 * i + 1] = carry & 0x1fff;
                carry = carry >>> 13;
              }

              // Pad with zeroes
              for (i = 2 * len; i < N; ++i) {
                rws[i] = 0;
              }

              assert(carry === 0);
              assert((carry & ~0x1fff) === 0);
            };

            FFTM.prototype.stub = function stub(N) {
              var ph = new Array(N);
              for (var i = 0; i < N; i++) {
                ph[i] = 0;
              }

              return ph;
            };

            FFTM.prototype.mulp = function mulp(x, y, out) {
              var N = 2 * this.guessLen13b(x.length, y.length);

              var rbt = this.makeRBT(N);

              var _ = this.stub(N);

              var rws = new Array(N);
              var rwst = new Array(N);
              var iwst = new Array(N);

              var nrws = new Array(N);
              var nrwst = new Array(N);
              var niwst = new Array(N);

              var rmws = out.words;
              rmws.length = N;

              this.convert13b(x.words, x.length, rws, N);
              this.convert13b(y.words, y.length, nrws, N);

              this.transform(rws, _, rwst, iwst, N, rbt);
              this.transform(nrws, _, nrwst, niwst, N, rbt);

              for (var i = 0; i < N; i++) {
                var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
                iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
                rwst[i] = rx;
              }

              this.conjugate(rwst, iwst, N);
              this.transform(rwst, iwst, rmws, _, N, rbt);
              this.conjugate(rmws, _, N);
              this.normalize13b(rmws, N);

              out.negative = x.negative ^ y.negative;
              out.length = x.length + y.length;
              return out.strip();
            };

            // Multiply `this` by `num`
            BN.prototype.mul = function mul(num) {
              var out = new BN(null);
              out.words = new Array(this.length + num.length);
              return this.mulTo(num, out);
            };

            // Multiply employing FFT
            BN.prototype.mulf = function mulf(num) {
              var out = new BN(null);
              out.words = new Array(this.length + num.length);
              return jumboMulTo(this, num, out);
            };

            // In-place Multiplication
            BN.prototype.imul = function imul(num) {
              return this.clone().mulTo(num, this);
            };

            BN.prototype.imuln = function imuln(num) {
              assert(typeof num === 'number');
              assert(num < 0x4000000);

              // Carry
              var carry = 0;
              for (var i = 0; i < this.length; i++) {
                var w = (this.words[i] | 0) * num;
                var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
                carry >>= 26;
                carry += (w / 0x4000000) | 0;
                // NOTE: lo is 27bit maximum
                carry += lo >>> 26;
                this.words[i] = lo & 0x3ffffff;
              }

              if (carry !== 0) {
                this.words[i] = carry;
                this.length++;
              }

              return this;
            };

            BN.prototype.muln = function muln(num) {
              return this.clone().imuln(num);
            };

            // `this` * `this`
            BN.prototype.sqr = function sqr() {
              return this.mul(this);
            };

            // `this` * `this` in-place
            BN.prototype.isqr = function isqr() {
              return this.imul(this.clone());
            };

            // Math.pow(`this`, `num`)
            BN.prototype.pow = function pow(num) {
              var w = toBitArray(num);
              if (w.length === 0) return new BN(1);

              // Skip leading zeroes
              var res = this;
              for (var i = 0; i < w.length; i++, res = res.sqr()) {
                if (w[i] !== 0) break;
              }

              if (++i < w.length) {
                for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
                  if (w[i] === 0) continue;

                  res = res.mul(q);
                }
              }

              return res;
            };

            // Shift-left in-place
            BN.prototype.iushln = function iushln(bits) {
              assert(typeof bits === 'number' && bits >= 0);
              var r = bits % 26;
              var s = (bits - r) / 26;
              var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
              var i;

              if (r !== 0) {
                var carry = 0;

                for (i = 0; i < this.length; i++) {
                  var newCarry = this.words[i] & carryMask;
                  var c = ((this.words[i] | 0) - newCarry) << r;
                  this.words[i] = c | carry;
                  carry = newCarry >>> (26 - r);
                }

                if (carry) {
                  this.words[i] = carry;
                  this.length++;
                }
              }

              if (s !== 0) {
                for (i = this.length - 1; i >= 0; i--) {
                  this.words[i + s] = this.words[i];
                }

                for (i = 0; i < s; i++) {
                  this.words[i] = 0;
                }

                this.length += s;
              }

              return this.strip();
            };

            BN.prototype.ishln = function ishln(bits) {
              // TODO(indutny): implement me
              assert(this.negative === 0);
              return this.iushln(bits);
            };

            // Shift-right in-place
            // NOTE: `hint` is a lowest bit before trailing zeroes
            // NOTE: if `extended` is present - it will be filled with destroyed bits
            BN.prototype.iushrn = function iushrn(bits, hint, extended) {
              assert(typeof bits === 'number' && bits >= 0);
              var h;
              if (hint) {
                h = (hint - (hint % 26)) / 26;
              } else {
                h = 0;
              }

              var r = bits % 26;
              var s = Math.min((bits - r) / 26, this.length);
              var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
              var maskedWords = extended;

              h -= s;
              h = Math.max(0, h);

              // Extended mode, copy masked part
              if (maskedWords) {
                for (var i = 0; i < s; i++) {
                  maskedWords.words[i] = this.words[i];
                }
                maskedWords.length = s;
              }

              if (s === 0) {
                // No-op, we should not move anything at all
              } else if (this.length > s) {
                this.length -= s;
                for (i = 0; i < this.length; i++) {
                  this.words[i] = this.words[i + s];
                }
              } else {
                this.words[0] = 0;
                this.length = 1;
              }

              var carry = 0;
              for (
                i = this.length - 1;
                i >= 0 && (carry !== 0 || i >= h);
                i--
              ) {
                var word = this.words[i] | 0;
                this.words[i] = (carry << (26 - r)) | (word >>> r);
                carry = word & mask;
              }

              // Push carried bits as a mask
              if (maskedWords && carry !== 0) {
                maskedWords.words[maskedWords.length++] = carry;
              }

              if (this.length === 0) {
                this.words[0] = 0;
                this.length = 1;
              }

              return this.strip();
            };

            BN.prototype.ishrn = function ishrn(bits, hint, extended) {
              // TODO(indutny): implement me
              assert(this.negative === 0);
              return this.iushrn(bits, hint, extended);
            };

            // Shift-left
            BN.prototype.shln = function shln(bits) {
              return this.clone().ishln(bits);
            };

            BN.prototype.ushln = function ushln(bits) {
              return this.clone().iushln(bits);
            };

            // Shift-right
            BN.prototype.shrn = function shrn(bits) {
              return this.clone().ishrn(bits);
            };

            BN.prototype.ushrn = function ushrn(bits) {
              return this.clone().iushrn(bits);
            };

            // Test if n bit is set
            BN.prototype.testn = function testn(bit) {
              assert(typeof bit === 'number' && bit >= 0);
              var r = bit % 26;
              var s = (bit - r) / 26;
              var q = 1 << r;

              // Fast case: bit is much higher than all existing words
              if (this.length <= s) return false;

              // Check bit and return
              var w = this.words[s];

              return !!(w & q);
            };

            // Return only lowers bits of number (in-place)
            BN.prototype.imaskn = function imaskn(bits) {
              assert(typeof bits === 'number' && bits >= 0);
              var r = bits % 26;
              var s = (bits - r) / 26;

              assert(
                this.negative === 0,
                'imaskn works only with positive numbers'
              );

              if (this.length <= s) {
                return this;
              }

              if (r !== 0) {
                s++;
              }
              this.length = Math.min(s, this.length);

              if (r !== 0) {
                var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
                this.words[this.length - 1] &= mask;
              }

              return this.strip();
            };

            // Return only lowers bits of number
            BN.prototype.maskn = function maskn(bits) {
              return this.clone().imaskn(bits);
            };

            // Add plain number `num` to `this`
            BN.prototype.iaddn = function iaddn(num) {
              assert(typeof num === 'number');
              assert(num < 0x4000000);
              if (num < 0) return this.isubn(-num);

              // Possible sign change
              if (this.negative !== 0) {
                if (this.length === 1 && (this.words[0] | 0) < num) {
                  this.words[0] = num - (this.words[0] | 0);
                  this.negative = 0;
                  return this;
                }

                this.negative = 0;
                this.isubn(num);
                this.negative = 1;
                return this;
              }

              // Add without checks
              return this._iaddn(num);
            };

            BN.prototype._iaddn = function _iaddn(num) {
              this.words[0] += num;

              // Carry
              for (
                var i = 0;
                i < this.length && this.words[i] >= 0x4000000;
                i++
              ) {
                this.words[i] -= 0x4000000;
                if (i === this.length - 1) {
                  this.words[i + 1] = 1;
                } else {
                  this.words[i + 1]++;
                }
              }
              this.length = Math.max(this.length, i + 1);

              return this;
            };

            // Subtract plain number `num` from `this`
            BN.prototype.isubn = function isubn(num) {
              assert(typeof num === 'number');
              assert(num < 0x4000000);
              if (num < 0) return this.iaddn(-num);

              if (this.negative !== 0) {
                this.negative = 0;
                this.iaddn(num);
                this.negative = 1;
                return this;
              }

              this.words[0] -= num;

              if (this.length === 1 && this.words[0] < 0) {
                this.words[0] = -this.words[0];
                this.negative = 1;
              } else {
                // Carry
                for (var i = 0; i < this.length && this.words[i] < 0; i++) {
                  this.words[i] += 0x4000000;
                  this.words[i + 1] -= 1;
                }
              }

              return this.strip();
            };

            BN.prototype.addn = function addn(num) {
              return this.clone().iaddn(num);
            };

            BN.prototype.subn = function subn(num) {
              return this.clone().isubn(num);
            };

            BN.prototype.iabs = function iabs() {
              this.negative = 0;

              return this;
            };

            BN.prototype.abs = function abs() {
              return this.clone().iabs();
            };

            BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
              var len = num.length + shift;
              var i;

              this._expand(len);

              var w;
              var carry = 0;
              for (i = 0; i < num.length; i++) {
                w = (this.words[i + shift] | 0) + carry;
                var right = (num.words[i] | 0) * mul;
                w -= right & 0x3ffffff;
                carry = (w >> 26) - ((right / 0x4000000) | 0);
                this.words[i + shift] = w & 0x3ffffff;
              }
              for (; i < this.length - shift; i++) {
                w = (this.words[i + shift] | 0) + carry;
                carry = w >> 26;
                this.words[i + shift] = w & 0x3ffffff;
              }

              if (carry === 0) return this.strip();

              // Subtraction overflow
              assert(carry === -1);
              carry = 0;
              for (i = 0; i < this.length; i++) {
                w = -(this.words[i] | 0) + carry;
                carry = w >> 26;
                this.words[i] = w & 0x3ffffff;
              }
              this.negative = 1;

              return this.strip();
            };

            BN.prototype._wordDiv = function _wordDiv(num, mode) {
              var shift = this.length - num.length;

              var a = this.clone();
              var b = num;

              // Normalize
              var bhi = b.words[b.length - 1] | 0;
              var bhiBits = this._countBits(bhi);
              shift = 26 - bhiBits;
              if (shift !== 0) {
                b = b.ushln(shift);
                a.iushln(shift);
                bhi = b.words[b.length - 1] | 0;
              }

              // Initialize quotient
              var m = a.length - b.length;
              var q;

              if (mode !== 'mod') {
                q = new BN(null);
                q.length = m + 1;
                q.words = new Array(q.length);
                for (var i = 0; i < q.length; i++) {
                  q.words[i] = 0;
                }
              }

              var diff = a.clone()._ishlnsubmul(b, 1, m);
              if (diff.negative === 0) {
                a = diff;
                if (q) {
                  q.words[m] = 1;
                }
              }

              for (var j = m - 1; j >= 0; j--) {
                var qj =
                  (a.words[b.length + j] | 0) * 0x4000000 +
                  (a.words[b.length + j - 1] | 0);

                // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
                // (0x7ffffff)
                qj = Math.min((qj / bhi) | 0, 0x3ffffff);

                a._ishlnsubmul(b, qj, j);
                while (a.negative !== 0) {
                  qj--;
                  a.negative = 0;
                  a._ishlnsubmul(b, 1, j);
                  if (!a.isZero()) {
                    a.negative ^= 1;
                  }
                }
                if (q) {
                  q.words[j] = qj;
                }
              }
              if (q) {
                q.strip();
              }
              a.strip();

              // Denormalize
              if (mode !== 'div' && shift !== 0) {
                a.iushrn(shift);
              }

              return {
                div: q || null,
                mod: a,
              };
            };

            // NOTE: 1) `mode` can be set to `mod` to request mod only,
            //       to `div` to request div only, or be absent to
            //       request both div & mod
            //       2) `positive` is true if unsigned mod is requested
            BN.prototype.divmod = function divmod(num, mode, positive) {
              assert(!num.isZero());

              if (this.isZero()) {
                return {
                  div: new BN(0),
                  mod: new BN(0),
                };
              }

              var div, mod, res;
              if (this.negative !== 0 && num.negative === 0) {
                res = this.neg().divmod(num, mode);

                if (mode !== 'mod') {
                  div = res.div.neg();
                }

                if (mode !== 'div') {
                  mod = res.mod.neg();
                  if (positive && mod.negative !== 0) {
                    mod.iadd(num);
                  }
                }

                return {
                  div: div,
                  mod: mod,
                };
              }

              if (this.negative === 0 && num.negative !== 0) {
                res = this.divmod(num.neg(), mode);

                if (mode !== 'mod') {
                  div = res.div.neg();
                }

                return {
                  div: div,
                  mod: res.mod,
                };
              }

              if ((this.negative & num.negative) !== 0) {
                res = this.neg().divmod(num.neg(), mode);

                if (mode !== 'div') {
                  mod = res.mod.neg();
                  if (positive && mod.negative !== 0) {
                    mod.isub(num);
                  }
                }

                return {
                  div: res.div,
                  mod: mod,
                };
              }

              // Both numbers are positive at this point

              // Strip both numbers to approximate shift value
              if (num.length > this.length || this.cmp(num) < 0) {
                return {
                  div: new BN(0),
                  mod: this,
                };
              }

              // Very short reduction
              if (num.length === 1) {
                if (mode === 'div') {
                  return {
                    div: this.divn(num.words[0]),
                    mod: null,
                  };
                }

                if (mode === 'mod') {
                  return {
                    div: null,
                    mod: new BN(this.modn(num.words[0])),
                  };
                }

                return {
                  div: this.divn(num.words[0]),
                  mod: new BN(this.modn(num.words[0])),
                };
              }

              return this._wordDiv(num, mode);
            };

            // Find `this` / `num`
            BN.prototype.div = function div(num) {
              return this.divmod(num, 'div', false).div;
            };

            // Find `this` % `num`
            BN.prototype.mod = function mod(num) {
              return this.divmod(num, 'mod', false).mod;
            };

            BN.prototype.umod = function umod(num) {
              return this.divmod(num, 'mod', true).mod;
            };

            // Find Round(`this` / `num`)
            BN.prototype.divRound = function divRound(num) {
              var dm = this.divmod(num);

              // Fast case - exact division
              if (dm.mod.isZero()) return dm.div;

              var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

              var half = num.ushrn(1);
              var r2 = num.andln(1);
              var cmp = mod.cmp(half);

              // Round down
              if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;

              // Round up
              return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
            };

            BN.prototype.modn = function modn(num) {
              assert(num <= 0x3ffffff);
              var p = (1 << 26) % num;

              var acc = 0;
              for (var i = this.length - 1; i >= 0; i--) {
                acc = (p * acc + (this.words[i] | 0)) % num;
              }

              return acc;
            };

            // In-place division by number
            BN.prototype.idivn = function idivn(num) {
              assert(num <= 0x3ffffff);

              var carry = 0;
              for (var i = this.length - 1; i >= 0; i--) {
                var w = (this.words[i] | 0) + carry * 0x4000000;
                this.words[i] = (w / num) | 0;
                carry = w % num;
              }

              return this.strip();
            };

            BN.prototype.divn = function divn(num) {
              return this.clone().idivn(num);
            };

            BN.prototype.egcd = function egcd(p) {
              assert(p.negative === 0);
              assert(!p.isZero());

              var x = this;
              var y = p.clone();

              if (x.negative !== 0) {
                x = x.umod(p);
              } else {
                x = x.clone();
              }

              // A * x + B * y = x
              var A = new BN(1);
              var B = new BN(0);

              // C * x + D * y = y
              var C = new BN(0);
              var D = new BN(1);

              var g = 0;

              while (x.isEven() && y.isEven()) {
                x.iushrn(1);
                y.iushrn(1);
                ++g;
              }

              var yp = y.clone();
              var xp = x.clone();

              while (!x.isZero()) {
                for (
                  var i = 0, im = 1;
                  (x.words[0] & im) === 0 && i < 26;
                  ++i, im <<= 1
                );
                if (i > 0) {
                  x.iushrn(i);
                  while (i-- > 0) {
                    if (A.isOdd() || B.isOdd()) {
                      A.iadd(yp);
                      B.isub(xp);
                    }

                    A.iushrn(1);
                    B.iushrn(1);
                  }
                }

                for (
                  var j = 0, jm = 1;
                  (y.words[0] & jm) === 0 && j < 26;
                  ++j, jm <<= 1
                );
                if (j > 0) {
                  y.iushrn(j);
                  while (j-- > 0) {
                    if (C.isOdd() || D.isOdd()) {
                      C.iadd(yp);
                      D.isub(xp);
                    }

                    C.iushrn(1);
                    D.iushrn(1);
                  }
                }

                if (x.cmp(y) >= 0) {
                  x.isub(y);
                  A.isub(C);
                  B.isub(D);
                } else {
                  y.isub(x);
                  C.isub(A);
                  D.isub(B);
                }
              }

              return {
                a: C,
                b: D,
                gcd: y.iushln(g),
              };
            };

            // This is reduced incarnation of the binary EEA
            // above, designated to invert members of the
            // _prime_ fields F(p) at a maximal speed
            BN.prototype._invmp = function _invmp(p) {
              assert(p.negative === 0);
              assert(!p.isZero());

              var a = this;
              var b = p.clone();

              if (a.negative !== 0) {
                a = a.umod(p);
              } else {
                a = a.clone();
              }

              var x1 = new BN(1);
              var x2 = new BN(0);

              var delta = b.clone();

              while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
                for (
                  var i = 0, im = 1;
                  (a.words[0] & im) === 0 && i < 26;
                  ++i, im <<= 1
                );
                if (i > 0) {
                  a.iushrn(i);
                  while (i-- > 0) {
                    if (x1.isOdd()) {
                      x1.iadd(delta);
                    }

                    x1.iushrn(1);
                  }
                }

                for (
                  var j = 0, jm = 1;
                  (b.words[0] & jm) === 0 && j < 26;
                  ++j, jm <<= 1
                );
                if (j > 0) {
                  b.iushrn(j);
                  while (j-- > 0) {
                    if (x2.isOdd()) {
                      x2.iadd(delta);
                    }

                    x2.iushrn(1);
                  }
                }

                if (a.cmp(b) >= 0) {
                  a.isub(b);
                  x1.isub(x2);
                } else {
                  b.isub(a);
                  x2.isub(x1);
                }
              }

              var res;
              if (a.cmpn(1) === 0) {
                res = x1;
              } else {
                res = x2;
              }

              if (res.cmpn(0) < 0) {
                res.iadd(p);
              }

              return res;
            };

            BN.prototype.gcd = function gcd(num) {
              if (this.isZero()) return num.abs();
              if (num.isZero()) return this.abs();

              var a = this.clone();
              var b = num.clone();
              a.negative = 0;
              b.negative = 0;

              // Remove common factor of two
              for (var shift = 0; a.isEven() && b.isEven(); shift++) {
                a.iushrn(1);
                b.iushrn(1);
              }

              do {
                while (a.isEven()) {
                  a.iushrn(1);
                }
                while (b.isEven()) {
                  b.iushrn(1);
                }

                var r = a.cmp(b);
                if (r < 0) {
                  // Swap `a` and `b` to make `a` always bigger than `b`
                  var t = a;
                  a = b;
                  b = t;
                } else if (r === 0 || b.cmpn(1) === 0) {
                  break;
                }

                a.isub(b);
              } while (true);

              return b.iushln(shift);
            };

            // Invert number in the field F(num)
            BN.prototype.invm = function invm(num) {
              return this.egcd(num).a.umod(num);
            };

            BN.prototype.isEven = function isEven() {
              return (this.words[0] & 1) === 0;
            };

            BN.prototype.isOdd = function isOdd() {
              return (this.words[0] & 1) === 1;
            };

            // And first word and num
            BN.prototype.andln = function andln(num) {
              return this.words[0] & num;
            };

            // Increment at the bit position in-line
            BN.prototype.bincn = function bincn(bit) {
              assert(typeof bit === 'number');
              var r = bit % 26;
              var s = (bit - r) / 26;
              var q = 1 << r;

              // Fast case: bit is much higher than all existing words
              if (this.length <= s) {
                this._expand(s + 1);
                this.words[s] |= q;
                return this;
              }

              // Add bit and propagate, if needed
              var carry = q;
              for (var i = s; carry !== 0 && i < this.length; i++) {
                var w = this.words[i] | 0;
                w += carry;
                carry = w >>> 26;
                w &= 0x3ffffff;
                this.words[i] = w;
              }
              if (carry !== 0) {
                this.words[i] = carry;
                this.length++;
              }
              return this;
            };

            BN.prototype.isZero = function isZero() {
              return this.length === 1 && this.words[0] === 0;
            };

            BN.prototype.cmpn = function cmpn(num) {
              var negative = num < 0;

              if (this.negative !== 0 && !negative) return -1;
              if (this.negative === 0 && negative) return 1;

              this.strip();

              var res;
              if (this.length > 1) {
                res = 1;
              } else {
                if (negative) {
                  num = -num;
                }

                assert(num <= 0x3ffffff, 'Number is too big');

                var w = this.words[0] | 0;
                res = w === num ? 0 : w < num ? -1 : 1;
              }
              if (this.negative !== 0) return -res | 0;
              return res;
            };

            // Compare two numbers and return:
            // 1 - if `this` > `num`
            // 0 - if `this` == `num`
            // -1 - if `this` < `num`
            BN.prototype.cmp = function cmp(num) {
              if (this.negative !== 0 && num.negative === 0) return -1;
              if (this.negative === 0 && num.negative !== 0) return 1;

              var res = this.ucmp(num);
              if (this.negative !== 0) return -res | 0;
              return res;
            };

            // Unsigned comparison
            BN.prototype.ucmp = function ucmp(num) {
              // At this point both numbers have the same sign
              if (this.length > num.length) return 1;
              if (this.length < num.length) return -1;

              var res = 0;
              for (var i = this.length - 1; i >= 0; i--) {
                var a = this.words[i] | 0;
                var b = num.words[i] | 0;

                if (a === b) continue;
                if (a < b) {
                  res = -1;
                } else if (a > b) {
                  res = 1;
                }
                break;
              }
              return res;
            };

            BN.prototype.gtn = function gtn(num) {
              return this.cmpn(num) === 1;
            };

            BN.prototype.gt = function gt(num) {
              return this.cmp(num) === 1;
            };

            BN.prototype.gten = function gten(num) {
              return this.cmpn(num) >= 0;
            };

            BN.prototype.gte = function gte(num) {
              return this.cmp(num) >= 0;
            };

            BN.prototype.ltn = function ltn(num) {
              return this.cmpn(num) === -1;
            };

            BN.prototype.lt = function lt(num) {
              return this.cmp(num) === -1;
            };

            BN.prototype.lten = function lten(num) {
              return this.cmpn(num) <= 0;
            };

            BN.prototype.lte = function lte(num) {
              return this.cmp(num) <= 0;
            };

            BN.prototype.eqn = function eqn(num) {
              return this.cmpn(num) === 0;
            };

            BN.prototype.eq = function eq(num) {
              return this.cmp(num) === 0;
            };

            //
            // A reduce context, could be using montgomery or something better, depending
            // on the `m` itself.
            //
            BN.red = function red(num) {
              return new Red(num);
            };

            BN.prototype.toRed = function toRed(ctx) {
              assert(!this.red, 'Already a number in reduction context');
              assert(this.negative === 0, 'red works only with positives');
              return ctx.convertTo(this)._forceRed(ctx);
            };

            BN.prototype.fromRed = function fromRed() {
              assert(
                this.red,
                'fromRed works only with numbers in reduction context'
              );
              return this.red.convertFrom(this);
            };

            BN.prototype._forceRed = function _forceRed(ctx) {
              this.red = ctx;
              return this;
            };

            BN.prototype.forceRed = function forceRed(ctx) {
              assert(!this.red, 'Already a number in reduction context');
              return this._forceRed(ctx);
            };

            BN.prototype.redAdd = function redAdd(num) {
              assert(this.red, 'redAdd works only with red numbers');
              return this.red.add(this, num);
            };

            BN.prototype.redIAdd = function redIAdd(num) {
              assert(this.red, 'redIAdd works only with red numbers');
              return this.red.iadd(this, num);
            };

            BN.prototype.redSub = function redSub(num) {
              assert(this.red, 'redSub works only with red numbers');
              return this.red.sub(this, num);
            };

            BN.prototype.redISub = function redISub(num) {
              assert(this.red, 'redISub works only with red numbers');
              return this.red.isub(this, num);
            };

            BN.prototype.redShl = function redShl(num) {
              assert(this.red, 'redShl works only with red numbers');
              return this.red.shl(this, num);
            };

            BN.prototype.redMul = function redMul(num) {
              assert(this.red, 'redMul works only with red numbers');
              this.red._verify2(this, num);
              return this.red.mul(this, num);
            };

            BN.prototype.redIMul = function redIMul(num) {
              assert(this.red, 'redMul works only with red numbers');
              this.red._verify2(this, num);
              return this.red.imul(this, num);
            };

            BN.prototype.redSqr = function redSqr() {
              assert(this.red, 'redSqr works only with red numbers');
              this.red._verify1(this);
              return this.red.sqr(this);
            };

            BN.prototype.redISqr = function redISqr() {
              assert(this.red, 'redISqr works only with red numbers');
              this.red._verify1(this);
              return this.red.isqr(this);
            };

            // Square root over p
            BN.prototype.redSqrt = function redSqrt() {
              assert(this.red, 'redSqrt works only with red numbers');
              this.red._verify1(this);
              return this.red.sqrt(this);
            };

            BN.prototype.redInvm = function redInvm() {
              assert(this.red, 'redInvm works only with red numbers');
              this.red._verify1(this);
              return this.red.invm(this);
            };

            // Return negative clone of `this` % `red modulo`
            BN.prototype.redNeg = function redNeg() {
              assert(this.red, 'redNeg works only with red numbers');
              this.red._verify1(this);
              return this.red.neg(this);
            };

            BN.prototype.redPow = function redPow(num) {
              assert(this.red && !num.red, 'redPow(normalNum)');
              this.red._verify1(this);
              return this.red.pow(this, num);
            };

            // Prime numbers with efficient reduction
            var primes = {
              k256: null,
              p224: null,
              p192: null,
              p25519: null,
            };

            // Pseudo-Mersenne prime
            function MPrime(name, p) {
              // P = 2 ^ N - K
              this.name = name;
              this.p = new BN(p, 16);
              this.n = this.p.bitLength();
              this.k = new BN(1).iushln(this.n).isub(this.p);

              this.tmp = this._tmp();
            }

            MPrime.prototype._tmp = function _tmp() {
              var tmp = new BN(null);
              tmp.words = new Array(Math.ceil(this.n / 13));
              return tmp;
            };

            MPrime.prototype.ireduce = function ireduce(num) {
              // Assumes that `num` is less than `P^2`
              // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
              var r = num;
              var rlen;

              do {
                this.split(r, this.tmp);
                r = this.imulK(r);
                r = r.iadd(this.tmp);
                rlen = r.bitLength();
              } while (rlen > this.n);

              var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
              if (cmp === 0) {
                r.words[0] = 0;
                r.length = 1;
              } else if (cmp > 0) {
                r.isub(this.p);
              } else {
                if (r.strip !== undefined) {
                  // r is BN v4 instance
                  r.strip();
                } else {
                  // r is BN v5 instance
                  r._strip();
                }
              }

              return r;
            };

            MPrime.prototype.split = function split(input, out) {
              input.iushrn(this.n, 0, out);
            };

            MPrime.prototype.imulK = function imulK(num) {
              return num.imul(this.k);
            };

            function K256() {
              MPrime.call(
                this,
                'k256',
                'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f'
              );
            }
            inherits(K256, MPrime);

            K256.prototype.split = function split(input, output) {
              // 256 = 9 * 26 + 22
              var mask = 0x3fffff;

              var outLen = Math.min(input.length, 9);
              for (var i = 0; i < outLen; i++) {
                output.words[i] = input.words[i];
              }
              output.length = outLen;

              if (input.length <= 9) {
                input.words[0] = 0;
                input.length = 1;
                return;
              }

              // Shift by 9 limbs
              var prev = input.words[9];
              output.words[output.length++] = prev & mask;

              for (i = 10; i < input.length; i++) {
                var next = input.words[i] | 0;
                input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
                prev = next;
              }
              prev >>>= 22;
              input.words[i - 10] = prev;
              if (prev === 0 && input.length > 10) {
                input.length -= 10;
              } else {
                input.length -= 9;
              }
            };

            K256.prototype.imulK = function imulK(num) {
              // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
              num.words[num.length] = 0;
              num.words[num.length + 1] = 0;
              num.length += 2;

              // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
              var lo = 0;
              for (var i = 0; i < num.length; i++) {
                var w = num.words[i] | 0;
                lo += w * 0x3d1;
                num.words[i] = lo & 0x3ffffff;
                lo = w * 0x40 + ((lo / 0x4000000) | 0);
              }

              // Fast length reduction
              if (num.words[num.length - 1] === 0) {
                num.length--;
                if (num.words[num.length - 1] === 0) {
                  num.length--;
                }
              }
              return num;
            };

            function P224() {
              MPrime.call(
                this,
                'p224',
                'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001'
              );
            }
            inherits(P224, MPrime);

            function P192() {
              MPrime.call(
                this,
                'p192',
                'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff'
              );
            }
            inherits(P192, MPrime);

            function P25519() {
              // 2 ^ 255 - 19
              MPrime.call(
                this,
                '25519',
                '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed'
              );
            }
            inherits(P25519, MPrime);

            P25519.prototype.imulK = function imulK(num) {
              // K = 0x13
              var carry = 0;
              for (var i = 0; i < num.length; i++) {
                var hi = (num.words[i] | 0) * 0x13 + carry;
                var lo = hi & 0x3ffffff;
                hi >>>= 26;

                num.words[i] = lo;
                carry = hi;
              }
              if (carry !== 0) {
                num.words[num.length++] = carry;
              }
              return num;
            };

            // Exported mostly for testing purposes, use plain name instead
            BN._prime = function prime(name) {
              // Cached version of prime
              if (primes[name]) return primes[name];

              var prime;
              if (name === 'k256') {
                prime = new K256();
              } else if (name === 'p224') {
                prime = new P224();
              } else if (name === 'p192') {
                prime = new P192();
              } else if (name === 'p25519') {
                prime = new P25519();
              } else {
                throw new Error('Unknown prime ' + name);
              }
              primes[name] = prime;

              return prime;
            };

            //
            // Base reduction engine
            //
            function Red(m) {
              if (typeof m === 'string') {
                var prime = BN._prime(m);
                this.m = prime.p;
                this.prime = prime;
              } else {
                assert(m.gtn(1), 'modulus must be greater than 1');
                this.m = m;
                this.prime = null;
              }
            }

            Red.prototype._verify1 = function _verify1(a) {
              assert(a.negative === 0, 'red works only with positives');
              assert(a.red, 'red works only with red numbers');
            };

            Red.prototype._verify2 = function _verify2(a, b) {
              assert(
                (a.negative | b.negative) === 0,
                'red works only with positives'
              );
              assert(
                a.red && a.red === b.red,
                'red works only with red numbers'
              );
            };

            Red.prototype.imod = function imod(a) {
              if (this.prime) return this.prime.ireduce(a)._forceRed(this);
              return a.umod(this.m)._forceRed(this);
            };

            Red.prototype.neg = function neg(a) {
              if (a.isZero()) {
                return a.clone();
              }

              return this.m.sub(a)._forceRed(this);
            };

            Red.prototype.add = function add(a, b) {
              this._verify2(a, b);

              var res = a.add(b);
              if (res.cmp(this.m) >= 0) {
                res.isub(this.m);
              }
              return res._forceRed(this);
            };

            Red.prototype.iadd = function iadd(a, b) {
              this._verify2(a, b);

              var res = a.iadd(b);
              if (res.cmp(this.m) >= 0) {
                res.isub(this.m);
              }
              return res;
            };

            Red.prototype.sub = function sub(a, b) {
              this._verify2(a, b);

              var res = a.sub(b);
              if (res.cmpn(0) < 0) {
                res.iadd(this.m);
              }
              return res._forceRed(this);
            };

            Red.prototype.isub = function isub(a, b) {
              this._verify2(a, b);

              var res = a.isub(b);
              if (res.cmpn(0) < 0) {
                res.iadd(this.m);
              }
              return res;
            };

            Red.prototype.shl = function shl(a, num) {
              this._verify1(a);
              return this.imod(a.ushln(num));
            };

            Red.prototype.imul = function imul(a, b) {
              this._verify2(a, b);
              return this.imod(a.imul(b));
            };

            Red.prototype.mul = function mul(a, b) {
              this._verify2(a, b);
              return this.imod(a.mul(b));
            };

            Red.prototype.isqr = function isqr(a) {
              return this.imul(a, a.clone());
            };

            Red.prototype.sqr = function sqr(a) {
              return this.mul(a, a);
            };

            Red.prototype.sqrt = function sqrt(a) {
              if (a.isZero()) return a.clone();

              var mod3 = this.m.andln(3);
              assert(mod3 % 2 === 1);

              // Fast case
              if (mod3 === 3) {
                var pow = this.m.add(new BN(1)).iushrn(2);
                return this.pow(a, pow);
              }

              // Tonelli-Shanks algorithm (Totally unoptimized and slow)
              //
              // Find Q and S, that Q * 2 ^ S = (P - 1)
              var q = this.m.subn(1);
              var s = 0;
              while (!q.isZero() && q.andln(1) === 0) {
                s++;
                q.iushrn(1);
              }
              assert(!q.isZero());

              var one = new BN(1).toRed(this);
              var nOne = one.redNeg();

              // Find quadratic non-residue
              // NOTE: Max is such because of generalized Riemann hypothesis.
              var lpow = this.m.subn(1).iushrn(1);
              var z = this.m.bitLength();
              z = new BN(2 * z * z).toRed(this);

              while (this.pow(z, lpow).cmp(nOne) !== 0) {
                z.redIAdd(nOne);
              }

              var c = this.pow(z, q);
              var r = this.pow(a, q.addn(1).iushrn(1));
              var t = this.pow(a, q);
              var m = s;
              while (t.cmp(one) !== 0) {
                var tmp = t;
                for (var i = 0; tmp.cmp(one) !== 0; i++) {
                  tmp = tmp.redSqr();
                }
                assert(i < m);
                var b = this.pow(c, new BN(1).iushln(m - i - 1));

                r = r.redMul(b);
                c = b.redSqr();
                t = t.redMul(c);
                m = i;
              }

              return r;
            };

            Red.prototype.invm = function invm(a) {
              var inv = a._invmp(this.m);
              if (inv.negative !== 0) {
                inv.negative = 0;
                return this.imod(inv).redNeg();
              } else {
                return this.imod(inv);
              }
            };

            Red.prototype.pow = function pow(a, num) {
              if (num.isZero()) return new BN(1).toRed(this);
              if (num.cmpn(1) === 0) return a.clone();

              var windowSize = 4;
              var wnd = new Array(1 << windowSize);
              wnd[0] = new BN(1).toRed(this);
              wnd[1] = a;
              for (var i = 2; i < wnd.length; i++) {
                wnd[i] = this.mul(wnd[i - 1], a);
              }

              var res = wnd[0];
              var current = 0;
              var currentLen = 0;
              var start = num.bitLength() % 26;
              if (start === 0) {
                start = 26;
              }

              for (i = num.length - 1; i >= 0; i--) {
                var word = num.words[i];
                for (var j = start - 1; j >= 0; j--) {
                  var bit = (word >> j) & 1;
                  if (res !== wnd[0]) {
                    res = this.sqr(res);
                  }

                  if (bit === 0 && current === 0) {
                    currentLen = 0;
                    continue;
                  }

                  current <<= 1;
                  current |= bit;
                  currentLen++;
                  if (currentLen !== windowSize && (i !== 0 || j !== 0))
                    continue;

                  res = this.mul(res, wnd[current]);
                  currentLen = 0;
                  current = 0;
                }
                start = 26;
              }

              return res;
            };

            Red.prototype.convertTo = function convertTo(num) {
              var r = num.umod(this.m);

              return r === num ? r.clone() : r;
            };

            Red.prototype.convertFrom = function convertFrom(num) {
              var res = num.clone();
              res.red = null;
              return res;
            };

            //
            // Montgomery method engine
            //

            BN.mont = function mont(num) {
              return new Mont(num);
            };

            function Mont(m) {
              Red.call(this, m);

              this.shift = this.m.bitLength();
              if (this.shift % 26 !== 0) {
                this.shift += 26 - (this.shift % 26);
              }

              this.r = new BN(1).iushln(this.shift);
              this.r2 = this.imod(this.r.sqr());
              this.rinv = this.r._invmp(this.m);

              this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
              this.minv = this.minv.umod(this.r);
              this.minv = this.r.sub(this.minv);
            }
            inherits(Mont, Red);

            Mont.prototype.convertTo = function convertTo(num) {
              return this.imod(num.ushln(this.shift));
            };

            Mont.prototype.convertFrom = function convertFrom(num) {
              var r = this.imod(num.mul(this.rinv));
              r.red = null;
              return r;
            };

            Mont.prototype.imul = function imul(a, b) {
              if (a.isZero() || b.isZero()) {
                a.words[0] = 0;
                a.length = 1;
                return a;
              }

              var t = a.imul(b);
              var c = t
                .maskn(this.shift)
                .mul(this.minv)
                .imaskn(this.shift)
                .mul(this.m);
              var u = t.isub(c).iushrn(this.shift);
              var res = u;

              if (u.cmp(this.m) >= 0) {
                res = u.isub(this.m);
              } else if (u.cmpn(0) < 0) {
                res = u.iadd(this.m);
              }

              return res._forceRed(this);
            };

            Mont.prototype.mul = function mul(a, b) {
              if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

              var t = a.mul(b);
              var c = t
                .maskn(this.shift)
                .mul(this.minv)
                .imaskn(this.shift)
                .mul(this.m);
              var u = t.isub(c).iushrn(this.shift);
              var res = u;
              if (u.cmp(this.m) >= 0) {
                res = u.isub(this.m);
              } else if (u.cmpn(0) < 0) {
                res = u.iadd(this.m);
              }

              return res._forceRed(this);
            };

            Mont.prototype.invm = function invm(a) {
              // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
              var res = this.imod(a._invmp(this.m).mul(this.r2));
              return res._forceRed(this);
            };
          })(false || module, this);

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/module.js */ '../node_modules/webpack/buildin/module.js'
          )(module)
        ));

        /***/
      },

    /***/ '../node_modules/public-encrypt/privateDecrypt.js':
      /*!********************************************************!*\
  !*** ../node_modules/public-encrypt/privateDecrypt.js ***!
  \********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var parseKeys = __webpack_require__(
          /*! parse-asn1 */ '../node_modules/parse-asn1/index.js'
        );
        var mgf = __webpack_require__(
          /*! ./mgf */ '../node_modules/public-encrypt/mgf.js'
        );
        var xor = __webpack_require__(
          /*! ./xor */ '../node_modules/public-encrypt/xor.js'
        );
        var BN = __webpack_require__(
          /*! bn.js */ '../node_modules/public-encrypt/node_modules/bn.js/lib/bn.js'
        );
        var crt = __webpack_require__(
          /*! browserify-rsa */ '../node_modules/browserify-rsa/index.js'
        );
        var createHash = __webpack_require__(
          /*! create-hash */ '../node_modules/create-hash/browser.js'
        );
        var withPublic = __webpack_require__(
          /*! ./withPublic */ '../node_modules/public-encrypt/withPublic.js'
        );
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;

        module.exports = function privateDecrypt(privateKey, enc, reverse) {
          var padding;
          if (privateKey.padding) {
            padding = privateKey.padding;
          } else if (reverse) {
            padding = 1;
          } else {
            padding = 4;
          }

          var key = parseKeys(privateKey);
          var k = key.modulus.byteLength();
          if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {
            throw new Error('decryption error');
          }
          var msg;
          if (reverse) {
            msg = withPublic(new BN(enc), key);
          } else {
            msg = crt(enc, key);
          }
          var zBuffer = Buffer.alloc(k - msg.length);
          msg = Buffer.concat([zBuffer, msg], k);
          if (padding === 4) {
            return oaep(key, msg);
          } else if (padding === 1) {
            return pkcs1(key, msg, reverse);
          } else if (padding === 3) {
            return msg;
          } else {
            throw new Error('unknown padding');
          }
        };

        function oaep(key, msg) {
          var k = key.modulus.byteLength();
          var iHash = createHash('sha1').update(Buffer.alloc(0)).digest();
          var hLen = iHash.length;
          if (msg[0] !== 0) {
            throw new Error('decryption error');
          }
          var maskedSeed = msg.slice(1, hLen + 1);
          var maskedDb = msg.slice(hLen + 1);
          var seed = xor(maskedSeed, mgf(maskedDb, hLen));
          var db = xor(maskedDb, mgf(seed, k - hLen - 1));
          if (compare(iHash, db.slice(0, hLen))) {
            throw new Error('decryption error');
          }
          var i = hLen;
          while (db[i] === 0) {
            i++;
          }
          if (db[i++] !== 1) {
            throw new Error('decryption error');
          }
          return db.slice(i);
        }

        function pkcs1(key, msg, reverse) {
          var p1 = msg.slice(0, 2);
          var i = 2;
          var status = 0;
          while (msg[i++] !== 0) {
            if (i >= msg.length) {
              status++;
              break;
            }
          }
          var ps = msg.slice(2, i - 1);

          if (
            (p1.toString('hex') !== '0002' && !reverse) ||
            (p1.toString('hex') !== '0001' && reverse)
          ) {
            status++;
          }
          if (ps.length < 8) {
            status++;
          }
          if (status) {
            throw new Error('decryption error');
          }
          return msg.slice(i);
        }
        function compare(a, b) {
          a = Buffer.from(a);
          b = Buffer.from(b);
          var dif = 0;
          var len = a.length;
          if (a.length !== b.length) {
            dif++;
            len = Math.min(a.length, b.length);
          }
          var i = -1;
          while (++i < len) {
            dif += a[i] ^ b[i];
          }
          return dif;
        }

        /***/
      },

    /***/ '../node_modules/public-encrypt/publicEncrypt.js':
      /*!*******************************************************!*\
  !*** ../node_modules/public-encrypt/publicEncrypt.js ***!
  \*******************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var parseKeys = __webpack_require__(
          /*! parse-asn1 */ '../node_modules/parse-asn1/index.js'
        );
        var randomBytes = __webpack_require__(
          /*! randombytes */ '../node_modules/randombytes/browser.js'
        );
        var createHash = __webpack_require__(
          /*! create-hash */ '../node_modules/create-hash/browser.js'
        );
        var mgf = __webpack_require__(
          /*! ./mgf */ '../node_modules/public-encrypt/mgf.js'
        );
        var xor = __webpack_require__(
          /*! ./xor */ '../node_modules/public-encrypt/xor.js'
        );
        var BN = __webpack_require__(
          /*! bn.js */ '../node_modules/public-encrypt/node_modules/bn.js/lib/bn.js'
        );
        var withPublic = __webpack_require__(
          /*! ./withPublic */ '../node_modules/public-encrypt/withPublic.js'
        );
        var crt = __webpack_require__(
          /*! browserify-rsa */ '../node_modules/browserify-rsa/index.js'
        );
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;

        module.exports = function publicEncrypt(publicKey, msg, reverse) {
          var padding;
          if (publicKey.padding) {
            padding = publicKey.padding;
          } else if (reverse) {
            padding = 1;
          } else {
            padding = 4;
          }
          var key = parseKeys(publicKey);
          var paddedMsg;
          if (padding === 4) {
            paddedMsg = oaep(key, msg);
          } else if (padding === 1) {
            paddedMsg = pkcs1(key, msg, reverse);
          } else if (padding === 3) {
            paddedMsg = new BN(msg);
            if (paddedMsg.cmp(key.modulus) >= 0) {
              throw new Error('data too long for modulus');
            }
          } else {
            throw new Error('unknown padding');
          }
          if (reverse) {
            return crt(paddedMsg, key);
          } else {
            return withPublic(paddedMsg, key);
          }
        };

        function oaep(key, msg) {
          var k = key.modulus.byteLength();
          var mLen = msg.length;
          var iHash = createHash('sha1').update(Buffer.alloc(0)).digest();
          var hLen = iHash.length;
          var hLen2 = 2 * hLen;
          if (mLen > k - hLen2 - 2) {
            throw new Error('message too long');
          }
          var ps = Buffer.alloc(k - mLen - hLen2 - 2);
          var dblen = k - hLen - 1;
          var seed = randomBytes(hLen);
          var maskedDb = xor(
            Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen),
            mgf(seed, dblen)
          );
          var maskedSeed = xor(seed, mgf(maskedDb, hLen));
          return new BN(
            Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k)
          );
        }
        function pkcs1(key, msg, reverse) {
          var mLen = msg.length;
          var k = key.modulus.byteLength();
          if (mLen > k - 11) {
            throw new Error('message too long');
          }
          var ps;
          if (reverse) {
            ps = Buffer.alloc(k - mLen - 3, 0xff);
          } else {
            ps = nonZero(k - mLen - 3);
          }
          return new BN(
            Buffer.concat(
              [Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg],
              k
            )
          );
        }
        function nonZero(len) {
          var out = Buffer.allocUnsafe(len);
          var i = 0;
          var cache = randomBytes(len * 2);
          var cur = 0;
          var num;
          while (i < len) {
            if (cur === cache.length) {
              cache = randomBytes(len * 2);
              cur = 0;
            }
            num = cache[cur++];
            if (num) {
              out[i++] = num;
            }
          }
          return out;
        }

        /***/
      },

    /***/ '../node_modules/public-encrypt/withPublic.js':
      /*!****************************************************!*\
  !*** ../node_modules/public-encrypt/withPublic.js ***!
  \****************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var BN = __webpack_require__(
          /*! bn.js */ '../node_modules/public-encrypt/node_modules/bn.js/lib/bn.js'
        );
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;

        function withPublic(paddedMsg, key) {
          return Buffer.from(
            paddedMsg
              .toRed(BN.mont(key.modulus))
              .redPow(new BN(key.publicExponent))
              .fromRed()
              .toArray()
          );
        }

        module.exports = withPublic;

        /***/
      },

    /***/ '../node_modules/public-encrypt/xor.js':
      /*!*********************************************!*\
  !*** ../node_modules/public-encrypt/xor.js ***!
  \*********************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        module.exports = function xor(a, b) {
          var len = a.length;
          var i = -1;
          while (++i < len) {
            a[i] ^= b[i];
          }
          return a;
        };

        /***/
      },

    /***/ '../node_modules/randombytes/browser.js':
      /*!**********************************************!*\
  !*** ../node_modules/randombytes/browser.js ***!
  \**********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (global, process) {
          // limit of Crypto.getRandomValues()
          // https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues
          var MAX_BYTES = 65536;

          // Node supports requesting up to this number of bytes
          // https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48
          var MAX_UINT32 = 4294967295;

          function oldBrowser() {
            throw new Error(
              'Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11'
            );
          }

          var Buffer = __webpack_require__(
            /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
          ).Buffer;
          var crypto = global.crypto || global.msCrypto;

          if (crypto && crypto.getRandomValues) {
            module.exports = randomBytes;
          } else {
            module.exports = oldBrowser;
          }

          function randomBytes(size, cb) {
            // phantomjs needs to throw
            if (size > MAX_UINT32)
              throw new RangeError('requested too many random bytes');

            var bytes = Buffer.allocUnsafe(size);

            if (size > 0) {
              // getRandomValues fails on IE if size == 0
              if (size > MAX_BYTES) {
                // this is the max bytes crypto.getRandomValues
                // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
                for (
                  var generated = 0;
                  generated < size;
                  generated += MAX_BYTES
                ) {
                  // buffer.slice automatically checks if the end is past the end of
                  // the buffer so we don't have to here
                  crypto.getRandomValues(
                    bytes.slice(generated, generated + MAX_BYTES)
                  );
                }
              } else {
                crypto.getRandomValues(bytes);
              }
            }

            if (typeof cb === 'function') {
              return process.nextTick(function () {
                cb(null, bytes);
              });
            }

            return bytes;
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../webpack/buildin/global.js */ '../node_modules/webpack/buildin/global.js'
          ),
          __webpack_require__(
            /*! ./../process/browser.js */ '../node_modules/process/browser.js'
          )
        ));

        /***/
      },

    /***/ '../node_modules/randomfill/browser.js':
      /*!*********************************************!*\
  !*** ../node_modules/randomfill/browser.js ***!
  \*********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (global, process) {
          function oldBrowser() {
            throw new Error(
              'secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11'
            );
          }
          var safeBuffer = __webpack_require__(
            /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
          );
          var randombytes = __webpack_require__(
            /*! randombytes */ '../node_modules/randombytes/browser.js'
          );
          var Buffer = safeBuffer.Buffer;
          var kBufferMaxLength = safeBuffer.kMaxLength;
          var crypto = global.crypto || global.msCrypto;
          var kMaxUint32 = Math.pow(2, 32) - 1;
          function assertOffset(offset, length) {
            if (typeof offset !== 'number' || offset !== offset) {
              // eslint-disable-line no-self-compare
              throw new TypeError('offset must be a number');
            }

            if (offset > kMaxUint32 || offset < 0) {
              throw new TypeError('offset must be a uint32');
            }

            if (offset > kBufferMaxLength || offset > length) {
              throw new RangeError('offset out of range');
            }
          }

          function assertSize(size, offset, length) {
            if (typeof size !== 'number' || size !== size) {
              // eslint-disable-line no-self-compare
              throw new TypeError('size must be a number');
            }

            if (size > kMaxUint32 || size < 0) {
              throw new TypeError('size must be a uint32');
            }

            if (size + offset > length || size > kBufferMaxLength) {
              throw new RangeError('buffer too small');
            }
          }
          if ((crypto && crypto.getRandomValues) || !process.browser) {
            exports.randomFill = randomFill;
            exports.randomFillSync = randomFillSync;
          } else {
            exports.randomFill = oldBrowser;
            exports.randomFillSync = oldBrowser;
          }
          function randomFill(buf, offset, size, cb) {
            if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
              throw new TypeError(
                '"buf" argument must be a Buffer or Uint8Array'
              );
            }

            if (typeof offset === 'function') {
              cb = offset;
              offset = 0;
              size = buf.length;
            } else if (typeof size === 'function') {
              cb = size;
              size = buf.length - offset;
            } else if (typeof cb !== 'function') {
              throw new TypeError('"cb" argument must be a function');
            }
            assertOffset(offset, buf.length);
            assertSize(size, offset, buf.length);
            return actualFill(buf, offset, size, cb);
          }

          function actualFill(buf, offset, size, cb) {
            if (process.browser) {
              var ourBuf = buf.buffer;
              var uint = new Uint8Array(ourBuf, offset, size);
              crypto.getRandomValues(uint);
              if (cb) {
                process.nextTick(function () {
                  cb(null, buf);
                });
                return;
              }
              return buf;
            }
            if (cb) {
              randombytes(size, function (err, bytes) {
                if (err) {
                  return cb(err);
                }
                bytes.copy(buf, offset);
                cb(null, buf);
              });
              return;
            }
            var bytes = randombytes(size);
            bytes.copy(buf, offset);
            return buf;
          }
          function randomFillSync(buf, offset, size) {
            if (typeof offset === 'undefined') {
              offset = 0;
            }
            if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
              throw new TypeError(
                '"buf" argument must be a Buffer or Uint8Array'
              );
            }

            assertOffset(offset, buf.length);

            if (size === undefined) size = buf.length - offset;

            assertSize(size, offset, buf.length);

            return actualFill(buf, offset, size);
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../webpack/buildin/global.js */ '../node_modules/webpack/buildin/global.js'
          ),
          __webpack_require__(
            /*! ./../process/browser.js */ '../node_modules/process/browser.js'
          )
        ));

        /***/
      },

    /***/ '../node_modules/readable-stream/duplex-browser.js':
      /*!*********************************************************!*\
  !*** ../node_modules/readable-stream/duplex-browser.js ***!
  \*********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! ./lib/_stream_duplex.js */ '../node_modules/readable-stream/lib/_stream_duplex.js'
        );

        /***/
      },

    /***/ '../node_modules/readable-stream/lib/_stream_duplex.js':
      /*!*************************************************************!*\
  !*** ../node_modules/readable-stream/lib/_stream_duplex.js ***!
  \*************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        // a duplex stream is just a stream that is both readable and writable.
        // Since JS doesn't have multiple prototypal inheritance, this class
        // prototypally inherits from Readable, and then parasitically from
        // Writable.

        /*<replacement>*/

        var pna = __webpack_require__(
          /*! process-nextick-args */ '../node_modules/process-nextick-args/index.js'
        );
        /*</replacement>*/

        /*<replacement>*/
        var objectKeys =
          Object.keys ||
          function (obj) {
            var keys = [];
            for (var key in obj) {
              keys.push(key);
            }
            return keys;
          };
        /*</replacement>*/

        module.exports = Duplex;

        /*<replacement>*/
        var util = Object.create(
          __webpack_require__(
            /*! core-util-is */ '../node_modules/core-util-is/lib/util.js'
          )
        );
        util.inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );
        /*</replacement>*/

        var Readable = __webpack_require__(
          /*! ./_stream_readable */ '../node_modules/readable-stream/lib/_stream_readable.js'
        );
        var Writable = __webpack_require__(
          /*! ./_stream_writable */ '../node_modules/readable-stream/lib/_stream_writable.js'
        );

        util.inherits(Duplex, Readable);

        {
          // avoid scope creep, the keys array can then be collected
          var keys = objectKeys(Writable.prototype);
          for (var v = 0; v < keys.length; v++) {
            var method = keys[v];
            if (!Duplex.prototype[method])
              Duplex.prototype[method] = Writable.prototype[method];
          }
        }

        function Duplex(options) {
          if (!(this instanceof Duplex)) return new Duplex(options);

          Readable.call(this, options);
          Writable.call(this, options);

          if (options && options.readable === false) this.readable = false;

          if (options && options.writable === false) this.writable = false;

          this.allowHalfOpen = true;
          if (options && options.allowHalfOpen === false)
            this.allowHalfOpen = false;

          this.once('end', onend);
        }

        Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
          // making it explicit this property is not enumerable
          // because otherwise some prototype manipulation in
          // userland will fail
          enumerable: false,
          get: function () {
            return this._writableState.highWaterMark;
          },
        });

        // the no-half-open enforcer
        function onend() {
          // if we allow half-open state, or if the writable side ended,
          // then we're ok.
          if (this.allowHalfOpen || this._writableState.ended) return;

          // no more data can be written.
          // But allow more writes to happen in this tick.
          pna.nextTick(onEndNT, this);
        }

        function onEndNT(self) {
          self.end();
        }

        Object.defineProperty(Duplex.prototype, 'destroyed', {
          get: function () {
            if (
              this._readableState === undefined ||
              this._writableState === undefined
            ) {
              return false;
            }
            return (
              this._readableState.destroyed && this._writableState.destroyed
            );
          },
          set: function (value) {
            // we ignore the value if the stream
            // has not been initialized yet
            if (
              this._readableState === undefined ||
              this._writableState === undefined
            ) {
              return;
            }

            // backward compatibility, the user is explicitly
            // managing destroyed
            this._readableState.destroyed = value;
            this._writableState.destroyed = value;
          },
        });

        Duplex.prototype._destroy = function (err, cb) {
          this.push(null);
          this.end();

          pna.nextTick(cb, err);
        };

        /***/
      },

    /***/ '../node_modules/readable-stream/lib/_stream_passthrough.js':
      /*!******************************************************************!*\
  !*** ../node_modules/readable-stream/lib/_stream_passthrough.js ***!
  \******************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        // a passthrough stream.
        // basically just the most minimal sort of Transform stream.
        // Every written chunk gets output as-is.

        module.exports = PassThrough;

        var Transform = __webpack_require__(
          /*! ./_stream_transform */ '../node_modules/readable-stream/lib/_stream_transform.js'
        );

        /*<replacement>*/
        var util = Object.create(
          __webpack_require__(
            /*! core-util-is */ '../node_modules/core-util-is/lib/util.js'
          )
        );
        util.inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );
        /*</replacement>*/

        util.inherits(PassThrough, Transform);

        function PassThrough(options) {
          if (!(this instanceof PassThrough)) return new PassThrough(options);

          Transform.call(this, options);
        }

        PassThrough.prototype._transform = function (chunk, encoding, cb) {
          cb(null, chunk);
        };

        /***/
      },

    /***/ '../node_modules/readable-stream/lib/_stream_readable.js':
      /*!***************************************************************!*\
  !*** ../node_modules/readable-stream/lib/_stream_readable.js ***!
  \***************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (global, process) {
          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.

          /*<replacement>*/

          var pna = __webpack_require__(
            /*! process-nextick-args */ '../node_modules/process-nextick-args/index.js'
          );
          /*</replacement>*/

          module.exports = Readable;

          /*<replacement>*/
          var isArray = __webpack_require__(
            /*! isarray */ '../node_modules/isarray/index.js'
          );
          /*</replacement>*/

          /*<replacement>*/
          var Duplex;
          /*</replacement>*/

          Readable.ReadableState = ReadableState;

          /*<replacement>*/
          var EE = __webpack_require__(
            /*! events */ '../node_modules/events/events.js'
          ).EventEmitter;

          var EElistenerCount = function (emitter, type) {
            return emitter.listeners(type).length;
          };
          /*</replacement>*/

          /*<replacement>*/
          var Stream = __webpack_require__(
            /*! ./internal/streams/stream */ '../node_modules/readable-stream/lib/internal/streams/stream-browser.js'
          );
          /*</replacement>*/

          /*<replacement>*/

          var Buffer = __webpack_require__(
            /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
          ).Buffer;
          var OurUint8Array = global.Uint8Array || function () {};
          function _uint8ArrayToBuffer(chunk) {
            return Buffer.from(chunk);
          }
          function _isUint8Array(obj) {
            return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
          }

          /*</replacement>*/

          /*<replacement>*/
          var util = Object.create(
            __webpack_require__(
              /*! core-util-is */ '../node_modules/core-util-is/lib/util.js'
            )
          );
          util.inherits = __webpack_require__(
            /*! inherits */ '../node_modules/inherits/inherits_browser.js'
          );
          /*</replacement>*/

          /*<replacement>*/
          var debugUtil = __webpack_require__(/*! util */ 3);
          var debug = void 0;
          if (debugUtil && debugUtil.debuglog) {
            debug = debugUtil.debuglog('stream');
          } else {
            debug = function () {};
          }
          /*</replacement>*/

          var BufferList = __webpack_require__(
            /*! ./internal/streams/BufferList */ '../node_modules/readable-stream/lib/internal/streams/BufferList.js'
          );
          var destroyImpl = __webpack_require__(
            /*! ./internal/streams/destroy */ '../node_modules/readable-stream/lib/internal/streams/destroy.js'
          );
          var StringDecoder;

          util.inherits(Readable, Stream);

          var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

          function prependListener(emitter, event, fn) {
            // Sadly this is not cacheable as some libraries bundle their own
            // event emitter implementation with them.
            if (typeof emitter.prependListener === 'function')
              return emitter.prependListener(event, fn);

            // This is a hack to make sure that our error handler is attached before any
            // userland ones.  NEVER DO THIS. This is here only because this code needs
            // to continue to work with older versions of Node.js that do not include
            // the prependListener() method. The goal is to eventually remove this hack.
            if (!emitter._events || !emitter._events[event])
              emitter.on(event, fn);
            else if (isArray(emitter._events[event]))
              emitter._events[event].unshift(fn);
            else emitter._events[event] = [fn, emitter._events[event]];
          }

          function ReadableState(options, stream) {
            Duplex =
              Duplex ||
              __webpack_require__(
                /*! ./_stream_duplex */ '../node_modules/readable-stream/lib/_stream_duplex.js'
              );

            options = options || {};

            // Duplex streams are both readable and writable, but share
            // the same options object.
            // However, some cases require setting options to different
            // values for the readable and the writable sides of the duplex stream.
            // These options can be provided separately as readableXXX and writableXXX.
            var isDuplex = stream instanceof Duplex;

            // object stream flag. Used to make read(n) ignore n and to
            // make all the buffer merging and length checks go away
            this.objectMode = !!options.objectMode;

            if (isDuplex)
              this.objectMode = this.objectMode || !!options.readableObjectMode;

            // the point at which it stops calling _read() to fill the buffer
            // Note: 0 is a valid value, means "don't call _read preemptively ever"
            var hwm = options.highWaterMark;
            var readableHwm = options.readableHighWaterMark;
            var defaultHwm = this.objectMode ? 16 : 16 * 1024;

            if (hwm || hwm === 0) this.highWaterMark = hwm;
            else if (isDuplex && (readableHwm || readableHwm === 0))
              this.highWaterMark = readableHwm;
            else this.highWaterMark = defaultHwm;

            // cast to ints.
            this.highWaterMark = Math.floor(this.highWaterMark);

            // A linked list is used to store data chunks instead of an array because the
            // linked list can remove elements from the beginning faster than
            // array.shift()
            this.buffer = new BufferList();
            this.length = 0;
            this.pipes = null;
            this.pipesCount = 0;
            this.flowing = null;
            this.ended = false;
            this.endEmitted = false;
            this.reading = false;

            // a flag to be able to tell if the event 'readable'/'data' is emitted
            // immediately, or on a later tick.  We set this to true at first, because
            // any actions that shouldn't happen until "later" should generally also
            // not happen before the first read call.
            this.sync = true;

            // whenever we return null, then we set a flag to say
            // that we're awaiting a 'readable' event emission.
            this.needReadable = false;
            this.emittedReadable = false;
            this.readableListening = false;
            this.resumeScheduled = false;

            // has it been destroyed
            this.destroyed = false;

            // Crypto is kind of old and crusty.  Historically, its default string
            // encoding is 'binary' so we have to make this configurable.
            // Everything else in the universe uses 'utf8', though.
            this.defaultEncoding = options.defaultEncoding || 'utf8';

            // the number of writers that are awaiting a drain event in .pipe()s
            this.awaitDrain = 0;

            // if true, a maybeReadMore has been scheduled
            this.readingMore = false;

            this.decoder = null;
            this.encoding = null;
            if (options.encoding) {
              if (!StringDecoder)
                StringDecoder = __webpack_require__(
                  /*! string_decoder/ */ '../node_modules/string_decoder/lib/string_decoder.js'
                ).StringDecoder;
              this.decoder = new StringDecoder(options.encoding);
              this.encoding = options.encoding;
            }
          }

          function Readable(options) {
            Duplex =
              Duplex ||
              __webpack_require__(
                /*! ./_stream_duplex */ '../node_modules/readable-stream/lib/_stream_duplex.js'
              );

            if (!(this instanceof Readable)) return new Readable(options);

            this._readableState = new ReadableState(options, this);

            // legacy
            this.readable = true;

            if (options) {
              if (typeof options.read === 'function') this._read = options.read;

              if (typeof options.destroy === 'function')
                this._destroy = options.destroy;
            }

            Stream.call(this);
          }

          Object.defineProperty(Readable.prototype, 'destroyed', {
            get: function () {
              if (this._readableState === undefined) {
                return false;
              }
              return this._readableState.destroyed;
            },
            set: function (value) {
              // we ignore the value if the stream
              // has not been initialized yet
              if (!this._readableState) {
                return;
              }

              // backward compatibility, the user is explicitly
              // managing destroyed
              this._readableState.destroyed = value;
            },
          });

          Readable.prototype.destroy = destroyImpl.destroy;
          Readable.prototype._undestroy = destroyImpl.undestroy;
          Readable.prototype._destroy = function (err, cb) {
            this.push(null);
            cb(err);
          };

          // Manually shove something into the read() buffer.
          // This returns true if the highWaterMark has not been hit yet,
          // similar to how Writable.write() returns true if you should
          // write() some more.
          Readable.prototype.push = function (chunk, encoding) {
            var state = this._readableState;
            var skipChunkCheck;

            if (!state.objectMode) {
              if (typeof chunk === 'string') {
                encoding = encoding || state.defaultEncoding;
                if (encoding !== state.encoding) {
                  chunk = Buffer.from(chunk, encoding);
                  encoding = '';
                }
                skipChunkCheck = true;
              }
            } else {
              skipChunkCheck = true;
            }

            return readableAddChunk(
              this,
              chunk,
              encoding,
              false,
              skipChunkCheck
            );
          };

          // Unshift should *always* be something directly out of read()
          Readable.prototype.unshift = function (chunk) {
            return readableAddChunk(this, chunk, null, true, false);
          };

          function readableAddChunk(
            stream,
            chunk,
            encoding,
            addToFront,
            skipChunkCheck
          ) {
            var state = stream._readableState;
            if (chunk === null) {
              state.reading = false;
              onEofChunk(stream, state);
            } else {
              var er;
              if (!skipChunkCheck) er = chunkInvalid(state, chunk);
              if (er) {
                stream.emit('error', er);
              } else if (state.objectMode || (chunk && chunk.length > 0)) {
                if (
                  typeof chunk !== 'string' &&
                  !state.objectMode &&
                  Object.getPrototypeOf(chunk) !== Buffer.prototype
                ) {
                  chunk = _uint8ArrayToBuffer(chunk);
                }

                if (addToFront) {
                  if (state.endEmitted)
                    stream.emit(
                      'error',
                      new Error('stream.unshift() after end event')
                    );
                  else addChunk(stream, state, chunk, true);
                } else if (state.ended) {
                  stream.emit('error', new Error('stream.push() after EOF'));
                } else {
                  state.reading = false;
                  if (state.decoder && !encoding) {
                    chunk = state.decoder.write(chunk);
                    if (state.objectMode || chunk.length !== 0)
                      addChunk(stream, state, chunk, false);
                    else maybeReadMore(stream, state);
                  } else {
                    addChunk(stream, state, chunk, false);
                  }
                }
              } else if (!addToFront) {
                state.reading = false;
              }
            }

            return needMoreData(state);
          }

          function addChunk(stream, state, chunk, addToFront) {
            if (state.flowing && state.length === 0 && !state.sync) {
              stream.emit('data', chunk);
              stream.read(0);
            } else {
              // update the buffer info.
              state.length += state.objectMode ? 1 : chunk.length;
              if (addToFront) state.buffer.unshift(chunk);
              else state.buffer.push(chunk);

              if (state.needReadable) emitReadable(stream);
            }
            maybeReadMore(stream, state);
          }

          function chunkInvalid(state, chunk) {
            var er;
            if (
              !_isUint8Array(chunk) &&
              typeof chunk !== 'string' &&
              chunk !== undefined &&
              !state.objectMode
            ) {
              er = new TypeError('Invalid non-string/buffer chunk');
            }
            return er;
          }

          // if it's past the high water mark, we can push in some more.
          // Also, if we have no data yet, we can stand some
          // more bytes.  This is to work around cases where hwm=0,
          // such as the repl.  Also, if the push() triggered a
          // readable event, and the user called read(largeNumber) such that
          // needReadable was set, then we ought to push more, so that another
          // 'readable' event will be triggered.
          function needMoreData(state) {
            return (
              !state.ended &&
              (state.needReadable ||
                state.length < state.highWaterMark ||
                state.length === 0)
            );
          }

          Readable.prototype.isPaused = function () {
            return this._readableState.flowing === false;
          };

          // backwards compatibility.
          Readable.prototype.setEncoding = function (enc) {
            if (!StringDecoder)
              StringDecoder = __webpack_require__(
                /*! string_decoder/ */ '../node_modules/string_decoder/lib/string_decoder.js'
              ).StringDecoder;
            this._readableState.decoder = new StringDecoder(enc);
            this._readableState.encoding = enc;
            return this;
          };

          // Don't raise the hwm > 8MB
          var MAX_HWM = 0x800000;
          function computeNewHighWaterMark(n) {
            if (n >= MAX_HWM) {
              n = MAX_HWM;
            } else {
              // Get the next highest power of 2 to prevent increasing hwm excessively in
              // tiny amounts
              n--;
              n |= n >>> 1;
              n |= n >>> 2;
              n |= n >>> 4;
              n |= n >>> 8;
              n |= n >>> 16;
              n++;
            }
            return n;
          }

          // This function is designed to be inlinable, so please take care when making
          // changes to the function body.
          function howMuchToRead(n, state) {
            if (n <= 0 || (state.length === 0 && state.ended)) return 0;
            if (state.objectMode) return 1;
            if (n !== n) {
              // Only flow one buffer at a time
              if (state.flowing && state.length)
                return state.buffer.head.data.length;
              else return state.length;
            }
            // If we're asking for more than the current hwm, then raise the hwm.
            if (n > state.highWaterMark)
              state.highWaterMark = computeNewHighWaterMark(n);
            if (n <= state.length) return n;
            // Don't have enough
            if (!state.ended) {
              state.needReadable = true;
              return 0;
            }
            return state.length;
          }

          // you can override either this method, or the async _read(n) below.
          Readable.prototype.read = function (n) {
            debug('read', n);
            n = parseInt(n, 10);
            var state = this._readableState;
            var nOrig = n;

            if (n !== 0) state.emittedReadable = false;

            // if we're doing read(0) to trigger a readable event, but we
            // already have a bunch of data in the buffer, then just trigger
            // the 'readable' event and move on.
            if (
              n === 0 &&
              state.needReadable &&
              (state.length >= state.highWaterMark || state.ended)
            ) {
              debug('read: emitReadable', state.length, state.ended);
              if (state.length === 0 && state.ended) endReadable(this);
              else emitReadable(this);
              return null;
            }

            n = howMuchToRead(n, state);

            // if we've ended, and we're now clear, then finish it up.
            if (n === 0 && state.ended) {
              if (state.length === 0) endReadable(this);
              return null;
            }

            // All the actual chunk generation logic needs to be
            // *below* the call to _read.  The reason is that in certain
            // synthetic stream cases, such as passthrough streams, _read
            // may be a completely synchronous operation which may change
            // the state of the read buffer, providing enough data when
            // before there was *not* enough.
            //
            // So, the steps are:
            // 1. Figure out what the state of things will be after we do
            // a read from the buffer.
            //
            // 2. If that resulting state will trigger a _read, then call _read.
            // Note that this may be asynchronous, or synchronous.  Yes, it is
            // deeply ugly to write APIs this way, but that still doesn't mean
            // that the Readable class should behave improperly, as streams are
            // designed to be sync/async agnostic.
            // Take note if the _read call is sync or async (ie, if the read call
            // has returned yet), so that we know whether or not it's safe to emit
            // 'readable' etc.
            //
            // 3. Actually pull the requested chunks out of the buffer and return.

            // if we need a readable event, then we need to do some reading.
            var doRead = state.needReadable;
            debug('need readable', doRead);

            // if we currently have less than the highWaterMark, then also read some
            if (state.length === 0 || state.length - n < state.highWaterMark) {
              doRead = true;
              debug('length less than watermark', doRead);
            }

            // however, if we've ended, then there's no point, and if we're already
            // reading, then it's unnecessary.
            if (state.ended || state.reading) {
              doRead = false;
              debug('reading or ended', doRead);
            } else if (doRead) {
              debug('do read');
              state.reading = true;
              state.sync = true;
              // if the length is currently zero, then we *need* a readable event.
              if (state.length === 0) state.needReadable = true;
              // call internal read method
              this._read(state.highWaterMark);
              state.sync = false;
              // If _read pushed data synchronously, then `reading` will be false,
              // and we need to re-evaluate how much data we can return to the user.
              if (!state.reading) n = howMuchToRead(nOrig, state);
            }

            var ret;
            if (n > 0) ret = fromList(n, state);
            else ret = null;

            if (ret === null) {
              state.needReadable = true;
              n = 0;
            } else {
              state.length -= n;
            }

            if (state.length === 0) {
              // If we have nothing in the buffer, then we want to know
              // as soon as we *do* get something into the buffer.
              if (!state.ended) state.needReadable = true;

              // If we tried to read() past the EOF, then emit end on the next tick.
              if (nOrig !== n && state.ended) endReadable(this);
            }

            if (ret !== null) this.emit('data', ret);

            return ret;
          };

          function onEofChunk(stream, state) {
            if (state.ended) return;
            if (state.decoder) {
              var chunk = state.decoder.end();
              if (chunk && chunk.length) {
                state.buffer.push(chunk);
                state.length += state.objectMode ? 1 : chunk.length;
              }
            }
            state.ended = true;

            // emit 'readable' now to make sure it gets picked up.
            emitReadable(stream);
          }

          // Don't emit readable right away in sync mode, because this can trigger
          // another read() call => stack overflow.  This way, it might trigger
          // a nextTick recursion warning, but that's not so bad.
          function emitReadable(stream) {
            var state = stream._readableState;
            state.needReadable = false;
            if (!state.emittedReadable) {
              debug('emitReadable', state.flowing);
              state.emittedReadable = true;
              if (state.sync) pna.nextTick(emitReadable_, stream);
              else emitReadable_(stream);
            }
          }

          function emitReadable_(stream) {
            debug('emit readable');
            stream.emit('readable');
            flow(stream);
          }

          // at this point, the user has presumably seen the 'readable' event,
          // and called read() to consume some data.  that may have triggered
          // in turn another _read(n) call, in which case reading = true if
          // it's in progress.
          // However, if we're not ended, or reading, and the length < hwm,
          // then go ahead and try to read some more preemptively.
          function maybeReadMore(stream, state) {
            if (!state.readingMore) {
              state.readingMore = true;
              pna.nextTick(maybeReadMore_, stream, state);
            }
          }

          function maybeReadMore_(stream, state) {
            var len = state.length;
            while (
              !state.reading &&
              !state.flowing &&
              !state.ended &&
              state.length < state.highWaterMark
            ) {
              debug('maybeReadMore read 0');
              stream.read(0);
              if (len === state.length)
                // didn't get any data, stop spinning.
                break;
              else len = state.length;
            }
            state.readingMore = false;
          }

          // abstract method.  to be overridden in specific implementation classes.
          // call cb(er, data) where data is <= n in length.
          // for virtual (non-string, non-buffer) streams, "length" is somewhat
          // arbitrary, and perhaps not very meaningful.
          Readable.prototype._read = function (n) {
            this.emit('error', new Error('_read() is not implemented'));
          };

          Readable.prototype.pipe = function (dest, pipeOpts) {
            var src = this;
            var state = this._readableState;

            switch (state.pipesCount) {
              case 0:
                state.pipes = dest;
                break;
              case 1:
                state.pipes = [state.pipes, dest];
                break;
              default:
                state.pipes.push(dest);
                break;
            }
            state.pipesCount += 1;
            debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

            var doEnd =
              (!pipeOpts || pipeOpts.end !== false) &&
              dest !== process.stdout &&
              dest !== process.stderr;

            var endFn = doEnd ? onend : unpipe;
            if (state.endEmitted) pna.nextTick(endFn);
            else src.once('end', endFn);

            dest.on('unpipe', onunpipe);
            function onunpipe(readable, unpipeInfo) {
              debug('onunpipe');
              if (readable === src) {
                if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
                  unpipeInfo.hasUnpiped = true;
                  cleanup();
                }
              }
            }

            function onend() {
              debug('onend');
              dest.end();
            }

            // when the dest drains, it reduces the awaitDrain counter
            // on the source.  This would be more elegant with a .once()
            // handler in flow(), but adding and removing repeatedly is
            // too slow.
            var ondrain = pipeOnDrain(src);
            dest.on('drain', ondrain);

            var cleanedUp = false;
            function cleanup() {
              debug('cleanup');
              // cleanup event handlers once the pipe is broken
              dest.removeListener('close', onclose);
              dest.removeListener('finish', onfinish);
              dest.removeListener('drain', ondrain);
              dest.removeListener('error', onerror);
              dest.removeListener('unpipe', onunpipe);
              src.removeListener('end', onend);
              src.removeListener('end', unpipe);
              src.removeListener('data', ondata);

              cleanedUp = true;

              // if the reader is waiting for a drain event from this
              // specific writer, then it would cause it to never start
              // flowing again.
              // So, if this is awaiting a drain, then we just call it now.
              // If we don't know, then assume that we are waiting for one.
              if (
                state.awaitDrain &&
                (!dest._writableState || dest._writableState.needDrain)
              )
                ondrain();
            }

            // If the user pushes more data while we're writing to dest then we'll end up
            // in ondata again. However, we only want to increase awaitDrain once because
            // dest will only emit one 'drain' event for the multiple writes.
            // => Introduce a guard on increasing awaitDrain.
            var increasedAwaitDrain = false;
            src.on('data', ondata);
            function ondata(chunk) {
              debug('ondata');
              increasedAwaitDrain = false;
              var ret = dest.write(chunk);
              if (false === ret && !increasedAwaitDrain) {
                // If the user unpiped during `dest.write()`, it is possible
                // to get stuck in a permanently paused state if that write
                // also returned false.
                // => Check whether `dest` is still a piping destination.
                if (
                  ((state.pipesCount === 1 && state.pipes === dest) ||
                    (state.pipesCount > 1 &&
                      indexOf(state.pipes, dest) !== -1)) &&
                  !cleanedUp
                ) {
                  debug(
                    'false write response, pause',
                    src._readableState.awaitDrain
                  );
                  src._readableState.awaitDrain++;
                  increasedAwaitDrain = true;
                }
                src.pause();
              }
            }

            // if the dest has an error, then stop piping into it.
            // however, don't suppress the throwing behavior for this.
            function onerror(er) {
              debug('onerror', er);
              unpipe();
              dest.removeListener('error', onerror);
              if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
            }

            // Make sure our error handler is attached before userland ones.
            prependListener(dest, 'error', onerror);

            // Both close and finish should trigger unpipe, but only once.
            function onclose() {
              dest.removeListener('finish', onfinish);
              unpipe();
            }
            dest.once('close', onclose);
            function onfinish() {
              debug('onfinish');
              dest.removeListener('close', onclose);
              unpipe();
            }
            dest.once('finish', onfinish);

            function unpipe() {
              debug('unpipe');
              src.unpipe(dest);
            }

            // tell the dest that it's being piped to
            dest.emit('pipe', src);

            // start the flow if it hasn't been started already.
            if (!state.flowing) {
              debug('pipe resume');
              src.resume();
            }

            return dest;
          };

          function pipeOnDrain(src) {
            return function () {
              var state = src._readableState;
              debug('pipeOnDrain', state.awaitDrain);
              if (state.awaitDrain) state.awaitDrain--;
              if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
                state.flowing = true;
                flow(src);
              }
            };
          }

          Readable.prototype.unpipe = function (dest) {
            var state = this._readableState;
            var unpipeInfo = { hasUnpiped: false };

            // if we're not piping anywhere, then do nothing.
            if (state.pipesCount === 0) return this;

            // just one destination.  most common case.
            if (state.pipesCount === 1) {
              // passed in one, but it's not the right one.
              if (dest && dest !== state.pipes) return this;

              if (!dest) dest = state.pipes;

              // got a match.
              state.pipes = null;
              state.pipesCount = 0;
              state.flowing = false;
              if (dest) dest.emit('unpipe', this, unpipeInfo);
              return this;
            }

            // slow case. multiple pipe destinations.

            if (!dest) {
              // remove all.
              var dests = state.pipes;
              var len = state.pipesCount;
              state.pipes = null;
              state.pipesCount = 0;
              state.flowing = false;

              for (var i = 0; i < len; i++) {
                dests[i].emit('unpipe', this, unpipeInfo);
              }
              return this;
            }

            // try to find the right one.
            var index = indexOf(state.pipes, dest);
            if (index === -1) return this;

            state.pipes.splice(index, 1);
            state.pipesCount -= 1;
            if (state.pipesCount === 1) state.pipes = state.pipes[0];

            dest.emit('unpipe', this, unpipeInfo);

            return this;
          };

          // set up data events if they are asked for
          // Ensure readable listeners eventually get something
          Readable.prototype.on = function (ev, fn) {
            var res = Stream.prototype.on.call(this, ev, fn);

            if (ev === 'data') {
              // Start flowing on next tick if stream isn't explicitly paused
              if (this._readableState.flowing !== false) this.resume();
            } else if (ev === 'readable') {
              var state = this._readableState;
              if (!state.endEmitted && !state.readableListening) {
                state.readableListening = state.needReadable = true;
                state.emittedReadable = false;
                if (!state.reading) {
                  pna.nextTick(nReadingNextTick, this);
                } else if (state.length) {
                  emitReadable(this);
                }
              }
            }

            return res;
          };
          Readable.prototype.addListener = Readable.prototype.on;

          function nReadingNextTick(self) {
            debug('readable nexttick read 0');
            self.read(0);
          }

          // pause() and resume() are remnants of the legacy readable stream API
          // If the user uses them, then switch into old mode.
          Readable.prototype.resume = function () {
            var state = this._readableState;
            if (!state.flowing) {
              debug('resume');
              state.flowing = true;
              resume(this, state);
            }
            return this;
          };

          function resume(stream, state) {
            if (!state.resumeScheduled) {
              state.resumeScheduled = true;
              pna.nextTick(resume_, stream, state);
            }
          }

          function resume_(stream, state) {
            if (!state.reading) {
              debug('resume read 0');
              stream.read(0);
            }

            state.resumeScheduled = false;
            state.awaitDrain = 0;
            stream.emit('resume');
            flow(stream);
            if (state.flowing && !state.reading) stream.read(0);
          }

          Readable.prototype.pause = function () {
            debug('call pause flowing=%j', this._readableState.flowing);
            if (false !== this._readableState.flowing) {
              debug('pause');
              this._readableState.flowing = false;
              this.emit('pause');
            }
            return this;
          };

          function flow(stream) {
            var state = stream._readableState;
            debug('flow', state.flowing);
            while (state.flowing && stream.read() !== null) {}
          }

          // wrap an old-style stream as the async data source.
          // This is *not* part of the readable stream interface.
          // It is an ugly unfortunate mess of history.
          Readable.prototype.wrap = function (stream) {
            var _this = this;

            var state = this._readableState;
            var paused = false;

            stream.on('end', function () {
              debug('wrapped end');
              if (state.decoder && !state.ended) {
                var chunk = state.decoder.end();
                if (chunk && chunk.length) _this.push(chunk);
              }

              _this.push(null);
            });

            stream.on('data', function (chunk) {
              debug('wrapped data');
              if (state.decoder) chunk = state.decoder.write(chunk);

              // don't skip over falsy values in objectMode
              if (state.objectMode && (chunk === null || chunk === undefined))
                return;
              else if (!state.objectMode && (!chunk || !chunk.length)) return;

              var ret = _this.push(chunk);
              if (!ret) {
                paused = true;
                stream.pause();
              }
            });

            // proxy all the other methods.
            // important when wrapping filters and duplexes.
            for (var i in stream) {
              if (this[i] === undefined && typeof stream[i] === 'function') {
                this[i] = (function (method) {
                  return function () {
                    return stream[method].apply(stream, arguments);
                  };
                })(i);
              }
            }

            // proxy certain important events.
            for (var n = 0; n < kProxyEvents.length; n++) {
              stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
            }

            // when we try to consume some more bytes, simply unpause the
            // underlying stream.
            this._read = function (n) {
              debug('wrapped _read', n);
              if (paused) {
                paused = false;
                stream.resume();
              }
            };

            return this;
          };

          Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function () {
              return this._readableState.highWaterMark;
            },
          });

          // exposed for testing purposes only.
          Readable._fromList = fromList;

          // Pluck off n bytes from an array of buffers.
          // Length is the combined lengths of all the buffers in the list.
          // This function is designed to be inlinable, so please take care when making
          // changes to the function body.
          function fromList(n, state) {
            // nothing buffered
            if (state.length === 0) return null;

            var ret;
            if (state.objectMode) ret = state.buffer.shift();
            else if (!n || n >= state.length) {
              // read it all, truncate the list
              if (state.decoder) ret = state.buffer.join('');
              else if (state.buffer.length === 1) ret = state.buffer.head.data;
              else ret = state.buffer.concat(state.length);
              state.buffer.clear();
            } else {
              // read part of list
              ret = fromListPartial(n, state.buffer, state.decoder);
            }

            return ret;
          }

          // Extracts only enough buffered data to satisfy the amount requested.
          // This function is designed to be inlinable, so please take care when making
          // changes to the function body.
          function fromListPartial(n, list, hasStrings) {
            var ret;
            if (n < list.head.data.length) {
              // slice is the same for buffers and strings
              ret = list.head.data.slice(0, n);
              list.head.data = list.head.data.slice(n);
            } else if (n === list.head.data.length) {
              // first chunk is a perfect match
              ret = list.shift();
            } else {
              // result spans more than one buffer
              ret = hasStrings
                ? copyFromBufferString(n, list)
                : copyFromBuffer(n, list);
            }
            return ret;
          }

          // Copies a specified amount of characters from the list of buffered data
          // chunks.
          // This function is designed to be inlinable, so please take care when making
          // changes to the function body.
          function copyFromBufferString(n, list) {
            var p = list.head;
            var c = 1;
            var ret = p.data;
            n -= ret.length;
            while ((p = p.next)) {
              var str = p.data;
              var nb = n > str.length ? str.length : n;
              if (nb === str.length) ret += str;
              else ret += str.slice(0, n);
              n -= nb;
              if (n === 0) {
                if (nb === str.length) {
                  ++c;
                  if (p.next) list.head = p.next;
                  else list.head = list.tail = null;
                } else {
                  list.head = p;
                  p.data = str.slice(nb);
                }
                break;
              }
              ++c;
            }
            list.length -= c;
            return ret;
          }

          // Copies a specified amount of bytes from the list of buffered data chunks.
          // This function is designed to be inlinable, so please take care when making
          // changes to the function body.
          function copyFromBuffer(n, list) {
            var ret = Buffer.allocUnsafe(n);
            var p = list.head;
            var c = 1;
            p.data.copy(ret);
            n -= p.data.length;
            while ((p = p.next)) {
              var buf = p.data;
              var nb = n > buf.length ? buf.length : n;
              buf.copy(ret, ret.length - n, 0, nb);
              n -= nb;
              if (n === 0) {
                if (nb === buf.length) {
                  ++c;
                  if (p.next) list.head = p.next;
                  else list.head = list.tail = null;
                } else {
                  list.head = p;
                  p.data = buf.slice(nb);
                }
                break;
              }
              ++c;
            }
            list.length -= c;
            return ret;
          }

          function endReadable(stream) {
            var state = stream._readableState;

            // If we get here before consuming all the bytes, then that is a
            // bug in node.  Should never happen.
            if (state.length > 0)
              throw new Error('"endReadable()" called on non-empty stream');

            if (!state.endEmitted) {
              state.ended = true;
              pna.nextTick(endReadableNT, state, stream);
            }
          }

          function endReadableNT(state, stream) {
            // Check that we didn't get one last unshift.
            if (!state.endEmitted && state.length === 0) {
              state.endEmitted = true;
              stream.readable = false;
              stream.emit('end');
            }
          }

          function indexOf(xs, x) {
            for (var i = 0, l = xs.length; i < l; i++) {
              if (xs[i] === x) return i;
            }
            return -1;
          }
          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../webpack/buildin/global.js */ '../node_modules/webpack/buildin/global.js'
          ),
          __webpack_require__(
            /*! ./../../process/browser.js */ '../node_modules/process/browser.js'
          )
        ));

        /***/
      },

    /***/ '../node_modules/readable-stream/lib/_stream_transform.js':
      /*!****************************************************************!*\
  !*** ../node_modules/readable-stream/lib/_stream_transform.js ***!
  \****************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        // a transform stream is a readable/writable stream where you do
        // something with the data.  Sometimes it's called a "filter",
        // but that's not a great name for it, since that implies a thing where
        // some bits pass through, and others are simply ignored.  (That would
        // be a valid example of a transform, of course.)
        //
        // While the output is causally related to the input, it's not a
        // necessarily symmetric or synchronous transformation.  For example,
        // a zlib stream might take multiple plain-text writes(), and then
        // emit a single compressed chunk some time in the future.
        //
        // Here's how this works:
        //
        // The Transform stream has all the aspects of the readable and writable
        // stream classes.  When you write(chunk), that calls _write(chunk,cb)
        // internally, and returns false if there's a lot of pending writes
        // buffered up.  When you call read(), that calls _read(n) until
        // there's enough pending readable data buffered up.
        //
        // In a transform stream, the written data is placed in a buffer.  When
        // _read(n) is called, it transforms the queued up data, calling the
        // buffered _write cb's as it consumes chunks.  If consuming a single
        // written chunk would result in multiple output chunks, then the first
        // outputted bit calls the readcb, and subsequent chunks just go into
        // the read buffer, and will cause it to emit 'readable' if necessary.
        //
        // This way, back-pressure is actually determined by the reading side,
        // since _read has to be called to start processing a new chunk.  However,
        // a pathological inflate type of transform can cause excessive buffering
        // here.  For example, imagine a stream where every byte of input is
        // interpreted as an integer from 0-255, and then results in that many
        // bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
        // 1kb of data being output.  In this case, you could write a very small
        // amount of input, and end up with a very large amount of output.  In
        // such a pathological inflating mechanism, there'd be no way to tell
        // the system to stop doing the transform.  A single 4MB write could
        // cause the system to run out of memory.
        //
        // However, even in such a pathological case, only a single written chunk
        // would be consumed, and then the rest would wait (un-transformed) until
        // the results of the previous transformed chunk were consumed.

        module.exports = Transform;

        var Duplex = __webpack_require__(
          /*! ./_stream_duplex */ '../node_modules/readable-stream/lib/_stream_duplex.js'
        );

        /*<replacement>*/
        var util = Object.create(
          __webpack_require__(
            /*! core-util-is */ '../node_modules/core-util-is/lib/util.js'
          )
        );
        util.inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );
        /*</replacement>*/

        util.inherits(Transform, Duplex);

        function afterTransform(er, data) {
          var ts = this._transformState;
          ts.transforming = false;

          var cb = ts.writecb;

          if (!cb) {
            return this.emit(
              'error',
              new Error('write callback called multiple times')
            );
          }

          ts.writechunk = null;
          ts.writecb = null;

          if (data != null)
            // single equals check for both `null` and `undefined`
            this.push(data);

          cb(er);

          var rs = this._readableState;
          rs.reading = false;
          if (rs.needReadable || rs.length < rs.highWaterMark) {
            this._read(rs.highWaterMark);
          }
        }

        function Transform(options) {
          if (!(this instanceof Transform)) return new Transform(options);

          Duplex.call(this, options);

          this._transformState = {
            afterTransform: afterTransform.bind(this),
            needTransform: false,
            transforming: false,
            writecb: null,
            writechunk: null,
            writeencoding: null,
          };

          // start out asking for a readable event once data is transformed.
          this._readableState.needReadable = true;

          // we have implemented the _read method, and done the other things
          // that Readable wants before the first _read call, so unset the
          // sync guard flag.
          this._readableState.sync = false;

          if (options) {
            if (typeof options.transform === 'function')
              this._transform = options.transform;

            if (typeof options.flush === 'function')
              this._flush = options.flush;
          }

          // When the writable side finishes, then flush out anything remaining.
          this.on('prefinish', prefinish);
        }

        function prefinish() {
          var _this = this;

          if (typeof this._flush === 'function') {
            this._flush(function (er, data) {
              done(_this, er, data);
            });
          } else {
            done(this, null, null);
          }
        }

        Transform.prototype.push = function (chunk, encoding) {
          this._transformState.needTransform = false;
          return Duplex.prototype.push.call(this, chunk, encoding);
        };

        // This is the part where you do stuff!
        // override this function in implementation classes.
        // 'chunk' is an input chunk.
        //
        // Call `push(newChunk)` to pass along transformed output
        // to the readable side.  You may call 'push' zero or more times.
        //
        // Call `cb(err)` when you are done with this chunk.  If you pass
        // an error, then that'll put the hurt on the whole operation.  If you
        // never call cb(), then you'll never get another chunk.
        Transform.prototype._transform = function (chunk, encoding, cb) {
          throw new Error('_transform() is not implemented');
        };

        Transform.prototype._write = function (chunk, encoding, cb) {
          var ts = this._transformState;
          ts.writecb = cb;
          ts.writechunk = chunk;
          ts.writeencoding = encoding;
          if (!ts.transforming) {
            var rs = this._readableState;
            if (
              ts.needTransform ||
              rs.needReadable ||
              rs.length < rs.highWaterMark
            )
              this._read(rs.highWaterMark);
          }
        };

        // Doesn't matter what the args are here.
        // _transform does all the work.
        // That we got here means that the readable side wants more data.
        Transform.prototype._read = function (n) {
          var ts = this._transformState;

          if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
            ts.transforming = true;
            this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
          } else {
            // mark that we need a transform, so that any data that comes in
            // will get processed, now that we've asked for it.
            ts.needTransform = true;
          }
        };

        Transform.prototype._destroy = function (err, cb) {
          var _this2 = this;

          Duplex.prototype._destroy.call(this, err, function (err2) {
            cb(err2);
            _this2.emit('close');
          });
        };

        function done(stream, er, data) {
          if (er) return stream.emit('error', er);

          if (data != null)
            // single equals check for both `null` and `undefined`
            stream.push(data);

          // if there's nothing in the write buffer, then that means
          // that nothing more will ever be provided
          if (stream._writableState.length)
            throw new Error('Calling transform done when ws.length != 0');

          if (stream._transformState.transforming)
            throw new Error('Calling transform done when still transforming');

          return stream.push(null);
        }

        /***/
      },

    /***/ '../node_modules/readable-stream/lib/_stream_writable.js':
      /*!***************************************************************!*\
  !*** ../node_modules/readable-stream/lib/_stream_writable.js ***!
  \***************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (process, setImmediate, global) {
          // Copyright Joyent, Inc. and other Node contributors.
          //
          // Permission is hereby granted, free of charge, to any person obtaining a
          // copy of this software and associated documentation files (the
          // "Software"), to deal in the Software without restriction, including
          // without limitation the rights to use, copy, modify, merge, publish,
          // distribute, sublicense, and/or sell copies of the Software, and to permit
          // persons to whom the Software is furnished to do so, subject to the
          // following conditions:
          //
          // The above copyright notice and this permission notice shall be included
          // in all copies or substantial portions of the Software.
          //
          // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
          // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
          // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
          // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
          // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
          // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
          // USE OR OTHER DEALINGS IN THE SOFTWARE.

          // A bit simpler than readable streams.
          // Implement an async ._write(chunk, encoding, cb), and it'll handle all
          // the drain event emission and buffering.

          /*<replacement>*/

          var pna = __webpack_require__(
            /*! process-nextick-args */ '../node_modules/process-nextick-args/index.js'
          );
          /*</replacement>*/

          module.exports = Writable;

          /* <replacement> */
          function WriteReq(chunk, encoding, cb) {
            this.chunk = chunk;
            this.encoding = encoding;
            this.callback = cb;
            this.next = null;
          }

          // It seems a linked list but it is not
          // there will be only 2 of these for each stream
          function CorkedRequest(state) {
            var _this = this;

            this.next = null;
            this.entry = null;
            this.finish = function () {
              onCorkedFinish(_this, state);
            };
          }
          /* </replacement> */

          /*<replacement>*/
          var asyncWrite =
            !process.browser &&
            ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1
              ? setImmediate
              : pna.nextTick;
          /*</replacement>*/

          /*<replacement>*/
          var Duplex;
          /*</replacement>*/

          Writable.WritableState = WritableState;

          /*<replacement>*/
          var util = Object.create(
            __webpack_require__(
              /*! core-util-is */ '../node_modules/core-util-is/lib/util.js'
            )
          );
          util.inherits = __webpack_require__(
            /*! inherits */ '../node_modules/inherits/inherits_browser.js'
          );
          /*</replacement>*/

          /*<replacement>*/
          var internalUtil = {
            deprecate: __webpack_require__(
              /*! util-deprecate */ '../node_modules/util-deprecate/browser.js'
            ),
          };
          /*</replacement>*/

          /*<replacement>*/
          var Stream = __webpack_require__(
            /*! ./internal/streams/stream */ '../node_modules/readable-stream/lib/internal/streams/stream-browser.js'
          );
          /*</replacement>*/

          /*<replacement>*/

          var Buffer = __webpack_require__(
            /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
          ).Buffer;
          var OurUint8Array = global.Uint8Array || function () {};
          function _uint8ArrayToBuffer(chunk) {
            return Buffer.from(chunk);
          }
          function _isUint8Array(obj) {
            return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
          }

          /*</replacement>*/

          var destroyImpl = __webpack_require__(
            /*! ./internal/streams/destroy */ '../node_modules/readable-stream/lib/internal/streams/destroy.js'
          );

          util.inherits(Writable, Stream);

          function nop() {}

          function WritableState(options, stream) {
            Duplex =
              Duplex ||
              __webpack_require__(
                /*! ./_stream_duplex */ '../node_modules/readable-stream/lib/_stream_duplex.js'
              );

            options = options || {};

            // Duplex streams are both readable and writable, but share
            // the same options object.
            // However, some cases require setting options to different
            // values for the readable and the writable sides of the duplex stream.
            // These options can be provided separately as readableXXX and writableXXX.
            var isDuplex = stream instanceof Duplex;

            // object stream flag to indicate whether or not this stream
            // contains buffers or objects.
            this.objectMode = !!options.objectMode;

            if (isDuplex)
              this.objectMode = this.objectMode || !!options.writableObjectMode;

            // the point at which write() starts returning false
            // Note: 0 is a valid value, means that we always return false if
            // the entire buffer is not flushed immediately on write()
            var hwm = options.highWaterMark;
            var writableHwm = options.writableHighWaterMark;
            var defaultHwm = this.objectMode ? 16 : 16 * 1024;

            if (hwm || hwm === 0) this.highWaterMark = hwm;
            else if (isDuplex && (writableHwm || writableHwm === 0))
              this.highWaterMark = writableHwm;
            else this.highWaterMark = defaultHwm;

            // cast to ints.
            this.highWaterMark = Math.floor(this.highWaterMark);

            // if _final has been called
            this.finalCalled = false;

            // drain event flag.
            this.needDrain = false;
            // at the start of calling end()
            this.ending = false;
            // when end() has been called, and returned
            this.ended = false;
            // when 'finish' is emitted
            this.finished = false;

            // has it been destroyed
            this.destroyed = false;

            // should we decode strings into buffers before passing to _write?
            // this is here so that some node-core streams can optimize string
            // handling at a lower level.
            var noDecode = options.decodeStrings === false;
            this.decodeStrings = !noDecode;

            // Crypto is kind of old and crusty.  Historically, its default string
            // encoding is 'binary' so we have to make this configurable.
            // Everything else in the universe uses 'utf8', though.
            this.defaultEncoding = options.defaultEncoding || 'utf8';

            // not an actual buffer we keep track of, but a measurement
            // of how much we're waiting to get pushed to some underlying
            // socket or file.
            this.length = 0;

            // a flag to see when we're in the middle of a write.
            this.writing = false;

            // when true all writes will be buffered until .uncork() call
            this.corked = 0;

            // a flag to be able to tell if the onwrite cb is called immediately,
            // or on a later tick.  We set this to true at first, because any
            // actions that shouldn't happen until "later" should generally also
            // not happen before the first write call.
            this.sync = true;

            // a flag to know if we're processing previously buffered items, which
            // may call the _write() callback in the same tick, so that we don't
            // end up in an overlapped onwrite situation.
            this.bufferProcessing = false;

            // the callback that's passed to _write(chunk,cb)
            this.onwrite = function (er) {
              onwrite(stream, er);
            };

            // the callback that the user supplies to write(chunk,encoding,cb)
            this.writecb = null;

            // the amount that is being written when _write is called.
            this.writelen = 0;

            this.bufferedRequest = null;
            this.lastBufferedRequest = null;

            // number of pending user-supplied write callbacks
            // this must be 0 before 'finish' can be emitted
            this.pendingcb = 0;

            // emit prefinish if the only thing we're waiting for is _write cbs
            // This is relevant for synchronous Transform streams
            this.prefinished = false;

            // True if the error was already emitted and should not be thrown again
            this.errorEmitted = false;

            // count buffered requests
            this.bufferedRequestCount = 0;

            // allocate the first CorkedRequest, there is always
            // one allocated and free to use, and we maintain at most two
            this.corkedRequestsFree = new CorkedRequest(this);
          }

          WritableState.prototype.getBuffer = function getBuffer() {
            var current = this.bufferedRequest;
            var out = [];
            while (current) {
              out.push(current);
              current = current.next;
            }
            return out;
          };

          (function () {
            try {
              Object.defineProperty(WritableState.prototype, 'buffer', {
                get: internalUtil.deprecate(
                  function () {
                    return this.getBuffer();
                  },
                  '_writableState.buffer is deprecated. Use _writableState.getBuffer ' +
                    'instead.',
                  'DEP0003'
                ),
              });
            } catch (_) {}
          })();

          // Test _writableState for inheritance to account for Duplex streams,
          // whose prototype chain only points to Readable.
          var realHasInstance;
          if (
            typeof Symbol === 'function' &&
            Symbol.hasInstance &&
            typeof Function.prototype[Symbol.hasInstance] === 'function'
          ) {
            realHasInstance = Function.prototype[Symbol.hasInstance];
            Object.defineProperty(Writable, Symbol.hasInstance, {
              value: function (object) {
                if (realHasInstance.call(this, object)) return true;
                if (this !== Writable) return false;

                return object && object._writableState instanceof WritableState;
              },
            });
          } else {
            realHasInstance = function (object) {
              return object instanceof this;
            };
          }

          function Writable(options) {
            Duplex =
              Duplex ||
              __webpack_require__(
                /*! ./_stream_duplex */ '../node_modules/readable-stream/lib/_stream_duplex.js'
              );

            // Writable ctor is applied to Duplexes, too.
            // `realHasInstance` is necessary because using plain `instanceof`
            // would return false, as no `_writableState` property is attached.

            // Trying to use the custom `instanceof` for Writable here will also break the
            // Node.js LazyTransform implementation, which has a non-trivial getter for
            // `_writableState` that would lead to infinite recursion.
            if (
              !realHasInstance.call(Writable, this) &&
              !(this instanceof Duplex)
            ) {
              return new Writable(options);
            }

            this._writableState = new WritableState(options, this);

            // legacy.
            this.writable = true;

            if (options) {
              if (typeof options.write === 'function')
                this._write = options.write;

              if (typeof options.writev === 'function')
                this._writev = options.writev;

              if (typeof options.destroy === 'function')
                this._destroy = options.destroy;

              if (typeof options.final === 'function')
                this._final = options.final;
            }

            Stream.call(this);
          }

          // Otherwise people can pipe Writable streams, which is just wrong.
          Writable.prototype.pipe = function () {
            this.emit('error', new Error('Cannot pipe, not readable'));
          };

          function writeAfterEnd(stream, cb) {
            var er = new Error('write after end');
            // TODO: defer error events consistently everywhere, not just the cb
            stream.emit('error', er);
            pna.nextTick(cb, er);
          }

          // Checks that a user-supplied chunk is valid, especially for the particular
          // mode the stream is in. Currently this means that `null` is never accepted
          // and undefined/non-string values are only allowed in object mode.
          function validChunk(stream, state, chunk, cb) {
            var valid = true;
            var er = false;

            if (chunk === null) {
              er = new TypeError('May not write null values to stream');
            } else if (
              typeof chunk !== 'string' &&
              chunk !== undefined &&
              !state.objectMode
            ) {
              er = new TypeError('Invalid non-string/buffer chunk');
            }
            if (er) {
              stream.emit('error', er);
              pna.nextTick(cb, er);
              valid = false;
            }
            return valid;
          }

          Writable.prototype.write = function (chunk, encoding, cb) {
            var state = this._writableState;
            var ret = false;
            var isBuf = !state.objectMode && _isUint8Array(chunk);

            if (isBuf && !Buffer.isBuffer(chunk)) {
              chunk = _uint8ArrayToBuffer(chunk);
            }

            if (typeof encoding === 'function') {
              cb = encoding;
              encoding = null;
            }

            if (isBuf) encoding = 'buffer';
            else if (!encoding) encoding = state.defaultEncoding;

            if (typeof cb !== 'function') cb = nop;

            if (state.ended) writeAfterEnd(this, cb);
            else if (isBuf || validChunk(this, state, chunk, cb)) {
              state.pendingcb++;
              ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
            }

            return ret;
          };

          Writable.prototype.cork = function () {
            var state = this._writableState;

            state.corked++;
          };

          Writable.prototype.uncork = function () {
            var state = this._writableState;

            if (state.corked) {
              state.corked--;

              if (
                !state.writing &&
                !state.corked &&
                !state.finished &&
                !state.bufferProcessing &&
                state.bufferedRequest
              )
                clearBuffer(this, state);
            }
          };

          Writable.prototype.setDefaultEncoding = function setDefaultEncoding(
            encoding
          ) {
            // node::ParseEncoding() requires lower case.
            if (typeof encoding === 'string') encoding = encoding.toLowerCase();
            if (
              !(
                [
                  'hex',
                  'utf8',
                  'utf-8',
                  'ascii',
                  'binary',
                  'base64',
                  'ucs2',
                  'ucs-2',
                  'utf16le',
                  'utf-16le',
                  'raw',
                ].indexOf((encoding + '').toLowerCase()) > -1
              )
            )
              throw new TypeError('Unknown encoding: ' + encoding);
            this._writableState.defaultEncoding = encoding;
            return this;
          };

          function decodeChunk(state, chunk, encoding) {
            if (
              !state.objectMode &&
              state.decodeStrings !== false &&
              typeof chunk === 'string'
            ) {
              chunk = Buffer.from(chunk, encoding);
            }
            return chunk;
          }

          Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function () {
              return this._writableState.highWaterMark;
            },
          });

          // if we're already writing something, then just put this
          // in the queue, and wait our turn.  Otherwise, call _write
          // If we return false, then we need a drain event, so set that flag.
          function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
            if (!isBuf) {
              var newChunk = decodeChunk(state, chunk, encoding);
              if (chunk !== newChunk) {
                isBuf = true;
                encoding = 'buffer';
                chunk = newChunk;
              }
            }
            var len = state.objectMode ? 1 : chunk.length;

            state.length += len;

            var ret = state.length < state.highWaterMark;
            // we must ensure that previous needDrain will not be reset to false.
            if (!ret) state.needDrain = true;

            if (state.writing || state.corked) {
              var last = state.lastBufferedRequest;
              state.lastBufferedRequest = {
                chunk: chunk,
                encoding: encoding,
                isBuf: isBuf,
                callback: cb,
                next: null,
              };
              if (last) {
                last.next = state.lastBufferedRequest;
              } else {
                state.bufferedRequest = state.lastBufferedRequest;
              }
              state.bufferedRequestCount += 1;
            } else {
              doWrite(stream, state, false, len, chunk, encoding, cb);
            }

            return ret;
          }

          function doWrite(stream, state, writev, len, chunk, encoding, cb) {
            state.writelen = len;
            state.writecb = cb;
            state.writing = true;
            state.sync = true;
            if (writev) stream._writev(chunk, state.onwrite);
            else stream._write(chunk, encoding, state.onwrite);
            state.sync = false;
          }

          function onwriteError(stream, state, sync, er, cb) {
            --state.pendingcb;

            if (sync) {
              // defer the callback if we are being called synchronously
              // to avoid piling up things on the stack
              pna.nextTick(cb, er);
              // this can emit finish, and it will always happen
              // after error
              pna.nextTick(finishMaybe, stream, state);
              stream._writableState.errorEmitted = true;
              stream.emit('error', er);
            } else {
              // the caller expect this to happen before if
              // it is async
              cb(er);
              stream._writableState.errorEmitted = true;
              stream.emit('error', er);
              // this can emit finish, but finish must
              // always follow error
              finishMaybe(stream, state);
            }
          }

          function onwriteStateUpdate(state) {
            state.writing = false;
            state.writecb = null;
            state.length -= state.writelen;
            state.writelen = 0;
          }

          function onwrite(stream, er) {
            var state = stream._writableState;
            var sync = state.sync;
            var cb = state.writecb;

            onwriteStateUpdate(state);

            if (er) onwriteError(stream, state, sync, er, cb);
            else {
              // Check if we're actually ready to finish, but don't emit yet
              var finished = needFinish(state);

              if (
                !finished &&
                !state.corked &&
                !state.bufferProcessing &&
                state.bufferedRequest
              ) {
                clearBuffer(stream, state);
              }

              if (sync) {
                /*<replacement>*/
                asyncWrite(afterWrite, stream, state, finished, cb);
                /*</replacement>*/
              } else {
                afterWrite(stream, state, finished, cb);
              }
            }
          }

          function afterWrite(stream, state, finished, cb) {
            if (!finished) onwriteDrain(stream, state);
            state.pendingcb--;
            cb();
            finishMaybe(stream, state);
          }

          // Must force callback to be called on nextTick, so that we don't
          // emit 'drain' before the write() consumer gets the 'false' return
          // value, and has a chance to attach a 'drain' listener.
          function onwriteDrain(stream, state) {
            if (state.length === 0 && state.needDrain) {
              state.needDrain = false;
              stream.emit('drain');
            }
          }

          // if there's something in the buffer waiting, then process it
          function clearBuffer(stream, state) {
            state.bufferProcessing = true;
            var entry = state.bufferedRequest;

            if (stream._writev && entry && entry.next) {
              // Fast case, write everything using _writev()
              var l = state.bufferedRequestCount;
              var buffer = new Array(l);
              var holder = state.corkedRequestsFree;
              holder.entry = entry;

              var count = 0;
              var allBuffers = true;
              while (entry) {
                buffer[count] = entry;
                if (!entry.isBuf) allBuffers = false;
                entry = entry.next;
                count += 1;
              }
              buffer.allBuffers = allBuffers;

              doWrite(
                stream,
                state,
                true,
                state.length,
                buffer,
                '',
                holder.finish
              );

              // doWrite is almost always async, defer these to save a bit of time
              // as the hot path ends with doWrite
              state.pendingcb++;
              state.lastBufferedRequest = null;
              if (holder.next) {
                state.corkedRequestsFree = holder.next;
                holder.next = null;
              } else {
                state.corkedRequestsFree = new CorkedRequest(state);
              }
              state.bufferedRequestCount = 0;
            } else {
              // Slow case, write chunks one-by-one
              while (entry) {
                var chunk = entry.chunk;
                var encoding = entry.encoding;
                var cb = entry.callback;
                var len = state.objectMode ? 1 : chunk.length;

                doWrite(stream, state, false, len, chunk, encoding, cb);
                entry = entry.next;
                state.bufferedRequestCount--;
                // if we didn't call the onwrite immediately, then
                // it means that we need to wait until it does.
                // also, that means that the chunk and cb are currently
                // being processed, so move the buffer counter past them.
                if (state.writing) {
                  break;
                }
              }

              if (entry === null) state.lastBufferedRequest = null;
            }

            state.bufferedRequest = entry;
            state.bufferProcessing = false;
          }

          Writable.prototype._write = function (chunk, encoding, cb) {
            cb(new Error('_write() is not implemented'));
          };

          Writable.prototype._writev = null;

          Writable.prototype.end = function (chunk, encoding, cb) {
            var state = this._writableState;

            if (typeof chunk === 'function') {
              cb = chunk;
              chunk = null;
              encoding = null;
            } else if (typeof encoding === 'function') {
              cb = encoding;
              encoding = null;
            }

            if (chunk !== null && chunk !== undefined)
              this.write(chunk, encoding);

            // .end() fully uncorks
            if (state.corked) {
              state.corked = 1;
              this.uncork();
            }

            // ignore unnecessary end() calls.
            if (!state.ending && !state.finished) endWritable(this, state, cb);
          };

          function needFinish(state) {
            return (
              state.ending &&
              state.length === 0 &&
              state.bufferedRequest === null &&
              !state.finished &&
              !state.writing
            );
          }
          function callFinal(stream, state) {
            stream._final(function (err) {
              state.pendingcb--;
              if (err) {
                stream.emit('error', err);
              }
              state.prefinished = true;
              stream.emit('prefinish');
              finishMaybe(stream, state);
            });
          }
          function prefinish(stream, state) {
            if (!state.prefinished && !state.finalCalled) {
              if (typeof stream._final === 'function') {
                state.pendingcb++;
                state.finalCalled = true;
                pna.nextTick(callFinal, stream, state);
              } else {
                state.prefinished = true;
                stream.emit('prefinish');
              }
            }
          }

          function finishMaybe(stream, state) {
            var need = needFinish(state);
            if (need) {
              prefinish(stream, state);
              if (state.pendingcb === 0) {
                state.finished = true;
                stream.emit('finish');
              }
            }
            return need;
          }

          function endWritable(stream, state, cb) {
            state.ending = true;
            finishMaybe(stream, state);
            if (cb) {
              if (state.finished) pna.nextTick(cb);
              else stream.once('finish', cb);
            }
            state.ended = true;
            stream.writable = false;
          }

          function onCorkedFinish(corkReq, state, err) {
            var entry = corkReq.entry;
            corkReq.entry = null;
            while (entry) {
              var cb = entry.callback;
              state.pendingcb--;
              cb(err);
              entry = entry.next;
            }
            if (state.corkedRequestsFree) {
              state.corkedRequestsFree.next = corkReq;
            } else {
              state.corkedRequestsFree = corkReq;
            }
          }

          Object.defineProperty(Writable.prototype, 'destroyed', {
            get: function () {
              if (this._writableState === undefined) {
                return false;
              }
              return this._writableState.destroyed;
            },
            set: function (value) {
              // we ignore the value if the stream
              // has not been initialized yet
              if (!this._writableState) {
                return;
              }

              // backward compatibility, the user is explicitly
              // managing destroyed
              this._writableState.destroyed = value;
            },
          });

          Writable.prototype.destroy = destroyImpl.destroy;
          Writable.prototype._undestroy = destroyImpl.undestroy;
          Writable.prototype._destroy = function (err, cb) {
            this.end();
            cb(err);
          };
          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../process/browser.js */ '../node_modules/process/browser.js'
          ),
          __webpack_require__(
            /*! ./../../timers-browserify/main.js */ '../node_modules/timers-browserify/main.js'
          ).setImmediate,
          __webpack_require__(
            /*! ./../../webpack/buildin/global.js */ '../node_modules/webpack/buildin/global.js'
          )
        ));

        /***/
      },

    /***/ '../node_modules/readable-stream/lib/internal/streams/BufferList.js':
      /*!**************************************************************************!*\
  !*** ../node_modules/readable-stream/lib/internal/streams/BufferList.js ***!
  \**************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;
        var util = __webpack_require__(/*! util */ 4);

        function copyBuffer(src, target, offset) {
          src.copy(target, offset);
        }

        module.exports = (function () {
          function BufferList() {
            _classCallCheck(this, BufferList);

            this.head = null;
            this.tail = null;
            this.length = 0;
          }

          BufferList.prototype.push = function push(v) {
            var entry = { data: v, next: null };
            if (this.length > 0) this.tail.next = entry;
            else this.head = entry;
            this.tail = entry;
            ++this.length;
          };

          BufferList.prototype.unshift = function unshift(v) {
            var entry = { data: v, next: this.head };
            if (this.length === 0) this.tail = entry;
            this.head = entry;
            ++this.length;
          };

          BufferList.prototype.shift = function shift() {
            if (this.length === 0) return;
            var ret = this.head.data;
            if (this.length === 1) this.head = this.tail = null;
            else this.head = this.head.next;
            --this.length;
            return ret;
          };

          BufferList.prototype.clear = function clear() {
            this.head = this.tail = null;
            this.length = 0;
          };

          BufferList.prototype.join = function join(s) {
            if (this.length === 0) return '';
            var p = this.head;
            var ret = '' + p.data;
            while ((p = p.next)) {
              ret += s + p.data;
            }
            return ret;
          };

          BufferList.prototype.concat = function concat(n) {
            if (this.length === 0) return Buffer.alloc(0);
            if (this.length === 1) return this.head.data;
            var ret = Buffer.allocUnsafe(n >>> 0);
            var p = this.head;
            var i = 0;
            while (p) {
              copyBuffer(p.data, ret, i);
              i += p.data.length;
              p = p.next;
            }
            return ret;
          };

          return BufferList;
        })();

        if (util && util.inspect && util.inspect.custom) {
          module.exports.prototype[util.inspect.custom] = function () {
            var obj = util.inspect({ length: this.length });
            return this.constructor.name + ' ' + obj;
          };
        }

        /***/
      },

    /***/ '../node_modules/readable-stream/lib/internal/streams/destroy.js':
      /*!***********************************************************************!*\
  !*** ../node_modules/readable-stream/lib/internal/streams/destroy.js ***!
  \***********************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        /*<replacement>*/

        var pna = __webpack_require__(
          /*! process-nextick-args */ '../node_modules/process-nextick-args/index.js'
        );
        /*</replacement>*/

        // undocumented cb() API, needed for core, not for public API
        function destroy(err, cb) {
          var _this = this;

          var readableDestroyed =
            this._readableState && this._readableState.destroyed;
          var writableDestroyed =
            this._writableState && this._writableState.destroyed;

          if (readableDestroyed || writableDestroyed) {
            if (cb) {
              cb(err);
            } else if (
              err &&
              (!this._writableState || !this._writableState.errorEmitted)
            ) {
              pna.nextTick(emitErrorNT, this, err);
            }
            return this;
          }

          // we set destroyed to true before firing error callbacks in order
          // to make it re-entrance safe in case destroy() is called within callbacks

          if (this._readableState) {
            this._readableState.destroyed = true;
          }

          // if this is a duplex stream mark the writable part as destroyed as well
          if (this._writableState) {
            this._writableState.destroyed = true;
          }

          this._destroy(err || null, function (err) {
            if (!cb && err) {
              pna.nextTick(emitErrorNT, _this, err);
              if (_this._writableState) {
                _this._writableState.errorEmitted = true;
              }
            } else if (cb) {
              cb(err);
            }
          });

          return this;
        }

        function undestroy() {
          if (this._readableState) {
            this._readableState.destroyed = false;
            this._readableState.reading = false;
            this._readableState.ended = false;
            this._readableState.endEmitted = false;
          }

          if (this._writableState) {
            this._writableState.destroyed = false;
            this._writableState.ended = false;
            this._writableState.ending = false;
            this._writableState.finished = false;
            this._writableState.errorEmitted = false;
          }
        }

        function emitErrorNT(self, err) {
          self.emit('error', err);
        }

        module.exports = {
          destroy: destroy,
          undestroy: undestroy,
        };

        /***/
      },

    /***/ '../node_modules/readable-stream/lib/internal/streams/stream-browser.js':
      /*!******************************************************************************!*\
  !*** ../node_modules/readable-stream/lib/internal/streams/stream-browser.js ***!
  \******************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! events */ '../node_modules/events/events.js'
        ).EventEmitter;

        /***/
      },

    /***/ '../node_modules/readable-stream/passthrough.js':
      /*!******************************************************!*\
  !*** ../node_modules/readable-stream/passthrough.js ***!
  \******************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! ./readable */ '../node_modules/readable-stream/readable-browser.js'
        ).PassThrough;

        /***/
      },

    /***/ '../node_modules/readable-stream/readable-browser.js':
      /*!***********************************************************!*\
  !*** ../node_modules/readable-stream/readable-browser.js ***!
  \***********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        exports = module.exports = __webpack_require__(
          /*! ./lib/_stream_readable.js */ '../node_modules/readable-stream/lib/_stream_readable.js'
        );
        exports.Stream = exports;
        exports.Readable = exports;
        exports.Writable = __webpack_require__(
          /*! ./lib/_stream_writable.js */ '../node_modules/readable-stream/lib/_stream_writable.js'
        );
        exports.Duplex = __webpack_require__(
          /*! ./lib/_stream_duplex.js */ '../node_modules/readable-stream/lib/_stream_duplex.js'
        );
        exports.Transform = __webpack_require__(
          /*! ./lib/_stream_transform.js */ '../node_modules/readable-stream/lib/_stream_transform.js'
        );
        exports.PassThrough = __webpack_require__(
          /*! ./lib/_stream_passthrough.js */ '../node_modules/readable-stream/lib/_stream_passthrough.js'
        );

        /***/
      },

    /***/ '../node_modules/readable-stream/transform.js':
      /*!****************************************************!*\
  !*** ../node_modules/readable-stream/transform.js ***!
  \****************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! ./readable */ '../node_modules/readable-stream/readable-browser.js'
        ).Transform;

        /***/
      },

    /***/ '../node_modules/readable-stream/writable-browser.js':
      /*!***********************************************************!*\
  !*** ../node_modules/readable-stream/writable-browser.js ***!
  \***********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! ./lib/_stream_writable.js */ '../node_modules/readable-stream/lib/_stream_writable.js'
        );

        /***/
      },

    /***/ '../node_modules/regenerator-runtime/runtime.js':
      /*!******************************************************!*\
  !*** ../node_modules/regenerator-runtime/runtime.js ***!
  \******************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /**
         * Copyright (c) 2014-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        var runtime = (function (exports) {
          'use strict';

          var Op = Object.prototype;
          var hasOwn = Op.hasOwnProperty;
          var undefined; // More compressible than void 0.
          var $Symbol = typeof Symbol === 'function' ? Symbol : {};
          var iteratorSymbol = $Symbol.iterator || '@@iterator';
          var asyncIteratorSymbol = $Symbol.asyncIterator || '@@asyncIterator';
          var toStringTagSymbol = $Symbol.toStringTag || '@@toStringTag';

          function wrap(innerFn, outerFn, self, tryLocsList) {
            // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
            var protoGenerator =
              outerFn && outerFn.prototype instanceof Generator
                ? outerFn
                : Generator;
            var generator = Object.create(protoGenerator.prototype);
            var context = new Context(tryLocsList || []);

            // The ._invoke method unifies the implementations of the .next,
            // .throw, and .return methods.
            generator._invoke = makeInvokeMethod(innerFn, self, context);

            return generator;
          }
          exports.wrap = wrap;

          // Try/catch helper to minimize deoptimizations. Returns a completion
          // record like context.tryEntries[i].completion. This interface could
          // have been (and was previously) designed to take a closure to be
          // invoked without arguments, but in all the cases we care about we
          // already have an existing method we want to call, so there's no need
          // to create a new function object. We can even get away with assuming
          // the method takes exactly one argument, since that happens to be true
          // in every case, so we don't have to touch the arguments object. The
          // only additional allocation required is the completion record, which
          // has a stable shape and so hopefully should be cheap to allocate.
          function tryCatch(fn, obj, arg) {
            try {
              return { type: 'normal', arg: fn.call(obj, arg) };
            } catch (err) {
              return { type: 'throw', arg: err };
            }
          }

          var GenStateSuspendedStart = 'suspendedStart';
          var GenStateSuspendedYield = 'suspendedYield';
          var GenStateExecuting = 'executing';
          var GenStateCompleted = 'completed';

          // Returning this object from the innerFn has the same effect as
          // breaking out of the dispatch switch statement.
          var ContinueSentinel = {};

          // Dummy constructor functions that we use as the .constructor and
          // .constructor.prototype properties for functions that return Generator
          // objects. For full spec compliance, you may wish to configure your
          // minifier not to mangle the names of these two functions.
          function Generator() {}
          function GeneratorFunction() {}
          function GeneratorFunctionPrototype() {}

          // This is a polyfill for %IteratorPrototype% for environments that
          // don't natively support it.
          var IteratorPrototype = {};
          IteratorPrototype[iteratorSymbol] = function () {
            return this;
          };

          var getProto = Object.getPrototypeOf;
          var NativeIteratorPrototype =
            getProto && getProto(getProto(values([])));
          if (
            NativeIteratorPrototype &&
            NativeIteratorPrototype !== Op &&
            hasOwn.call(NativeIteratorPrototype, iteratorSymbol)
          ) {
            // This environment has a native %IteratorPrototype%; use it instead
            // of the polyfill.
            IteratorPrototype = NativeIteratorPrototype;
          }

          var Gp = (GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(
            IteratorPrototype
          ));
          GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
          GeneratorFunctionPrototype.constructor = GeneratorFunction;
          GeneratorFunctionPrototype[
            toStringTagSymbol
          ] = GeneratorFunction.displayName = 'GeneratorFunction';

          // Helper for defining the .next, .throw, and .return methods of the
          // Iterator interface in terms of a single ._invoke method.
          function defineIteratorMethods(prototype) {
            ['next', 'throw', 'return'].forEach(function (method) {
              prototype[method] = function (arg) {
                return this._invoke(method, arg);
              };
            });
          }

          exports.isGeneratorFunction = function (genFun) {
            var ctor = typeof genFun === 'function' && genFun.constructor;
            return ctor
              ? ctor === GeneratorFunction ||
                  // For the native GeneratorFunction constructor, the best we can
                  // do is to check its .name property.
                  (ctor.displayName || ctor.name) === 'GeneratorFunction'
              : false;
          };

          exports.mark = function (genFun) {
            if (Object.setPrototypeOf) {
              Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
            } else {
              genFun.__proto__ = GeneratorFunctionPrototype;
              if (!(toStringTagSymbol in genFun)) {
                genFun[toStringTagSymbol] = 'GeneratorFunction';
              }
            }
            genFun.prototype = Object.create(Gp);
            return genFun;
          };

          // Within the body of any async function, `await x` is transformed to
          // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
          // `hasOwn.call(value, "__await")` to determine if the yielded value is
          // meant to be awaited.
          exports.awrap = function (arg) {
            return { __await: arg };
          };

          function AsyncIterator(generator, PromiseImpl) {
            function invoke(method, arg, resolve, reject) {
              var record = tryCatch(generator[method], generator, arg);
              if (record.type === 'throw') {
                reject(record.arg);
              } else {
                var result = record.arg;
                var value = result.value;
                if (
                  value &&
                  typeof value === 'object' &&
                  hasOwn.call(value, '__await')
                ) {
                  return PromiseImpl.resolve(value.__await).then(
                    function (value) {
                      invoke('next', value, resolve, reject);
                    },
                    function (err) {
                      invoke('throw', err, resolve, reject);
                    }
                  );
                }

                return PromiseImpl.resolve(value).then(
                  function (unwrapped) {
                    // When a yielded Promise is resolved, its final value becomes
                    // the .value of the Promise<{value,done}> result for the
                    // current iteration.
                    result.value = unwrapped;
                    resolve(result);
                  },
                  function (error) {
                    // If a rejected Promise was yielded, throw the rejection back
                    // into the async generator function so it can be handled there.
                    return invoke('throw', error, resolve, reject);
                  }
                );
              }
            }

            var previousPromise;

            function enqueue(method, arg) {
              function callInvokeWithMethodAndArg() {
                return new PromiseImpl(function (resolve, reject) {
                  invoke(method, arg, resolve, reject);
                });
              }

              return (previousPromise =
                // If enqueue has been called before, then we want to wait until
                // all previous Promises have been resolved before calling invoke,
                // so that results are always delivered in the correct order. If
                // enqueue has not been called before, then it is important to
                // call invoke immediately, without waiting on a callback to fire,
                // so that the async generator function has the opportunity to do
                // any necessary setup in a predictable way. This predictability
                // is why the Promise constructor synchronously invokes its
                // executor callback, and why async functions synchronously
                // execute code before the first await. Since we implement simple
                // async functions in terms of async generators, it is especially
                // important to get this right, even though it requires care.
                previousPromise
                  ? previousPromise.then(
                      callInvokeWithMethodAndArg,
                      // Avoid propagating failures to Promises returned by later
                      // invocations of the iterator.
                      callInvokeWithMethodAndArg
                    )
                  : callInvokeWithMethodAndArg());
            }

            // Define the unified helper method that is used to implement .next,
            // .throw, and .return (see defineIteratorMethods).
            this._invoke = enqueue;
          }

          defineIteratorMethods(AsyncIterator.prototype);
          AsyncIterator.prototype[asyncIteratorSymbol] = function () {
            return this;
          };
          exports.AsyncIterator = AsyncIterator;

          // Note that simple async functions are implemented on top of
          // AsyncIterator objects; they just return a Promise for the value of
          // the final result produced by the iterator.
          exports.async = function (
            innerFn,
            outerFn,
            self,
            tryLocsList,
            PromiseImpl
          ) {
            if (PromiseImpl === void 0) PromiseImpl = Promise;

            var iter = new AsyncIterator(
              wrap(innerFn, outerFn, self, tryLocsList),
              PromiseImpl
            );

            return exports.isGeneratorFunction(outerFn)
              ? iter // If outerFn is a generator, return the full iterator.
              : iter.next().then(function (result) {
                  return result.done ? result.value : iter.next();
                });
          };

          function makeInvokeMethod(innerFn, self, context) {
            var state = GenStateSuspendedStart;

            return function invoke(method, arg) {
              if (state === GenStateExecuting) {
                throw new Error('Generator is already running');
              }

              if (state === GenStateCompleted) {
                if (method === 'throw') {
                  throw arg;
                }

                // Be forgiving, per 25.3.3.3.3 of the spec:
                // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
                return doneResult();
              }

              context.method = method;
              context.arg = arg;

              while (true) {
                var delegate = context.delegate;
                if (delegate) {
                  var delegateResult = maybeInvokeDelegate(delegate, context);
                  if (delegateResult) {
                    if (delegateResult === ContinueSentinel) continue;
                    return delegateResult;
                  }
                }

                if (context.method === 'next') {
                  // Setting context._sent for legacy support of Babel's
                  // function.sent implementation.
                  context.sent = context._sent = context.arg;
                } else if (context.method === 'throw') {
                  if (state === GenStateSuspendedStart) {
                    state = GenStateCompleted;
                    throw context.arg;
                  }

                  context.dispatchException(context.arg);
                } else if (context.method === 'return') {
                  context.abrupt('return', context.arg);
                }

                state = GenStateExecuting;

                var record = tryCatch(innerFn, self, context);
                if (record.type === 'normal') {
                  // If an exception is thrown from innerFn, we leave state ===
                  // GenStateExecuting and loop back for another invocation.
                  state = context.done
                    ? GenStateCompleted
                    : GenStateSuspendedYield;

                  if (record.arg === ContinueSentinel) {
                    continue;
                  }

                  return {
                    value: record.arg,
                    done: context.done,
                  };
                } else if (record.type === 'throw') {
                  state = GenStateCompleted;
                  // Dispatch the exception by looping back around to the
                  // context.dispatchException(context.arg) call above.
                  context.method = 'throw';
                  context.arg = record.arg;
                }
              }
            };
          }

          // Call delegate.iterator[context.method](context.arg) and handle the
          // result, either by returning a { value, done } result from the
          // delegate iterator, or by modifying context.method and context.arg,
          // setting context.delegate to null, and returning the ContinueSentinel.
          function maybeInvokeDelegate(delegate, context) {
            var method = delegate.iterator[context.method];
            if (method === undefined) {
              // A .throw or .return when the delegate iterator has no .throw
              // method always terminates the yield* loop.
              context.delegate = null;

              if (context.method === 'throw') {
                // Note: ["return"] must be used for ES3 parsing compatibility.
                if (delegate.iterator['return']) {
                  // If the delegate iterator has a return method, give it a
                  // chance to clean up.
                  context.method = 'return';
                  context.arg = undefined;
                  maybeInvokeDelegate(delegate, context);

                  if (context.method === 'throw') {
                    // If maybeInvokeDelegate(context) changed context.method from
                    // "return" to "throw", let that override the TypeError below.
                    return ContinueSentinel;
                  }
                }

                context.method = 'throw';
                context.arg = new TypeError(
                  "The iterator does not provide a 'throw' method"
                );
              }

              return ContinueSentinel;
            }

            var record = tryCatch(method, delegate.iterator, context.arg);

            if (record.type === 'throw') {
              context.method = 'throw';
              context.arg = record.arg;
              context.delegate = null;
              return ContinueSentinel;
            }

            var info = record.arg;

            if (!info) {
              context.method = 'throw';
              context.arg = new TypeError('iterator result is not an object');
              context.delegate = null;
              return ContinueSentinel;
            }

            if (info.done) {
              // Assign the result of the finished delegate to the temporary
              // variable specified by delegate.resultName (see delegateYield).
              context[delegate.resultName] = info.value;

              // Resume execution at the desired location (see delegateYield).
              context.next = delegate.nextLoc;

              // If context.method was "throw" but the delegate handled the
              // exception, let the outer generator proceed normally. If
              // context.method was "next", forget context.arg since it has been
              // "consumed" by the delegate iterator. If context.method was
              // "return", allow the original .return call to continue in the
              // outer generator.
              if (context.method !== 'return') {
                context.method = 'next';
                context.arg = undefined;
              }
            } else {
              // Re-yield the result returned by the delegate method.
              return info;
            }

            // The delegate iterator is finished, so forget it and continue with
            // the outer generator.
            context.delegate = null;
            return ContinueSentinel;
          }

          // Define Generator.prototype.{next,throw,return} in terms of the
          // unified ._invoke helper method.
          defineIteratorMethods(Gp);

          Gp[toStringTagSymbol] = 'Generator';

          // A Generator should always return itself as the iterator object when the
          // @@iterator function is called on it. Some browsers' implementations of the
          // iterator prototype chain incorrectly implement this, causing the Generator
          // object to not be returned from this call. This ensures that doesn't happen.
          // See https://github.com/facebook/regenerator/issues/274 for more details.
          Gp[iteratorSymbol] = function () {
            return this;
          };

          Gp.toString = function () {
            return '[object Generator]';
          };

          function pushTryEntry(locs) {
            var entry = { tryLoc: locs[0] };

            if (1 in locs) {
              entry.catchLoc = locs[1];
            }

            if (2 in locs) {
              entry.finallyLoc = locs[2];
              entry.afterLoc = locs[3];
            }

            this.tryEntries.push(entry);
          }

          function resetTryEntry(entry) {
            var record = entry.completion || {};
            record.type = 'normal';
            delete record.arg;
            entry.completion = record;
          }

          function Context(tryLocsList) {
            // The root entry object (effectively a try statement without a catch
            // or a finally block) gives us a place to store values thrown from
            // locations where there is no enclosing try statement.
            this.tryEntries = [{ tryLoc: 'root' }];
            tryLocsList.forEach(pushTryEntry, this);
            this.reset(true);
          }

          exports.keys = function (object) {
            var keys = [];
            for (var key in object) {
              keys.push(key);
            }
            keys.reverse();

            // Rather than returning an object with a next method, we keep
            // things simple and return the next function itself.
            return function next() {
              while (keys.length) {
                var key = keys.pop();
                if (key in object) {
                  next.value = key;
                  next.done = false;
                  return next;
                }
              }

              // To avoid creating an additional object, we just hang the .value
              // and .done properties off the next function object itself. This
              // also ensures that the minifier will not anonymize the function.
              next.done = true;
              return next;
            };
          };

          function values(iterable) {
            if (iterable) {
              var iteratorMethod = iterable[iteratorSymbol];
              if (iteratorMethod) {
                return iteratorMethod.call(iterable);
              }

              if (typeof iterable.next === 'function') {
                return iterable;
              }

              if (!isNaN(iterable.length)) {
                var i = -1,
                  next = function next() {
                    while (++i < iterable.length) {
                      if (hasOwn.call(iterable, i)) {
                        next.value = iterable[i];
                        next.done = false;
                        return next;
                      }
                    }

                    next.value = undefined;
                    next.done = true;

                    return next;
                  };

                return (next.next = next);
              }
            }

            // Return an iterator with no values.
            return { next: doneResult };
          }
          exports.values = values;

          function doneResult() {
            return { value: undefined, done: true };
          }

          Context.prototype = {
            constructor: Context,

            reset: function (skipTempReset) {
              this.prev = 0;
              this.next = 0;
              // Resetting context._sent for legacy support of Babel's
              // function.sent implementation.
              this.sent = this._sent = undefined;
              this.done = false;
              this.delegate = null;

              this.method = 'next';
              this.arg = undefined;

              this.tryEntries.forEach(resetTryEntry);

              if (!skipTempReset) {
                for (var name in this) {
                  // Not sure about the optimal order of these conditions:
                  if (
                    name.charAt(0) === 't' &&
                    hasOwn.call(this, name) &&
                    !isNaN(+name.slice(1))
                  ) {
                    this[name] = undefined;
                  }
                }
              }
            },

            stop: function () {
              this.done = true;

              var rootEntry = this.tryEntries[0];
              var rootRecord = rootEntry.completion;
              if (rootRecord.type === 'throw') {
                throw rootRecord.arg;
              }

              return this.rval;
            },

            dispatchException: function (exception) {
              if (this.done) {
                throw exception;
              }

              var context = this;
              function handle(loc, caught) {
                record.type = 'throw';
                record.arg = exception;
                context.next = loc;

                if (caught) {
                  // If the dispatched exception was caught by a catch block,
                  // then let that catch block handle the exception normally.
                  context.method = 'next';
                  context.arg = undefined;
                }

                return !!caught;
              }

              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                var record = entry.completion;

                if (entry.tryLoc === 'root') {
                  // Exception thrown outside of any try block that could handle
                  // it, so set the completion value of the entire function to
                  // throw the exception.
                  return handle('end');
                }

                if (entry.tryLoc <= this.prev) {
                  var hasCatch = hasOwn.call(entry, 'catchLoc');
                  var hasFinally = hasOwn.call(entry, 'finallyLoc');

                  if (hasCatch && hasFinally) {
                    if (this.prev < entry.catchLoc) {
                      return handle(entry.catchLoc, true);
                    } else if (this.prev < entry.finallyLoc) {
                      return handle(entry.finallyLoc);
                    }
                  } else if (hasCatch) {
                    if (this.prev < entry.catchLoc) {
                      return handle(entry.catchLoc, true);
                    }
                  } else if (hasFinally) {
                    if (this.prev < entry.finallyLoc) {
                      return handle(entry.finallyLoc);
                    }
                  } else {
                    throw new Error('try statement without catch or finally');
                  }
                }
              }
            },

            abrupt: function (type, arg) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (
                  entry.tryLoc <= this.prev &&
                  hasOwn.call(entry, 'finallyLoc') &&
                  this.prev < entry.finallyLoc
                ) {
                  var finallyEntry = entry;
                  break;
                }
              }

              if (
                finallyEntry &&
                (type === 'break' || type === 'continue') &&
                finallyEntry.tryLoc <= arg &&
                arg <= finallyEntry.finallyLoc
              ) {
                // Ignore the finally entry if control is not jumping to a
                // location outside the try/catch block.
                finallyEntry = null;
              }

              var record = finallyEntry ? finallyEntry.completion : {};
              record.type = type;
              record.arg = arg;

              if (finallyEntry) {
                this.method = 'next';
                this.next = finallyEntry.finallyLoc;
                return ContinueSentinel;
              }

              return this.complete(record);
            },

            complete: function (record, afterLoc) {
              if (record.type === 'throw') {
                throw record.arg;
              }

              if (record.type === 'break' || record.type === 'continue') {
                this.next = record.arg;
              } else if (record.type === 'return') {
                this.rval = this.arg = record.arg;
                this.method = 'return';
                this.next = 'end';
              } else if (record.type === 'normal' && afterLoc) {
                this.next = afterLoc;
              }

              return ContinueSentinel;
            },

            finish: function (finallyLoc) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (entry.finallyLoc === finallyLoc) {
                  this.complete(entry.completion, entry.afterLoc);
                  resetTryEntry(entry);
                  return ContinueSentinel;
                }
              }
            },

            catch: function (tryLoc) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (entry.tryLoc === tryLoc) {
                  var record = entry.completion;
                  if (record.type === 'throw') {
                    var thrown = record.arg;
                    resetTryEntry(entry);
                  }
                  return thrown;
                }
              }

              // The context.catch method must only be called with a location
              // argument that corresponds to a known catch block.
              throw new Error('illegal catch attempt');
            },

            delegateYield: function (iterable, resultName, nextLoc) {
              this.delegate = {
                iterator: values(iterable),
                resultName: resultName,
                nextLoc: nextLoc,
              };

              if (this.method === 'next') {
                // Deliberately forget the last sent value so that we don't
                // accidentally pass it on to the delegate.
                this.arg = undefined;
              }

              return ContinueSentinel;
            },
          };

          // Regardless of whether this script is executing as a CommonJS module
          // or not, return the runtime object so that we can declare the variable
          // regeneratorRuntime in the outer scope, which allows this module to be
          // injected easily by `bin/regenerator --include-runtime script.js`.
          return exports;
        })(
          // If this script is executing as a CommonJS module, use module.exports
          // as the regeneratorRuntime namespace. Otherwise create a new empty
          // object. Either way, the resulting object will be used to initialize
          // the regeneratorRuntime variable at the top of this file.
          true ? module.exports : undefined
        );

        try {
          regeneratorRuntime = runtime;
        } catch (accidentalStrictMode) {
          // This module should not be running in strict mode, so the above
          // assignment should always work unless something is misconfigured. Just
          // in case runtime.js accidentally runs in strict mode, we can escape
          // strict mode using a global Function call. This could conceivably fail
          // if a Content Security Policy forbids using Function, but in that case
          // the proper solution is to fix the accidental strict mode problem. If
          // you've misconfigured your bundler to force strict mode and applied a
          // CSP to forbid Function, and you're not willing to fix either of those
          // problems, please detail your unique predicament in a GitHub issue.
          Function('r', 'regeneratorRuntime = r')(runtime);
        }

        /***/
      },

    /***/ '../node_modules/ripemd160/index.js':
      /*!******************************************!*\
  !*** ../node_modules/ripemd160/index.js ***!
  \******************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var Buffer = __webpack_require__(
          /*! buffer */ '../node_modules/buffer/index.js'
        ).Buffer;
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );
        var HashBase = __webpack_require__(
          /*! hash-base */ '../node_modules/hash-base/index.js'
        );

        var ARRAY16 = new Array(16);

        var zl = [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          7,
          4,
          13,
          1,
          10,
          6,
          15,
          3,
          12,
          0,
          9,
          5,
          2,
          14,
          11,
          8,
          3,
          10,
          14,
          4,
          9,
          15,
          8,
          1,
          2,
          7,
          0,
          6,
          13,
          11,
          5,
          12,
          1,
          9,
          11,
          10,
          0,
          8,
          12,
          4,
          13,
          3,
          7,
          15,
          14,
          5,
          6,
          2,
          4,
          0,
          5,
          9,
          7,
          12,
          2,
          10,
          14,
          1,
          3,
          8,
          11,
          6,
          15,
          13,
        ];

        var zr = [
          5,
          14,
          7,
          0,
          9,
          2,
          11,
          4,
          13,
          6,
          15,
          8,
          1,
          10,
          3,
          12,
          6,
          11,
          3,
          7,
          0,
          13,
          5,
          10,
          14,
          15,
          8,
          12,
          4,
          9,
          1,
          2,
          15,
          5,
          1,
          3,
          7,
          14,
          6,
          9,
          11,
          8,
          12,
          2,
          10,
          0,
          4,
          13,
          8,
          6,
          4,
          1,
          3,
          11,
          15,
          0,
          5,
          12,
          2,
          13,
          9,
          7,
          10,
          14,
          12,
          15,
          10,
          4,
          1,
          5,
          8,
          7,
          6,
          2,
          13,
          14,
          0,
          3,
          9,
          11,
        ];

        var sl = [
          11,
          14,
          15,
          12,
          5,
          8,
          7,
          9,
          11,
          13,
          14,
          15,
          6,
          7,
          9,
          8,
          7,
          6,
          8,
          13,
          11,
          9,
          7,
          15,
          7,
          12,
          15,
          9,
          11,
          7,
          13,
          12,
          11,
          13,
          6,
          7,
          14,
          9,
          13,
          15,
          14,
          8,
          13,
          6,
          5,
          12,
          7,
          5,
          11,
          12,
          14,
          15,
          14,
          15,
          9,
          8,
          9,
          14,
          5,
          6,
          8,
          6,
          5,
          12,
          9,
          15,
          5,
          11,
          6,
          8,
          13,
          12,
          5,
          12,
          13,
          14,
          11,
          8,
          5,
          6,
        ];

        var sr = [
          8,
          9,
          9,
          11,
          13,
          15,
          15,
          5,
          7,
          7,
          8,
          11,
          14,
          14,
          12,
          6,
          9,
          13,
          15,
          7,
          12,
          8,
          9,
          11,
          7,
          7,
          12,
          7,
          6,
          15,
          13,
          11,
          9,
          7,
          15,
          11,
          8,
          6,
          6,
          14,
          12,
          13,
          5,
          14,
          13,
          13,
          7,
          5,
          15,
          5,
          8,
          11,
          14,
          14,
          6,
          14,
          6,
          9,
          12,
          9,
          12,
          5,
          15,
          8,
          8,
          5,
          12,
          9,
          12,
          5,
          14,
          6,
          8,
          13,
          6,
          5,
          15,
          13,
          11,
          11,
        ];

        var hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e];
        var hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000];

        function RIPEMD160() {
          HashBase.call(this, 64);

          // state
          this._a = 0x67452301;
          this._b = 0xefcdab89;
          this._c = 0x98badcfe;
          this._d = 0x10325476;
          this._e = 0xc3d2e1f0;
        }

        inherits(RIPEMD160, HashBase);

        RIPEMD160.prototype._update = function () {
          var words = ARRAY16;
          for (var j = 0; j < 16; ++j)
            words[j] = this._block.readInt32LE(j * 4);

          var al = this._a | 0;
          var bl = this._b | 0;
          var cl = this._c | 0;
          var dl = this._d | 0;
          var el = this._e | 0;

          var ar = this._a | 0;
          var br = this._b | 0;
          var cr = this._c | 0;
          var dr = this._d | 0;
          var er = this._e | 0;

          // computation
          for (var i = 0; i < 80; i += 1) {
            var tl;
            var tr;
            if (i < 16) {
              tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i]);
              tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i]);
            } else if (i < 32) {
              tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i]);
              tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i]);
            } else if (i < 48) {
              tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i]);
              tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i]);
            } else if (i < 64) {
              tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i]);
              tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i]);
            } else {
              // if (i<80) {
              tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i]);
              tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i]);
            }

            al = el;
            el = dl;
            dl = rotl(cl, 10);
            cl = bl;
            bl = tl;

            ar = er;
            er = dr;
            dr = rotl(cr, 10);
            cr = br;
            br = tr;
          }

          // update state
          var t = (this._b + cl + dr) | 0;
          this._b = (this._c + dl + er) | 0;
          this._c = (this._d + el + ar) | 0;
          this._d = (this._e + al + br) | 0;
          this._e = (this._a + bl + cr) | 0;
          this._a = t;
        };

        RIPEMD160.prototype._digest = function () {
          // create padding and handle blocks
          this._block[this._blockOffset++] = 0x80;
          if (this._blockOffset > 56) {
            this._block.fill(0, this._blockOffset, 64);
            this._update();
            this._blockOffset = 0;
          }

          this._block.fill(0, this._blockOffset, 56);
          this._block.writeUInt32LE(this._length[0], 56);
          this._block.writeUInt32LE(this._length[1], 60);
          this._update();

          // produce result
          var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20);
          buffer.writeInt32LE(this._a, 0);
          buffer.writeInt32LE(this._b, 4);
          buffer.writeInt32LE(this._c, 8);
          buffer.writeInt32LE(this._d, 12);
          buffer.writeInt32LE(this._e, 16);
          return buffer;
        };

        function rotl(x, n) {
          return (x << n) | (x >>> (32 - n));
        }

        function fn1(a, b, c, d, e, m, k, s) {
          return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0;
        }

        function fn2(a, b, c, d, e, m, k, s) {
          return (rotl((a + ((b & c) | (~b & d)) + m + k) | 0, s) + e) | 0;
        }

        function fn3(a, b, c, d, e, m, k, s) {
          return (rotl((a + ((b | ~c) ^ d) + m + k) | 0, s) + e) | 0;
        }

        function fn4(a, b, c, d, e, m, k, s) {
          return (rotl((a + ((b & d) | (c & ~d)) + m + k) | 0, s) + e) | 0;
        }

        function fn5(a, b, c, d, e, m, k, s) {
          return (rotl((a + (b ^ (c | ~d)) + m + k) | 0, s) + e) | 0;
        }

        module.exports = RIPEMD160;

        /***/
      },

    /***/ '../node_modules/safe-buffer/index.js':
      /*!********************************************!*\
  !*** ../node_modules/safe-buffer/index.js ***!
  \********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /* eslint-disable node/no-deprecated-api */
        var buffer = __webpack_require__(
          /*! buffer */ '../node_modules/buffer/index.js'
        );
        var Buffer = buffer.Buffer;

        // alternative to using Object.keys for old browsers
        function copyProps(src, dst) {
          for (var key in src) {
            dst[key] = src[key];
          }
        }
        if (
          Buffer.from &&
          Buffer.alloc &&
          Buffer.allocUnsafe &&
          Buffer.allocUnsafeSlow
        ) {
          module.exports = buffer;
        } else {
          // Copy properties from require('buffer')
          copyProps(buffer, exports);
          exports.Buffer = SafeBuffer;
        }

        function SafeBuffer(arg, encodingOrOffset, length) {
          return Buffer(arg, encodingOrOffset, length);
        }

        // Copy static methods from Buffer
        copyProps(Buffer, SafeBuffer);

        SafeBuffer.from = function (arg, encodingOrOffset, length) {
          if (typeof arg === 'number') {
            throw new TypeError('Argument must not be a number');
          }
          return Buffer(arg, encodingOrOffset, length);
        };

        SafeBuffer.alloc = function (size, fill, encoding) {
          if (typeof size !== 'number') {
            throw new TypeError('Argument must be a number');
          }
          var buf = Buffer(size);
          if (fill !== undefined) {
            if (typeof encoding === 'string') {
              buf.fill(fill, encoding);
            } else {
              buf.fill(fill);
            }
          } else {
            buf.fill(0);
          }
          return buf;
        };

        SafeBuffer.allocUnsafe = function (size) {
          if (typeof size !== 'number') {
            throw new TypeError('Argument must be a number');
          }
          return Buffer(size);
        };

        SafeBuffer.allocUnsafeSlow = function (size) {
          if (typeof size !== 'number') {
            throw new TypeError('Argument must be a number');
          }
          return buffer.SlowBuffer(size);
        };

        /***/
      },

    /***/ '../node_modules/setimmediate/setImmediate.js':
      /*!****************************************************!*\
  !*** ../node_modules/setimmediate/setImmediate.js ***!
  \****************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function (global, process) {
          (function (global, undefined) {
            'use strict';

            if (global.setImmediate) {
              return;
            }

            var nextHandle = 1; // Spec says greater than zero
            var tasksByHandle = {};
            var currentlyRunningATask = false;
            var doc = global.document;
            var registerImmediate;

            function setImmediate(callback) {
              // Callback can either be a function or a string
              if (typeof callback !== 'function') {
                callback = new Function('' + callback);
              }
              // Copy function arguments
              var args = new Array(arguments.length - 1);
              for (var i = 0; i < args.length; i++) {
                args[i] = arguments[i + 1];
              }
              // Store and register the task
              var task = { callback: callback, args: args };
              tasksByHandle[nextHandle] = task;
              registerImmediate(nextHandle);
              return nextHandle++;
            }

            function clearImmediate(handle) {
              delete tasksByHandle[handle];
            }

            function run(task) {
              var callback = task.callback;
              var args = task.args;
              switch (args.length) {
                case 0:
                  callback();
                  break;
                case 1:
                  callback(args[0]);
                  break;
                case 2:
                  callback(args[0], args[1]);
                  break;
                case 3:
                  callback(args[0], args[1], args[2]);
                  break;
                default:
                  callback.apply(undefined, args);
                  break;
              }
            }

            function runIfPresent(handle) {
              // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
              // So if we're currently running a task, we'll need to delay this invocation.
              if (currentlyRunningATask) {
                // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
                // "too much recursion" error.
                setTimeout(runIfPresent, 0, handle);
              } else {
                var task = tasksByHandle[handle];
                if (task) {
                  currentlyRunningATask = true;
                  try {
                    run(task);
                  } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                  }
                }
              }
            }

            function installNextTickImplementation() {
              registerImmediate = function (handle) {
                process.nextTick(function () {
                  runIfPresent(handle);
                });
              };
            }

            function canUsePostMessage() {
              // The test against `importScripts` prevents this implementation from being installed inside a web worker,
              // where `global.postMessage` means something completely different and can't be used for this purpose.
              if (global.postMessage && !global.importScripts) {
                var postMessageIsAsynchronous = true;
                var oldOnMessage = global.onmessage;
                global.onmessage = function () {
                  postMessageIsAsynchronous = false;
                };
                global.postMessage('', '*');
                global.onmessage = oldOnMessage;
                return postMessageIsAsynchronous;
              }
            }

            function installPostMessageImplementation() {
              // Installs an event handler on `global` for the `message` event: see
              // * https://developer.mozilla.org/en/DOM/window.postMessage
              // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

              var messagePrefix = 'setImmediate$' + Math.random() + '$';
              var onGlobalMessage = function (event) {
                if (
                  event.source === global &&
                  typeof event.data === 'string' &&
                  event.data.indexOf(messagePrefix) === 0
                ) {
                  runIfPresent(+event.data.slice(messagePrefix.length));
                }
              };

              if (global.addEventListener) {
                global.addEventListener('message', onGlobalMessage, false);
              } else {
                global.attachEvent('onmessage', onGlobalMessage);
              }

              registerImmediate = function (handle) {
                global.postMessage(messagePrefix + handle, '*');
              };
            }

            function installMessageChannelImplementation() {
              var channel = new MessageChannel();
              channel.port1.onmessage = function (event) {
                var handle = event.data;
                runIfPresent(handle);
              };

              registerImmediate = function (handle) {
                channel.port2.postMessage(handle);
              };
            }

            function installReadyStateChangeImplementation() {
              var html = doc.documentElement;
              registerImmediate = function (handle) {
                // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
                // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
                var script = doc.createElement('script');
                script.onreadystatechange = function () {
                  runIfPresent(handle);
                  script.onreadystatechange = null;
                  html.removeChild(script);
                  script = null;
                };
                html.appendChild(script);
              };
            }

            function installSetTimeoutImplementation() {
              registerImmediate = function (handle) {
                setTimeout(runIfPresent, 0, handle);
              };
            }

            // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
            var attachTo =
              Object.getPrototypeOf && Object.getPrototypeOf(global);
            attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

            // Don't get fooled by e.g. browserify environments.
            if ({}.toString.call(global.process) === '[object process]') {
              // For Node.js before 0.9
              installNextTickImplementation();
            } else if (canUsePostMessage()) {
              // For non-IE10 modern browsers
              installPostMessageImplementation();
            } else if (global.MessageChannel) {
              // For web workers, where supported
              installMessageChannelImplementation();
            } else if (
              doc &&
              'onreadystatechange' in doc.createElement('script')
            ) {
              // For IE 6–8
              installReadyStateChangeImplementation();
            } else {
              // For older browsers
              installSetTimeoutImplementation();
            }

            attachTo.setImmediate = setImmediate;
            attachTo.clearImmediate = clearImmediate;
          })(
            typeof self === 'undefined'
              ? typeof global === 'undefined'
                ? this
                : global
              : self
          );

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../webpack/buildin/global.js */ '../node_modules/webpack/buildin/global.js'
          ),
          __webpack_require__(
            /*! ./../process/browser.js */ '../node_modules/process/browser.js'
          )
        ));

        /***/
      },

    /***/ '../node_modules/sha.js/hash.js':
      /*!**************************************!*\
  !*** ../node_modules/sha.js/hash.js ***!
  \**************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;

        // prototype class for hash functions
        function Hash(blockSize, finalSize) {
          this._block = Buffer.alloc(blockSize);
          this._finalSize = finalSize;
          this._blockSize = blockSize;
          this._len = 0;
        }

        Hash.prototype.update = function (data, enc) {
          if (typeof data === 'string') {
            enc = enc || 'utf8';
            data = Buffer.from(data, enc);
          }

          var block = this._block;
          var blockSize = this._blockSize;
          var length = data.length;
          var accum = this._len;

          for (var offset = 0; offset < length; ) {
            var assigned = accum % blockSize;
            var remainder = Math.min(length - offset, blockSize - assigned);

            for (var i = 0; i < remainder; i++) {
              block[assigned + i] = data[offset + i];
            }

            accum += remainder;
            offset += remainder;

            if (accum % blockSize === 0) {
              this._update(block);
            }
          }

          this._len += length;
          return this;
        };

        Hash.prototype.digest = function (enc) {
          var rem = this._len % this._blockSize;

          this._block[rem] = 0x80;

          // zero (rem + 1) trailing bits, where (rem + 1) is the smallest
          // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize
          this._block.fill(0, rem + 1);

          if (rem >= this._finalSize) {
            this._update(this._block);
            this._block.fill(0);
          }

          var bits = this._len * 8;

          // uint32
          if (bits <= 0xffffffff) {
            this._block.writeUInt32BE(bits, this._blockSize - 4);

            // uint64
          } else {
            var lowBits = (bits & 0xffffffff) >>> 0;
            var highBits = (bits - lowBits) / 0x100000000;

            this._block.writeUInt32BE(highBits, this._blockSize - 8);
            this._block.writeUInt32BE(lowBits, this._blockSize - 4);
          }

          this._update(this._block);
          var hash = this._hash();

          return enc ? hash.toString(enc) : hash;
        };

        Hash.prototype._update = function () {
          throw new Error('_update must be implemented by subclass');
        };

        module.exports = Hash;

        /***/
      },

    /***/ '../node_modules/sha.js/index.js':
      /*!***************************************!*\
  !*** ../node_modules/sha.js/index.js ***!
  \***************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var exports = (module.exports = function SHA(algorithm) {
          algorithm = algorithm.toLowerCase();

          var Algorithm = exports[algorithm];
          if (!Algorithm)
            throw new Error(
              algorithm + ' is not supported (we accept pull requests)'
            );

          return new Algorithm();
        });

        exports.sha = __webpack_require__(
          /*! ./sha */ '../node_modules/sha.js/sha.js'
        );
        exports.sha1 = __webpack_require__(
          /*! ./sha1 */ '../node_modules/sha.js/sha1.js'
        );
        exports.sha224 = __webpack_require__(
          /*! ./sha224 */ '../node_modules/sha.js/sha224.js'
        );
        exports.sha256 = __webpack_require__(
          /*! ./sha256 */ '../node_modules/sha.js/sha256.js'
        );
        exports.sha384 = __webpack_require__(
          /*! ./sha384 */ '../node_modules/sha.js/sha384.js'
        );
        exports.sha512 = __webpack_require__(
          /*! ./sha512 */ '../node_modules/sha.js/sha512.js'
        );

        /***/
      },

    /***/ '../node_modules/sha.js/sha.js':
      /*!*************************************!*\
  !*** ../node_modules/sha.js/sha.js ***!
  \*************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /*
         * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
         * in FIPS PUB 180-1
         * This source code is derived from sha1.js of the same repository.
         * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
         * operation was added.
         */

        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );
        var Hash = __webpack_require__(
          /*! ./hash */ '../node_modules/sha.js/hash.js'
        );
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;

        var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0];

        var W = new Array(80);

        function Sha() {
          this.init();
          this._w = W;

          Hash.call(this, 64, 56);
        }

        inherits(Sha, Hash);

        Sha.prototype.init = function () {
          this._a = 0x67452301;
          this._b = 0xefcdab89;
          this._c = 0x98badcfe;
          this._d = 0x10325476;
          this._e = 0xc3d2e1f0;

          return this;
        };

        function rotl5(num) {
          return (num << 5) | (num >>> 27);
        }

        function rotl30(num) {
          return (num << 30) | (num >>> 2);
        }

        function ft(s, b, c, d) {
          if (s === 0) return (b & c) | (~b & d);
          if (s === 2) return (b & c) | (b & d) | (c & d);
          return b ^ c ^ d;
        }

        Sha.prototype._update = function (M) {
          var W = this._w;

          var a = this._a | 0;
          var b = this._b | 0;
          var c = this._c | 0;
          var d = this._d | 0;
          var e = this._e | 0;

          for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4);
          for (; i < 80; ++i)
            W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];

          for (var j = 0; j < 80; ++j) {
            var s = ~~(j / 20);
            var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0;

            e = d;
            d = c;
            c = rotl30(b);
            b = a;
            a = t;
          }

          this._a = (a + this._a) | 0;
          this._b = (b + this._b) | 0;
          this._c = (c + this._c) | 0;
          this._d = (d + this._d) | 0;
          this._e = (e + this._e) | 0;
        };

        Sha.prototype._hash = function () {
          var H = Buffer.allocUnsafe(20);

          H.writeInt32BE(this._a | 0, 0);
          H.writeInt32BE(this._b | 0, 4);
          H.writeInt32BE(this._c | 0, 8);
          H.writeInt32BE(this._d | 0, 12);
          H.writeInt32BE(this._e | 0, 16);

          return H;
        };

        module.exports = Sha;

        /***/
      },

    /***/ '../node_modules/sha.js/sha1.js':
      /*!**************************************!*\
  !*** ../node_modules/sha.js/sha1.js ***!
  \**************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /*
         * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
         * in FIPS PUB 180-1
         * Version 2.1a Copyright Paul Johnston 2000 - 2002.
         * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
         * Distributed under the BSD License
         * See http://pajhome.org.uk/crypt/md5 for details.
         */

        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );
        var Hash = __webpack_require__(
          /*! ./hash */ '../node_modules/sha.js/hash.js'
        );
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;

        var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0];

        var W = new Array(80);

        function Sha1() {
          this.init();
          this._w = W;

          Hash.call(this, 64, 56);
        }

        inherits(Sha1, Hash);

        Sha1.prototype.init = function () {
          this._a = 0x67452301;
          this._b = 0xefcdab89;
          this._c = 0x98badcfe;
          this._d = 0x10325476;
          this._e = 0xc3d2e1f0;

          return this;
        };

        function rotl1(num) {
          return (num << 1) | (num >>> 31);
        }

        function rotl5(num) {
          return (num << 5) | (num >>> 27);
        }

        function rotl30(num) {
          return (num << 30) | (num >>> 2);
        }

        function ft(s, b, c, d) {
          if (s === 0) return (b & c) | (~b & d);
          if (s === 2) return (b & c) | (b & d) | (c & d);
          return b ^ c ^ d;
        }

        Sha1.prototype._update = function (M) {
          var W = this._w;

          var a = this._a | 0;
          var b = this._b | 0;
          var c = this._c | 0;
          var d = this._d | 0;
          var e = this._e | 0;

          for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4);
          for (; i < 80; ++i)
            W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]);

          for (var j = 0; j < 80; ++j) {
            var s = ~~(j / 20);
            var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0;

            e = d;
            d = c;
            c = rotl30(b);
            b = a;
            a = t;
          }

          this._a = (a + this._a) | 0;
          this._b = (b + this._b) | 0;
          this._c = (c + this._c) | 0;
          this._d = (d + this._d) | 0;
          this._e = (e + this._e) | 0;
        };

        Sha1.prototype._hash = function () {
          var H = Buffer.allocUnsafe(20);

          H.writeInt32BE(this._a | 0, 0);
          H.writeInt32BE(this._b | 0, 4);
          H.writeInt32BE(this._c | 0, 8);
          H.writeInt32BE(this._d | 0, 12);
          H.writeInt32BE(this._e | 0, 16);

          return H;
        };

        module.exports = Sha1;

        /***/
      },

    /***/ '../node_modules/sha.js/sha224.js':
      /*!****************************************!*\
  !*** ../node_modules/sha.js/sha224.js ***!
  \****************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /**
         * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
         * in FIPS 180-2
         * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
         * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
         *
         */

        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );
        var Sha256 = __webpack_require__(
          /*! ./sha256 */ '../node_modules/sha.js/sha256.js'
        );
        var Hash = __webpack_require__(
          /*! ./hash */ '../node_modules/sha.js/hash.js'
        );
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;

        var W = new Array(64);

        function Sha224() {
          this.init();

          this._w = W; // new Array(64)

          Hash.call(this, 64, 56);
        }

        inherits(Sha224, Sha256);

        Sha224.prototype.init = function () {
          this._a = 0xc1059ed8;
          this._b = 0x367cd507;
          this._c = 0x3070dd17;
          this._d = 0xf70e5939;
          this._e = 0xffc00b31;
          this._f = 0x68581511;
          this._g = 0x64f98fa7;
          this._h = 0xbefa4fa4;

          return this;
        };

        Sha224.prototype._hash = function () {
          var H = Buffer.allocUnsafe(28);

          H.writeInt32BE(this._a, 0);
          H.writeInt32BE(this._b, 4);
          H.writeInt32BE(this._c, 8);
          H.writeInt32BE(this._d, 12);
          H.writeInt32BE(this._e, 16);
          H.writeInt32BE(this._f, 20);
          H.writeInt32BE(this._g, 24);

          return H;
        };

        module.exports = Sha224;

        /***/
      },

    /***/ '../node_modules/sha.js/sha256.js':
      /*!****************************************!*\
  !*** ../node_modules/sha.js/sha256.js ***!
  \****************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /**
         * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
         * in FIPS 180-2
         * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
         * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
         *
         */

        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );
        var Hash = __webpack_require__(
          /*! ./hash */ '../node_modules/sha.js/hash.js'
        );
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;

        var K = [
          0x428a2f98,
          0x71374491,
          0xb5c0fbcf,
          0xe9b5dba5,
          0x3956c25b,
          0x59f111f1,
          0x923f82a4,
          0xab1c5ed5,
          0xd807aa98,
          0x12835b01,
          0x243185be,
          0x550c7dc3,
          0x72be5d74,
          0x80deb1fe,
          0x9bdc06a7,
          0xc19bf174,
          0xe49b69c1,
          0xefbe4786,
          0x0fc19dc6,
          0x240ca1cc,
          0x2de92c6f,
          0x4a7484aa,
          0x5cb0a9dc,
          0x76f988da,
          0x983e5152,
          0xa831c66d,
          0xb00327c8,
          0xbf597fc7,
          0xc6e00bf3,
          0xd5a79147,
          0x06ca6351,
          0x14292967,
          0x27b70a85,
          0x2e1b2138,
          0x4d2c6dfc,
          0x53380d13,
          0x650a7354,
          0x766a0abb,
          0x81c2c92e,
          0x92722c85,
          0xa2bfe8a1,
          0xa81a664b,
          0xc24b8b70,
          0xc76c51a3,
          0xd192e819,
          0xd6990624,
          0xf40e3585,
          0x106aa070,
          0x19a4c116,
          0x1e376c08,
          0x2748774c,
          0x34b0bcb5,
          0x391c0cb3,
          0x4ed8aa4a,
          0x5b9cca4f,
          0x682e6ff3,
          0x748f82ee,
          0x78a5636f,
          0x84c87814,
          0x8cc70208,
          0x90befffa,
          0xa4506ceb,
          0xbef9a3f7,
          0xc67178f2,
        ];

        var W = new Array(64);

        function Sha256() {
          this.init();

          this._w = W; // new Array(64)

          Hash.call(this, 64, 56);
        }

        inherits(Sha256, Hash);

        Sha256.prototype.init = function () {
          this._a = 0x6a09e667;
          this._b = 0xbb67ae85;
          this._c = 0x3c6ef372;
          this._d = 0xa54ff53a;
          this._e = 0x510e527f;
          this._f = 0x9b05688c;
          this._g = 0x1f83d9ab;
          this._h = 0x5be0cd19;

          return this;
        };

        function ch(x, y, z) {
          return z ^ (x & (y ^ z));
        }

        function maj(x, y, z) {
          return (x & y) | (z & (x | y));
        }

        function sigma0(x) {
          return (
            ((x >>> 2) | (x << 30)) ^
            ((x >>> 13) | (x << 19)) ^
            ((x >>> 22) | (x << 10))
          );
        }

        function sigma1(x) {
          return (
            ((x >>> 6) | (x << 26)) ^
            ((x >>> 11) | (x << 21)) ^
            ((x >>> 25) | (x << 7))
          );
        }

        function gamma0(x) {
          return ((x >>> 7) | (x << 25)) ^ ((x >>> 18) | (x << 14)) ^ (x >>> 3);
        }

        function gamma1(x) {
          return (
            ((x >>> 17) | (x << 15)) ^ ((x >>> 19) | (x << 13)) ^ (x >>> 10)
          );
        }

        Sha256.prototype._update = function (M) {
          var W = this._w;

          var a = this._a | 0;
          var b = this._b | 0;
          var c = this._c | 0;
          var d = this._d | 0;
          var e = this._e | 0;
          var f = this._f | 0;
          var g = this._g | 0;
          var h = this._h | 0;

          for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4);
          for (; i < 64; ++i)
            W[i] =
              (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0;

          for (var j = 0; j < 64; ++j) {
            var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0;
            var T2 = (sigma0(a) + maj(a, b, c)) | 0;

            h = g;
            g = f;
            f = e;
            e = (d + T1) | 0;
            d = c;
            c = b;
            b = a;
            a = (T1 + T2) | 0;
          }

          this._a = (a + this._a) | 0;
          this._b = (b + this._b) | 0;
          this._c = (c + this._c) | 0;
          this._d = (d + this._d) | 0;
          this._e = (e + this._e) | 0;
          this._f = (f + this._f) | 0;
          this._g = (g + this._g) | 0;
          this._h = (h + this._h) | 0;
        };

        Sha256.prototype._hash = function () {
          var H = Buffer.allocUnsafe(32);

          H.writeInt32BE(this._a, 0);
          H.writeInt32BE(this._b, 4);
          H.writeInt32BE(this._c, 8);
          H.writeInt32BE(this._d, 12);
          H.writeInt32BE(this._e, 16);
          H.writeInt32BE(this._f, 20);
          H.writeInt32BE(this._g, 24);
          H.writeInt32BE(this._h, 28);

          return H;
        };

        module.exports = Sha256;

        /***/
      },

    /***/ '../node_modules/sha.js/sha384.js':
      /*!****************************************!*\
  !*** ../node_modules/sha.js/sha384.js ***!
  \****************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );
        var SHA512 = __webpack_require__(
          /*! ./sha512 */ '../node_modules/sha.js/sha512.js'
        );
        var Hash = __webpack_require__(
          /*! ./hash */ '../node_modules/sha.js/hash.js'
        );
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;

        var W = new Array(160);

        function Sha384() {
          this.init();
          this._w = W;

          Hash.call(this, 128, 112);
        }

        inherits(Sha384, SHA512);

        Sha384.prototype.init = function () {
          this._ah = 0xcbbb9d5d;
          this._bh = 0x629a292a;
          this._ch = 0x9159015a;
          this._dh = 0x152fecd8;
          this._eh = 0x67332667;
          this._fh = 0x8eb44a87;
          this._gh = 0xdb0c2e0d;
          this._hh = 0x47b5481d;

          this._al = 0xc1059ed8;
          this._bl = 0x367cd507;
          this._cl = 0x3070dd17;
          this._dl = 0xf70e5939;
          this._el = 0xffc00b31;
          this._fl = 0x68581511;
          this._gl = 0x64f98fa7;
          this._hl = 0xbefa4fa4;

          return this;
        };

        Sha384.prototype._hash = function () {
          var H = Buffer.allocUnsafe(48);

          function writeInt64BE(h, l, offset) {
            H.writeInt32BE(h, offset);
            H.writeInt32BE(l, offset + 4);
          }

          writeInt64BE(this._ah, this._al, 0);
          writeInt64BE(this._bh, this._bl, 8);
          writeInt64BE(this._ch, this._cl, 16);
          writeInt64BE(this._dh, this._dl, 24);
          writeInt64BE(this._eh, this._el, 32);
          writeInt64BE(this._fh, this._fl, 40);

          return H;
        };

        module.exports = Sha384;

        /***/
      },

    /***/ '../node_modules/sha.js/sha512.js':
      /*!****************************************!*\
  !*** ../node_modules/sha.js/sha512.js ***!
  \****************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );
        var Hash = __webpack_require__(
          /*! ./hash */ '../node_modules/sha.js/hash.js'
        );
        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;

        var K = [
          0x428a2f98,
          0xd728ae22,
          0x71374491,
          0x23ef65cd,
          0xb5c0fbcf,
          0xec4d3b2f,
          0xe9b5dba5,
          0x8189dbbc,
          0x3956c25b,
          0xf348b538,
          0x59f111f1,
          0xb605d019,
          0x923f82a4,
          0xaf194f9b,
          0xab1c5ed5,
          0xda6d8118,
          0xd807aa98,
          0xa3030242,
          0x12835b01,
          0x45706fbe,
          0x243185be,
          0x4ee4b28c,
          0x550c7dc3,
          0xd5ffb4e2,
          0x72be5d74,
          0xf27b896f,
          0x80deb1fe,
          0x3b1696b1,
          0x9bdc06a7,
          0x25c71235,
          0xc19bf174,
          0xcf692694,
          0xe49b69c1,
          0x9ef14ad2,
          0xefbe4786,
          0x384f25e3,
          0x0fc19dc6,
          0x8b8cd5b5,
          0x240ca1cc,
          0x77ac9c65,
          0x2de92c6f,
          0x592b0275,
          0x4a7484aa,
          0x6ea6e483,
          0x5cb0a9dc,
          0xbd41fbd4,
          0x76f988da,
          0x831153b5,
          0x983e5152,
          0xee66dfab,
          0xa831c66d,
          0x2db43210,
          0xb00327c8,
          0x98fb213f,
          0xbf597fc7,
          0xbeef0ee4,
          0xc6e00bf3,
          0x3da88fc2,
          0xd5a79147,
          0x930aa725,
          0x06ca6351,
          0xe003826f,
          0x14292967,
          0x0a0e6e70,
          0x27b70a85,
          0x46d22ffc,
          0x2e1b2138,
          0x5c26c926,
          0x4d2c6dfc,
          0x5ac42aed,
          0x53380d13,
          0x9d95b3df,
          0x650a7354,
          0x8baf63de,
          0x766a0abb,
          0x3c77b2a8,
          0x81c2c92e,
          0x47edaee6,
          0x92722c85,
          0x1482353b,
          0xa2bfe8a1,
          0x4cf10364,
          0xa81a664b,
          0xbc423001,
          0xc24b8b70,
          0xd0f89791,
          0xc76c51a3,
          0x0654be30,
          0xd192e819,
          0xd6ef5218,
          0xd6990624,
          0x5565a910,
          0xf40e3585,
          0x5771202a,
          0x106aa070,
          0x32bbd1b8,
          0x19a4c116,
          0xb8d2d0c8,
          0x1e376c08,
          0x5141ab53,
          0x2748774c,
          0xdf8eeb99,
          0x34b0bcb5,
          0xe19b48a8,
          0x391c0cb3,
          0xc5c95a63,
          0x4ed8aa4a,
          0xe3418acb,
          0x5b9cca4f,
          0x7763e373,
          0x682e6ff3,
          0xd6b2b8a3,
          0x748f82ee,
          0x5defb2fc,
          0x78a5636f,
          0x43172f60,
          0x84c87814,
          0xa1f0ab72,
          0x8cc70208,
          0x1a6439ec,
          0x90befffa,
          0x23631e28,
          0xa4506ceb,
          0xde82bde9,
          0xbef9a3f7,
          0xb2c67915,
          0xc67178f2,
          0xe372532b,
          0xca273ece,
          0xea26619c,
          0xd186b8c7,
          0x21c0c207,
          0xeada7dd6,
          0xcde0eb1e,
          0xf57d4f7f,
          0xee6ed178,
          0x06f067aa,
          0x72176fba,
          0x0a637dc5,
          0xa2c898a6,
          0x113f9804,
          0xbef90dae,
          0x1b710b35,
          0x131c471b,
          0x28db77f5,
          0x23047d84,
          0x32caab7b,
          0x40c72493,
          0x3c9ebe0a,
          0x15c9bebc,
          0x431d67c4,
          0x9c100d4c,
          0x4cc5d4be,
          0xcb3e42b6,
          0x597f299c,
          0xfc657e2a,
          0x5fcb6fab,
          0x3ad6faec,
          0x6c44198c,
          0x4a475817,
        ];

        var W = new Array(160);

        function Sha512() {
          this.init();
          this._w = W;

          Hash.call(this, 128, 112);
        }

        inherits(Sha512, Hash);

        Sha512.prototype.init = function () {
          this._ah = 0x6a09e667;
          this._bh = 0xbb67ae85;
          this._ch = 0x3c6ef372;
          this._dh = 0xa54ff53a;
          this._eh = 0x510e527f;
          this._fh = 0x9b05688c;
          this._gh = 0x1f83d9ab;
          this._hh = 0x5be0cd19;

          this._al = 0xf3bcc908;
          this._bl = 0x84caa73b;
          this._cl = 0xfe94f82b;
          this._dl = 0x5f1d36f1;
          this._el = 0xade682d1;
          this._fl = 0x2b3e6c1f;
          this._gl = 0xfb41bd6b;
          this._hl = 0x137e2179;

          return this;
        };

        function Ch(x, y, z) {
          return z ^ (x & (y ^ z));
        }

        function maj(x, y, z) {
          return (x & y) | (z & (x | y));
        }

        function sigma0(x, xl) {
          return (
            ((x >>> 28) | (xl << 4)) ^
            ((xl >>> 2) | (x << 30)) ^
            ((xl >>> 7) | (x << 25))
          );
        }

        function sigma1(x, xl) {
          return (
            ((x >>> 14) | (xl << 18)) ^
            ((x >>> 18) | (xl << 14)) ^
            ((xl >>> 9) | (x << 23))
          );
        }

        function Gamma0(x, xl) {
          return (
            ((x >>> 1) | (xl << 31)) ^ ((x >>> 8) | (xl << 24)) ^ (x >>> 7)
          );
        }

        function Gamma0l(x, xl) {
          return (
            ((x >>> 1) | (xl << 31)) ^
            ((x >>> 8) | (xl << 24)) ^
            ((x >>> 7) | (xl << 25))
          );
        }

        function Gamma1(x, xl) {
          return (
            ((x >>> 19) | (xl << 13)) ^ ((xl >>> 29) | (x << 3)) ^ (x >>> 6)
          );
        }

        function Gamma1l(x, xl) {
          return (
            ((x >>> 19) | (xl << 13)) ^
            ((xl >>> 29) | (x << 3)) ^
            ((x >>> 6) | (xl << 26))
          );
        }

        function getCarry(a, b) {
          return a >>> 0 < b >>> 0 ? 1 : 0;
        }

        Sha512.prototype._update = function (M) {
          var W = this._w;

          var ah = this._ah | 0;
          var bh = this._bh | 0;
          var ch = this._ch | 0;
          var dh = this._dh | 0;
          var eh = this._eh | 0;
          var fh = this._fh | 0;
          var gh = this._gh | 0;
          var hh = this._hh | 0;

          var al = this._al | 0;
          var bl = this._bl | 0;
          var cl = this._cl | 0;
          var dl = this._dl | 0;
          var el = this._el | 0;
          var fl = this._fl | 0;
          var gl = this._gl | 0;
          var hl = this._hl | 0;

          for (var i = 0; i < 32; i += 2) {
            W[i] = M.readInt32BE(i * 4);
            W[i + 1] = M.readInt32BE(i * 4 + 4);
          }
          for (; i < 160; i += 2) {
            var xh = W[i - 15 * 2];
            var xl = W[i - 15 * 2 + 1];
            var gamma0 = Gamma0(xh, xl);
            var gamma0l = Gamma0l(xl, xh);

            xh = W[i - 2 * 2];
            xl = W[i - 2 * 2 + 1];
            var gamma1 = Gamma1(xh, xl);
            var gamma1l = Gamma1l(xl, xh);

            // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
            var Wi7h = W[i - 7 * 2];
            var Wi7l = W[i - 7 * 2 + 1];

            var Wi16h = W[i - 16 * 2];
            var Wi16l = W[i - 16 * 2 + 1];

            var Wil = (gamma0l + Wi7l) | 0;
            var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0;
            Wil = (Wil + gamma1l) | 0;
            Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0;
            Wil = (Wil + Wi16l) | 0;
            Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0;

            W[i] = Wih;
            W[i + 1] = Wil;
          }

          for (var j = 0; j < 160; j += 2) {
            Wih = W[j];
            Wil = W[j + 1];

            var majh = maj(ah, bh, ch);
            var majl = maj(al, bl, cl);

            var sigma0h = sigma0(ah, al);
            var sigma0l = sigma0(al, ah);
            var sigma1h = sigma1(eh, el);
            var sigma1l = sigma1(el, eh);

            // t1 = h + sigma1 + ch + K[j] + W[j]
            var Kih = K[j];
            var Kil = K[j + 1];

            var chh = Ch(eh, fh, gh);
            var chl = Ch(el, fl, gl);

            var t1l = (hl + sigma1l) | 0;
            var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0;
            t1l = (t1l + chl) | 0;
            t1h = (t1h + chh + getCarry(t1l, chl)) | 0;
            t1l = (t1l + Kil) | 0;
            t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0;
            t1l = (t1l + Wil) | 0;
            t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0;

            // t2 = sigma0 + maj
            var t2l = (sigma0l + majl) | 0;
            var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0;

            hh = gh;
            hl = gl;
            gh = fh;
            gl = fl;
            fh = eh;
            fl = el;
            el = (dl + t1l) | 0;
            eh = (dh + t1h + getCarry(el, dl)) | 0;
            dh = ch;
            dl = cl;
            ch = bh;
            cl = bl;
            bh = ah;
            bl = al;
            al = (t1l + t2l) | 0;
            ah = (t1h + t2h + getCarry(al, t1l)) | 0;
          }

          this._al = (this._al + al) | 0;
          this._bl = (this._bl + bl) | 0;
          this._cl = (this._cl + cl) | 0;
          this._dl = (this._dl + dl) | 0;
          this._el = (this._el + el) | 0;
          this._fl = (this._fl + fl) | 0;
          this._gl = (this._gl + gl) | 0;
          this._hl = (this._hl + hl) | 0;

          this._ah = (this._ah + ah + getCarry(this._al, al)) | 0;
          this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0;
          this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0;
          this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0;
          this._eh = (this._eh + eh + getCarry(this._el, el)) | 0;
          this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0;
          this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0;
          this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0;
        };

        Sha512.prototype._hash = function () {
          var H = Buffer.allocUnsafe(64);

          function writeInt64BE(h, l, offset) {
            H.writeInt32BE(h, offset);
            H.writeInt32BE(l, offset + 4);
          }

          writeInt64BE(this._ah, this._al, 0);
          writeInt64BE(this._bh, this._bl, 8);
          writeInt64BE(this._ch, this._cl, 16);
          writeInt64BE(this._dh, this._dl, 24);
          writeInt64BE(this._eh, this._el, 32);
          writeInt64BE(this._fh, this._fl, 40);
          writeInt64BE(this._gh, this._gl, 48);
          writeInt64BE(this._hh, this._hl, 56);

          return H;
        };

        module.exports = Sha512;

        /***/
      },

    /***/ '../node_modules/stream-browserify/index.js':
      /*!**************************************************!*\
  !*** ../node_modules/stream-browserify/index.js ***!
  \**************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        module.exports = Stream;

        var EE = __webpack_require__(
          /*! events */ '../node_modules/events/events.js'
        ).EventEmitter;
        var inherits = __webpack_require__(
          /*! inherits */ '../node_modules/inherits/inherits_browser.js'
        );

        inherits(Stream, EE);
        Stream.Readable = __webpack_require__(
          /*! readable-stream/readable.js */ '../node_modules/readable-stream/readable-browser.js'
        );
        Stream.Writable = __webpack_require__(
          /*! readable-stream/writable.js */ '../node_modules/readable-stream/writable-browser.js'
        );
        Stream.Duplex = __webpack_require__(
          /*! readable-stream/duplex.js */ '../node_modules/readable-stream/duplex-browser.js'
        );
        Stream.Transform = __webpack_require__(
          /*! readable-stream/transform.js */ '../node_modules/readable-stream/transform.js'
        );
        Stream.PassThrough = __webpack_require__(
          /*! readable-stream/passthrough.js */ '../node_modules/readable-stream/passthrough.js'
        );

        // Backwards-compat with node 0.4.x
        Stream.Stream = Stream;

        // old-style streams.  Note that the pipe method (the only relevant
        // part of this class) is overridden in the Readable class.

        function Stream() {
          EE.call(this);
        }

        Stream.prototype.pipe = function (dest, options) {
          var source = this;

          function ondata(chunk) {
            if (dest.writable) {
              if (false === dest.write(chunk) && source.pause) {
                source.pause();
              }
            }
          }

          source.on('data', ondata);

          function ondrain() {
            if (source.readable && source.resume) {
              source.resume();
            }
          }

          dest.on('drain', ondrain);

          // If the 'end' option is not supplied, dest.end() will be called when
          // source gets the 'end' or 'close' events.  Only dest.end() once.
          if (!dest._isStdio && (!options || options.end !== false)) {
            source.on('end', onend);
            source.on('close', onclose);
          }

          var didOnEnd = false;
          function onend() {
            if (didOnEnd) return;
            didOnEnd = true;

            dest.end();
          }

          function onclose() {
            if (didOnEnd) return;
            didOnEnd = true;

            if (typeof dest.destroy === 'function') dest.destroy();
          }

          // don't leave dangling pipes when there are errors.
          function onerror(er) {
            cleanup();
            if (EE.listenerCount(this, 'error') === 0) {
              throw er; // Unhandled stream error in pipe.
            }
          }

          source.on('error', onerror);
          dest.on('error', onerror);

          // remove all the event listeners that were added.
          function cleanup() {
            source.removeListener('data', ondata);
            dest.removeListener('drain', ondrain);

            source.removeListener('end', onend);
            source.removeListener('close', onclose);

            source.removeListener('error', onerror);
            dest.removeListener('error', onerror);

            source.removeListener('end', cleanup);
            source.removeListener('close', cleanup);

            dest.removeListener('close', cleanup);
          }

          source.on('end', cleanup);
          source.on('close', cleanup);

          dest.on('close', cleanup);

          dest.emit('pipe', source);

          // Allow for unix-like usage: A.pipe(B).pipe(C)
          return dest;
        };

        /***/
      },

    /***/ '../node_modules/string_decoder/lib/string_decoder.js':
      /*!************************************************************!*\
  !*** ../node_modules/string_decoder/lib/string_decoder.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        /*<replacement>*/

        var Buffer = __webpack_require__(
          /*! safe-buffer */ '../node_modules/safe-buffer/index.js'
        ).Buffer;
        /*</replacement>*/

        var isEncoding =
          Buffer.isEncoding ||
          function (encoding) {
            encoding = '' + encoding;
            switch (encoding && encoding.toLowerCase()) {
              case 'hex':
              case 'utf8':
              case 'utf-8':
              case 'ascii':
              case 'binary':
              case 'base64':
              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
              case 'raw':
                return true;
              default:
                return false;
            }
          };

        function _normalizeEncoding(enc) {
          if (!enc) return 'utf8';
          var retried;
          while (true) {
            switch (enc) {
              case 'utf8':
              case 'utf-8':
                return 'utf8';
              case 'ucs2':
              case 'ucs-2':
              case 'utf16le':
              case 'utf-16le':
                return 'utf16le';
              case 'latin1':
              case 'binary':
                return 'latin1';
              case 'base64':
              case 'ascii':
              case 'hex':
                return enc;
              default:
                if (retried) return; // undefined
                enc = ('' + enc).toLowerCase();
                retried = true;
            }
          }
        }

        // Do not cache `Buffer.isEncoding` when checking encoding names as some
        // modules monkey-patch it to support additional encodings
        function normalizeEncoding(enc) {
          var nenc = _normalizeEncoding(enc);
          if (
            typeof nenc !== 'string' &&
            (Buffer.isEncoding === isEncoding || !isEncoding(enc))
          )
            throw new Error('Unknown encoding: ' + enc);
          return nenc || enc;
        }

        // StringDecoder provides an interface for efficiently splitting a series of
        // buffers into a series of JS strings without breaking apart multi-byte
        // characters.
        exports.StringDecoder = StringDecoder;
        function StringDecoder(encoding) {
          this.encoding = normalizeEncoding(encoding);
          var nb;
          switch (this.encoding) {
            case 'utf16le':
              this.text = utf16Text;
              this.end = utf16End;
              nb = 4;
              break;
            case 'utf8':
              this.fillLast = utf8FillLast;
              nb = 4;
              break;
            case 'base64':
              this.text = base64Text;
              this.end = base64End;
              nb = 3;
              break;
            default:
              this.write = simpleWrite;
              this.end = simpleEnd;
              return;
          }
          this.lastNeed = 0;
          this.lastTotal = 0;
          this.lastChar = Buffer.allocUnsafe(nb);
        }

        StringDecoder.prototype.write = function (buf) {
          if (buf.length === 0) return '';
          var r;
          var i;
          if (this.lastNeed) {
            r = this.fillLast(buf);
            if (r === undefined) return '';
            i = this.lastNeed;
            this.lastNeed = 0;
          } else {
            i = 0;
          }
          if (i < buf.length)
            return r ? r + this.text(buf, i) : this.text(buf, i);
          return r || '';
        };

        StringDecoder.prototype.end = utf8End;

        // Returns only complete characters in a Buffer
        StringDecoder.prototype.text = utf8Text;

        // Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
        StringDecoder.prototype.fillLast = function (buf) {
          if (this.lastNeed <= buf.length) {
            buf.copy(
              this.lastChar,
              this.lastTotal - this.lastNeed,
              0,
              this.lastNeed
            );
            return this.lastChar.toString(this.encoding, 0, this.lastTotal);
          }
          buf.copy(
            this.lastChar,
            this.lastTotal - this.lastNeed,
            0,
            buf.length
          );
          this.lastNeed -= buf.length;
        };

        // Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
        // continuation byte. If an invalid byte is detected, -2 is returned.
        function utf8CheckByte(byte) {
          if (byte <= 0x7f) return 0;
          else if (byte >> 5 === 0x06) return 2;
          else if (byte >> 4 === 0x0e) return 3;
          else if (byte >> 3 === 0x1e) return 4;
          return byte >> 6 === 0x02 ? -1 : -2;
        }

        // Checks at most 3 bytes at the end of a Buffer in order to detect an
        // incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
        // needed to complete the UTF-8 character (if applicable) are returned.
        function utf8CheckIncomplete(self, buf, i) {
          var j = buf.length - 1;
          if (j < i) return 0;
          var nb = utf8CheckByte(buf[j]);
          if (nb >= 0) {
            if (nb > 0) self.lastNeed = nb - 1;
            return nb;
          }
          if (--j < i || nb === -2) return 0;
          nb = utf8CheckByte(buf[j]);
          if (nb >= 0) {
            if (nb > 0) self.lastNeed = nb - 2;
            return nb;
          }
          if (--j < i || nb === -2) return 0;
          nb = utf8CheckByte(buf[j]);
          if (nb >= 0) {
            if (nb > 0) {
              if (nb === 2) nb = 0;
              else self.lastNeed = nb - 3;
            }
            return nb;
          }
          return 0;
        }

        // Validates as many continuation bytes for a multi-byte UTF-8 character as
        // needed or are available. If we see a non-continuation byte where we expect
        // one, we "replace" the validated continuation bytes we've seen so far with
        // a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
        // behavior. The continuation byte check is included three times in the case
        // where all of the continuation bytes for a character exist in the same buffer.
        // It is also done this way as a slight performance increase instead of using a
        // loop.
        function utf8CheckExtraBytes(self, buf, p) {
          if ((buf[0] & 0xc0) !== 0x80) {
            self.lastNeed = 0;
            return '\ufffd';
          }
          if (self.lastNeed > 1 && buf.length > 1) {
            if ((buf[1] & 0xc0) !== 0x80) {
              self.lastNeed = 1;
              return '\ufffd';
            }
            if (self.lastNeed > 2 && buf.length > 2) {
              if ((buf[2] & 0xc0) !== 0x80) {
                self.lastNeed = 2;
                return '\ufffd';
              }
            }
          }
        }

        // Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
        function utf8FillLast(buf) {
          var p = this.lastTotal - this.lastNeed;
          var r = utf8CheckExtraBytes(this, buf, p);
          if (r !== undefined) return r;
          if (this.lastNeed <= buf.length) {
            buf.copy(this.lastChar, p, 0, this.lastNeed);
            return this.lastChar.toString(this.encoding, 0, this.lastTotal);
          }
          buf.copy(this.lastChar, p, 0, buf.length);
          this.lastNeed -= buf.length;
        }

        // Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
        // partial character, the character's bytes are buffered until the required
        // number of bytes are available.
        function utf8Text(buf, i) {
          var total = utf8CheckIncomplete(this, buf, i);
          if (!this.lastNeed) return buf.toString('utf8', i);
          this.lastTotal = total;
          var end = buf.length - (total - this.lastNeed);
          buf.copy(this.lastChar, 0, end);
          return buf.toString('utf8', i, end);
        }

        // For UTF-8, a replacement character is added when ending on a partial
        // character.
        function utf8End(buf) {
          var r = buf && buf.length ? this.write(buf) : '';
          if (this.lastNeed) return r + '\ufffd';
          return r;
        }

        // UTF-16LE typically needs two bytes per character, but even if we have an even
        // number of bytes available, we need to check if we end on a leading/high
        // surrogate. In that case, we need to wait for the next two bytes in order to
        // decode the last character properly.
        function utf16Text(buf, i) {
          if ((buf.length - i) % 2 === 0) {
            var r = buf.toString('utf16le', i);
            if (r) {
              var c = r.charCodeAt(r.length - 1);
              if (c >= 0xd800 && c <= 0xdbff) {
                this.lastNeed = 2;
                this.lastTotal = 4;
                this.lastChar[0] = buf[buf.length - 2];
                this.lastChar[1] = buf[buf.length - 1];
                return r.slice(0, -1);
              }
            }
            return r;
          }
          this.lastNeed = 1;
          this.lastTotal = 2;
          this.lastChar[0] = buf[buf.length - 1];
          return buf.toString('utf16le', i, buf.length - 1);
        }

        // For UTF-16LE we do not explicitly append special replacement characters if we
        // end on a partial character, we simply let v8 handle that.
        function utf16End(buf) {
          var r = buf && buf.length ? this.write(buf) : '';
          if (this.lastNeed) {
            var end = this.lastTotal - this.lastNeed;
            return r + this.lastChar.toString('utf16le', 0, end);
          }
          return r;
        }

        function base64Text(buf, i) {
          var n = (buf.length - i) % 3;
          if (n === 0) return buf.toString('base64', i);
          this.lastNeed = 3 - n;
          this.lastTotal = 3;
          if (n === 1) {
            this.lastChar[0] = buf[buf.length - 1];
          } else {
            this.lastChar[0] = buf[buf.length - 2];
            this.lastChar[1] = buf[buf.length - 1];
          }
          return buf.toString('base64', i, buf.length - n);
        }

        function base64End(buf) {
          var r = buf && buf.length ? this.write(buf) : '';
          if (this.lastNeed)
            return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
          return r;
        }

        // Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
        function simpleWrite(buf) {
          return buf.toString(this.encoding);
        }

        function simpleEnd(buf) {
          return buf && buf.length ? this.write(buf) : '';
        }

        /***/
      },

    /***/ '../node_modules/sweetalert2/dist/sweetalert2.all.js':
      /*!***********************************************************!*\
  !*** ../node_modules/sweetalert2/dist/sweetalert2.all.js ***!
  \***********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /*!
         * sweetalert2 v9.15.3
         * Released under the MIT License.
         */
        (function (global, factory) {
          true ? (module.exports = factory()) : undefined;
        })(this, function () {
          'use strict';

          function _typeof(obj) {
            '@babel/helpers - typeof';

            if (
              typeof Symbol === 'function' &&
              typeof Symbol.iterator === 'symbol'
            ) {
              _typeof = function (obj) {
                return typeof obj;
              };
            } else {
              _typeof = function (obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj;
              };
            }

            return _typeof(obj);
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }

          function _defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ('value' in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          function _createClass(Constructor, protoProps, staticProps) {
            if (protoProps)
              _defineProperties(Constructor.prototype, protoProps);
            if (staticProps) _defineProperties(Constructor, staticProps);
            return Constructor;
          }

          function _extends() {
            _extends =
              Object.assign ||
              function (target) {
                for (var i = 1; i < arguments.length; i++) {
                  var source = arguments[i];

                  for (var key in source) {
                    if (Object.prototype.hasOwnProperty.call(source, key)) {
                      target[key] = source[key];
                    }
                  }
                }

                return target;
              };

            return _extends.apply(this, arguments);
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function'
              );
            }

            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass) _setPrototypeOf(subClass, superClass);
          }

          function _getPrototypeOf(o) {
            _getPrototypeOf = Object.setPrototypeOf
              ? Object.getPrototypeOf
              : function _getPrototypeOf(o) {
                  return o.__proto__ || Object.getPrototypeOf(o);
                };
            return _getPrototypeOf(o);
          }

          function _setPrototypeOf(o, p) {
            _setPrototypeOf =
              Object.setPrototypeOf ||
              function _setPrototypeOf(o, p) {
                o.__proto__ = p;
                return o;
              };

            return _setPrototypeOf(o, p);
          }

          function _isNativeReflectConstruct() {
            if (typeof Reflect === 'undefined' || !Reflect.construct)
              return false;
            if (Reflect.construct.sham) return false;
            if (typeof Proxy === 'function') return true;

            try {
              Date.prototype.toString.call(
                Reflect.construct(Date, [], function () {})
              );
              return true;
            } catch (e) {
              return false;
            }
          }

          function _construct(Parent, args, Class) {
            if (_isNativeReflectConstruct()) {
              _construct = Reflect.construct;
            } else {
              _construct = function _construct(Parent, args, Class) {
                var a = [null];
                a.push.apply(a, args);
                var Constructor = Function.bind.apply(Parent, a);
                var instance = new Constructor();
                if (Class) _setPrototypeOf(instance, Class.prototype);
                return instance;
              };
            }

            return _construct.apply(null, arguments);
          }

          function _assertThisInitialized(self) {
            if (self === void 0) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }

            return self;
          }

          function _possibleConstructorReturn(self, call) {
            if (
              call &&
              (typeof call === 'object' || typeof call === 'function')
            ) {
              return call;
            }

            return _assertThisInitialized(self);
          }

          function _createSuper(Derived) {
            var hasNativeReflectConstruct = _isNativeReflectConstruct();

            return function _createSuperInternal() {
              var Super = _getPrototypeOf(Derived),
                result;

              if (hasNativeReflectConstruct) {
                var NewTarget = _getPrototypeOf(this).constructor;

                result = Reflect.construct(Super, arguments, NewTarget);
              } else {
                result = Super.apply(this, arguments);
              }

              return _possibleConstructorReturn(this, result);
            };
          }

          function _superPropBase(object, property) {
            while (!Object.prototype.hasOwnProperty.call(object, property)) {
              object = _getPrototypeOf(object);
              if (object === null) break;
            }

            return object;
          }

          function _get(target, property, receiver) {
            if (typeof Reflect !== 'undefined' && Reflect.get) {
              _get = Reflect.get;
            } else {
              _get = function _get(target, property, receiver) {
                var base = _superPropBase(target, property);

                if (!base) return;
                var desc = Object.getOwnPropertyDescriptor(base, property);

                if (desc.get) {
                  return desc.get.call(receiver);
                }

                return desc.value;
              };
            }

            return _get(target, property, receiver || target);
          }

          var consolePrefix = 'SweetAlert2:';
          /**
           * Filter the unique values into a new array
           * @param arr
           */

          var uniqueArray = function uniqueArray(arr) {
            var result = [];

            for (var i = 0; i < arr.length; i++) {
              if (result.indexOf(arr[i]) === -1) {
                result.push(arr[i]);
              }
            }

            return result;
          };
          /**
           * Capitalize the first letter of a string
           * @param str
           */

          var capitalizeFirstLetter = function capitalizeFirstLetter(str) {
            return str.charAt(0).toUpperCase() + str.slice(1);
          };
          /**
           * Returns the array of object values (Object.values isn't supported in IE11)
           * @param obj
           */

          var objectValues = function objectValues(obj) {
            return Object.keys(obj).map(function (key) {
              return obj[key];
            });
          };
          /**
           * Convert NodeList to Array
           * @param nodeList
           */

          var toArray = function toArray(nodeList) {
            return Array.prototype.slice.call(nodeList);
          };
          /**
           * Standardise console warnings
           * @param message
           */

          var warn = function warn(message) {
            console.warn(''.concat(consolePrefix, ' ').concat(message));
          };
          /**
           * Standardise console errors
           * @param message
           */

          var error = function error(message) {
            console.error(''.concat(consolePrefix, ' ').concat(message));
          };
          /**
           * Private global state for `warnOnce`
           * @type {Array}
           * @private
           */

          var previousWarnOnceMessages = [];
          /**
           * Show a console warning, but only if it hasn't already been shown
           * @param message
           */

          var warnOnce = function warnOnce(message) {
            if (!(previousWarnOnceMessages.indexOf(message) !== -1)) {
              previousWarnOnceMessages.push(message);
              warn(message);
            }
          };
          /**
           * Show a one-time console warning about deprecated params/methods
           */

          var warnAboutDepreation = function warnAboutDepreation(
            deprecatedParam,
            useInstead
          ) {
            warnOnce(
              '"'
                .concat(
                  deprecatedParam,
                  '" is deprecated and will be removed in the next major release. Please use "'
                )
                .concat(useInstead, '" instead.')
            );
          };
          /**
           * If `arg` is a function, call it (with no arguments or context) and return the result.
           * Otherwise, just pass the value through
           * @param arg
           */

          var callIfFunction = function callIfFunction(arg) {
            return typeof arg === 'function' ? arg() : arg;
          };
          var hasToPromiseFn = function hasToPromiseFn(arg) {
            return arg && typeof arg.toPromise === 'function';
          };
          var asPromise = function asPromise(arg) {
            return hasToPromiseFn(arg) ? arg.toPromise() : Promise.resolve(arg);
          };
          var isPromise = function isPromise(arg) {
            return arg && Promise.resolve(arg) === arg;
          };

          var DismissReason = Object.freeze({
            cancel: 'cancel',
            backdrop: 'backdrop',
            close: 'close',
            esc: 'esc',
            timer: 'timer',
          });

          var isJqueryElement = function isJqueryElement(elem) {
            return _typeof(elem) === 'object' && elem.jquery;
          };

          var isElement = function isElement(elem) {
            return elem instanceof Element || isJqueryElement(elem);
          };

          var argsToParams = function argsToParams(args) {
            var params = {};

            if (_typeof(args[0]) === 'object' && !isElement(args[0])) {
              _extends(params, args[0]);
            } else {
              ['title', 'html', 'icon'].forEach(function (name, index) {
                var arg = args[index];

                if (typeof arg === 'string' || isElement(arg)) {
                  params[name] = arg;
                } else if (arg !== undefined) {
                  error(
                    'Unexpected type of '
                      .concat(name, '! Expected "string" or "Element", got ')
                      .concat(_typeof(arg))
                  );
                }
              });
            }

            return params;
          };

          var swalPrefix = 'swal2-';
          var prefix = function prefix(items) {
            var result = {};

            for (var i in items) {
              result[items[i]] = swalPrefix + items[i];
            }

            return result;
          };
          var swalClasses = prefix([
            'container',
            'shown',
            'height-auto',
            'iosfix',
            'popup',
            'modal',
            'no-backdrop',
            'no-transition',
            'toast',
            'toast-shown',
            'toast-column',
            'show',
            'hide',
            'close',
            'title',
            'header',
            'content',
            'html-container',
            'actions',
            'confirm',
            'cancel',
            'footer',
            'icon',
            'icon-content',
            'image',
            'input',
            'file',
            'range',
            'select',
            'radio',
            'checkbox',
            'label',
            'textarea',
            'inputerror',
            'validation-message',
            'progress-steps',
            'active-progress-step',
            'progress-step',
            'progress-step-line',
            'loading',
            'styled',
            'top',
            'top-start',
            'top-end',
            'top-left',
            'top-right',
            'center',
            'center-start',
            'center-end',
            'center-left',
            'center-right',
            'bottom',
            'bottom-start',
            'bottom-end',
            'bottom-left',
            'bottom-right',
            'grow-row',
            'grow-column',
            'grow-fullscreen',
            'rtl',
            'timer-progress-bar',
            'timer-progress-bar-container',
            'scrollbar-measure',
            'icon-success',
            'icon-warning',
            'icon-info',
            'icon-question',
            'icon-error',
          ]);
          var iconTypes = prefix([
            'success',
            'warning',
            'info',
            'question',
            'error',
          ]);

          var getContainer = function getContainer() {
            return document.body.querySelector(
              '.'.concat(swalClasses.container)
            );
          };
          var elementBySelector = function elementBySelector(selectorString) {
            var container = getContainer();
            return container ? container.querySelector(selectorString) : null;
          };

          var elementByClass = function elementByClass(className) {
            return elementBySelector('.'.concat(className));
          };

          var getPopup = function getPopup() {
            return elementByClass(swalClasses.popup);
          };
          var getIcons = function getIcons() {
            var popup = getPopup();
            return toArray(
              popup.querySelectorAll('.'.concat(swalClasses.icon))
            );
          };
          var getIcon = function getIcon() {
            var visibleIcon = getIcons().filter(function (icon) {
              return isVisible(icon);
            });
            return visibleIcon.length ? visibleIcon[0] : null;
          };
          var getTitle = function getTitle() {
            return elementByClass(swalClasses.title);
          };
          var getContent = function getContent() {
            return elementByClass(swalClasses.content);
          };
          var getHtmlContainer = function getHtmlContainer() {
            return elementByClass(swalClasses['html-container']);
          };
          var getImage = function getImage() {
            return elementByClass(swalClasses.image);
          };
          var getProgressSteps = function getProgressSteps() {
            return elementByClass(swalClasses['progress-steps']);
          };
          var getValidationMessage = function getValidationMessage() {
            return elementByClass(swalClasses['validation-message']);
          };
          var getConfirmButton = function getConfirmButton() {
            return elementBySelector(
              '.'.concat(swalClasses.actions, ' .').concat(swalClasses.confirm)
            );
          };
          var getCancelButton = function getCancelButton() {
            return elementBySelector(
              '.'.concat(swalClasses.actions, ' .').concat(swalClasses.cancel)
            );
          };
          var getActions = function getActions() {
            return elementByClass(swalClasses.actions);
          };
          var getHeader = function getHeader() {
            return elementByClass(swalClasses.header);
          };
          var getFooter = function getFooter() {
            return elementByClass(swalClasses.footer);
          };
          var getTimerProgressBar = function getTimerProgressBar() {
            return elementByClass(swalClasses['timer-progress-bar']);
          };
          var getCloseButton = function getCloseButton() {
            return elementByClass(swalClasses.close);
          }; // https://github.com/jkup/focusable/blob/master/index.js

          var focusable =
            '\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex="0"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n';
          var getFocusableElements = function getFocusableElements() {
            var focusableElementsWithTabindex = toArray(
              getPopup().querySelectorAll(
                '[tabindex]:not([tabindex="-1"]):not([tabindex="0"])'
              )
            ) // sort according to tabindex
              .sort(function (a, b) {
                a = parseInt(a.getAttribute('tabindex'));
                b = parseInt(b.getAttribute('tabindex'));

                if (a > b) {
                  return 1;
                } else if (a < b) {
                  return -1;
                }

                return 0;
              });
            var otherFocusableElements = toArray(
              getPopup().querySelectorAll(focusable)
            ).filter(function (el) {
              return el.getAttribute('tabindex') !== '-1';
            });
            return uniqueArray(
              focusableElementsWithTabindex.concat(otherFocusableElements)
            ).filter(function (el) {
              return isVisible(el);
            });
          };
          var isModal = function isModal() {
            return (
              !isToast() &&
              !document.body.classList.contains(swalClasses['no-backdrop'])
            );
          };
          var isToast = function isToast() {
            return document.body.classList.contains(swalClasses['toast-shown']);
          };
          var isLoading = function isLoading() {
            return getPopup().hasAttribute('data-loading');
          };

          var states = {
            previousBodyPadding: null,
          };
          var setInnerHtml = function setInnerHtml(elem, html) {
            // #1926
            elem.textContent = '';

            if (html) {
              var parser = new DOMParser();
              var parsed = parser.parseFromString(html, 'text/html');
              toArray(parsed.querySelector('head').childNodes).forEach(
                function (child) {
                  elem.appendChild(child);
                }
              );
              toArray(parsed.querySelector('body').childNodes).forEach(
                function (child) {
                  elem.appendChild(child);
                }
              );
            }
          };
          var hasClass = function hasClass(elem, className) {
            if (!className) {
              return false;
            }

            var classList = className.split(/\s+/);

            for (var i = 0; i < classList.length; i++) {
              if (!elem.classList.contains(classList[i])) {
                return false;
              }
            }

            return true;
          };

          var removeCustomClasses = function removeCustomClasses(elem, params) {
            toArray(elem.classList).forEach(function (className) {
              if (
                !(objectValues(swalClasses).indexOf(className) !== -1) &&
                !(objectValues(iconTypes).indexOf(className) !== -1) &&
                !(objectValues(params.showClass).indexOf(className) !== -1)
              ) {
                elem.classList.remove(className);
              }
            });
          };

          var applyCustomClass = function applyCustomClass(
            elem,
            params,
            className
          ) {
            removeCustomClasses(elem, params);

            if (params.customClass && params.customClass[className]) {
              if (
                typeof params.customClass[className] !== 'string' &&
                !params.customClass[className].forEach
              ) {
                return warn(
                  'Invalid type of customClass.'
                    .concat(
                      className,
                      '! Expected string or iterable object, got "'
                    )
                    .concat(_typeof(params.customClass[className]), '"')
                );
              }

              addClass(elem, params.customClass[className]);
            }
          };
          function getInput(content, inputType) {
            if (!inputType) {
              return null;
            }

            switch (inputType) {
              case 'select':
              case 'textarea':
              case 'file':
                return getChildByClass(content, swalClasses[inputType]);

              case 'checkbox':
                return content.querySelector(
                  '.'.concat(swalClasses.checkbox, ' input')
                );

              case 'radio':
                return (
                  content.querySelector(
                    '.'.concat(swalClasses.radio, ' input:checked')
                  ) ||
                  content.querySelector(
                    '.'.concat(swalClasses.radio, ' input:first-child')
                  )
                );

              case 'range':
                return content.querySelector(
                  '.'.concat(swalClasses.range, ' input')
                );

              default:
                return getChildByClass(content, swalClasses.input);
            }
          }
          var focusInput = function focusInput(input) {
            input.focus(); // place cursor at end of text in text input

            if (input.type !== 'file') {
              // http://stackoverflow.com/a/2345915
              var val = input.value;
              input.value = '';
              input.value = val;
            }
          };
          var toggleClass = function toggleClass(target, classList, condition) {
            if (!target || !classList) {
              return;
            }

            if (typeof classList === 'string') {
              classList = classList.split(/\s+/).filter(Boolean);
            }

            classList.forEach(function (className) {
              if (target.forEach) {
                target.forEach(function (elem) {
                  condition
                    ? elem.classList.add(className)
                    : elem.classList.remove(className);
                });
              } else {
                condition
                  ? target.classList.add(className)
                  : target.classList.remove(className);
              }
            });
          };
          var addClass = function addClass(target, classList) {
            toggleClass(target, classList, true);
          };
          var removeClass = function removeClass(target, classList) {
            toggleClass(target, classList, false);
          };
          var getChildByClass = function getChildByClass(elem, className) {
            for (var i = 0; i < elem.childNodes.length; i++) {
              if (hasClass(elem.childNodes[i], className)) {
                return elem.childNodes[i];
              }
            }
          };
          var applyNumericalStyle = function applyNumericalStyle(
            elem,
            property,
            value
          ) {
            if (value || parseInt(value) === 0) {
              elem.style[property] =
                typeof value === 'number' ? ''.concat(value, 'px') : value;
            } else {
              elem.style.removeProperty(property);
            }
          };
          var show = function show(elem) {
            var display =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : 'flex';
            elem.style.opacity = '';
            elem.style.display = display;
          };
          var hide = function hide(elem) {
            elem.style.opacity = '';
            elem.style.display = 'none';
          };
          var toggle = function toggle(elem, condition, display) {
            condition ? show(elem, display) : hide(elem);
          }; // borrowed from jquery $(elem).is(':visible') implementation

          var isVisible = function isVisible(elem) {
            return !!(
              elem &&
              (elem.offsetWidth ||
                elem.offsetHeight ||
                elem.getClientRects().length)
            );
          };
          /* istanbul ignore next */

          var isScrollable = function isScrollable(elem) {
            return !!(elem.scrollHeight > elem.clientHeight);
          }; // borrowed from https://stackoverflow.com/a/46352119

          var hasCssAnimation = function hasCssAnimation(elem) {
            var style = window.getComputedStyle(elem);
            var animDuration = parseFloat(
              style.getPropertyValue('animation-duration') || '0'
            );
            var transDuration = parseFloat(
              style.getPropertyValue('transition-duration') || '0'
            );
            return animDuration > 0 || transDuration > 0;
          };
          var contains = function contains(haystack, needle) {
            if (typeof haystack.contains === 'function') {
              return haystack.contains(needle);
            }
          };
          var animateTimerProgressBar = function animateTimerProgressBar(
            timer
          ) {
            var reset =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : false;
            var timerProgressBar = getTimerProgressBar();

            if (isVisible(timerProgressBar)) {
              if (reset) {
                timerProgressBar.style.transition = 'none';
                timerProgressBar.style.width = '100%';
              }

              setTimeout(function () {
                timerProgressBar.style.transition = 'width '.concat(
                  timer / 1000,
                  's linear'
                );
                timerProgressBar.style.width = '0%';
              }, 10);
            }
          };
          var stopTimerProgressBar = function stopTimerProgressBar() {
            var timerProgressBar = getTimerProgressBar();
            var timerProgressBarWidth = parseInt(
              window.getComputedStyle(timerProgressBar).width
            );
            timerProgressBar.style.removeProperty('transition');
            timerProgressBar.style.width = '100%';
            var timerProgressBarFullWidth = parseInt(
              window.getComputedStyle(timerProgressBar).width
            );
            var timerProgressBarPercent = parseInt(
              (timerProgressBarWidth / timerProgressBarFullWidth) * 100
            );
            timerProgressBar.style.removeProperty('transition');
            timerProgressBar.style.width = ''.concat(
              timerProgressBarPercent,
              '%'
            );
          };

          // Detect Node env
          var isNodeEnv = function isNodeEnv() {
            return (
              typeof window === 'undefined' || typeof document === 'undefined'
            );
          };

          var sweetHTML = '\n <div aria-labelledby="'
            .concat(swalClasses.title, '" aria-describedby="')
            .concat(swalClasses.content, '" class="')
            .concat(swalClasses.popup, '" tabindex="-1">\n   <div class="')
            .concat(swalClasses.header, '">\n     <ul class="')
            .concat(swalClasses['progress-steps'], '"></ul>\n     <div class="')
            .concat(swalClasses.icon, ' ')
            .concat(iconTypes.error, '"></div>\n     <div class="')
            .concat(swalClasses.icon, ' ')
            .concat(iconTypes.question, '"></div>\n     <div class="')
            .concat(swalClasses.icon, ' ')
            .concat(iconTypes.warning, '"></div>\n     <div class="')
            .concat(swalClasses.icon, ' ')
            .concat(iconTypes.info, '"></div>\n     <div class="')
            .concat(swalClasses.icon, ' ')
            .concat(iconTypes.success, '"></div>\n     <img class="')
            .concat(swalClasses.image, '" />\n     <h2 class="')
            .concat(swalClasses.title, '" id="')
            .concat(
              swalClasses.title,
              '"></h2>\n     <button type="button" class="'
            )
            .concat(
              swalClasses.close,
              '"></button>\n   </div>\n   <div class="'
            )
            .concat(swalClasses.content, '">\n     <div id="')
            .concat(swalClasses.content, '" class="')
            .concat(
              swalClasses['html-container'],
              '"></div>\n     <input class="'
            )
            .concat(swalClasses.input, '" />\n     <input type="file" class="')
            .concat(swalClasses.file, '" />\n     <div class="')
            .concat(
              swalClasses.range,
              '">\n       <input type="range" />\n       <output></output>\n     </div>\n     <select class="'
            )
            .concat(swalClasses.select, '"></select>\n     <div class="')
            .concat(swalClasses.radio, '"></div>\n     <label for="')
            .concat(swalClasses.checkbox, '" class="')
            .concat(
              swalClasses.checkbox,
              '">\n       <input type="checkbox" />\n       <span class="'
            )
            .concat(
              swalClasses.label,
              '"></span>\n     </label>\n     <textarea class="'
            )
            .concat(swalClasses.textarea, '"></textarea>\n     <div class="')
            .concat(swalClasses['validation-message'], '" id="')
            .concat(
              swalClasses['validation-message'],
              '"></div>\n   </div>\n   <div class="'
            )
            .concat(
              swalClasses.actions,
              '">\n     <button type="button" class="'
            )
            .concat(
              swalClasses.confirm,
              '">OK</button>\n     <button type="button" class="'
            )
            .concat(
              swalClasses.cancel,
              '">Cancel</button>\n   </div>\n   <div class="'
            )
            .concat(swalClasses.footer, '"></div>\n   <div class="')
            .concat(
              swalClasses['timer-progress-bar-container'],
              '">\n     <div class="'
            )
            .concat(
              swalClasses['timer-progress-bar'],
              '"></div>\n   </div>\n </div>\n'
            )
            .replace(/(^|\n)\s*/g, '');

          var resetOldContainer = function resetOldContainer() {
            var oldContainer = getContainer();

            if (!oldContainer) {
              return false;
            }

            oldContainer.parentNode.removeChild(oldContainer);
            removeClass(
              [document.documentElement, document.body],
              [
                swalClasses['no-backdrop'],
                swalClasses['toast-shown'],
                swalClasses['has-column'],
              ]
            );
            return true;
          };

          var oldInputVal; // IE11 workaround, see #1109 for details

          var resetValidationMessage = function resetValidationMessage(e) {
            if (Swal.isVisible() && oldInputVal !== e.target.value) {
              Swal.resetValidationMessage();
            }

            oldInputVal = e.target.value;
          };

          var addInputChangeListeners = function addInputChangeListeners() {
            var content = getContent();
            var input = getChildByClass(content, swalClasses.input);
            var file = getChildByClass(content, swalClasses.file);
            var range = content.querySelector(
              '.'.concat(swalClasses.range, ' input')
            );
            var rangeOutput = content.querySelector(
              '.'.concat(swalClasses.range, ' output')
            );
            var select = getChildByClass(content, swalClasses.select);
            var checkbox = content.querySelector(
              '.'.concat(swalClasses.checkbox, ' input')
            );
            var textarea = getChildByClass(content, swalClasses.textarea);
            input.oninput = resetValidationMessage;
            file.onchange = resetValidationMessage;
            select.onchange = resetValidationMessage;
            checkbox.onchange = resetValidationMessage;
            textarea.oninput = resetValidationMessage;

            range.oninput = function (e) {
              resetValidationMessage(e);
              rangeOutput.value = range.value;
            };

            range.onchange = function (e) {
              resetValidationMessage(e);
              range.nextSibling.value = range.value;
            };
          };

          var getTarget = function getTarget(target) {
            return typeof target === 'string'
              ? document.querySelector(target)
              : target;
          };

          var setupAccessibility = function setupAccessibility(params) {
            var popup = getPopup();
            popup.setAttribute('role', params.toast ? 'alert' : 'dialog');
            popup.setAttribute(
              'aria-live',
              params.toast ? 'polite' : 'assertive'
            );

            if (!params.toast) {
              popup.setAttribute('aria-modal', 'true');
            }
          };

          var setupRTL = function setupRTL(targetElement) {
            if (window.getComputedStyle(targetElement).direction === 'rtl') {
              addClass(getContainer(), swalClasses.rtl);
            }
          };
          /*
           * Add modal + backdrop to DOM
           */

          var init = function init(params) {
            // Clean up the old popup container if it exists
            var oldContainerExisted = resetOldContainer();
            /* istanbul ignore if */

            if (isNodeEnv()) {
              error('SweetAlert2 requires document to initialize');
              return;
            }

            var container = document.createElement('div');
            container.className = swalClasses.container;

            if (oldContainerExisted) {
              addClass(container, swalClasses['no-transition']);
            }

            setInnerHtml(container, sweetHTML);
            var targetElement = getTarget(params.target);
            targetElement.appendChild(container);
            setupAccessibility(params);
            setupRTL(targetElement);
            addInputChangeListeners();
          };

          var parseHtmlToContainer = function parseHtmlToContainer(
            param,
            target
          ) {
            // DOM element
            if (param instanceof HTMLElement) {
              target.appendChild(param); // Object
            } else if (_typeof(param) === 'object') {
              handleObject(param, target); // Plain string
            } else if (param) {
              setInnerHtml(target, param);
            }
          };

          var handleObject = function handleObject(param, target) {
            // JQuery element(s)
            if (param.jquery) {
              handleJqueryElem(target, param); // For other objects use their string representation
            } else {
              setInnerHtml(target, param.toString());
            }
          };

          var handleJqueryElem = function handleJqueryElem(target, elem) {
            target.textContent = '';

            if (0 in elem) {
              for (var i = 0; i in elem; i++) {
                target.appendChild(elem[i].cloneNode(true));
              }
            } else {
              target.appendChild(elem.cloneNode(true));
            }
          };

          var animationEndEvent = (function () {
            // Prevent run in Node env

            /* istanbul ignore if */
            if (isNodeEnv()) {
              return false;
            }

            var testEl = document.createElement('div');
            var transEndEventNames = {
              WebkitAnimation: 'webkitAnimationEnd',
              OAnimation: 'oAnimationEnd oanimationend',
              animation: 'animationend',
            };

            for (var i in transEndEventNames) {
              if (
                Object.prototype.hasOwnProperty.call(transEndEventNames, i) &&
                typeof testEl.style[i] !== 'undefined'
              ) {
                return transEndEventNames[i];
              }
            }

            return false;
          })();

          // https://github.com/twbs/bootstrap/blob/master/js/src/modal.js

          var measureScrollbar = function measureScrollbar() {
            var scrollDiv = document.createElement('div');
            scrollDiv.className = swalClasses['scrollbar-measure'];
            document.body.appendChild(scrollDiv);
            var scrollbarWidth =
              scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;
            document.body.removeChild(scrollDiv);
            return scrollbarWidth;
          };

          var renderActions = function renderActions(instance, params) {
            var actions = getActions();
            var confirmButton = getConfirmButton();
            var cancelButton = getCancelButton(); // Actions (buttons) wrapper

            if (!params.showConfirmButton && !params.showCancelButton) {
              hide(actions);
            } // Custom class

            applyCustomClass(actions, params, 'actions'); // Render confirm button

            renderButton(confirmButton, 'confirm', params); // render Cancel Button

            renderButton(cancelButton, 'cancel', params);

            if (params.buttonsStyling) {
              handleButtonsStyling(confirmButton, cancelButton, params);
            } else {
              removeClass([confirmButton, cancelButton], swalClasses.styled);
              confirmButton.style.backgroundColor = confirmButton.style.borderLeftColor = confirmButton.style.borderRightColor =
                '';
              cancelButton.style.backgroundColor = cancelButton.style.borderLeftColor = cancelButton.style.borderRightColor =
                '';
            }

            if (params.reverseButtons) {
              confirmButton.parentNode.insertBefore(
                cancelButton,
                confirmButton
              );
            }
          };

          function handleButtonsStyling(confirmButton, cancelButton, params) {
            addClass([confirmButton, cancelButton], swalClasses.styled); // Buttons background colors

            if (params.confirmButtonColor) {
              confirmButton.style.backgroundColor = params.confirmButtonColor;
            }

            if (params.cancelButtonColor) {
              cancelButton.style.backgroundColor = params.cancelButtonColor;
            } // Loading state

            if (!isLoading()) {
              var confirmButtonBackgroundColor = window
                .getComputedStyle(confirmButton)
                .getPropertyValue('background-color');
              confirmButton.style.borderLeftColor = confirmButtonBackgroundColor;
              confirmButton.style.borderRightColor = confirmButtonBackgroundColor;
            }
          }

          function renderButton(button, buttonType, params) {
            toggle(
              button,
              params[
                'show'.concat(capitalizeFirstLetter(buttonType), 'Button')
              ],
              'inline-block'
            );
            setInnerHtml(button, params[''.concat(buttonType, 'ButtonText')]); // Set caption text

            button.setAttribute(
              'aria-label',
              params[''.concat(buttonType, 'ButtonAriaLabel')]
            ); // ARIA label
            // Add buttons custom classes

            button.className = swalClasses[buttonType];
            applyCustomClass(button, params, ''.concat(buttonType, 'Button'));
            addClass(button, params[''.concat(buttonType, 'ButtonClass')]);
          }

          function handleBackdropParam(container, backdrop) {
            if (typeof backdrop === 'string') {
              container.style.background = backdrop;
            } else if (!backdrop) {
              addClass(
                [document.documentElement, document.body],
                swalClasses['no-backdrop']
              );
            }
          }

          function handlePositionParam(container, position) {
            if (position in swalClasses) {
              addClass(container, swalClasses[position]);
            } else {
              warn(
                'The "position" parameter is not valid, defaulting to "center"'
              );
              addClass(container, swalClasses.center);
            }
          }

          function handleGrowParam(container, grow) {
            if (grow && typeof grow === 'string') {
              var growClass = 'grow-'.concat(grow);

              if (growClass in swalClasses) {
                addClass(container, swalClasses[growClass]);
              }
            }
          }

          var renderContainer = function renderContainer(instance, params) {
            var container = getContainer();

            if (!container) {
              return;
            }

            handleBackdropParam(container, params.backdrop);

            if (!params.backdrop && params.allowOutsideClick) {
              warn(
                '"allowOutsideClick" parameter requires `backdrop` parameter to be set to `true`'
              );
            }

            handlePositionParam(container, params.position);
            handleGrowParam(container, params.grow); // Custom class

            applyCustomClass(container, params, 'container'); // Set queue step attribute for getQueueStep() method

            var queueStep = document.body.getAttribute('data-swal2-queue-step');

            if (queueStep) {
              container.setAttribute('data-queue-step', queueStep);
              document.body.removeAttribute('data-swal2-queue-step');
            }
          };

          /**
           * This module containts `WeakMap`s for each effectively-"private  property" that a `Swal` has.
           * For example, to set the private property "foo" of `this` to "bar", you can `privateProps.foo.set(this, 'bar')`
           * This is the approach that Babel will probably take to implement private methods/fields
           *   https://github.com/tc39/proposal-private-methods
           *   https://github.com/babel/babel/pull/7555
           * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*
           *   then we can use that language feature.
           */
          var privateProps = {
            promise: new WeakMap(),
            innerParams: new WeakMap(),
            domCache: new WeakMap(),
          };

          var inputTypes = [
            'input',
            'file',
            'range',
            'select',
            'radio',
            'checkbox',
            'textarea',
          ];
          var renderInput = function renderInput(instance, params) {
            var content = getContent();
            var innerParams = privateProps.innerParams.get(instance);
            var rerender = !innerParams || params.input !== innerParams.input;
            inputTypes.forEach(function (inputType) {
              var inputClass = swalClasses[inputType];
              var inputContainer = getChildByClass(content, inputClass); // set attributes

              setAttributes(inputType, params.inputAttributes); // set class

              inputContainer.className = inputClass;

              if (rerender) {
                hide(inputContainer);
              }
            });

            if (params.input) {
              if (rerender) {
                showInput(params);
              } // set custom class

              setCustomClass(params);
            }
          };

          var showInput = function showInput(params) {
            if (!renderInputType[params.input]) {
              return error(
                'Unexpected type of input! Expected "text", "email", "password", "number", "tel", "select", "radio", "checkbox", "textarea", "file" or "url", got "'.concat(
                  params.input,
                  '"'
                )
              );
            }

            var inputContainer = getInputContainer(params.input);
            var input = renderInputType[params.input](inputContainer, params);
            show(input); // input autofocus

            setTimeout(function () {
              focusInput(input);
            });
          };

          var removeAttributes = function removeAttributes(input) {
            for (var i = 0; i < input.attributes.length; i++) {
              var attrName = input.attributes[i].name;

              if (!(['type', 'value', 'style'].indexOf(attrName) !== -1)) {
                input.removeAttribute(attrName);
              }
            }
          };

          var setAttributes = function setAttributes(
            inputType,
            inputAttributes
          ) {
            var input = getInput(getContent(), inputType);

            if (!input) {
              return;
            }

            removeAttributes(input);

            for (var attr in inputAttributes) {
              // Do not set a placeholder for <input type="range">
              // it'll crash Edge, #1298
              if (inputType === 'range' && attr === 'placeholder') {
                continue;
              }

              input.setAttribute(attr, inputAttributes[attr]);
            }
          };

          var setCustomClass = function setCustomClass(params) {
            var inputContainer = getInputContainer(params.input);

            if (params.customClass) {
              addClass(inputContainer, params.customClass.input);
            }
          };

          var setInputPlaceholder = function setInputPlaceholder(
            input,
            params
          ) {
            if (!input.placeholder || params.inputPlaceholder) {
              input.placeholder = params.inputPlaceholder;
            }
          };

          var getInputContainer = function getInputContainer(inputType) {
            var inputClass = swalClasses[inputType]
              ? swalClasses[inputType]
              : swalClasses.input;
            return getChildByClass(getContent(), inputClass);
          };

          var renderInputType = {};

          renderInputType.text = renderInputType.email = renderInputType.password = renderInputType.number = renderInputType.tel = renderInputType.url = function (
            input,
            params
          ) {
            if (
              typeof params.inputValue === 'string' ||
              typeof params.inputValue === 'number'
            ) {
              input.value = params.inputValue;
            } else if (!isPromise(params.inputValue)) {
              warn(
                'Unexpected type of inputValue! Expected "string", "number" or "Promise", got "'.concat(
                  _typeof(params.inputValue),
                  '"'
                )
              );
            }

            setInputPlaceholder(input, params);
            input.type = params.input;
            return input;
          };

          renderInputType.file = function (input, params) {
            setInputPlaceholder(input, params);
            return input;
          };

          renderInputType.range = function (range, params) {
            var rangeInput = range.querySelector('input');
            var rangeOutput = range.querySelector('output');
            rangeInput.value = params.inputValue;
            rangeInput.type = params.input;
            rangeOutput.value = params.inputValue;
            return range;
          };

          renderInputType.select = function (select, params) {
            select.textContent = '';

            if (params.inputPlaceholder) {
              var placeholder = document.createElement('option');
              setInnerHtml(placeholder, params.inputPlaceholder);
              placeholder.value = '';
              placeholder.disabled = true;
              placeholder.selected = true;
              select.appendChild(placeholder);
            }

            return select;
          };

          renderInputType.radio = function (radio) {
            radio.textContent = '';
            return radio;
          };

          renderInputType.checkbox = function (checkboxContainer, params) {
            var checkbox = getInput(getContent(), 'checkbox');
            checkbox.value = 1;
            checkbox.id = swalClasses.checkbox;
            checkbox.checked = Boolean(params.inputValue);
            var label = checkboxContainer.querySelector('span');
            setInnerHtml(label, params.inputPlaceholder);
            return checkboxContainer;
          };

          renderInputType.textarea = function (textarea, params) {
            textarea.value = params.inputValue;
            setInputPlaceholder(textarea, params);

            if ('MutationObserver' in window) {
              // #1699
              var initialPopupWidth = parseInt(
                window.getComputedStyle(getPopup()).width
              );
              var popupPadding =
                parseInt(window.getComputedStyle(getPopup()).paddingLeft) +
                parseInt(window.getComputedStyle(getPopup()).paddingRight);

              var outputsize = function outputsize() {
                var contentWidth = textarea.offsetWidth + popupPadding;

                if (contentWidth > initialPopupWidth) {
                  getPopup().style.width = ''.concat(contentWidth, 'px');
                } else {
                  getPopup().style.width = null;
                }
              };

              new MutationObserver(outputsize).observe(textarea, {
                attributes: true,
                attributeFilter: ['style'],
              });
            }

            return textarea;
          };

          var renderContent = function renderContent(instance, params) {
            var content = getContent().querySelector(
              '#'.concat(swalClasses.content)
            ); // Content as HTML

            if (params.html) {
              parseHtmlToContainer(params.html, content);
              show(content, 'block'); // Content as plain text
            } else if (params.text) {
              content.textContent = params.text;
              show(content, 'block'); // No content
            } else {
              hide(content);
            }

            renderInput(instance, params); // Custom class

            applyCustomClass(getContent(), params, 'content');
          };

          var renderFooter = function renderFooter(instance, params) {
            var footer = getFooter();
            toggle(footer, params.footer);

            if (params.footer) {
              parseHtmlToContainer(params.footer, footer);
            } // Custom class

            applyCustomClass(footer, params, 'footer');
          };

          var renderCloseButton = function renderCloseButton(instance, params) {
            var closeButton = getCloseButton();
            setInnerHtml(closeButton, params.closeButtonHtml); // Custom class

            applyCustomClass(closeButton, params, 'closeButton');
            toggle(closeButton, params.showCloseButton);
            closeButton.setAttribute('aria-label', params.closeButtonAriaLabel);
          };

          var renderIcon = function renderIcon(instance, params) {
            var innerParams = privateProps.innerParams.get(instance); // if the give icon already rendered, apply the custom class without re-rendering the icon

            if (innerParams && params.icon === innerParams.icon && getIcon()) {
              applyCustomClass(getIcon(), params, 'icon');
              return;
            }

            hideAllIcons();

            if (!params.icon) {
              return;
            }

            if (Object.keys(iconTypes).indexOf(params.icon) !== -1) {
              var icon = elementBySelector(
                '.'.concat(swalClasses.icon, '.').concat(iconTypes[params.icon])
              );
              show(icon); // Custom or default content

              setContent(icon, params);
              adjustSuccessIconBackgoundColor(); // Custom class

              applyCustomClass(icon, params, 'icon'); // Animate icon

              addClass(icon, params.showClass.icon);
            } else {
              error(
                'Unknown icon! Expected "success", "error", "warning", "info" or "question", got "'.concat(
                  params.icon,
                  '"'
                )
              );
            }
          };

          var hideAllIcons = function hideAllIcons() {
            var icons = getIcons();

            for (var i = 0; i < icons.length; i++) {
              hide(icons[i]);
            }
          }; // Adjust success icon background color to match the popup background color

          var adjustSuccessIconBackgoundColor = function adjustSuccessIconBackgoundColor() {
            var popup = getPopup();
            var popupBackgroundColor = window
              .getComputedStyle(popup)
              .getPropertyValue('background-color');
            var successIconParts = popup.querySelectorAll(
              '[class^=swal2-success-circular-line], .swal2-success-fix'
            );

            for (var i = 0; i < successIconParts.length; i++) {
              successIconParts[i].style.backgroundColor = popupBackgroundColor;
            }
          };

          var setContent = function setContent(icon, params) {
            icon.textContent = '';

            if (params.iconHtml) {
              setInnerHtml(icon, iconContent(params.iconHtml));
            } else if (params.icon === 'success') {
              setInnerHtml(
                icon,
                '\n      <div class="swal2-success-circular-line-left"></div>\n      <span class="swal2-success-line-tip"></span> <span class="swal2-success-line-long"></span>\n      <div class="swal2-success-ring"></div> <div class="swal2-success-fix"></div>\n      <div class="swal2-success-circular-line-right"></div>\n    '
              );
            } else if (params.icon === 'error') {
              setInnerHtml(
                icon,
                '\n      <span class="swal2-x-mark">\n        <span class="swal2-x-mark-line-left"></span>\n        <span class="swal2-x-mark-line-right"></span>\n      </span>\n    '
              );
            } else {
              var defaultIconHtml = {
                question: '?',
                warning: '!',
                info: 'i',
              };
              setInnerHtml(icon, iconContent(defaultIconHtml[params.icon]));
            }
          };

          var iconContent = function iconContent(content) {
            return '<div class="'
              .concat(swalClasses['icon-content'], '">')
              .concat(content, '</div>');
          };

          var renderImage = function renderImage(instance, params) {
            var image = getImage();

            if (!params.imageUrl) {
              return hide(image);
            }

            show(image, ''); // Src, alt

            image.setAttribute('src', params.imageUrl);
            image.setAttribute('alt', params.imageAlt); // Width, height

            applyNumericalStyle(image, 'width', params.imageWidth);
            applyNumericalStyle(image, 'height', params.imageHeight); // Class

            image.className = swalClasses.image;
            applyCustomClass(image, params, 'image');
          };

          var currentSteps = [];
          /*
           * Global function for chaining sweetAlert popups
           */

          var queue = function queue(steps) {
            var Swal = this;
            currentSteps = steps;

            var resetAndResolve = function resetAndResolve(resolve, value) {
              currentSteps = [];
              resolve(value);
            };

            var queueResult = [];
            return new Promise(function (resolve) {
              (function step(i, callback) {
                if (i < currentSteps.length) {
                  document.body.setAttribute('data-swal2-queue-step', i);
                  Swal.fire(currentSteps[i]).then(function (result) {
                    if (typeof result.value !== 'undefined') {
                      queueResult.push(result.value);
                      step(i + 1, callback);
                    } else {
                      resetAndResolve(resolve, {
                        dismiss: result.dismiss,
                      });
                    }
                  });
                } else {
                  resetAndResolve(resolve, {
                    value: queueResult,
                  });
                }
              })(0);
            });
          };
          /*
           * Global function for getting the index of current popup in queue
           */

          var getQueueStep = function getQueueStep() {
            return (
              getContainer() && getContainer().getAttribute('data-queue-step')
            );
          };
          /*
           * Global function for inserting a popup to the queue
           */

          var insertQueueStep = function insertQueueStep(step, index) {
            if (index && index < currentSteps.length) {
              return currentSteps.splice(index, 0, step);
            }

            return currentSteps.push(step);
          };
          /*
           * Global function for deleting a popup from the queue
           */

          var deleteQueueStep = function deleteQueueStep(index) {
            if (typeof currentSteps[index] !== 'undefined') {
              currentSteps.splice(index, 1);
            }
          };

          var createStepElement = function createStepElement(step) {
            var stepEl = document.createElement('li');
            addClass(stepEl, swalClasses['progress-step']);
            setInnerHtml(stepEl, step);
            return stepEl;
          };

          var createLineElement = function createLineElement(params) {
            var lineEl = document.createElement('li');
            addClass(lineEl, swalClasses['progress-step-line']);

            if (params.progressStepsDistance) {
              lineEl.style.width = params.progressStepsDistance;
            }

            return lineEl;
          };

          var renderProgressSteps = function renderProgressSteps(
            instance,
            params
          ) {
            var progressStepsContainer = getProgressSteps();

            if (!params.progressSteps || params.progressSteps.length === 0) {
              return hide(progressStepsContainer);
            }

            show(progressStepsContainer);
            progressStepsContainer.textContent = '';
            var currentProgressStep = parseInt(
              params.currentProgressStep === undefined
                ? getQueueStep()
                : params.currentProgressStep
            );

            if (currentProgressStep >= params.progressSteps.length) {
              warn(
                'Invalid currentProgressStep parameter, it should be less than progressSteps.length ' +
                  '(currentProgressStep like JS arrays starts from 0)'
              );
            }

            params.progressSteps.forEach(function (step, index) {
              var stepEl = createStepElement(step);
              progressStepsContainer.appendChild(stepEl);

              if (index === currentProgressStep) {
                addClass(stepEl, swalClasses['active-progress-step']);
              }

              if (index !== params.progressSteps.length - 1) {
                var lineEl = createLineElement(params);
                progressStepsContainer.appendChild(lineEl);
              }
            });
          };

          var renderTitle = function renderTitle(instance, params) {
            var title = getTitle();
            toggle(title, params.title || params.titleText);

            if (params.title) {
              parseHtmlToContainer(params.title, title);
            }

            if (params.titleText) {
              title.innerText = params.titleText;
            } // Custom class

            applyCustomClass(title, params, 'title');
          };

          var renderHeader = function renderHeader(instance, params) {
            var header = getHeader(); // Custom class

            applyCustomClass(header, params, 'header'); // Progress steps

            renderProgressSteps(instance, params); // Icon

            renderIcon(instance, params); // Image

            renderImage(instance, params); // Title

            renderTitle(instance, params); // Close button

            renderCloseButton(instance, params);
          };

          var renderPopup = function renderPopup(instance, params) {
            var popup = getPopup(); // Width

            applyNumericalStyle(popup, 'width', params.width); // Padding

            applyNumericalStyle(popup, 'padding', params.padding); // Background

            if (params.background) {
              popup.style.background = params.background;
            } // Classes

            addClasses(popup, params);
          };

          var addClasses = function addClasses(popup, params) {
            // Default Class + showClass when updating Swal.update({})
            popup.className = ''
              .concat(swalClasses.popup, ' ')
              .concat(isVisible(popup) ? params.showClass.popup : '');

            if (params.toast) {
              addClass(
                [document.documentElement, document.body],
                swalClasses['toast-shown']
              );
              addClass(popup, swalClasses.toast);
            } else {
              addClass(popup, swalClasses.modal);
            } // Custom class

            applyCustomClass(popup, params, 'popup');

            if (typeof params.customClass === 'string') {
              addClass(popup, params.customClass);
            } // Icon class (#1842)

            if (params.icon) {
              addClass(popup, swalClasses['icon-'.concat(params.icon)]);
            }
          };

          var render = function render(instance, params) {
            renderPopup(instance, params);
            renderContainer(instance, params);
            renderHeader(instance, params);
            renderContent(instance, params);
            renderActions(instance, params);
            renderFooter(instance, params);

            if (typeof params.onRender === 'function') {
              params.onRender(getPopup());
            }
          };

          /*
           * Global function to determine if SweetAlert2 popup is shown
           */

          var isVisible$1 = function isVisible$$1() {
            return isVisible(getPopup());
          };
          /*
           * Global function to click 'Confirm' button
           */

          var clickConfirm = function clickConfirm() {
            return getConfirmButton() && getConfirmButton().click();
          };
          /*
           * Global function to click 'Cancel' button
           */

          var clickCancel = function clickCancel() {
            return getCancelButton() && getCancelButton().click();
          };

          function fire() {
            var Swal = this;

            for (
              var _len = arguments.length, args = new Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            return _construct(Swal, args);
          }

          /**
           * Returns an extended version of `Swal` containing `params` as defaults.
           * Useful for reusing Swal configuration.
           *
           * For example:
           *
           * Before:
           * const textPromptOptions = { input: 'text', showCancelButton: true }
           * const {value: firstName} = await Swal.fire({ ...textPromptOptions, title: 'What is your first name?' })
           * const {value: lastName} = await Swal.fire({ ...textPromptOptions, title: 'What is your last name?' })
           *
           * After:
           * const TextPrompt = Swal.mixin({ input: 'text', showCancelButton: true })
           * const {value: firstName} = await TextPrompt('What is your first name?')
           * const {value: lastName} = await TextPrompt('What is your last name?')
           *
           * @param mixinParams
           */
          function mixin(mixinParams) {
            var MixinSwal = /*#__PURE__*/ (function (_this) {
              _inherits(MixinSwal, _this);

              var _super = _createSuper(MixinSwal);

              function MixinSwal() {
                _classCallCheck(this, MixinSwal);

                return _super.apply(this, arguments);
              }

              _createClass(MixinSwal, [
                {
                  key: '_main',
                  value: function _main(params) {
                    return _get(
                      _getPrototypeOf(MixinSwal.prototype),
                      '_main',
                      this
                    ).call(this, _extends({}, mixinParams, params));
                  },
                },
              ]);

              return MixinSwal;
            })(this);

            return MixinSwal;
          }

          /**
           * Show spinner instead of Confirm button
           */

          var showLoading = function showLoading() {
            var popup = getPopup();

            if (!popup) {
              Swal.fire();
            }

            popup = getPopup();
            var actions = getActions();
            var confirmButton = getConfirmButton();
            show(actions);
            show(confirmButton, 'inline-block');
            addClass([popup, actions], swalClasses.loading);
            confirmButton.disabled = true;
            popup.setAttribute('data-loading', true);
            popup.setAttribute('aria-busy', true);
            popup.focus();
          };

          var RESTORE_FOCUS_TIMEOUT = 100;

          var globalState = {};

          var focusPreviousActiveElement = function focusPreviousActiveElement() {
            if (
              globalState.previousActiveElement &&
              globalState.previousActiveElement.focus
            ) {
              globalState.previousActiveElement.focus();
              globalState.previousActiveElement = null;
            } else if (document.body) {
              document.body.focus();
            }
          }; // Restore previous active (focused) element

          var restoreActiveElement = function restoreActiveElement() {
            return new Promise(function (resolve) {
              var x = window.scrollX;
              var y = window.scrollY;
              globalState.restoreFocusTimeout = setTimeout(function () {
                focusPreviousActiveElement();
                resolve();
              }, RESTORE_FOCUS_TIMEOUT); // issues/900

              /* istanbul ignore if */

              if (typeof x !== 'undefined' && typeof y !== 'undefined') {
                // IE doesn't have scrollX/scrollY support
                window.scrollTo(x, y);
              }
            });
          };

          /**
           * If `timer` parameter is set, returns number of milliseconds of timer remained.
           * Otherwise, returns undefined.
           */

          var getTimerLeft = function getTimerLeft() {
            return globalState.timeout && globalState.timeout.getTimerLeft();
          };
          /**
           * Stop timer. Returns number of milliseconds of timer remained.
           * If `timer` parameter isn't set, returns undefined.
           */

          var stopTimer = function stopTimer() {
            if (globalState.timeout) {
              stopTimerProgressBar();
              return globalState.timeout.stop();
            }
          };
          /**
           * Resume timer. Returns number of milliseconds of timer remained.
           * If `timer` parameter isn't set, returns undefined.
           */

          var resumeTimer = function resumeTimer() {
            if (globalState.timeout) {
              var remaining = globalState.timeout.start();
              animateTimerProgressBar(remaining);
              return remaining;
            }
          };
          /**
           * Resume timer. Returns number of milliseconds of timer remained.
           * If `timer` parameter isn't set, returns undefined.
           */

          var toggleTimer = function toggleTimer() {
            var timer = globalState.timeout;
            return timer && (timer.running ? stopTimer() : resumeTimer());
          };
          /**
           * Increase timer. Returns number of milliseconds of an updated timer.
           * If `timer` parameter isn't set, returns undefined.
           */

          var increaseTimer = function increaseTimer(n) {
            if (globalState.timeout) {
              var remaining = globalState.timeout.increase(n);
              animateTimerProgressBar(remaining, true);
              return remaining;
            }
          };
          /**
           * Check if timer is running. Returns true if timer is running
           * or false if timer is paused or stopped.
           * If `timer` parameter isn't set, returns undefined
           */

          var isTimerRunning = function isTimerRunning() {
            return globalState.timeout && globalState.timeout.isRunning();
          };

          var defaultParams = {
            title: '',
            titleText: '',
            text: '',
            html: '',
            footer: '',
            icon: undefined,
            iconHtml: undefined,
            toast: false,
            animation: true,
            showClass: {
              popup: 'swal2-show',
              backdrop: 'swal2-backdrop-show',
              icon: 'swal2-icon-show',
            },
            hideClass: {
              popup: 'swal2-hide',
              backdrop: 'swal2-backdrop-hide',
              icon: 'swal2-icon-hide',
            },
            customClass: undefined,
            target: 'body',
            backdrop: true,
            heightAuto: true,
            allowOutsideClick: true,
            allowEscapeKey: true,
            allowEnterKey: true,
            stopKeydownPropagation: true,
            keydownListenerCapture: false,
            showConfirmButton: true,
            showCancelButton: false,
            preConfirm: undefined,
            confirmButtonText: 'OK',
            confirmButtonAriaLabel: '',
            confirmButtonColor: undefined,
            cancelButtonText: 'Cancel',
            cancelButtonAriaLabel: '',
            cancelButtonColor: undefined,
            buttonsStyling: true,
            reverseButtons: false,
            focusConfirm: true,
            focusCancel: false,
            showCloseButton: false,
            closeButtonHtml: '&times;',
            closeButtonAriaLabel: 'Close this dialog',
            showLoaderOnConfirm: false,
            imageUrl: undefined,
            imageWidth: undefined,
            imageHeight: undefined,
            imageAlt: '',
            timer: undefined,
            timerProgressBar: false,
            width: undefined,
            padding: undefined,
            background: undefined,
            input: undefined,
            inputPlaceholder: '',
            inputValue: '',
            inputOptions: {},
            inputAutoTrim: true,
            inputAttributes: {},
            inputValidator: undefined,
            validationMessage: undefined,
            grow: false,
            position: 'center',
            progressSteps: [],
            currentProgressStep: undefined,
            progressStepsDistance: undefined,
            onBeforeOpen: undefined,
            onOpen: undefined,
            onRender: undefined,
            onClose: undefined,
            onAfterClose: undefined,
            onDestroy: undefined,
            scrollbarPadding: true,
          };
          var updatableParams = [
            'title',
            'titleText',
            'text',
            'html',
            'footer',
            'icon',
            'hideClass',
            'customClass',
            'allowOutsideClick',
            'allowEscapeKey',
            'showConfirmButton',
            'showCancelButton',
            'confirmButtonText',
            'confirmButtonAriaLabel',
            'confirmButtonColor',
            'cancelButtonText',
            'cancelButtonAriaLabel',
            'cancelButtonColor',
            'buttonsStyling',
            'reverseButtons',
            'imageUrl',
            'imageWidth',
            'imageHeight',
            'imageAlt',
            'progressSteps',
            'currentProgressStep',
            'onClose',
            'onAfterClose',
            'onDestroy',
          ];
          var deprecatedParams = {
            animation: 'showClass" and "hideClass',
          };
          var toastIncompatibleParams = [
            'allowOutsideClick',
            'allowEnterKey',
            'backdrop',
            'focusConfirm',
            'focusCancel',
            'heightAuto',
            'keydownListenerCapture',
          ];
          /**
           * Is valid parameter
           * @param {String} paramName
           */

          var isValidParameter = function isValidParameter(paramName) {
            return Object.prototype.hasOwnProperty.call(
              defaultParams,
              paramName
            );
          };
          /**
           * Is valid parameter for Swal.update() method
           * @param {String} paramName
           */

          var isUpdatableParameter = function isUpdatableParameter(paramName) {
            return updatableParams.indexOf(paramName) !== -1;
          };
          /**
           * Is deprecated parameter
           * @param {String} paramName
           */

          var isDeprecatedParameter = function isDeprecatedParameter(
            paramName
          ) {
            return deprecatedParams[paramName];
          };

          var checkIfParamIsValid = function checkIfParamIsValid(param) {
            if (!isValidParameter(param)) {
              warn('Unknown parameter "'.concat(param, '"'));
            }
          };

          var checkIfToastParamIsValid = function checkIfToastParamIsValid(
            param
          ) {
            if (toastIncompatibleParams.indexOf(param) !== -1) {
              warn(
                'The parameter "'.concat(param, '" is incompatible with toasts')
              );
            }
          };

          var checkIfParamIsDeprecated = function checkIfParamIsDeprecated(
            param
          ) {
            if (isDeprecatedParameter(param)) {
              warnAboutDepreation(param, isDeprecatedParameter(param));
            }
          };
          /**
           * Show relevant warnings for given params
           *
           * @param params
           */

          var showWarningsForParams = function showWarningsForParams(params) {
            for (var param in params) {
              checkIfParamIsValid(param);

              if (params.toast) {
                checkIfToastParamIsValid(param);
              }

              checkIfParamIsDeprecated(param);
            }
          };

          var staticMethods = /*#__PURE__*/ Object.freeze({
            isValidParameter: isValidParameter,
            isUpdatableParameter: isUpdatableParameter,
            isDeprecatedParameter: isDeprecatedParameter,
            argsToParams: argsToParams,
            isVisible: isVisible$1,
            clickConfirm: clickConfirm,
            clickCancel: clickCancel,
            getContainer: getContainer,
            getPopup: getPopup,
            getTitle: getTitle,
            getContent: getContent,
            getHtmlContainer: getHtmlContainer,
            getImage: getImage,
            getIcon: getIcon,
            getIcons: getIcons,
            getCloseButton: getCloseButton,
            getActions: getActions,
            getConfirmButton: getConfirmButton,
            getCancelButton: getCancelButton,
            getHeader: getHeader,
            getFooter: getFooter,
            getTimerProgressBar: getTimerProgressBar,
            getFocusableElements: getFocusableElements,
            getValidationMessage: getValidationMessage,
            isLoading: isLoading,
            fire: fire,
            mixin: mixin,
            queue: queue,
            getQueueStep: getQueueStep,
            insertQueueStep: insertQueueStep,
            deleteQueueStep: deleteQueueStep,
            showLoading: showLoading,
            enableLoading: showLoading,
            getTimerLeft: getTimerLeft,
            stopTimer: stopTimer,
            resumeTimer: resumeTimer,
            toggleTimer: toggleTimer,
            increaseTimer: increaseTimer,
            isTimerRunning: isTimerRunning,
          });

          /**
           * Enables buttons and hide loader.
           */

          function hideLoading() {
            // do nothing if popup is closed
            var innerParams = privateProps.innerParams.get(this);

            if (!innerParams) {
              return;
            }

            var domCache = privateProps.domCache.get(this);

            if (!innerParams.showConfirmButton) {
              hide(domCache.confirmButton);

              if (!innerParams.showCancelButton) {
                hide(domCache.actions);
              }
            }

            removeClass(
              [domCache.popup, domCache.actions],
              swalClasses.loading
            );
            domCache.popup.removeAttribute('aria-busy');
            domCache.popup.removeAttribute('data-loading');
            domCache.confirmButton.disabled = false;
            domCache.cancelButton.disabled = false;
          }

          function getInput$1(instance) {
            var innerParams = privateProps.innerParams.get(instance || this);
            var domCache = privateProps.domCache.get(instance || this);

            if (!domCache) {
              return null;
            }

            return getInput(domCache.content, innerParams.input);
          }

          var fixScrollbar = function fixScrollbar() {
            // for queues, do not do this more than once
            if (states.previousBodyPadding !== null) {
              return;
            } // if the body has overflow

            if (document.body.scrollHeight > window.innerHeight) {
              // add padding so the content doesn't shift after removal of scrollbar
              states.previousBodyPadding = parseInt(
                window
                  .getComputedStyle(document.body)
                  .getPropertyValue('padding-right')
              );
              document.body.style.paddingRight = ''.concat(
                states.previousBodyPadding + measureScrollbar(),
                'px'
              );
            }
          };
          var undoScrollbar = function undoScrollbar() {
            if (states.previousBodyPadding !== null) {
              document.body.style.paddingRight = ''.concat(
                states.previousBodyPadding,
                'px'
              );
              states.previousBodyPadding = null;
            }
          };

          /* istanbul ignore file */

          var iOSfix = function iOSfix() {
            var iOS =
              (/iPad|iPhone|iPod/.test(navigator.userAgent) &&
                !window.MSStream) ||
              (navigator.platform === 'MacIntel' &&
                navigator.maxTouchPoints > 1);

            if (iOS && !hasClass(document.body, swalClasses.iosfix)) {
              var offset = document.body.scrollTop;
              document.body.style.top = ''.concat(offset * -1, 'px');
              addClass(document.body, swalClasses.iosfix);
              lockBodyScroll();
              addBottomPaddingForTallPopups(); // #1948
            }
          };

          var addBottomPaddingForTallPopups = function addBottomPaddingForTallPopups() {
            var safari = !navigator.userAgent.match(
              /(CriOS|FxiOS|EdgiOS|YaBrowser|UCBrowser)/i
            );

            if (safari) {
              var bottomPanelHeight = 44;

              if (
                getPopup().scrollHeight >
                window.innerHeight - bottomPanelHeight
              ) {
                getContainer().style.paddingBottom = ''.concat(
                  bottomPanelHeight,
                  'px'
                );
              }
            }
          };

          var lockBodyScroll = function lockBodyScroll() {
            // #1246
            var container = getContainer();
            var preventTouchMove;

            container.ontouchstart = function (e) {
              preventTouchMove = shouldPreventTouchMove(e.target);
            };

            container.ontouchmove = function (e) {
              if (preventTouchMove) {
                e.preventDefault();
                e.stopPropagation();
              }
            };
          };

          var shouldPreventTouchMove = function shouldPreventTouchMove(target) {
            var container = getContainer();

            if (target === container) {
              return true;
            }

            if (
              !isScrollable(container) &&
              target.tagName !== 'INPUT' && // #1603
              !(
                isScrollable(getContent()) && // #1944
                getContent().contains(target)
              )
            ) {
              return true;
            }

            return false;
          };

          var undoIOSfix = function undoIOSfix() {
            if (hasClass(document.body, swalClasses.iosfix)) {
              var offset = parseInt(document.body.style.top, 10);
              removeClass(document.body, swalClasses.iosfix);
              document.body.style.top = '';
              document.body.scrollTop = offset * -1;
            }
          };

          /* istanbul ignore file */

          var isIE11 = function isIE11() {
            return !!window.MSInputMethodContext && !!document.documentMode;
          }; // Fix IE11 centering sweetalert2/issues/933

          var fixVerticalPositionIE = function fixVerticalPositionIE() {
            var container = getContainer();
            var popup = getPopup();
            container.style.removeProperty('align-items');

            if (popup.offsetTop < 0) {
              container.style.alignItems = 'flex-start';
            }
          };

          var IEfix = function IEfix() {
            if (typeof window !== 'undefined' && isIE11()) {
              fixVerticalPositionIE();
              window.addEventListener('resize', fixVerticalPositionIE);
            }
          };
          var undoIEfix = function undoIEfix() {
            if (typeof window !== 'undefined' && isIE11()) {
              window.removeEventListener('resize', fixVerticalPositionIE);
            }
          };

          // Adding aria-hidden="true" to elements outside of the active modal dialog ensures that
          // elements not within the active modal dialog will not be surfaced if a user opens a screen
          // reader’s list of elements (headings, form controls, landmarks, etc.) in the document.

          var setAriaHidden = function setAriaHidden() {
            var bodyChildren = toArray(document.body.children);
            bodyChildren.forEach(function (el) {
              if (el === getContainer() || contains(el, getContainer())) {
                return;
              }

              if (el.hasAttribute('aria-hidden')) {
                el.setAttribute(
                  'data-previous-aria-hidden',
                  el.getAttribute('aria-hidden')
                );
              }

              el.setAttribute('aria-hidden', 'true');
            });
          };
          var unsetAriaHidden = function unsetAriaHidden() {
            var bodyChildren = toArray(document.body.children);
            bodyChildren.forEach(function (el) {
              if (el.hasAttribute('data-previous-aria-hidden')) {
                el.setAttribute(
                  'aria-hidden',
                  el.getAttribute('data-previous-aria-hidden')
                );
                el.removeAttribute('data-previous-aria-hidden');
              } else {
                el.removeAttribute('aria-hidden');
              }
            });
          };

          /**
           * This module containts `WeakMap`s for each effectively-"private  property" that a `Swal` has.
           * For example, to set the private property "foo" of `this` to "bar", you can `privateProps.foo.set(this, 'bar')`
           * This is the approach that Babel will probably take to implement private methods/fields
           *   https://github.com/tc39/proposal-private-methods
           *   https://github.com/babel/babel/pull/7555
           * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*
           *   then we can use that language feature.
           */
          var privateMethods = {
            swalPromiseResolve: new WeakMap(),
          };

          /*
           * Instance method to close sweetAlert
           */

          function removePopupAndResetState(
            instance,
            container,
            isToast$$1,
            onAfterClose
          ) {
            if (isToast$$1) {
              triggerOnAfterCloseAndDispose(instance, onAfterClose);
            } else {
              restoreActiveElement().then(function () {
                return triggerOnAfterCloseAndDispose(instance, onAfterClose);
              });
              globalState.keydownTarget.removeEventListener(
                'keydown',
                globalState.keydownHandler,
                {
                  capture: globalState.keydownListenerCapture,
                }
              );
              globalState.keydownHandlerAdded = false;
            }

            if (
              container.parentNode &&
              !document.body.getAttribute('data-swal2-queue-step')
            ) {
              container.parentNode.removeChild(container);
            }

            if (isModal()) {
              undoScrollbar();
              undoIOSfix();
              undoIEfix();
              unsetAriaHidden();
            }

            removeBodyClasses();
          }

          function removeBodyClasses() {
            removeClass(
              [document.documentElement, document.body],
              [
                swalClasses.shown,
                swalClasses['height-auto'],
                swalClasses['no-backdrop'],
                swalClasses['toast-shown'],
                swalClasses['toast-column'],
              ]
            );
          }

          function close(resolveValue) {
            var popup = getPopup();

            if (!popup) {
              return;
            }

            var innerParams = privateProps.innerParams.get(this);

            if (!innerParams || hasClass(popup, innerParams.hideClass.popup)) {
              return;
            }

            var swalPromiseResolve = privateMethods.swalPromiseResolve.get(
              this
            );
            removeClass(popup, innerParams.showClass.popup);
            addClass(popup, innerParams.hideClass.popup);
            var backdrop = getContainer();
            removeClass(backdrop, innerParams.showClass.backdrop);
            addClass(backdrop, innerParams.hideClass.backdrop);
            handlePopupAnimation(this, popup, innerParams);

            if (typeof resolveValue !== 'undefined') {
              resolveValue.isDismissed =
                typeof resolveValue.dismiss !== 'undefined';
              resolveValue.isConfirmed =
                typeof resolveValue.dismiss === 'undefined';
            } else {
              resolveValue = {
                isDismissed: true,
                isConfirmed: false,
              };
            } // Resolve Swal promise

            swalPromiseResolve(resolveValue || {});
          }

          var handlePopupAnimation = function handlePopupAnimation(
            instance,
            popup,
            innerParams
          ) {
            var container = getContainer(); // If animation is supported, animate

            var animationIsSupported =
              animationEndEvent && hasCssAnimation(popup);
            var onClose = innerParams.onClose,
              onAfterClose = innerParams.onAfterClose;

            if (onClose !== null && typeof onClose === 'function') {
              onClose(popup);
            }

            if (animationIsSupported) {
              animatePopup(instance, popup, container, onAfterClose);
            } else {
              // Otherwise, remove immediately
              removePopupAndResetState(
                instance,
                container,
                isToast(),
                onAfterClose
              );
            }
          };

          var animatePopup = function animatePopup(
            instance,
            popup,
            container,
            onAfterClose
          ) {
            globalState.swalCloseEventFinishedCallback = removePopupAndResetState.bind(
              null,
              instance,
              container,
              isToast(),
              onAfterClose
            );
            popup.addEventListener(animationEndEvent, function (e) {
              if (e.target === popup) {
                globalState.swalCloseEventFinishedCallback();
                delete globalState.swalCloseEventFinishedCallback;
              }
            });
          };

          var triggerOnAfterCloseAndDispose = function triggerOnAfterCloseAndDispose(
            instance,
            onAfterClose
          ) {
            setTimeout(function () {
              if (typeof onAfterClose === 'function') {
                onAfterClose();
              }

              instance._destroy();
            });
          };

          function setButtonsDisabled(instance, buttons, disabled) {
            var domCache = privateProps.domCache.get(instance);
            buttons.forEach(function (button) {
              domCache[button].disabled = disabled;
            });
          }

          function setInputDisabled(input, disabled) {
            if (!input) {
              return false;
            }

            if (input.type === 'radio') {
              var radiosContainer = input.parentNode.parentNode;
              var radios = radiosContainer.querySelectorAll('input');

              for (var i = 0; i < radios.length; i++) {
                radios[i].disabled = disabled;
              }
            } else {
              input.disabled = disabled;
            }
          }

          function enableButtons() {
            setButtonsDisabled(this, ['confirmButton', 'cancelButton'], false);
          }
          function disableButtons() {
            setButtonsDisabled(this, ['confirmButton', 'cancelButton'], true);
          }
          function enableInput() {
            return setInputDisabled(this.getInput(), false);
          }
          function disableInput() {
            return setInputDisabled(this.getInput(), true);
          }

          function showValidationMessage(error) {
            var domCache = privateProps.domCache.get(this);
            setInnerHtml(domCache.validationMessage, error);
            var popupComputedStyle = window.getComputedStyle(domCache.popup);
            domCache.validationMessage.style.marginLeft = '-'.concat(
              popupComputedStyle.getPropertyValue('padding-left')
            );
            domCache.validationMessage.style.marginRight = '-'.concat(
              popupComputedStyle.getPropertyValue('padding-right')
            );
            show(domCache.validationMessage);
            var input = this.getInput();

            if (input) {
              input.setAttribute('aria-invalid', true);
              input.setAttribute(
                'aria-describedBy',
                swalClasses['validation-message']
              );
              focusInput(input);
              addClass(input, swalClasses.inputerror);
            }
          } // Hide block with validation message

          function resetValidationMessage$1() {
            var domCache = privateProps.domCache.get(this);

            if (domCache.validationMessage) {
              hide(domCache.validationMessage);
            }

            var input = this.getInput();

            if (input) {
              input.removeAttribute('aria-invalid');
              input.removeAttribute('aria-describedBy');
              removeClass(input, swalClasses.inputerror);
            }
          }

          function getProgressSteps$1() {
            var domCache = privateProps.domCache.get(this);
            return domCache.progressSteps;
          }

          var Timer = /*#__PURE__*/ (function () {
            function Timer(callback, delay) {
              _classCallCheck(this, Timer);

              this.callback = callback;
              this.remaining = delay;
              this.running = false;
              this.start();
            }

            _createClass(Timer, [
              {
                key: 'start',
                value: function start() {
                  if (!this.running) {
                    this.running = true;
                    this.started = new Date();
                    this.id = setTimeout(this.callback, this.remaining);
                  }

                  return this.remaining;
                },
              },
              {
                key: 'stop',
                value: function stop() {
                  if (this.running) {
                    this.running = false;
                    clearTimeout(this.id);
                    this.remaining -= new Date() - this.started;
                  }

                  return this.remaining;
                },
              },
              {
                key: 'increase',
                value: function increase(n) {
                  var running = this.running;

                  if (running) {
                    this.stop();
                  }

                  this.remaining += n;

                  if (running) {
                    this.start();
                  }

                  return this.remaining;
                },
              },
              {
                key: 'getTimerLeft',
                value: function getTimerLeft() {
                  if (this.running) {
                    this.stop();
                    this.start();
                  }

                  return this.remaining;
                },
              },
              {
                key: 'isRunning',
                value: function isRunning() {
                  return this.running;
                },
              },
            ]);

            return Timer;
          })();

          var defaultInputValidators = {
            email: function email(string, validationMessage) {
              return /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9-]{2,24}$/.test(
                string
              )
                ? Promise.resolve()
                : Promise.resolve(validationMessage || 'Invalid email address');
            },
            url: function url(string, validationMessage) {
              // taken from https://stackoverflow.com/a/3809435 with a small change from #1306 and #2013
              return /^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-z]{2,63}\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(
                string
              )
                ? Promise.resolve()
                : Promise.resolve(validationMessage || 'Invalid URL');
            },
          };

          function setDefaultInputValidators(params) {
            // Use default `inputValidator` for supported input types if not provided
            if (!params.inputValidator) {
              Object.keys(defaultInputValidators).forEach(function (key) {
                if (params.input === key) {
                  params.inputValidator = defaultInputValidators[key];
                }
              });
            }
          }

          function validateCustomTargetElement(params) {
            // Determine if the custom target element is valid
            if (
              !params.target ||
              (typeof params.target === 'string' &&
                !document.querySelector(params.target)) ||
              (typeof params.target !== 'string' && !params.target.appendChild)
            ) {
              warn('Target parameter is not valid, defaulting to "body"');
              params.target = 'body';
            }
          }
          /**
           * Set type, text and actions on popup
           *
           * @param params
           * @returns {boolean}
           */

          function setParameters(params) {
            setDefaultInputValidators(params); // showLoaderOnConfirm && preConfirm

            if (params.showLoaderOnConfirm && !params.preConfirm) {
              warn(
                'showLoaderOnConfirm is set to true, but preConfirm is not defined.\n' +
                  'showLoaderOnConfirm should be used together with preConfirm, see usage example:\n' +
                  'https://sweetalert2.github.io/#ajax-request'
              );
            } // params.animation will be actually used in renderPopup.js
            // but in case when params.animation is a function, we need to call that function
            // before popup (re)initialization, so it'll be possible to check Swal.isVisible()
            // inside the params.animation function

            params.animation = callIfFunction(params.animation);
            validateCustomTargetElement(params); // Replace newlines with <br> in title

            if (typeof params.title === 'string') {
              params.title = params.title.split('\n').join('<br />');
            }

            init(params);
          }

          /**
           * Open popup, add necessary classes and styles, fix scrollbar
           *
           * @param {Array} params
           */

          var openPopup = function openPopup(params) {
            var container = getContainer();
            var popup = getPopup();

            if (typeof params.onBeforeOpen === 'function') {
              params.onBeforeOpen(popup);
            }

            var bodyStyles = window.getComputedStyle(document.body);
            var initialBodyOverflow = bodyStyles.overflowY;
            addClasses$1(container, popup, params); // scrolling is 'hidden' until animation is done, after that 'auto'

            setScrollingVisibility(container, popup);

            if (isModal()) {
              fixScrollContainer(
                container,
                params.scrollbarPadding,
                initialBodyOverflow
              );
              setAriaHidden();
            }

            if (!isToast() && !globalState.previousActiveElement) {
              globalState.previousActiveElement = document.activeElement;
            }

            if (typeof params.onOpen === 'function') {
              setTimeout(function () {
                return params.onOpen(popup);
              });
            }

            removeClass(container, swalClasses['no-transition']);
          };

          function swalOpenAnimationFinished(event) {
            var popup = getPopup();

            if (event.target !== popup) {
              return;
            }

            var container = getContainer();
            popup.removeEventListener(
              animationEndEvent,
              swalOpenAnimationFinished
            );
            container.style.overflowY = 'auto';
          }

          var setScrollingVisibility = function setScrollingVisibility(
            container,
            popup
          ) {
            if (animationEndEvent && hasCssAnimation(popup)) {
              container.style.overflowY = 'hidden';
              popup.addEventListener(
                animationEndEvent,
                swalOpenAnimationFinished
              );
            } else {
              container.style.overflowY = 'auto';
            }
          };

          var fixScrollContainer = function fixScrollContainer(
            container,
            scrollbarPadding,
            initialBodyOverflow
          ) {
            iOSfix();
            IEfix();

            if (scrollbarPadding && initialBodyOverflow !== 'hidden') {
              fixScrollbar();
            } // sweetalert2/issues/1247

            setTimeout(function () {
              container.scrollTop = 0;
            });
          };

          var addClasses$1 = function addClasses(container, popup, params) {
            addClass(container, params.showClass.backdrop);
            show(popup); // Animate popup right after showing it

            addClass(popup, params.showClass.popup);
            addClass(
              [document.documentElement, document.body],
              swalClasses.shown
            );

            if (params.heightAuto && params.backdrop && !params.toast) {
              addClass(
                [document.documentElement, document.body],
                swalClasses['height-auto']
              );
            }
          };

          var handleInputOptionsAndValue = function handleInputOptionsAndValue(
            instance,
            params
          ) {
            if (params.input === 'select' || params.input === 'radio') {
              handleInputOptions(instance, params);
            } else if (
              ['text', 'email', 'number', 'tel', 'textarea'].indexOf(
                params.input
              ) !== -1 &&
              (hasToPromiseFn(params.inputValue) ||
                isPromise(params.inputValue))
            ) {
              handleInputValue(instance, params);
            }
          };
          var getInputValue = function getInputValue(instance, innerParams) {
            var input = instance.getInput();

            if (!input) {
              return null;
            }

            switch (innerParams.input) {
              case 'checkbox':
                return getCheckboxValue(input);

              case 'radio':
                return getRadioValue(input);

              case 'file':
                return getFileValue(input);

              default:
                return innerParams.inputAutoTrim
                  ? input.value.trim()
                  : input.value;
            }
          };

          var getCheckboxValue = function getCheckboxValue(input) {
            return input.checked ? 1 : 0;
          };

          var getRadioValue = function getRadioValue(input) {
            return input.checked ? input.value : null;
          };

          var getFileValue = function getFileValue(input) {
            return input.files.length
              ? input.getAttribute('multiple') !== null
                ? input.files
                : input.files[0]
              : null;
          };

          var handleInputOptions = function handleInputOptions(
            instance,
            params
          ) {
            var content = getContent();

            var processInputOptions = function processInputOptions(
              inputOptions
            ) {
              return populateInputOptions[params.input](
                content,
                formatInputOptions(inputOptions),
                params
              );
            };

            if (
              hasToPromiseFn(params.inputOptions) ||
              isPromise(params.inputOptions)
            ) {
              showLoading();
              asPromise(params.inputOptions).then(function (inputOptions) {
                instance.hideLoading();
                processInputOptions(inputOptions);
              });
            } else if (_typeof(params.inputOptions) === 'object') {
              processInputOptions(params.inputOptions);
            } else {
              error(
                'Unexpected type of inputOptions! Expected object, Map or Promise, got '.concat(
                  _typeof(params.inputOptions)
                )
              );
            }
          };

          var handleInputValue = function handleInputValue(instance, params) {
            var input = instance.getInput();
            hide(input);
            asPromise(params.inputValue)
              .then(function (inputValue) {
                input.value =
                  params.input === 'number'
                    ? parseFloat(inputValue) || 0
                    : ''.concat(inputValue);
                show(input);
                input.focus();
                instance.hideLoading();
              })
              ['catch'](function (err) {
                error('Error in inputValue promise: '.concat(err));
                input.value = '';
                show(input);
                input.focus();
                instance.hideLoading();
              });
          };

          var populateInputOptions = {
            select: function select(content, inputOptions, params) {
              var select = getChildByClass(content, swalClasses.select);

              var renderOption = function renderOption(
                parent,
                optionLabel,
                optionValue
              ) {
                var option = document.createElement('option');
                option.value = optionValue;
                setInnerHtml(option, optionLabel);

                if (params.inputValue.toString() === optionValue.toString()) {
                  option.selected = true;
                }

                parent.appendChild(option);
              };

              inputOptions.forEach(function (inputOption) {
                var optionValue = inputOption[0];
                var optionLabel = inputOption[1]; // <optgroup> spec:
                // https://www.w3.org/TR/html401/interact/forms.html#h-17.6
                // "...all OPTGROUP elements must be specified directly within a SELECT element (i.e., groups may not be nested)..."
                // check whether this is a <optgroup>

                if (Array.isArray(optionLabel)) {
                  // if it is an array, then it is an <optgroup>
                  var optgroup = document.createElement('optgroup');
                  optgroup.label = optionValue;
                  optgroup.disabled = false; // not configurable for now

                  select.appendChild(optgroup);
                  optionLabel.forEach(function (o) {
                    return renderOption(optgroup, o[1], o[0]);
                  });
                } else {
                  // case of <option>
                  renderOption(select, optionLabel, optionValue);
                }
              });
              select.focus();
            },
            radio: function radio(content, inputOptions, params) {
              var radio = getChildByClass(content, swalClasses.radio);
              inputOptions.forEach(function (inputOption) {
                var radioValue = inputOption[0];
                var radioLabel = inputOption[1];
                var radioInput = document.createElement('input');
                var radioLabelElement = document.createElement('label');
                radioInput.type = 'radio';
                radioInput.name = swalClasses.radio;
                radioInput.value = radioValue;

                if (params.inputValue.toString() === radioValue.toString()) {
                  radioInput.checked = true;
                }

                var label = document.createElement('span');
                setInnerHtml(label, radioLabel);
                label.className = swalClasses.label;
                radioLabelElement.appendChild(radioInput);
                radioLabelElement.appendChild(label);
                radio.appendChild(radioLabelElement);
              });
              var radios = radio.querySelectorAll('input');

              if (radios.length) {
                radios[0].focus();
              }
            },
          };
          /**
           * Converts `inputOptions` into an array of `[value, label]`s
           * @param inputOptions
           */

          var formatInputOptions = function formatInputOptions(inputOptions) {
            var result = [];

            if (typeof Map !== 'undefined' && inputOptions instanceof Map) {
              inputOptions.forEach(function (value, key) {
                var valueFormatted = value;

                if (_typeof(valueFormatted) === 'object') {
                  // case of <optgroup>
                  valueFormatted = formatInputOptions(valueFormatted);
                }

                result.push([key, valueFormatted]);
              });
            } else {
              Object.keys(inputOptions).forEach(function (key) {
                var valueFormatted = inputOptions[key];

                if (_typeof(valueFormatted) === 'object') {
                  // case of <optgroup>
                  valueFormatted = formatInputOptions(valueFormatted);
                }

                result.push([key, valueFormatted]);
              });
            }

            return result;
          };

          var handleConfirmButtonClick = function handleConfirmButtonClick(
            instance,
            innerParams
          ) {
            instance.disableButtons();

            if (innerParams.input) {
              handleConfirmWithInput(instance, innerParams);
            } else {
              confirm(instance, innerParams, true);
            }
          };
          var handleCancelButtonClick = function handleCancelButtonClick(
            instance,
            dismissWith
          ) {
            instance.disableButtons();
            dismissWith(DismissReason.cancel);
          };

          var handleConfirmWithInput = function handleConfirmWithInput(
            instance,
            innerParams
          ) {
            var inputValue = getInputValue(instance, innerParams);

            if (innerParams.inputValidator) {
              instance.disableInput();
              var validationPromise = Promise.resolve().then(function () {
                return asPromise(
                  innerParams.inputValidator(
                    inputValue,
                    innerParams.validationMessage
                  )
                );
              });
              validationPromise.then(function (validationMessage) {
                instance.enableButtons();
                instance.enableInput();

                if (validationMessage) {
                  instance.showValidationMessage(validationMessage);
                } else {
                  confirm(instance, innerParams, inputValue);
                }
              });
            } else if (!instance.getInput().checkValidity()) {
              instance.enableButtons();
              instance.showValidationMessage(innerParams.validationMessage);
            } else {
              confirm(instance, innerParams, inputValue);
            }
          };

          var succeedWith = function succeedWith(instance, value) {
            instance.closePopup({
              value: value,
            });
          };

          var confirm = function confirm(instance, innerParams, value) {
            if (innerParams.showLoaderOnConfirm) {
              showLoading(); // TODO: make showLoading an *instance* method
            }

            if (innerParams.preConfirm) {
              instance.resetValidationMessage();
              var preConfirmPromise = Promise.resolve().then(function () {
                return asPromise(
                  innerParams.preConfirm(value, innerParams.validationMessage)
                );
              });
              preConfirmPromise.then(function (preConfirmValue) {
                if (
                  isVisible(getValidationMessage()) ||
                  preConfirmValue === false
                ) {
                  instance.hideLoading();
                } else {
                  succeedWith(
                    instance,
                    typeof preConfirmValue === 'undefined'
                      ? value
                      : preConfirmValue
                  );
                }
              });
            } else {
              succeedWith(instance, value);
            }
          };

          var addKeydownHandler = function addKeydownHandler(
            instance,
            globalState,
            innerParams,
            dismissWith
          ) {
            if (globalState.keydownTarget && globalState.keydownHandlerAdded) {
              globalState.keydownTarget.removeEventListener(
                'keydown',
                globalState.keydownHandler,
                {
                  capture: globalState.keydownListenerCapture,
                }
              );
              globalState.keydownHandlerAdded = false;
            }

            if (!innerParams.toast) {
              globalState.keydownHandler = function (e) {
                return keydownHandler(instance, e, dismissWith);
              };

              globalState.keydownTarget = innerParams.keydownListenerCapture
                ? window
                : getPopup();
              globalState.keydownListenerCapture =
                innerParams.keydownListenerCapture;
              globalState.keydownTarget.addEventListener(
                'keydown',
                globalState.keydownHandler,
                {
                  capture: globalState.keydownListenerCapture,
                }
              );
              globalState.keydownHandlerAdded = true;
            }
          }; // Focus handling

          var setFocus = function setFocus(innerParams, index, increment) {
            var focusableElements = getFocusableElements(); // search for visible elements and select the next possible match

            for (var i = 0; i < focusableElements.length; i++) {
              index = index + increment; // rollover to first item

              if (index === focusableElements.length) {
                index = 0; // go to last item
              } else if (index === -1) {
                index = focusableElements.length - 1;
              }

              return focusableElements[index].focus();
            } // no visible focusable elements, focus the popup

            getPopup().focus();
          };
          var arrowKeys = [
            'ArrowLeft',
            'ArrowRight',
            'ArrowUp',
            'ArrowDown',
            'Left',
            'Right',
            'Up',
            'Down', // IE11
          ];
          var escKeys = [
            'Escape',
            'Esc', // IE11
          ];

          var keydownHandler = function keydownHandler(
            instance,
            e,
            dismissWith
          ) {
            var innerParams = privateProps.innerParams.get(instance);

            if (innerParams.stopKeydownPropagation) {
              e.stopPropagation();
            } // ENTER

            if (e.key === 'Enter') {
              handleEnter(instance, e, innerParams); // TAB
            } else if (e.key === 'Tab') {
              handleTab(e, innerParams); // ARROWS - switch focus between buttons
            } else if (arrowKeys.indexOf(e.key) !== -1) {
              handleArrows(); // ESC
            } else if (escKeys.indexOf(e.key) !== -1) {
              handleEsc(e, innerParams, dismissWith);
            }
          };

          var handleEnter = function handleEnter(instance, e, innerParams) {
            // #720 #721
            if (e.isComposing) {
              return;
            }

            if (
              e.target &&
              instance.getInput() &&
              e.target.outerHTML === instance.getInput().outerHTML
            ) {
              if (['textarea', 'file'].indexOf(innerParams.input) !== -1) {
                return; // do not submit
              }

              clickConfirm();
              e.preventDefault();
            }
          };

          var handleTab = function handleTab(e, innerParams) {
            var targetElement = e.target;
            var focusableElements = getFocusableElements();
            var btnIndex = -1;

            for (var i = 0; i < focusableElements.length; i++) {
              if (targetElement === focusableElements[i]) {
                btnIndex = i;
                break;
              }
            }

            if (!e.shiftKey) {
              // Cycle to the next button
              setFocus(innerParams, btnIndex, 1);
            } else {
              // Cycle to the prev button
              setFocus(innerParams, btnIndex, -1);
            }

            e.stopPropagation();
            e.preventDefault();
          };

          var handleArrows = function handleArrows() {
            var confirmButton = getConfirmButton();
            var cancelButton = getCancelButton(); // focus Cancel button if Confirm button is currently focused

            if (
              document.activeElement === confirmButton &&
              isVisible(cancelButton)
            ) {
              cancelButton.focus(); // and vice versa
            } else if (
              document.activeElement === cancelButton &&
              isVisible(confirmButton)
            ) {
              confirmButton.focus();
            }
          };

          var handleEsc = function handleEsc(e, innerParams, dismissWith) {
            if (callIfFunction(innerParams.allowEscapeKey)) {
              e.preventDefault();
              dismissWith(DismissReason.esc);
            }
          };

          var handlePopupClick = function handlePopupClick(
            instance,
            domCache,
            dismissWith
          ) {
            var innerParams = privateProps.innerParams.get(instance);

            if (innerParams.toast) {
              handleToastClick(instance, domCache, dismissWith);
            } else {
              // Ignore click events that had mousedown on the popup but mouseup on the container
              // This can happen when the user drags a slider
              handleModalMousedown(domCache); // Ignore click events that had mousedown on the container but mouseup on the popup

              handleContainerMousedown(domCache);
              handleModalClick(instance, domCache, dismissWith);
            }
          };

          var handleToastClick = function handleToastClick(
            instance,
            domCache,
            dismissWith
          ) {
            // Closing toast by internal click
            domCache.popup.onclick = function () {
              var innerParams = privateProps.innerParams.get(instance);

              if (
                innerParams.showConfirmButton ||
                innerParams.showCancelButton ||
                innerParams.showCloseButton ||
                innerParams.input
              ) {
                return;
              }

              dismissWith(DismissReason.close);
            };
          };

          var ignoreOutsideClick = false;

          var handleModalMousedown = function handleModalMousedown(domCache) {
            domCache.popup.onmousedown = function () {
              domCache.container.onmouseup = function (e) {
                domCache.container.onmouseup = undefined; // We only check if the mouseup target is the container because usually it doesn't
                // have any other direct children aside of the popup

                if (e.target === domCache.container) {
                  ignoreOutsideClick = true;
                }
              };
            };
          };

          var handleContainerMousedown = function handleContainerMousedown(
            domCache
          ) {
            domCache.container.onmousedown = function () {
              domCache.popup.onmouseup = function (e) {
                domCache.popup.onmouseup = undefined; // We also need to check if the mouseup target is a child of the popup

                if (
                  e.target === domCache.popup ||
                  domCache.popup.contains(e.target)
                ) {
                  ignoreOutsideClick = true;
                }
              };
            };
          };

          var handleModalClick = function handleModalClick(
            instance,
            domCache,
            dismissWith
          ) {
            domCache.container.onclick = function (e) {
              var innerParams = privateProps.innerParams.get(instance);

              if (ignoreOutsideClick) {
                ignoreOutsideClick = false;
                return;
              }

              if (
                e.target === domCache.container &&
                callIfFunction(innerParams.allowOutsideClick)
              ) {
                dismissWith(DismissReason.backdrop);
              }
            };
          };

          function _main(userParams) {
            showWarningsForParams(userParams);

            if (globalState.currentInstance) {
              globalState.currentInstance._destroy();
            }

            globalState.currentInstance = this;
            var innerParams = prepareParams(userParams);
            setParameters(innerParams);
            Object.freeze(innerParams); // clear the previous timer

            if (globalState.timeout) {
              globalState.timeout.stop();
              delete globalState.timeout;
            } // clear the restore focus timeout

            clearTimeout(globalState.restoreFocusTimeout);
            var domCache = populateDomCache(this);
            render(this, innerParams);
            privateProps.innerParams.set(this, innerParams);
            return swalPromise(this, domCache, innerParams);
          }

          var prepareParams = function prepareParams(userParams) {
            var showClass = _extends(
              {},
              defaultParams.showClass,
              userParams.showClass
            );

            var hideClass = _extends(
              {},
              defaultParams.hideClass,
              userParams.hideClass
            );

            var params = _extends({}, defaultParams, userParams);

            params.showClass = showClass;
            params.hideClass = hideClass; // @deprecated

            if (userParams.animation === false) {
              params.showClass = {
                popup: 'swal2-noanimation',
                backdrop: 'swal2-noanimation',
              };
              params.hideClass = {};
            }

            return params;
          };

          var swalPromise = function swalPromise(
            instance,
            domCache,
            innerParams
          ) {
            return new Promise(function (resolve) {
              // functions to handle all closings/dismissals
              var dismissWith = function dismissWith(dismiss) {
                instance.closePopup({
                  dismiss: dismiss,
                });
              };

              privateMethods.swalPromiseResolve.set(instance, resolve);

              domCache.confirmButton.onclick = function () {
                return handleConfirmButtonClick(instance, innerParams);
              };

              domCache.cancelButton.onclick = function () {
                return handleCancelButtonClick(instance, dismissWith);
              };

              domCache.closeButton.onclick = function () {
                return dismissWith(DismissReason.close);
              };

              handlePopupClick(instance, domCache, dismissWith);
              addKeydownHandler(
                instance,
                globalState,
                innerParams,
                dismissWith
              );

              if (
                innerParams.toast &&
                (innerParams.input ||
                  innerParams.footer ||
                  innerParams.showCloseButton)
              ) {
                addClass(document.body, swalClasses['toast-column']);
              } else {
                removeClass(document.body, swalClasses['toast-column']);
              }

              handleInputOptionsAndValue(instance, innerParams);
              openPopup(innerParams);
              setupTimer(globalState, innerParams, dismissWith);
              initFocus(domCache, innerParams); // Scroll container to top on open (#1247, #1946)

              setTimeout(function () {
                domCache.container.scrollTop = 0;
              });
            });
          };

          var populateDomCache = function populateDomCache(instance) {
            var domCache = {
              popup: getPopup(),
              container: getContainer(),
              content: getContent(),
              actions: getActions(),
              confirmButton: getConfirmButton(),
              cancelButton: getCancelButton(),
              closeButton: getCloseButton(),
              validationMessage: getValidationMessage(),
              progressSteps: getProgressSteps(),
            };
            privateProps.domCache.set(instance, domCache);
            return domCache;
          };

          var setupTimer = function setupTimer(
            globalState$$1,
            innerParams,
            dismissWith
          ) {
            var timerProgressBar = getTimerProgressBar();
            hide(timerProgressBar);

            if (innerParams.timer) {
              globalState$$1.timeout = new Timer(function () {
                dismissWith('timer');
                delete globalState$$1.timeout;
              }, innerParams.timer);

              if (innerParams.timerProgressBar) {
                show(timerProgressBar);
                setTimeout(function () {
                  if (globalState$$1.timeout.running) {
                    // timer can be already stopped at this point
                    animateTimerProgressBar(innerParams.timer);
                  }
                });
              }
            }
          };

          var initFocus = function initFocus(domCache, innerParams) {
            if (innerParams.toast) {
              return;
            }

            if (!callIfFunction(innerParams.allowEnterKey)) {
              return blurActiveElement();
            }

            if (innerParams.focusCancel && isVisible(domCache.cancelButton)) {
              return domCache.cancelButton.focus();
            }

            if (innerParams.focusConfirm && isVisible(domCache.confirmButton)) {
              return domCache.confirmButton.focus();
            }

            setFocus(innerParams, -1, 1);
          };

          var blurActiveElement = function blurActiveElement() {
            if (
              document.activeElement &&
              typeof document.activeElement.blur === 'function'
            ) {
              document.activeElement.blur();
            }
          };

          /**
           * Updates popup parameters.
           */

          function update(params) {
            var popup = getPopup();
            var innerParams = privateProps.innerParams.get(this);

            if (!popup || hasClass(popup, innerParams.hideClass.popup)) {
              return warn(
                "You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup."
              );
            }

            var validUpdatableParams = {}; // assign valid params from `params` to `defaults`

            Object.keys(params).forEach(function (param) {
              if (Swal.isUpdatableParameter(param)) {
                validUpdatableParams[param] = params[param];
              } else {
                warn(
                  'Invalid parameter to update: "'.concat(
                    param,
                    '". Updatable params are listed here: https://github.com/sweetalert2/sweetalert2/blob/master/src/utils/params.js'
                  )
                );
              }
            });

            var updatedParams = _extends({}, innerParams, validUpdatableParams);

            render(this, updatedParams);
            privateProps.innerParams.set(this, updatedParams);
            Object.defineProperties(this, {
              params: {
                value: _extends({}, this.params, params),
                writable: false,
                enumerable: true,
              },
            });
          }

          function _destroy() {
            var domCache = privateProps.domCache.get(this);
            var innerParams = privateProps.innerParams.get(this);

            if (!innerParams) {
              return; // This instance has already been destroyed
            } // Check if there is another Swal closing

            if (domCache.popup && globalState.swalCloseEventFinishedCallback) {
              globalState.swalCloseEventFinishedCallback();
              delete globalState.swalCloseEventFinishedCallback;
            } // Check if there is a swal disposal defer timer

            if (globalState.deferDisposalTimer) {
              clearTimeout(globalState.deferDisposalTimer);
              delete globalState.deferDisposalTimer;
            }

            if (typeof innerParams.onDestroy === 'function') {
              innerParams.onDestroy();
            }

            disposeSwal(this);
          }

          var disposeSwal = function disposeSwal(instance) {
            // Unset this.params so GC will dispose it (#1569)
            delete instance.params; // Unset globalState props so GC will dispose globalState (#1569)

            delete globalState.keydownHandler;
            delete globalState.keydownTarget; // Unset WeakMaps so GC will be able to dispose them (#1569)

            unsetWeakMaps(privateProps);
            unsetWeakMaps(privateMethods);
          };

          var unsetWeakMaps = function unsetWeakMaps(obj) {
            for (var i in obj) {
              obj[i] = new WeakMap();
            }
          };

          var instanceMethods = /*#__PURE__*/ Object.freeze({
            hideLoading: hideLoading,
            disableLoading: hideLoading,
            getInput: getInput$1,
            close: close,
            closePopup: close,
            closeModal: close,
            closeToast: close,
            enableButtons: enableButtons,
            disableButtons: disableButtons,
            enableInput: enableInput,
            disableInput: disableInput,
            showValidationMessage: showValidationMessage,
            resetValidationMessage: resetValidationMessage$1,
            getProgressSteps: getProgressSteps$1,
            _main: _main,
            update: update,
            _destroy: _destroy,
          });

          var currentInstance;

          var SweetAlert = /*#__PURE__*/ (function () {
            function SweetAlert() {
              _classCallCheck(this, SweetAlert);

              // Prevent run in Node env
              if (typeof window === 'undefined') {
                return;
              } // Check for the existence of Promise

              if (typeof Promise === 'undefined') {
                error(
                  'This package requires a Promise library, please include a shim to enable it in this browser (See: https://github.com/sweetalert2/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2#1-ie-support)'
                );
              }

              currentInstance = this;

              for (
                var _len = arguments.length, args = new Array(_len), _key = 0;
                _key < _len;
                _key++
              ) {
                args[_key] = arguments[_key];
              }

              var outerParams = Object.freeze(
                this.constructor.argsToParams(args)
              );
              Object.defineProperties(this, {
                params: {
                  value: outerParams,
                  writable: false,
                  enumerable: true,
                  configurable: true,
                },
              });

              var promise = this._main(this.params);

              privateProps.promise.set(this, promise);
            } // `catch` cannot be the name of a module export, so we define our thenable methods here instead

            _createClass(SweetAlert, [
              {
                key: 'then',
                value: function then(onFulfilled) {
                  var promise = privateProps.promise.get(this);
                  return promise.then(onFulfilled);
                },
              },
              {
                key: 'finally',
                value: function _finally(onFinally) {
                  var promise = privateProps.promise.get(this);
                  return promise['finally'](onFinally);
                },
              },
            ]);

            return SweetAlert;
          })(); // Assign instance methods from src/instanceMethods/*.js to prototype

          _extends(SweetAlert.prototype, instanceMethods); // Assign static methods from src/staticMethods/*.js to constructor

          _extends(SweetAlert, staticMethods); // Proxy to instance methods to constructor, for now, for backwards compatibility

          Object.keys(instanceMethods).forEach(function (key) {
            SweetAlert[key] = function () {
              if (currentInstance) {
                var _currentInstance;

                return (_currentInstance = currentInstance)[key].apply(
                  _currentInstance,
                  arguments
                );
              }
            };
          });
          SweetAlert.DismissReason = DismissReason;
          SweetAlert.version = '9.15.3';

          var Swal = SweetAlert;
          Swal['default'] = Swal;

          return Swal;
        });
        if (typeof this !== 'undefined' && this.Sweetalert2) {
          this.swal = this.sweetAlert = this.Swal = this.SweetAlert = this.Sweetalert2;
        }

        'undefined' != typeof document &&
          (function (e, t) {
            var n = e.createElement('style');
            if (
              (e.getElementsByTagName('head')[0].appendChild(n), n.styleSheet)
            )
              n.styleSheet.disabled || (n.styleSheet.cssText = t);
            else
              try {
                n.innerHTML = t;
              } catch (e) {
                n.innerText = t;
              }
          })(
            document,
            '.swal2-popup.swal2-toast{flex-direction:row;align-items:center;width:auto;padding:.625em;overflow-y:hidden;background:#fff;box-shadow:0 0 .625em #d9d9d9}.swal2-popup.swal2-toast .swal2-header{flex-direction:row}.swal2-popup.swal2-toast .swal2-title{flex-grow:1;justify-content:flex-start;margin:0 .6em;font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{position:static;width:.8em;height:.8em;line-height:.8}.swal2-popup.swal2-toast .swal2-content{justify-content:flex-start;font-size:1em}.swal2-popup.swal2-toast .swal2-icon{width:2em;min-width:2em;height:2em;margin:0}.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:700}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{font-size:.25em}}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{flex-basis:auto!important;width:auto;height:auto;margin:0 .3125em}.swal2-popup.swal2-toast .swal2-styled{margin:0 .3125em;padding:.3125em .625em;font-size:1em}.swal2-popup.swal2-toast .swal2-styled:focus{box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(50,100,150,.4)}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;transform:rotate(45deg);border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.8em;left:-.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-toast-animate-success-line-tip .75s;animation:swal2-toast-animate-success-line-tip .75s}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-toast-animate-success-line-long .75s;animation:swal2-toast-animate-success-line-long .75s}.swal2-popup.swal2-toast.swal2-show{-webkit-animation:swal2-toast-show .5s;animation:swal2-toast-show .5s}.swal2-popup.swal2-toast.swal2-hide{-webkit-animation:swal2-toast-hide .1s forwards;animation:swal2-toast-hide .1s forwards}.swal2-container{display:flex;position:fixed;z-index:1060;top:0;right:0;bottom:0;left:0;flex-direction:row;align-items:center;justify-content:center;padding:.625em;overflow-x:hidden;transition:background-color .1s;-webkit-overflow-scrolling:touch}.swal2-container.swal2-backdrop-show,.swal2-container.swal2-noanimation{background:rgba(0,0,0,.4)}.swal2-container.swal2-backdrop-hide{background:0 0!important}.swal2-container.swal2-top{align-items:flex-start}.swal2-container.swal2-top-left,.swal2-container.swal2-top-start{align-items:flex-start;justify-content:flex-start}.swal2-container.swal2-top-end,.swal2-container.swal2-top-right{align-items:flex-start;justify-content:flex-end}.swal2-container.swal2-center{align-items:center}.swal2-container.swal2-center-left,.swal2-container.swal2-center-start{align-items:center;justify-content:flex-start}.swal2-container.swal2-center-end,.swal2-container.swal2-center-right{align-items:center;justify-content:flex-end}.swal2-container.swal2-bottom{align-items:flex-end}.swal2-container.swal2-bottom-left,.swal2-container.swal2-bottom-start{align-items:flex-end;justify-content:flex-start}.swal2-container.swal2-bottom-end,.swal2-container.swal2-bottom-right{align-items:flex-end;justify-content:flex-end}.swal2-container.swal2-bottom-end>:first-child,.swal2-container.swal2-bottom-left>:first-child,.swal2-container.swal2-bottom-right>:first-child,.swal2-container.swal2-bottom-start>:first-child,.swal2-container.swal2-bottom>:first-child{margin-top:auto}.swal2-container.swal2-grow-fullscreen>.swal2-modal{display:flex!important;flex:1;align-self:stretch;justify-content:center}.swal2-container.swal2-grow-row>.swal2-modal{display:flex!important;flex:1;align-content:center;justify-content:center}.swal2-container.swal2-grow-column{flex:1;flex-direction:column}.swal2-container.swal2-grow-column.swal2-bottom,.swal2-container.swal2-grow-column.swal2-center,.swal2-container.swal2-grow-column.swal2-top{align-items:center}.swal2-container.swal2-grow-column.swal2-bottom-left,.swal2-container.swal2-grow-column.swal2-bottom-start,.swal2-container.swal2-grow-column.swal2-center-left,.swal2-container.swal2-grow-column.swal2-center-start,.swal2-container.swal2-grow-column.swal2-top-left,.swal2-container.swal2-grow-column.swal2-top-start{align-items:flex-start}.swal2-container.swal2-grow-column.swal2-bottom-end,.swal2-container.swal2-grow-column.swal2-bottom-right,.swal2-container.swal2-grow-column.swal2-center-end,.swal2-container.swal2-grow-column.swal2-center-right,.swal2-container.swal2-grow-column.swal2-top-end,.swal2-container.swal2-grow-column.swal2-top-right{align-items:flex-end}.swal2-container.swal2-grow-column>.swal2-modal{display:flex!important;flex:1;align-content:center;justify-content:center}.swal2-container.swal2-no-transition{transition:none!important}.swal2-container:not(.swal2-top):not(.swal2-top-start):not(.swal2-top-end):not(.swal2-top-left):not(.swal2-top-right):not(.swal2-center-start):not(.swal2-center-end):not(.swal2-center-left):not(.swal2-center-right):not(.swal2-bottom):not(.swal2-bottom-start):not(.swal2-bottom-end):not(.swal2-bottom-left):not(.swal2-bottom-right):not(.swal2-grow-fullscreen)>.swal2-modal{margin:auto}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.swal2-container .swal2-modal{margin:0!important}}.swal2-popup{display:none;position:relative;box-sizing:border-box;flex-direction:column;justify-content:center;width:32em;max-width:100%;padding:1.25em;border:none;border-radius:.3125em;background:#fff;font-family:inherit;font-size:1rem}.swal2-popup:focus{outline:0}.swal2-popup.swal2-loading{overflow-y:hidden}.swal2-header{display:flex;flex-direction:column;align-items:center}.swal2-title{position:relative;max-width:100%;margin:0 0 .4em;padding:0;color:#595959;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}.swal2-actions{display:flex;z-index:1;flex-wrap:wrap;align-items:center;justify-content:center;width:100%;margin:1.25em auto 0}.swal2-actions:not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}.swal2-actions:not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0,0,0,.1),rgba(0,0,0,.1))}.swal2-actions:not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0,0,0,.2),rgba(0,0,0,.2))}.swal2-actions.swal2-loading .swal2-styled.swal2-confirm{box-sizing:border-box;width:2.5em;height:2.5em;margin:.46875em;padding:0;-webkit-animation:swal2-rotate-loading 1.5s linear 0s infinite normal;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border:.25em solid transparent;border-radius:100%;border-color:transparent;background-color:transparent!important;color:transparent!important;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.swal2-actions.swal2-loading .swal2-styled.swal2-cancel{margin-right:30px;margin-left:30px}.swal2-actions.swal2-loading :not(.swal2-styled).swal2-confirm::after{content:"";display:inline-block;width:15px;height:15px;margin-left:5px;-webkit-animation:swal2-rotate-loading 1.5s linear 0s infinite normal;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border:3px solid #999;border-radius:50%;border-right-color:transparent;box-shadow:1px 1px 1px #fff}.swal2-styled{margin:.3125em;padding:.625em 2em;box-shadow:none;font-weight:500}.swal2-styled:not([disabled]){cursor:pointer}.swal2-styled.swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#3085d6;color:#fff;font-size:1.0625em}.swal2-styled.swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#aaa;color:#fff;font-size:1.0625em}.swal2-styled:focus{outline:0;box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(50,100,150,.4)}.swal2-styled::-moz-focus-inner{border:0}.swal2-footer{justify-content:center;margin:1.25em 0 0;padding:1em 0 0;border-top:1px solid #eee;color:#545454;font-size:1em}.swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;height:.25em;overflow:hidden;border-bottom-right-radius:.3125em;border-bottom-left-radius:.3125em}.swal2-timer-progress-bar{width:100%;height:.25em;background:rgba(0,0,0,.2)}.swal2-image{max-width:100%;margin:1.25em auto}.swal2-close{position:absolute;z-index:2;top:0;right:0;align-items:center;justify-content:center;width:1.2em;height:1.2em;padding:0;overflow:hidden;transition:color .1s ease-out;border:none;border-radius:0;background:0 0;color:#ccc;font-family:serif;font-size:2.5em;line-height:1.2;cursor:pointer}.swal2-close:hover{transform:none;background:0 0;color:#f27474}.swal2-close::-moz-focus-inner{border:0}.swal2-content{z-index:1;justify-content:center;margin:0;padding:0;color:#545454;font-size:1.125em;font-weight:400;line-height:normal;text-align:center;word-wrap:break-word}.swal2-checkbox,.swal2-file,.swal2-input,.swal2-radio,.swal2-select,.swal2-textarea{margin:1em auto}.swal2-file,.swal2-input,.swal2-textarea{box-sizing:border-box;width:100%;transition:border-color .3s,box-shadow .3s;border:1px solid #d9d9d9;border-radius:.1875em;background:inherit;box-shadow:inset 0 1px 1px rgba(0,0,0,.06);color:inherit;font-size:1.125em}.swal2-file.swal2-inputerror,.swal2-input.swal2-inputerror,.swal2-textarea.swal2-inputerror{border-color:#f27474!important;box-shadow:0 0 2px #f27474!important}.swal2-file:focus,.swal2-input:focus,.swal2-textarea:focus{border:1px solid #b4dbed;outline:0;box-shadow:0 0 3px #c4e6f5}.swal2-file::-moz-placeholder,.swal2-input::-moz-placeholder,.swal2-textarea::-moz-placeholder{color:#ccc}.swal2-file:-ms-input-placeholder,.swal2-input:-ms-input-placeholder,.swal2-textarea:-ms-input-placeholder{color:#ccc}.swal2-file::-ms-input-placeholder,.swal2-input::-ms-input-placeholder,.swal2-textarea::-ms-input-placeholder{color:#ccc}.swal2-file::placeholder,.swal2-input::placeholder,.swal2-textarea::placeholder{color:#ccc}.swal2-range{margin:1em auto;background:#fff}.swal2-range input{width:80%}.swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}.swal2-range input,.swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}.swal2-input{height:2.625em;padding:0 .75em}.swal2-input[type=number]{max-width:10em}.swal2-file{background:inherit;font-size:1.125em}.swal2-textarea{height:6.75em;padding:.75em}.swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:inherit;color:inherit;font-size:1.125em}.swal2-checkbox,.swal2-radio{align-items:center;justify-content:center;background:#fff;color:inherit}.swal2-checkbox label,.swal2-radio label{margin:0 .6em;font-size:1.125em}.swal2-checkbox input,.swal2-radio input{margin:0 .4em}.swal2-validation-message{display:none;align-items:center;justify-content:center;padding:.625em;overflow:hidden;background:#f0f0f0;color:#666;font-size:1em;font-weight:300}.swal2-validation-message::before{content:"!";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}.swal2-icon{position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:1.25em auto 1.875em;border:.25em solid transparent;border-radius:50%;font-family:inherit;line-height:5em;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}.swal2-icon.swal2-error{border-color:#f27474;color:#f27474}.swal2-icon.swal2-error .swal2-x-mark{position:relative;flex-grow:1}.swal2-icon.swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}.swal2-icon.swal2-error.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-error.swal2-icon-show .swal2-x-mark{-webkit-animation:swal2-animate-error-x-mark .5s;animation:swal2-animate-error-x-mark .5s}.swal2-icon.swal2-warning{border-color:#facea8;color:#f8bb86}.swal2-icon.swal2-info{border-color:#9de0f6;color:#3fc3ee}.swal2-icon.swal2-question{border-color:#c9dae1;color:#87adbd}.swal2-icon.swal2-success{border-color:#a5dc86;color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;transform:rotate(45deg);border-radius:50%}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}.swal2-icon.swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-.25em;left:-.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}.swal2-icon.swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}.swal2-icon.swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}.swal2-icon.swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-animate-success-line-tip .75s;animation:swal2-animate-success-line-tip .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-animate-success-line-long .75s;animation:swal2-animate-success-line-long .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-circular-line-right{-webkit-animation:swal2-rotate-success-circular-line 4.25s ease-in;animation:swal2-rotate-success-circular-line 4.25s ease-in}.swal2-progress-steps{align-items:center;margin:0 0 1.25em;padding:0;background:inherit;font-weight:600}.swal2-progress-steps li{display:inline-block;position:relative}.swal2-progress-steps .swal2-progress-step{z-index:20;width:2em;height:2em;border-radius:2em;background:#3085d6;color:#fff;line-height:2em;text-align:center}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#3085d6}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:#add8e6;color:#fff}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:#add8e6}.swal2-progress-steps .swal2-progress-step-line{z-index:10;width:2.5em;height:.4em;margin:0 -1px;background:#3085d6}[class^=swal2]{-webkit-tap-highlight-color:transparent}.swal2-show{-webkit-animation:swal2-show .3s;animation:swal2-show .3s}.swal2-hide{-webkit-animation:swal2-hide .15s forwards;animation:swal2-hide .15s forwards}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{right:auto;left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}@supports (-ms-accelerator:true){.swal2-range input{width:100%!important}.swal2-range output{display:none}}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.swal2-range input{width:100%!important}.swal2-range output{display:none}}@-moz-document url-prefix(){.swal2-close:focus{outline:2px solid rgba(50,100,150,.4)}}@-webkit-keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@-webkit-keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@-webkit-keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@-webkit-keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@-webkit-keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@-webkit-keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@-webkit-keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@-webkit-keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@-webkit-keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@-webkit-keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@-webkit-keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@-webkit-keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto!important}body.swal2-no-backdrop .swal2-container{top:auto;right:auto;bottom:auto;left:auto;max-width:calc(100% - .625em * 2);background-color:transparent!important}body.swal2-no-backdrop .swal2-container>.swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}body.swal2-no-backdrop .swal2-container.swal2-top{top:0;left:50%;transform:translateX(-50%)}body.swal2-no-backdrop .swal2-container.swal2-top-left,body.swal2-no-backdrop .swal2-container.swal2-top-start{top:0;left:0}body.swal2-no-backdrop .swal2-container.swal2-top-end,body.swal2-no-backdrop .swal2-container.swal2-top-right{top:0;right:0}body.swal2-no-backdrop .swal2-container.swal2-center{top:50%;left:50%;transform:translate(-50%,-50%)}body.swal2-no-backdrop .swal2-container.swal2-center-left,body.swal2-no-backdrop .swal2-container.swal2-center-start{top:50%;left:0;transform:translateY(-50%)}body.swal2-no-backdrop .swal2-container.swal2-center-end,body.swal2-no-backdrop .swal2-container.swal2-center-right{top:50%;right:0;transform:translateY(-50%)}body.swal2-no-backdrop .swal2-container.swal2-bottom{bottom:0;left:50%;transform:translateX(-50%)}body.swal2-no-backdrop .swal2-container.swal2-bottom-left,body.swal2-no-backdrop .swal2-container.swal2-bottom-start{bottom:0;left:0}body.swal2-no-backdrop .swal2-container.swal2-bottom-end,body.swal2-no-backdrop .swal2-container.swal2-bottom-right{right:0;bottom:0}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll!important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:static!important}}body.swal2-toast-shown .swal2-container{background-color:transparent}body.swal2-toast-shown .swal2-container.swal2-top{top:0;right:auto;bottom:auto;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{top:0;right:0;bottom:auto;left:auto}body.swal2-toast-shown .swal2-container.swal2-top-left,body.swal2-toast-shown .swal2-container.swal2-top-start{top:0;right:auto;bottom:auto;left:0}body.swal2-toast-shown .swal2-container.swal2-center-left,body.swal2-toast-shown .swal2-container.swal2-center-start{top:50%;right:auto;bottom:auto;left:0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{top:50%;right:auto;bottom:auto;left:50%;transform:translate(-50%,-50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{top:50%;right:0;bottom:auto;left:auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-left,body.swal2-toast-shown .swal2-container.swal2-bottom-start{top:auto;right:auto;bottom:0;left:0}body.swal2-toast-shown .swal2-container.swal2-bottom{top:auto;right:auto;bottom:0;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{top:auto;right:0;bottom:0;left:auto}body.swal2-toast-column .swal2-toast{flex-direction:column;align-items:stretch}body.swal2-toast-column .swal2-toast .swal2-actions{flex:1;align-self:stretch;height:2.2em;margin-top:.3125em}body.swal2-toast-column .swal2-toast .swal2-loading{justify-content:center}body.swal2-toast-column .swal2-toast .swal2-input{height:2em;margin:.3125em auto;font-size:1em}body.swal2-toast-column .swal2-toast .swal2-validation-message{font-size:1em}'
          );

        /***/
      },

    /***/ '../node_modules/timers-browserify/main.js':
      /*!*************************************************!*\
  !*** ../node_modules/timers-browserify/main.js ***!
  \*************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function (global) {
          var scope =
            (typeof global !== 'undefined' && global) ||
            (typeof self !== 'undefined' && self) ||
            window;
          var apply = Function.prototype.apply;

          // DOM APIs, for completeness

          exports.setTimeout = function () {
            return new Timeout(
              apply.call(setTimeout, scope, arguments),
              clearTimeout
            );
          };
          exports.setInterval = function () {
            return new Timeout(
              apply.call(setInterval, scope, arguments),
              clearInterval
            );
          };
          exports.clearTimeout = exports.clearInterval = function (timeout) {
            if (timeout) {
              timeout.close();
            }
          };

          function Timeout(id, clearFn) {
            this._id = id;
            this._clearFn = clearFn;
          }
          Timeout.prototype.unref = Timeout.prototype.ref = function () {};
          Timeout.prototype.close = function () {
            this._clearFn.call(scope, this._id);
          };

          // Does not start the time, just sets up the members needed.
          exports.enroll = function (item, msecs) {
            clearTimeout(item._idleTimeoutId);
            item._idleTimeout = msecs;
          };

          exports.unenroll = function (item) {
            clearTimeout(item._idleTimeoutId);
            item._idleTimeout = -1;
          };

          exports._unrefActive = exports.active = function (item) {
            clearTimeout(item._idleTimeoutId);

            var msecs = item._idleTimeout;
            if (msecs >= 0) {
              item._idleTimeoutId = setTimeout(function onTimeout() {
                if (item._onTimeout) item._onTimeout();
              }, msecs);
            }
          };

          // setimmediate attaches itself to the global object
          __webpack_require__(
            /*! setimmediate */ '../node_modules/setimmediate/setImmediate.js'
          );
          // On some exotic environments, it's not clear which object `setimmediate` was
          // able to install onto.  Search each possibility in the same order as the
          // `setimmediate` library.
          exports.setImmediate =
            (typeof self !== 'undefined' && self.setImmediate) ||
            (typeof global !== 'undefined' && global.setImmediate) ||
            (this && this.setImmediate);
          exports.clearImmediate =
            (typeof self !== 'undefined' && self.clearImmediate) ||
            (typeof global !== 'undefined' && global.clearImmediate) ||
            (this && this.clearImmediate);

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../webpack/buildin/global.js */ '../node_modules/webpack/buildin/global.js'
          )
        ));

        /***/
      },

    /***/ '../node_modules/util-deprecate/browser.js':
      /*!*************************************************!*\
  !*** ../node_modules/util-deprecate/browser.js ***!
  \*************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function (global) {
          /**
           * Module exports.
           */

          module.exports = deprecate;

          /**
           * Mark that a method should not be used.
           * Returns a modified function which warns once by default.
           *
           * If `localStorage.noDeprecation = true` is set, then it is a no-op.
           *
           * If `localStorage.throwDeprecation = true` is set, then deprecated functions
           * will throw an Error when invoked.
           *
           * If `localStorage.traceDeprecation = true` is set, then deprecated functions
           * will invoke `console.trace()` instead of `console.error()`.
           *
           * @param {Function} fn - the function to deprecate
           * @param {String} msg - the string to print to the console when `fn` is invoked
           * @returns {Function} a new "deprecated" version of `fn`
           * @api public
           */

          function deprecate(fn, msg) {
            if (config('noDeprecation')) {
              return fn;
            }

            var warned = false;
            function deprecated() {
              if (!warned) {
                if (config('throwDeprecation')) {
                  throw new Error(msg);
                } else if (config('traceDeprecation')) {
                  console.trace(msg);
                } else {
                  console.warn(msg);
                }
                warned = true;
              }
              return fn.apply(this, arguments);
            }

            return deprecated;
          }

          /**
           * Checks `localStorage` for boolean values for the given `name`.
           *
           * @param {String} name
           * @returns {Boolean}
           * @api private
           */

          function config(name) {
            // accessing global.localStorage can trigger a DOMException in sandboxed iframes
            try {
              if (!global.localStorage) return false;
            } catch (_) {
              return false;
            }
            var val = global.localStorage[name];
            if (null == val) return false;
            return String(val).toLowerCase() === 'true';
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../webpack/buildin/global.js */ '../node_modules/webpack/buildin/global.js'
          )
        ));

        /***/
      },

    /***/ '../node_modules/vm-browserify/index.js':
      /*!**********************************************!*\
  !*** ../node_modules/vm-browserify/index.js ***!
  \**********************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        var indexOf = function (xs, item) {
          if (xs.indexOf) return xs.indexOf(item);
          else
            for (var i = 0; i < xs.length; i++) {
              if (xs[i] === item) return i;
            }
          return -1;
        };
        var Object_keys = function (obj) {
          if (Object.keys) return Object.keys(obj);
          else {
            var res = [];
            for (var key in obj) res.push(key);
            return res;
          }
        };

        var forEach = function (xs, fn) {
          if (xs.forEach) return xs.forEach(fn);
          else
            for (var i = 0; i < xs.length; i++) {
              fn(xs[i], i, xs);
            }
        };

        var defineProp = (function () {
          try {
            Object.defineProperty({}, '_', {});
            return function (obj, name, value) {
              Object.defineProperty(obj, name, {
                writable: true,
                enumerable: false,
                configurable: true,
                value: value,
              });
            };
          } catch (e) {
            return function (obj, name, value) {
              obj[name] = value;
            };
          }
        })();

        var globals = [
          'Array',
          'Boolean',
          'Date',
          'Error',
          'EvalError',
          'Function',
          'Infinity',
          'JSON',
          'Math',
          'NaN',
          'Number',
          'Object',
          'RangeError',
          'ReferenceError',
          'RegExp',
          'String',
          'SyntaxError',
          'TypeError',
          'URIError',
          'decodeURI',
          'decodeURIComponent',
          'encodeURI',
          'encodeURIComponent',
          'escape',
          'eval',
          'isFinite',
          'isNaN',
          'parseFloat',
          'parseInt',
          'undefined',
          'unescape',
        ];

        function Context() {}
        Context.prototype = {};

        var Script = (exports.Script = function NodeScript(code) {
          if (!(this instanceof Script)) return new Script(code);
          this.code = code;
        });

        Script.prototype.runInContext = function (context) {
          if (!(context instanceof Context)) {
            throw new TypeError("needs a 'context' argument.");
          }

          var iframe = document.createElement('iframe');
          if (!iframe.style) iframe.style = {};
          iframe.style.display = 'none';

          document.body.appendChild(iframe);

          var win = iframe.contentWindow;
          var wEval = win.eval,
            wExecScript = win.execScript;

          if (!wEval && wExecScript) {
            // win.eval() magically appears when this is called in IE:
            wExecScript.call(win, 'null');
            wEval = win.eval;
          }

          forEach(Object_keys(context), function (key) {
            win[key] = context[key];
          });
          forEach(globals, function (key) {
            if (context[key]) {
              win[key] = context[key];
            }
          });

          var winKeys = Object_keys(win);

          var res = wEval.call(win, this.code);

          forEach(Object_keys(win), function (key) {
            // Avoid copying circular objects like `top` and `window` by only
            // updating existing context properties or new properties in the `win`
            // that was only introduced after the eval.
            if (key in context || indexOf(winKeys, key) === -1) {
              context[key] = win[key];
            }
          });

          forEach(globals, function (key) {
            if (!(key in context)) {
              defineProp(context, key, win[key]);
            }
          });

          document.body.removeChild(iframe);

          return res;
        };

        Script.prototype.runInThisContext = function () {
          return eval(this.code); // maybe...
        };

        Script.prototype.runInNewContext = function (context) {
          var ctx = Script.createContext(context);
          var res = this.runInContext(ctx);

          if (context) {
            forEach(Object_keys(ctx), function (key) {
              context[key] = ctx[key];
            });
          }

          return res;
        };

        forEach(Object_keys(Script.prototype), function (name) {
          exports[name] = Script[name] = function (code) {
            var s = Script(code);
            return s[name].apply(s, [].slice.call(arguments, 1));
          };
        });

        exports.isContext = function (context) {
          return context instanceof Context;
        };

        exports.createScript = function (code) {
          return exports.Script(code);
        };

        exports.createContext = Script.createContext = function (context) {
          var copy = new Context();
          if (typeof context === 'object') {
            forEach(Object_keys(context), function (key) {
              copy[key] = context[key];
            });
          }
          return copy;
        };

        /***/
      },

    /***/ '../node_modules/webpack/buildin/global.js':
      /*!*************************************************!*\
  !*** ../node_modules/webpack/buildin/global.js ***!
  \*************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        var g;

        // This works in non-strict mode
        g = (function () {
          return this;
        })();

        try {
          // This works if eval is allowed (see CSP)
          g = g || new Function('return this')();
        } catch (e) {
          // This works if the window reference is available
          if (typeof window === 'object') g = window;
        }

        // g can still be undefined, but nothing to do about it...
        // We return undefined, instead of nothing here, so it's
        // easier to handle this case. if(!global) { ...}

        module.exports = g;

        /***/
      },

    /***/ '../node_modules/webpack/buildin/module.js':
      /*!*************************************************!*\
  !*** ../node_modules/webpack/buildin/module.js ***!
  \*************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        module.exports = function (module) {
          if (!module.webpackPolyfill) {
            module.deprecate = function () {};
            module.paths = [];
            // module.parent = undefined by default
            if (!module.children) module.children = [];
            Object.defineProperty(module, 'loaded', {
              enumerable: true,
              get: function () {
                return module.l;
              },
            });
            Object.defineProperty(module, 'id', {
              enumerable: true,
              get: function () {
                return module.i;
              },
            });
            module.webpackPolyfill = 1;
          }
          return module;
        };

        /***/
      },

    /***/ './js/main-authorized.js':
      /*!*******************************!*\
  !*** ./js/main-authorized.js ***!
  \*******************************/
      /*! no exports provided */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var _modules_uploader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ./modules/uploader.js */ './js/modules/uploader.js'
        );
        /* harmony import */ var _modules_editor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ./modules/editor.js */ './js/modules/editor.js'
        );
        /* harmony import */ var _modules_boost_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ./modules/boost.js */ './js/modules/boost.js'
        );
        /* harmony import */ var _modules_superlike_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ./modules/superlike.js */ './js/modules/superlike.js'
        );
        /* harmony import */ var _modules_photo_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ./modules/photo.js */ './js/modules/photo.js'
        );
        /* harmony import */ var _modules_sponsorPremium_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ./modules/sponsorPremium.js */ './js/modules/sponsorPremium.js'
        );
        /* harmony import */ var _modules_search_profiles_form_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ./modules/search-profiles-form.js */ './js/modules/search-profiles-form.js'
        );
        /* harmony import */ var _modules_buyPremiumForm_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ./modules/buyPremiumForm.js */ './js/modules/buyPremiumForm.js'
        );
        /* harmony import */ var _modules_chatList_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ./modules/chatList.js */ './js/modules/chatList.js'
        );
        /* harmony import */ var _modules_ad_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ./modules/ad.js */ './js/modules/ad.js'
        );
        /* harmony import */ var _modules_gallery_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ./modules/gallery.js */ './js/modules/gallery.js'
        );
        /* harmony import */ var _modules_chat_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ./modules/chat.js */ './js/modules/chat.js'
        );
        /* harmony import */ var _modules_enlargePhoto_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ./modules/enlargePhoto.js */ './js/modules/enlargePhoto.js'
        );
        /* harmony import */ var _modules_profiles_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
          /*! ./modules/profiles.js */ './js/modules/profiles.js'
        );
        /* harmony import */ var _modules_messagesLazyLoading_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
          /*! ./modules/messagesLazyLoading.js */ './js/modules/messagesLazyLoading.js'
        );
        /* harmony import */ var _modules_like_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
          /*! ./modules/like.js */ './js/modules/like.js'
        );
        /* harmony import */ var _modules_profileEdit_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
          /*! ./modules/profileEdit.js */ './js/modules/profileEdit.js'
        );
        /* harmony import */ var _modules_usersLazyLoading_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
          /*! ./modules/usersLazyLoading.js */ './js/modules/usersLazyLoading.js'
        );

        window['PhotoUploader'] =
          _modules_uploader_js__WEBPACK_IMPORTED_MODULE_0__['default'];
        window['PhotoEditor'] =
          _modules_editor_js__WEBPACK_IMPORTED_MODULE_1__['default'];
        window['Boost'] =
          _modules_boost_js__WEBPACK_IMPORTED_MODULE_2__['default'];
        window['Superlike'] =
          _modules_superlike_js__WEBPACK_IMPORTED_MODULE_3__['default'];
        window['Photo'] =
          _modules_photo_js__WEBPACK_IMPORTED_MODULE_4__['default'];
        window['SearchProfilesForm'] =
          _modules_search_profiles_form_js__WEBPACK_IMPORTED_MODULE_6__[
            'default'
          ];
        window['BuyPremiumForm'] =
          _modules_buyPremiumForm_js__WEBPACK_IMPORTED_MODULE_7__['default'];
        window['ChatList'] =
          _modules_chatList_js__WEBPACK_IMPORTED_MODULE_8__['default'];
        window['Ad'] = _modules_ad_js__WEBPACK_IMPORTED_MODULE_9__['default'];
        window['Gallery'] =
          _modules_gallery_js__WEBPACK_IMPORTED_MODULE_10__['default'];
        window['Chat'] =
          _modules_chat_js__WEBPACK_IMPORTED_MODULE_11__['default'];
        window['EnlargePhoto'] =
          _modules_enlargePhoto_js__WEBPACK_IMPORTED_MODULE_12__['default'];
        window['Profiles'] =
          _modules_profiles_js__WEBPACK_IMPORTED_MODULE_13__['default'];
        window['SponsorPremium'] =
          _modules_sponsorPremium_js__WEBPACK_IMPORTED_MODULE_5__['default'];
        window['MessagesLazyLoading'] =
          _modules_messagesLazyLoading_js__WEBPACK_IMPORTED_MODULE_14__[
            'default'
          ];
        window['Like'] =
          _modules_like_js__WEBPACK_IMPORTED_MODULE_15__['default'];
        window['ProfileEdit'] =
          _modules_profileEdit_js__WEBPACK_IMPORTED_MODULE_16__['default'];
        window['UsersLazyLoading'] =
          _modules_usersLazyLoading_js__WEBPACK_IMPORTED_MODULE_17__['default'];

        /***/
      },

    /***/ './js/modules/ad.js':
      /*!**************************!*\
  !*** ./js/modules/ad.js ***!
  \**************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return Ad;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/createClass */ '../node_modules/@babel/runtime/helpers/createClass.js'
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _prepareTemplates_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ./prepareTemplates.js */ './js/modules/prepareTemplates.js'
        );
        /* harmony import */ var _helper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ./helper.js */ './js/modules/helper.js'
        );

        var Ad = /*#__PURE__*/ (function () {
          function Ad(options) {
            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(
              this,
              Ad
            );

            // Bind context
            this._insertAds = this._insertAds.bind(this);
            this._removeAds = this._removeAds.bind(this); // Save config

            var selectors = (this.selectors = options.selectors);
            this.requests = options.requests;
            this.placementConfig = options.placementConfig;
            this.adType = this.displayOnLoad = options.displayOnLoad; // Prepare templates for usage

            this.templates = Object(
              _prepareTemplates_js__WEBPACK_IMPORTED_MODULE_2__['default']
            )(selectors.templateIds);

            this._cacheElements();

            this._setUpEventListeners();
          }

          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(
            Ad,
            [
              {
                key: '_cacheElements',
                value: function _cacheElements() {
                  this.$profilesContainer = $(this.selectors.profilesContainer);
                },
              },
              {
                key: '_setUpEventListeners',
                value: function _setUpEventListeners() {
                  var _this = this;

                  $(document)
                    .on('profiles:afterInsert', function (event, adType) {
                      _this._insertAds(adType);
                    })
                    .ready(function () {
                      _this._insertAds(_this.displayOnLoad);
                    });
                  /**
                   * 1. Get the current viewport range
                   * 2. If it has changed, remove ads and re-insert them
                   * 3. Save new viewport range
                   */

                  $(window).resize(function () {
                    var viewportRange = _helper_js__WEBPACK_IMPORTED_MODULE_3__[
                      'default'
                    ].getViewportRange();

                    if (viewportRange !== _this.viewportRange) {
                      _this._removeAds();

                      _this._insertAds(_this.adType);

                      _this.viewportRange = viewportRange;
                    }
                  });
                },
              },
              {
                key: '_removeAds',
                value: function _removeAds() {
                  this.$profilesContainer.find(this.selectors.ads).remove();
                },
                /**
                 * In order to insert ads, this function:
                 * 1. Gets the current viewport range according to bootstrap breakpoints
                 * 2. Checks after which profile it needs to insert ad for this viewport
                 * 3. Iterates over profiles and if the conditions match, insert the ad
                 *
                 * @param {String} adType - representing the ad. It can be either 'custom' or 'default'
                 * Depending on the provided value, the particular ad will be inserted in all the places
                 */
              },
              {
                key: '_insertAds',
                value: function _insertAds(adType) {
                  var viewport = (this.viewportRange = _helper_js__WEBPACK_IMPORTED_MODULE_3__[
                      'default'
                    ].getViewportRange()),
                    template = this.templates[adType];
                  var insertAfter = this.placementConfig[viewport];
                  this.adType = adType;
                  var $profiles = $(this.selectors.profiles);
                  var profielsAmount = $profiles.length;
                  $profiles.each(function (index, profile) {
                    ++index;

                    if (index % insertAfter === 0 && index !== profielsAmount) {
                      $(profile).after(template);
                    }
                  });
                },
              },
            ]
          );

          return Ad;
        })();

        /***/
      },

    /***/ './js/modules/animatedIcons.js':
      /*!*************************************!*\
  !*** ./js/modules/animatedIcons.js ***!
  \*************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return IconAnimation;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/createClass */ '../node_modules/@babel/runtime/helpers/createClass.js'
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__
        );

        var IconAnimation = /*#__PURE__*/ (function () {
          function IconAnimation(options) {
            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(
              this,
              IconAnimation
            );

            // Save meta data
            this.selectors = options.selectors;
            this.ids = options.ids; // Bind context

            this.prepareAnimation = this.prepareAnimation.bind(this);
            this._prepareAnimation = this._prepareAnimation.bind(this);
            this.startAnimation = this.startAnimation.bind(this);

            this._setUpEventListeners();
          }

          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(
            IconAnimation,
            [
              {
                key: '_prepareAnimation',
                value: function _prepareAnimation(modal) {
                  // Cache
                  var selectors = this.selectors,
                    ids = this.ids,
                    iconElements = selectors.iconElements; // Get icon copy

                  var icon = document
                    .getElementById(ids.icon)
                    .content.cloneNode(true); // Prepare empty container for icon elements

                  this.iconElements = {}; // Save icon elements

                  for (var element in iconElements) {
                    var elements = icon.querySelectorAll(iconElements[element]); // Save jQuery collection of each element(s)

                    this.iconElements['$'.concat(element)] = $(elements);
                  } // Insert bonus icon to the modal

                  modal.querySelector(selectors.insertContainer).prepend(icon);
                },
              },
            ]
          );

          return IconAnimation;
        })();

        /***/
      },

    /***/ './js/modules/bonus.js':
      /*!*****************************!*\
  !*** ./js/modules/bonus.js ***!
  \*****************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return Bonus;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/createClass */ '../node_modules/@babel/runtime/helpers/createClass.js'
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime/helpers/assertThisInitialized */ '../node_modules/@babel/runtime/helpers/assertThisInitialized.js'
        );
        /* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime/helpers/inherits */ '../node_modules/@babel/runtime/helpers/inherits.js'
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @babel/runtime/helpers/possibleConstructorReturn */ '../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js'
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! @babel/runtime/helpers/getPrototypeOf */ '../node_modules/@babel/runtime/helpers/getPrototypeOf.js'
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__
        );
        /* harmony import */ var _requests_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ./requests.js */ './js/modules/requests.js'
        );
        /* harmony import */ var _getUrlParams_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ./getUrlParams.js */ './js/modules/getUrlParams.js'
        );
        /* harmony import */ var _removeSearchParams_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ./removeSearchParams.js */ './js/modules/removeSearchParams.js'
        );

        function _createSuper(Derived) {
          var hasNativeReflectConstruct = _isNativeReflectConstruct();
          return function _createSuperInternal() {
            var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                Derived
              ),
              result;
            if (hasNativeReflectConstruct) {
              var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                this
              ).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
            } else {
              result = Super.apply(this, arguments);
            }
            return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(
              this,
              result
            );
          };
        }

        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct)
            return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;
          try {
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            );
            return true;
          } catch (e) {
            return false;
          }
        }

        var Bonus = /*#__PURE__*/ (function (_ServerRequest) {
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(
            Bonus,
            _ServerRequest
          );

          var _super = _createSuper(Bonus);

          function Bonus(options) {
            var _this;

            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(
              this,
              Bonus
            );

            _this = _super.call(this, options);
            _this.classes = options.classes;

            if (_this.popups && _this.popups.use) {
              _this.popups.use.requestName = 'use';
            } // Bind context

            _this._cacheElements = _this._cacheElements.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(
                _this
              )
            );
            _this._setUpEventListeners = _this._setUpEventListeners.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(
                _this
              )
            );
            _this._useBonus = _this._useBonus.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(
                _this
              )
            );
            _this._redirectToUseBonus = _this._redirectToUseBonus.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(
                _this
              )
            );
            _this.isUsedOnThisPage = options.isUsedOnThisPage;
            _this.isSelectUserBeforeUse = options.isSelectUserBeforeUse;
            return _this;
          }

          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(
            Bonus,
            [
              {
                key: '_cacheElements',
                value: function _cacheElements() {
                  var selectors = this.selectors; // Save bonus element

                  this.$bonus = $(selectors.bonus); // Save the bonus' data-* attributes

                  var dataAttributes = this.$bonus.data();

                  for (var attribute in dataAttributes) {
                    this[attribute] = dataAttributes[attribute];
                  }

                  if (this.isSelectUserBeforeUse) {
                    var userList = selectors.userList;
                    this.$userListModal = $(userList.modal);
                  }
                },
              },
              {
                key: '_setUpEventListeners',
                value: function _setUpEventListeners() {
                  var _this2 = this;

                  var currentBonusType = null;
                  $(window).on('load', function () {
                    var bonusType = Object(
                        _getUrlParams_js__WEBPACK_IMPORTED_MODULE_7__['default']
                      )('bonus'),
                      identifier = Object(
                        _getUrlParams_js__WEBPACK_IMPORTED_MODULE_7__['default']
                      )('identifier'),
                      permissionIdentifier = localStorage.getItem(bonusType);
                    if (
                      !bonusType ||
                      !permissionIdentifier ||
                      _this2.type !== bonusType
                    )
                      return;
                    localStorage.removeItem(bonusType);
                    if (identifier !== permissionIdentifier) return;
                    setTimeout(_this2._useBonus, 100, bonusType);
                  });
                  /**
                   * When the bonus is clicked:
                   * 1. Check if there are any bonuses available
                   * if not, propose buying some
                   * 2. If there are bonuses available, delegate starting bonuses usage to their
                   * specific classes
                   */

                  this.$bonus.click(function (event) {
                    if (_this2.amount === 0) {
                      // Fire alert
                      _this2
                        .fireBuyingAlert(_this2.popups.buy)
                        .then(function (result) {
                          if (result.isConfirmed) {
                            // Redirect to buying page
                            window.location.href = _this2.redirect;
                          }
                        });
                    } else if (_this2.isSelectUserBeforeUse) {
                      // Save current bonus type
                      currentBonusType = _this2.type;
                      $(document).trigger('bonus:selectUserBeforeUsage');
                    } else {
                      $(document).trigger('bonus:startUsage', {
                        type: _this2.$bonus.data('type'),
                      });
                    }
                  });
                  $(document).on('bonus:selectUserBeforeUsage', function (
                    event
                  ) {
                    if (_this2.type !== currentBonusType) return; // Show userlist modal

                    _this2.$userListModal.modal('show');
                  });
                  if (!this.$userListModal) return;
                  /**
                   * Handling user selection
                   * 1. Get the clicked user
                   * 2. Get the clicked's user Id and show error if there is no id
                   * 3. Add id to search params of the endpoint
                   */

                  this.$userListModal
                    .click(function (event) {
                      if (_this2.type !== currentBonusType) return;
                      var $user = $(event.target).closest(
                        _this2.selectors.userList.user
                      );
                      if ($user.length === 0) return;
                      var userId = $user.data('user-id'),
                        userName = $user.data('user-name');

                      if (!userId) {
                        _this2.showRequestResult({
                          title: 'Oops!',
                          text: 'Something went wrong :(',
                          icon: 'error',
                        });

                        return;
                      }

                      if (currentBonusType !== 'premium') {
                        var endpoint = _this2.requests.use.endpoint; // Remove previously saved params to avoid errors

                        Object(
                          _removeSearchParams_js__WEBPACK_IMPORTED_MODULE_8__[
                            'default'
                          ]
                        )(endpoint);
                        endpoint.searchParams.set('userId', userId);
                      } // Save the current user id to perform transactions

                      localStorage.setItem('userId', userId);

                      if (
                        _this2.type === 'photo' ||
                        _this2.type === 'premium'
                      ) {
                        _this2.$userListModal.modal('hide');
                      }

                      $(document).trigger('bonus:startUsage', {
                        type: _this2.type,
                        userName: userName,
                      });
                    })
                    .on('hide.bs.modal', function () {
                      currentBonusType = null;
                    });
                },
                /**
                 * Update amount of bonuses in the each specific class
                 * and on markup data-attribute
                 */
              },
              {
                key: '_decreaseBonusAmountAvailable',
                value: function _decreaseBonusAmountAvailable() {
                  this.$bonus.attr('data-amount', --this.amount);
                },
                /**
                 * Update visual parts of the bonus amount:
                 * 1. The text showcasing how many bonuses the user have
                 * 2. The text (red if no bonuses available, green if there are at least one bonus)
                 */
              },
              {
                key: '_updateAmountOnMarkup',
                value: function _updateAmountOnMarkup() {
                  // Update visual indicator of amount
                  this.$amount.text(this.amount);

                  if (this.amount === 0) {
                    // Change the color of the amount indicator
                    this.$amount
                      .removeClass('bonus-notzero-amount')
                      .addClass('bonus-zero-amount');
                  }
                },
                /**
                 *
                 * @param {Object} requestResult - the resulting information for bonus usage
                 * Contains unique identifier to handle bonus usage on another page
                 */
              },
              {
                key: '_redirectToUseBonus',
                value: function _redirectToUseBonus(requestResult) {
                  var identifier = requestResult.identifier,
                    redirect = requestResult.redirect;
                  localStorage.setItem(this.type, identifier);
                  localStorage.removeItem('userId'); // Redirect to chat to start using superlike there

                  window.location.assign(
                    ''
                      .concat(redirect, '?bonus=')
                      .concat(this.type, '&identifier=')
                      .concat(identifier)
                  );
                },
              },
            ]
          );

          return Bonus;
        })(_requests_js__WEBPACK_IMPORTED_MODULE_6__['default']);

        /***/
      },

    /***/ './js/modules/boost.js':
      /*!*****************************!*\
  !*** ./js/modules/boost.js ***!
  \*****************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return Boost;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/createClass */ '../node_modules/@babel/runtime/helpers/createClass.js'
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime/helpers/assertThisInitialized */ '../node_modules/@babel/runtime/helpers/assertThisInitialized.js'
        );
        /* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime/helpers/get */ '../node_modules/@babel/runtime/helpers/get.js'
        );
        /* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_3__
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @babel/runtime/helpers/inherits */ '../node_modules/@babel/runtime/helpers/inherits.js'
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! @babel/runtime/helpers/possibleConstructorReturn */ '../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js'
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! @babel/runtime/helpers/getPrototypeOf */ '../node_modules/@babel/runtime/helpers/getPrototypeOf.js'
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__
        );
        /* harmony import */ var _bonus_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ./bonus.js */ './js/modules/bonus.js'
        );

        function _createSuper(Derived) {
          var hasNativeReflectConstruct = _isNativeReflectConstruct();
          return function _createSuperInternal() {
            var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(
                Derived
              ),
              result;
            if (hasNativeReflectConstruct) {
              var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(
                this
              ).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
            } else {
              result = Super.apply(this, arguments);
            }
            return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default()(
              this,
              result
            );
          };
        }

        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct)
            return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;
          try {
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            );
            return true;
          } catch (e) {
            return false;
          }
        }

        var Boost = /*#__PURE__*/ (function (_Bonus) {
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(
            Boost,
            _Bonus
          );

          var _super = _createSuper(Boost);

          function Boost(options) {
            var _this;

            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(
              this,
              Boost
            );

            _this = _super.call(this, options);
            _this.type = 'boost'; // Bind context

            _this._displayTime = _this._displayTime.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(
                _this
              )
            ); // Save initial state of the boost

            _this.activated = false;
            _this.finished = false;

            _this._cacheElements();

            _this._setUpEventListeners();

            return _this;
          }

          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(
            Boost,
            [
              {
                key: '_cacheElements',
                value: function _cacheElements() {
                  _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_3___default()(
                    _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(
                      Boost.prototype
                    ),
                    '_cacheElements',
                    this
                  ).call(this);

                  var selectors = this.selectors; // Timer and elements to display time

                  this.$timer = $(selectors.timer.element);
                  this.$hours = this.$timer.find(selectors.timer.hours);
                  this.$minutes = this.$timer.find(selectors.timer.minutes);
                  this.$seconds = this.$timer.find(selectors.timer.seconds); // Hide timer after caching

                  this.$timer.fadeOut(0);

                  if (selectors.amount) {
                    this.$amount = this.$bonus.find(selectors.amount);
                  }
                },
              },
              {
                key: '_setUpEventListeners',
                value: function _setUpEventListeners() {
                  var _this2 = this;

                  _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_3___default()(
                    _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(
                      Boost.prototype
                    ),
                    '_setUpEventListeners',
                    this
                  ).call(this);
                  /**
                   * If there are at least one bonus available, handle its usage
                   * 1. If the boost is activated, don't do anything
                   * 2. If the boost is not activated:
                   *  1) Choose between 'use' and 'expire' popup.
                   *     - Show use popup when the user activates boost for the first time
                   *     - Show expire popup when the popup was expired
                   *       and the user is being asked about reusing it
                   *  2) Get the approvement and the timestamp from the server
                   *     - Check timestamp for validity. If it is invalid, throw error
                   *  3) If the usage is approved:
                   *     - Start using the boost
                   *  4) If the usage is not approved:
                   *     - Hide timer
                   *     - Deactivate boost
                   */

                  $(document).on('bonus:startUsage', function (event, _ref) {
                    var type = _ref.type;
                    if (type !== 'boost') return;
                    if (_this2.activated && !_this2.finished) return; // Choose config for popup

                    if (!_this2.activated && !_this2.finished) {
                      var popup = _this2.popups.use;
                    } else if (_this2.activated && _this2.finished) {
                      var popup = _this2.popups.expire;
                    }

                    _this2
                      .fireAlertWithRequest(popup)
                      .then(function (result) {
                        if (!result) return;
                        var success = result.success,
                          title = result.title,
                          text = result.text,
                          timestamp = result.timestamp; // Handle the case with negative timestamp

                        var distance = timestamp - new Date().getTime();
                        if (distance <= 0)
                          throw new RangeError('Negative time!'); // Set icon and show popup with it

                        var icon = success ? 'success' : 'error';

                        _this2.showRequestResult({
                          title: title,
                          text: text,
                          icon: icon,
                        });

                        if (success) {
                          _this2.countDownTime = timestamp;

                          _this2._useBonus();
                        } else {
                          if (_this2.activated && _this2.finished)
                            _this2.$timer.fadeOut(400);
                          _this2.activated = false;
                          _this2.finished = false;
                        }
                      })
                      ['catch'](function (error) {
                        _this2.showRequestResult({
                          title: error.name,
                          text: error.message,
                          icon: 'error',
                        });
                      });
                  });
                },
              },
              {
                key: '_useBonus',
                value: function _useBonus() {
                  // Change boost state
                  this.activated = true;
                  this.finished = false; // Change the amount of boosts available

                  this._decreaseBonusAmountAvailable(); // Update amount if the selector is presented

                  if (this.$amount) {
                    this._updateAmountOnMarkup();
                  } // Start timer

                  this._startTimer();
                },
              },
              {
                key: '_startTimer',
                value: function _startTimer() {
                  var _this3 = this;

                  var intervalId = setInterval(function () {
                    // Get today's date and time
                    var now = new Date().getTime(); // Find the distance between now and the count down date

                    var distance = _this3.countDownTime - now; // If the count down is finished

                    if (distance <= 1000) {
                      _this3._displayTime(0, 0, 0);

                      clearInterval(intervalId); // Change the state of the bonus

                      _this3.activated = true;
                      _this3.finished = true; // Clear timestamp

                      _this3.timestamp = null; // Ask user to use more

                      _this3.$bonus.click();
                    } // Time calculations for hours, minutes and seconds

                    var hours = Math.floor(
                      (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)
                    );
                    var minutes = Math.floor(
                      (distance % (1000 * 60 * 60)) / (1000 * 60)
                    );
                    var seconds = Math.floor((distance % (1000 * 60)) / 1000);

                    _this3._displayTime(hours, minutes, seconds);

                    _this3.$timer.fadeIn(400);
                  }, 1000);
                },
              },
              {
                key: '_displayTime',
                value: function _displayTime(hours, minutes, seconds) {
                  // Add zeros for better displaying
                  if (minutes < 10) {
                    minutes = '0' + String(minutes);
                  }

                  if (seconds < 10) {
                    seconds = '0' + String(seconds);
                  } // Display results

                  this.$hours.text(hours);
                  this.$minutes.text(minutes);
                  this.$seconds.text(seconds);
                },
              },
            ]
          );

          return Boost;
        })(_bonus_js__WEBPACK_IMPORTED_MODULE_7__['default']);

        /***/
      },

    /***/ './js/modules/buyPremiumForm.js':
      /*!**************************************!*\
  !*** ./js/modules/buyPremiumForm.js ***!
  \**************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return BuyPremiumForm;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/createClass */ '../node_modules/@babel/runtime/helpers/createClass.js'
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime/helpers/assertThisInitialized */ '../node_modules/@babel/runtime/helpers/assertThisInitialized.js'
        );
        /* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime/helpers/get */ '../node_modules/@babel/runtime/helpers/get.js'
        );
        /* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_3__
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @babel/runtime/helpers/inherits */ '../node_modules/@babel/runtime/helpers/inherits.js'
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! @babel/runtime/helpers/possibleConstructorReturn */ '../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js'
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! @babel/runtime/helpers/getPrototypeOf */ '../node_modules/@babel/runtime/helpers/getPrototypeOf.js'
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__
        );
        /* harmony import */ var _form_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ./form.js */ './js/modules/form.js'
        );
        /* harmony import */ var handlebars__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! handlebars */ '../node_modules/handlebars/dist/cjs/handlebars.js'
        );
        /* harmony import */ var handlebars__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/ __webpack_require__.n(
          handlebars__WEBPACK_IMPORTED_MODULE_8__
        );
        /* harmony import */ var _prepareTemplates_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ./prepareTemplates.js */ './js/modules/prepareTemplates.js'
        );

        function _createSuper(Derived) {
          var hasNativeReflectConstruct = _isNativeReflectConstruct();
          return function _createSuperInternal() {
            var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(
                Derived
              ),
              result;
            if (hasNativeReflectConstruct) {
              var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(
                this
              ).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
            } else {
              result = Super.apply(this, arguments);
            }
            return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default()(
              this,
              result
            );
          };
        }

        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct)
            return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;
          try {
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            );
            return true;
          } catch (e) {
            return false;
          }
        }

        var BuyPremiumForm = /*#__PURE__*/ (function (_Form) {
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(
            BuyPremiumForm,
            _Form
          );

          var _super = _createSuper(BuyPremiumForm);

          function BuyPremiumForm(options) {
            var _this;

            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(
              this,
              BuyPremiumForm
            );

            _this = _super.call(this, options); // Binding context

            _this._setOrderDetails = _this._setOrderDetails.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(
                _this
              )
            );
            /**
             * mode can be 'show' or 'hide'
             * When the mode is 'show':
             * 1. Hide price container
             * 2. Show spinner
             * When the mode is 'hide':
             * 1. Hide spinner
             * 2. Show price container
             */

            _this.$spinner.toggle = function (mode) {
              if (mode === 'show') {
                _this.$outerPriceContainer.fadeOut(100, function () {
                  _this.$spinner.fadeIn(100);
                });
              } else if (mode === 'hide') {
                _this.$spinner.fadeOut(100, function () {
                  _this.$outerPriceContainer.fadeIn(100);
                });
              }
            }; // Prepare message templates to render them in the future

            _this.templates = Object(
              _prepareTemplates_js__WEBPACK_IMPORTED_MODULE_9__['default']
            )(options.selectors.templateIds);
            return _this;
          }

          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(
            BuyPremiumForm,
            [
              {
                key: '_cacheElements',
                value: function _cacheElements() {
                  _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_3___default()(
                    _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(
                      BuyPremiumForm.prototype
                    ),
                    '_cacheElements',
                    this
                  ).call(this);

                  var selectors = this.selectors; // If discard element is provided

                  if (selectors.discard) {
                    this.$discard = $(selectors.discard);
                  }

                  if (selectors.showBonusesButton) {
                    this.$bonusesCollapse = $(selectors.showBonusesButton);
                    var bonusesCollapseButton = this.$bonusesCollapse[0];

                    this.$bonusesCollapse.toggleState = function () {
                      bonusesCollapseButton.dataset.expanded === 'false'
                        ? bonusesCollapseButton.setAttribute(
                            'data-expanded',
                            'true'
                          )
                        : bonusesCollapseButton.setAttribute(
                            'data-expanded',
                            'false'
                          );
                    };
                  } // Container to preview order details

                  this.$orderDetails = $(selectors.orderDetails); // Price containers
                  // Price container to show/hide when the price is being loaded from the server

                  this.$outerPriceContainer = $(selectors.priceContainer); // Initial price for card payment method

                  this.$cardPriceContainer = $(selectors['card-total-price']); // Discount price for card payment method

                  this.$cardDiscountContainer = $(
                    selectors['card-discount-price']
                  ); // Total price to pay without discount - displayed on the first step

                  this.$priceContainer = $(selectors['total-price']); // Total price to pay with the discount - displayed on the first step

                  this.$previousPrice = $(selectors['previous-price']); // Container that holds the previous price

                  this.$previousPriceContainer = this.$previousPrice
                    .closest('del')
                    .fadeOut(0); // spinner

                  this.$spinner = $(selectors.spinner).fadeOut(0); // Disable checkout button until price is being shown

                  this.$checkout = this.$form
                    .find(selectors.loading.submitButton)
                    .attr('disabled', true); // Discount

                  this.$discountType = $(selectors.discount.type);
                  this.$discountAmount = $(selectors.discount.amount);
                },
              },
              {
                key: '_setUpEventListeners',
                value: function _setUpEventListeners() {
                  var _this2 = this;

                  _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_3___default()(
                    _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(
                      BuyPremiumForm.prototype
                    ),
                    '_setUpEventListeners',
                    this
                  ).call(this);

                  if (this.$bonusesCollapse) {
                    this.$bonusesCollapse.click(function (event) {
                      return _this2.$bonusesCollapse.toggleState();
                    });
                  } // Adding and removing bonuses

                  this.$form
                    .find(this.selectors['bonus-inputs'])
                    .on('click', function (event) {
                      var $target = $(event.target); // Get the -/+ button to remove/add bonuses

                      var $buttonWrapper = $target.closest(
                        _this2.selectors['bonus-control']
                      );
                      if ($buttonWrapper.length === 0) return; // Figure out what operation to perform

                      var operation = $buttonWrapper.hasClass(
                        _this2.selectors['add-bonus-input-className']
                      )
                        ? 'add'
                        : 'remove'; // Find closest input group containing current button

                      var $input = $target
                        .closest(_this2.selectors['bonus-inputs'])
                        .find(_this2.selectors.inputs); // Current input value

                      var value = parseInt($input.val());

                      if (operation === 'add') {
                        $input.val(++value);
                      } else {
                        $input.val(--value < 0 ? 0 : value);
                      }

                      $input.trigger('input');
                    }); // Setting price

                  this.$inputs.on('input', function (event) {
                    _this2.collectFormInputs();

                    _this2._setOrderDetails();
                  });
                  $(document).on('premium:changeUser', function () {
                    // We cannot discard changes if the initial values wasn't preserved
                    if (!_this2.initialValuesSaved) return; // Set initial values for the inputs

                    _this2.$inputs.each(function (index, input) {
                      if (input.type === 'radio') {
                        input.checked = false;
                      } else {
                        input.value = input.getAttribute('data-initial-value');
                      }
                    }); // Set initial values and states for non-form elements

                    _this2.$discard.each(function (item, element) {
                      var $element = $(element); // Set initial state

                      if ($element.data('initial-state') === 'hidden') {
                        $element.fadeOut(0);
                      } else if (
                        $element.data('initial-state') === 'disabled'
                      ) {
                        $element.attr('disabled', true);
                      } // Set initial value

                      if ($element.data('initial-value') !== undefined) {
                        $element.text($element.data('initial-value'));
                      } // Hide bonuses if it is shown

                      if (
                        _this2.$bonusesCollapse[0].dataset.expanded === 'true'
                      ) {
                        _this2.$bonusesCollapse.click();
                      }
                    }); // Delete order details

                    _this2.$orderDetails.empty();
                  });
                },
                /**
                 * Get price for the selected bonuses and plan from the server
                 * 1. Set selected options as search parameters
                 * 2. Start making request
                 */
              },
              {
                key: 'getPrice',
                value: function getPrice(_ref) {
                  var headers = _ref.headers,
                    endpoint = _ref.endpoint,
                    method = _ref.method;

                  for (var name in this.formData) {
                    endpoint.searchParams.set(name, this.formData[name]);
                  }

                  return this.makeRequest({
                    headers: headers,
                    endpoint: endpoint,
                    method: method,
                  });
                },
                /**
                 * Set retrieved price for the currently selected plans and bonuses
                 * 1. Get the price from the server
                 *
                 */
              },
              {
                key: '_setOrderDetails',
                value: function _setOrderDetails() {
                  var _this3 = this;

                  var _this$requests$price = this.requests.price,
                    headers = _this$requests$price.headers,
                    endpoint = _this$requests$price.endpoint,
                    method = _this$requests$price.method; // Hide previous price and show spinner

                  this.$spinner.toggle('show'); // Make request to the server

                  this.getPrice({
                    headers: headers,
                    endpoint: endpoint,
                    method: method,
                  })
                    .then(function (response) {
                      _this3.$spinner.toggle('hide');

                      if (response.success) {
                        var initialCardPrice = response.initialCardPrice,
                          discountCardPrice = response.discountCardPrice,
                          hasPromo = response.hasPromo,
                          cardDiscount = response.cardDiscount,
                          totalPrice = response.totalPrice,
                          totalDiscountPrice = response.totalDiscountPrice,
                          order = response.order;
                        totalPrice > 0
                          ? _this3.$checkout.attr('disabled', false)
                          : _this3.$checkout.attr('disabled', true); // Handle promotion price

                        if (hasPromo) {
                          _this3.$priceContainer.text(totalDiscountPrice);

                          _this3.$previousPrice.text(totalPrice);

                          _this3.$previousPriceContainer.show();
                        } else {
                          _this3.$priceContainer.text(totalPrice);

                          _this3.$previousPrice.text(0);

                          _this3.$previousPriceContainer.hide();
                        } // Handle card payment price

                        _this3.$cardPriceContainer.text(initialCardPrice);

                        _this3.$cardDiscountContainer.text(discountCardPrice); // Set card discount amount

                        _this3.$discountType.text(cardDiscount.type);

                        _this3.$discountAmount.text(cardDiscount.amount);

                        _this3.$orderDetails.empty(); // Preview plan details

                        if ('plan' in order) {
                          // Compile template
                          var template = handlebars__WEBPACK_IMPORTED_MODULE_8___default.a.compile(
                            _this3.templates.plan
                          ); // Pass json data to the template

                          template = template(order.plan); // Show template

                          _this3.$orderDetails.append(template);
                        }

                        if ('bonuses' in order) {
                          // Compile template
                          var _template = handlebars__WEBPACK_IMPORTED_MODULE_8___default.a.compile(
                            _this3.templates.bonuses
                          ); // Pass json data to the template

                          _template = _template(order.bonuses); // Show template

                          _this3.$orderDetails.append(_template);
                        }
                      } else {
                        if (_this3.showFailPopup) {
                          // Unsuccessful Popup
                          _this3.showRequestResult({
                            title: response.title,
                            text: response.message,
                            icon: 'error',
                          });
                        }
                      }
                    })
                    ['catch'](function (error) {
                      if (_this3.showFailPopup) {
                        _this3.showRequestResult({
                          title: error.name,
                          text: error.message,
                          icon: 'error',
                        });
                      }
                    });
                },
              },
            ]
          );

          return BuyPremiumForm;
        })(_form_js__WEBPACK_IMPORTED_MODULE_7__['default']);

        /***/
      },

    /***/ './js/modules/chat.js':
      /*!****************************!*\
  !*** ./js/modules/chat.js ***!
  \****************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return Chat;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/createClass */ '../node_modules/@babel/runtime/helpers/createClass.js'
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var handlebars__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! handlebars */ '../node_modules/handlebars/dist/cjs/handlebars.js'
        );
        /* harmony import */ var handlebars__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          handlebars__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _httpError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ./httpError.js */ './js/modules/httpError.js'
        );
        /* harmony import */ var _prepareTemplates_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ./prepareTemplates.js */ './js/modules/prepareTemplates.js'
        );
        /* harmony import */ var _getAllUrlParams_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ./getAllUrlParams.js */ './js/modules/getAllUrlParams.js'
        );
        /* harmony import */ var _permissionMixin_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ./permissionMixin.js */ './js/modules/permissionMixin.js'
        );
        /* harmony import */ var _formatTime_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ./formatTime.js */ './js/modules/formatTime.js'
        );
        /* harmony import */ var _removeSearchParams_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ./removeSearchParams.js */ './js/modules/removeSearchParams.js'
        );

        var Chat = /*#__PURE__*/ (function () {
          function Chat(options) {
            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(
              this,
              Chat
            );

            // Bind context
            this._displayMessage = this._displayMessage.bind(this);
            this._setMessageStatus = this._setMessageStatus.bind(this); // Set debug options

            this.debug = options.debug || false;

            if (this.debug) {
              this.requests = options.requests; // Transform endpoints into URL objects

              for (var request in this.requests) {
                this.requests[request].endpoint = new URL(
                  this.requests[request].endpoint
                );
              }
            } // Save selectors

            this.selectors = options.selectors; // Save class names

            this.classNames = options.classNames; // Prepare message templates to render them in the future

            this.messageTemplates = Object(
              _prepareTemplates_js__WEBPACK_IMPORTED_MODULE_4__['default']
            )(options.messageTemplateIds);

            this._cacheElements();

            this._setUpEventListeners(); // Scroll to the bottom on the initialization step

            this.$chatContent.scrollTop(this.$messagesContainer.outerHeight()); // Indicator signaling that the initial scroll was performed

            this.initialScroll = true;
            Object.assign(
              Chat.prototype,
              _permissionMixin_js__WEBPACK_IMPORTED_MODULE_6__['default']
            );
            this.initializePhotoPermissionHandling(
              options.photoPermissionConfig
            );
          }

          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(
            Chat,
            [
              {
                key: '_cacheElements',
                value: function _cacheElements() {
                  var selectors = this.selectors;
                  this.$chat = $(selectors.chat); // Container in which the messages will be displayed

                  this.$messagesContainer = this.$chat.find(
                    selectors.messagesContainer
                  ); // Container with everything in the chat except header

                  this.$chatContent = this.$chat.find(selectors.chatContent); // Button to send typed message

                  this.$sendButton = this.$chat
                    .find(selectors.sendButton)
                    .fadeOut(0); // Form containing textarea for typing messages

                  this.$sendMessageForm = this.$chat.find(
                    selectors.sendMessageForm
                  ); // Textarea to type message

                  this.$sendMessageTextarea = this.$chat.find(
                    selectors.message
                  );
                },
              },
              {
                key: '_setUpEventListeners',
                value: function _setUpEventListeners() {
                  var _this = this;

                  // Cache
                  var classNames = this.classNames,
                    $document = $(document);
                  /**
                   * 1. Get query params
                   * 2. If there is no params, or if there is no need to send message, return
                   * 3. Get permission identifier from localStorage
                   * 4. If it is doesn't match with the passed with query params, return
                   * 5. Send asking permission message
                   */

                  $(window).on('load', function () {
                    // Get search params here
                    // And if we need to send message right after the chat is being opened, do it
                    var params = Object(
                      _getAllUrlParams_js__WEBPACK_IMPORTED_MODULE_5__[
                        'default'
                      ]
                    )();
                    if (!params || !('sendMessage' in params)) return;
                    var type = params.type;
                    var permissionIdentifier = localStorage.getItem(type);
                    localStorage.removeItem(type);
                    if (params.identifier !== permissionIdentifier) return;
                    $document.trigger('chat:sendMessageOnLoad', params);
                  }); // View sending button if message input is not empty

                  this.$chat.on('input', function (event) {
                    var $target = $(event.target);
                    if (!$target.hasClass(classNames.message)) return;
                    $target.val()
                      ? _this.$sendButton.fadeIn()
                      : _this.$sendButton.fadeOut(300);
                  });
                  /**
                   * Submitting message textarea:
                   * 1. Prepare message for sending to the server
                   * 2. Clean textarea
                   * 3. Send message
                   */

                  this.$sendMessageForm.submit(function (event) {
                    event.preventDefault();

                    var messageData = _this._prepareMessage({
                      type: 'general',
                    });

                    console.log(_this.$sendMessageTextarea);

                    _this.$sendMessageTextarea.val('');

                    _this._sendMessage(messageData);
                  }); // Keyboard events

                  this.$sendMessageForm.on('keydown', function (event) {
                    var key = event.key;

                    if (key === 'Enter' && !event.shiftKey) {
                      console.log('Enter!'); // If Enter is pressed

                      event.preventDefault(); // Submit the form

                      _this.$sendMessageForm.submit();
                    }
                  }); // Send bonus message to the server

                  $document
                    .on(
                      'present:send chat:sendMessageOnLoad permission:actionChosen',
                      function (event) {
                        var rawMessageData =
                          arguments.length > 1 && arguments[1] !== undefined
                            ? arguments[1]
                            : null;

                        // Prepare information to send it to the server
                        // Get rid of formdata here to send base64 string instead
                        var messageData = _this._prepareMessage(rawMessageData); // Send message data to the server

                        _this._sendMessage(messageData, rawMessageData);
                      }
                    )
                    .on('lazyLoading:itemsReady', function (event) {
                      for (
                        var _len = arguments.length,
                          messages = new Array(_len > 1 ? _len - 1 : 0),
                          _key = 1;
                        _key < _len;
                        _key++
                      ) {
                        messages[_key - 1] = arguments[_key];
                      }

                      /**
                       * 1. Display messages
                       * 2. Signal that the messages are displayed to re-init the observed target
                       */
                      messages.forEach(function (message) {
                        return _this._displayMessage(message, true);
                      }); // Listen to this event, too, and re-observe the messages

                      $document.trigger('items:afterDisplay');
                    })
                    .on(
                      'lazyLoading:beforeObserve items:afterDisplay',
                      function () {
                        /**
                         * 1. Get the last message from the currently displayed messages
                         * 2. Pass it with event signaling that the last message was get
                         */
                        var lastMessage = (_this.lastMessage = _this.$chat
                          .find(_this.selectors.allMessages)
                          .first()[0]);

                        $document.trigger(
                          'items:afterGettingLastItem',
                          lastMessage
                        );
                      }
                    );
                  /**
                   * Event handler to preserve scroll position on prepend
                   * 1. Get the current scroll of the chat container
                   * 2. If it is 0, and initial scroll was performed, preserve the position
                   *    of the last message
                   */

                  this.$chatContent.on('scroll', function () {
                    var scroll = _this.$chatContent.scrollTop();

                    if (scroll < 1 && _this.initialScroll) {
                      _this.$chatContent.scrollTop(2);
                    }
                  });
                },
                /**
                 * This method prepares information to send it to the server
                 *
                 * With general messages:
                 * 1. Get the message text from the message textarea
                 * 2. Return stringified json with type = general, message text,
                 * and indicator that the message is mine
                 *
                 * With superlike, return stringified json with type = superlike
                 * and indicator that the message is mine
                 *
                 * With ptoho, return formData object, which can be send to the server
                 * formData object contains all the information about the sent photo
                 *
                 * @param {Object} bonusData - information about the bonus - ex. type
                 * @param {FormData object} formData - photo information to send it to the server
                 */
              },
              {
                key: '_prepareMessage',
                value: function _prepareMessage(rawMessageData) {
                  // Get the bonus type
                  var type = rawMessageData.type;

                  switch (type) {
                    case 'general':
                      // Save message text
                      var messageText = this._getMessageText();

                      return JSON.stringify({
                        type: type,
                        mine: true,
                        text: messageText,
                      });

                    case 'permissionRequest':
                      return {
                        type: type,
                        mine: true,
                        id: rawMessageData.id,
                      };

                    case 'permissionResponse':
                      return {
                        type: type,
                        mine: true,
                        action: rawMessageData.action,
                      };

                    case 'superlike':
                    case 'premium':
                      return JSON.stringify({
                        type: type,
                        mine: true,
                      });

                    case 'photo':
                      return JSON.stringify({
                        type: type,
                        mine: true,
                        photoSrc: localStorage.getItem('photoSrc'),
                        description: localStorage.getItem('photoDescription'),
                      });
                  }
                },
                /**
                 *
                 * @param {Object or FormData Object} messageData - message information
                 * which will be sent to the server
                 *
                 * @param {*} bonusData - additional bonus information
                 */
              },
              {
                key: '_sendMessage',
                value: function _sendMessage(messageData) {
                  var _this2 = this;

                  var bonusData =
                    arguments.length > 1 && arguments[1] !== undefined
                      ? arguments[1]
                      : null;

                  // Send message to server
                  this._sendMessageToServer(messageData, bonusData) // Maybe we can handle successful/unsuccessful response here
                    .then(function (response) {
                      if (response.success) {
                        switch (response.type) {
                          case 'general':
                            // Show general message
                            _this2._displayMessage(response);

                            break;

                          case 'special':
                            if (response['photo']) {
                              var description = localStorage.getItem(
                                'photoDescription'
                              ); // Get photo information from local storage

                              response['description'] =
                                description === 'undefined' ? '' : description;
                              response['src'] = localStorage.getItem(
                                'photoSrc'
                              );
                            } // Show message after a delay to not to distract the user

                            setTimeout(_this2._displayMessage, 1000, response);
                            $(document).trigger('chat:photoSent');
                            break;
                        }
                      } else {
                        // We need to handle unsuccessful response here
                        throw new Error('Something went wrong');
                      }
                    })
                    ['catch'](function (error) {
                      console.log(error);
                    });
                },
                /**
                 * This method is used to imulate client-server communication
                 * Will be changed to WebSockets
                 *
                 * @param {String or FormData} messageData - information to send to the server
                 * about the current bonus
                 */
              },
              {
                key: '_sendMessageToServer',
                value: function _sendMessageToServer(messageData) {
                  var bonusData =
                    arguments.length > 1 && arguments[1] !== undefined
                      ? arguments[1]
                      : null;
                  var _this$requests$send = this.requests.send,
                    method = _this$requests$send.method,
                    headers = _this$requests$send.headers,
                    endpoint = _this$requests$send.endpoint; // Clean previously saved key/value pairs if presented

                  Object(
                    _removeSearchParams_js__WEBPACK_IMPORTED_MODULE_8__[
                      'default'
                    ]
                  )(endpoint); // Configure endpoint

                  if (bonusData) {
                    endpoint.searchParams.set(bonusData.type, true);

                    if (bonusData.type === 'permissionResponse') {
                      endpoint.searchParams.set('action', bonusData.action);
                    }
                  } else {
                    endpoint.searchParams.set('general', true);
                  } //Make a request here

                  return fetch(endpoint, {
                    method: method,
                    headers: headers,
                    body: messageData,
                  })
                    .then(function (response) {
                      if (response.ok) {
                        return response.json();
                      } else {
                        throw new _httpError_js__WEBPACK_IMPORTED_MODULE_3__[
                          'default'
                        ]('Http error', response);
                      }
                    })
                    .then(function (json) {
                      return json;
                    });
                },
                /**
                 * Get inputed message text from the message textarea
                 */
              },
              {
                key: '_getMessageText',
                value: function _getMessageText() {
                  return this.$sendMessageTextarea.val();
                },
              },
              {
                key: '_displayMessage',
                value: function _displayMessage(data) {
                  var lazy =
                    arguments.length > 1 && arguments[1] !== undefined
                      ? arguments[1]
                      : false;
                  // Format timestamp before displaying message
                  data.time = Object(
                    _formatTime_js__WEBPACK_IMPORTED_MODULE_7__['default']
                  )(data.timestamp); // Prepare template for compilation - for general or special message type

                  var compiled = handlebars__WEBPACK_IMPORTED_MODULE_2___default.a.compile(
                    this.messageTemplates[data.type]
                  ); // Compile template with passed data

                  compiled = compiled(data);

                  if (!lazy) {
                    // Default message displaying
                    $(compiled)
                      .appendTo(this.$messagesContainer)
                      .addClass('visible')[0]
                      .scrollIntoView({
                        behavior: 'smooth',
                      });
                  } else {
                    var initialHeight = this.$messagesContainer.outerHeight();
                    $(compiled)
                      .prependTo(this.$messagesContainer)
                      .addClass('visible');
                  } // Change message status after a second for general message type
                  // for testing purposes

                  setTimeout(this._setMessageStatus, 1000, {
                    id: data.id,
                    status: 'seen',
                  });
                },
              },
              {
                key: '_setMessageStatus',
                value: function _setMessageStatus(_ref) {
                  var id = _ref.id,
                    status = _ref.status;
                  // Find message with the given data-id attribute
                  var $meta = this.$messagesContainer
                    .find(".message[data-id='".concat(id, "']"))
                    .find('.meta');
                  var isSeenIconShown = !!$meta.find('.fa-check-circle').length;

                  if (status === 'seen' && !isSeenIconShown) {
                    // If the message was seen
                    $meta.prepend('<i class="fas fa-check-circle"></i>');
                  }
                },
              },
            ]
          );

          return Chat;
        })();

        /***/
      },

    /***/ './js/modules/chatList.js':
      /*!********************************!*\
  !*** ./js/modules/chatList.js ***!
  \********************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return ChatList;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/createClass */ '../node_modules/@babel/runtime/helpers/createClass.js'
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var handlebars__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! handlebars */ '../node_modules/handlebars/dist/cjs/handlebars.js'
        );
        /* harmony import */ var handlebars__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          handlebars__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _prepareTemplates_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ./prepareTemplates.js */ './js/modules/prepareTemplates.js'
        );

        var ChatList = /*#__PURE__*/ (function () {
          function ChatList(options) {
            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(
              this,
              ChatList
            );

            // Save selectors
            this.selectors = options.selectors; // Prepare template for message

            this.messageTemplate = Object(
              _prepareTemplates_js__WEBPACK_IMPORTED_MODULE_3__['default']
            )(options.selectors.templateId); // Get chatlist container

            this.$chatList = $(this.selectors.chatList); // Prepare event listeners

            this._setUpEventListeners();
          }

          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(
            ChatList,
            [
              {
                key: '_setUpEventListeners',
                value: function _setUpEventListeners() {
                  var _this = this;

                  var $document = $(document);
                  $document
                    .on('lazyLoading:itemsReady', function (event) {
                      /**
                       * 1. Get all the retrieved messages from the server
                       * 2. Compile template
                       * 3. Display messages in the Chat List container
                       * 4. Scroll the first message into view
                       * 5. Signal that the messages are displayed to re-init the observed target
                       */
                      var template = handlebars__WEBPACK_IMPORTED_MODULE_2___default.a.compile(
                        _this.messageTemplate
                      );

                      for (
                        var _len = arguments.length,
                          messages = new Array(_len > 1 ? _len - 1 : 0),
                          _key = 1;
                        _key < _len;
                        _key++
                      ) {
                        messages[_key - 1] = arguments[_key];
                      }

                      messages.forEach(function (message) {
                        return _this.$chatList.append(template(message));
                      });

                      _this.$chatList.animate({
                        scrollTop:
                          '+=' +
                          _this.$chatList
                            .find(_this.selectors.message)
                            .first()
                            .outerHeight(),
                      }); // Listen to this event, too, and re-observe the messages

                      $document.trigger('items:afterDisplay');
                    })
                    .on(
                      'lazyLoading:beforeObserve items:afterDisplay',
                      function () {
                        /**
                         * 1. Get the last message from the currently displayed messages
                         * 2. Pass it with event signaling that the last message was get
                         */
                        var lastMessage = _this.$chatList
                          .find(_this.selectors.message)
                          .last()[0];

                        $document.trigger(
                          'items:afterGettingLastItem',
                          lastMessage
                        );
                      }
                    );
                },
              },
            ]
          );

          return ChatList;
        })();

        /***/
      },

    /***/ './js/modules/dateMixin.js':
      /*!*********************************!*\
  !*** ./js/modules/dateMixin.js ***!
  \*********************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/slicedToArray */ '../node_modules/@babel/runtime/helpers/slicedToArray.js'
        );
        /* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! moment */ '../node_modules/moment/moment.js'
        );
        /* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          moment__WEBPACK_IMPORTED_MODULE_1__
        );

        /* harmony default export */ __webpack_exports__['default'] = {
          // Public functions and methods
          // Function to validate year
          yearValidator: function yearValidator(value, element) {
            // Check the validity of all three elements
            isDayAndMonthValid = _isDayAndMonthValid();
            isAgeValid = _isAgeValid();
            isYearFormatValid = _isYearFormatValid();

            if (!isDayAndMonthValid || !isAgeValid || !isYearFormatValid) {
              return false;
            }

            return true;
          },
          // Function to validate day depending on month
          dayValidator: function dayValidator(value, element) {
            // Day is considered valid if the month is empty or there is such day in month
            var isMonthEmpty = _isMonthEmpty(),
              isYearEmpty = _isYearEmpty(); // Check year format

            isYearFormatValid = _isYearFormatValid(); // Don't validate day if either any field is empty of year format is incorrect

            if (isMonthEmpty || isYearEmpty || !isYearFormatValid) return true;
            return _isDayValid();
          },
          initializeDateInput: function initializeDateInput() {
            // Bind context
            _cacheElements = _cacheElements.bind(this);
            _setUpEventListeners = _setUpEventListeners.bind(this);
            _calculateAge = _calculateAge.bind(this);
            _getBirthDate = _getBirthDate.bind(this);
            _setYearErrorMessage = _setYearErrorMessage.bind(this);
            _isDayEmpty = _isDayEmpty.bind(this);
            _isMonthEmpty = _isMonthEmpty.bind(this);
            _isYearEmpty = _isYearEmpty.bind(this);
            _isDayAndMonthValid = _isDayAndMonthValid.bind(this);
            _isAgeValid = _isAgeValid.bind(this);
            _isDayValid = _isDayValid.bind(this);
            _isYearFormatValid = _isYearFormatValid.bind(this); // Class functions

            this.yearValidator = this.yearValidator.bind(this);
            this.dayValidator = this.dayValidator.bind(this); // Prepare date validation

            _cacheElements();

            _setUpEventListeners();
          },
        }; // Private variables

        var $day,
          $month,
          $year,
          errorMessages,
          currentYearErrorMessage,
          selectors,
          isDayAndMonthValid,
          isAgeValid,
          isYearFormatValid,
          $document = $(document);
        /** Private methods */

        /**
         * Helper function to cache elements required for validation
         */

        function _cacheElements() {
          // Cache
          selectors = this.selectors.date;
          errorMessages = this.errorMessages.year; // Save input wrapper selector

          selectors['input-wrapper'] = this.selectors['input-wrapper'];
          $day = this.$form.find(selectors.day);
          $month = this.$form.find(selectors.month);
          $year = this.$form.find(selectors.year);
        }
        /**
         * Helper function to listen to validator events
         * and handle error messages changing
         */

        function _setUpEventListeners() {
          var _this = this;

          var year = selectors.year;
          $document.on('validator:yearIsInvalid', function () {
            _setYearErrorMessage(); // Display error message

            $year
              .closest(selectors['input-wrapper'])
              .find(''.concat(year, '-error'))
              .text(currentYearErrorMessage);
          }); // Validate year on day and month input

          this.$form.on('input', function (event) {
            var target = event.target;
            var isValidateDateOnInput =
                target.dataset.date === 'true' ? true : false,
              year = $year.val(); // If year is empty or no date custom attribute specified

            if (!isValidateDateOnInput || !year) return; // Validate year

            _this.validator.element(selectors.year);
          }); // Validate day on year and month input

          this.$form.on('input', function (event) {
            var target = event.target;
            var isValidateDayOnInput =
                target.dataset.day === 'true' ? true : false,
              dayValue = $day.val();
            if (!isValidateDayOnInput || !dayValue) return; // Validate day

            _this.validator.element(selectors.day);
          });
        }
        /**
         * Function checking validity of day and month fields
         */

        function _isDayAndMonthValid() {
          // Check if the day and month are not empty
          var isDayEmpty = _isDayEmpty(),
            isMonthEmpty = _isMonthEmpty();

          return !isDayEmpty && !isMonthEmpty;
        }
        /**
         * Three functions checking whether the day/month/year input field is empty
         */

        function _isDayEmpty() {
          return !Boolean($day.val());
        }

        function _isMonthEmpty() {
          return !Boolean($month.val());
        }

        function _isYearEmpty() {
          return !Boolean($year.val());
        }
        /**
         * Function checking if the person is older than 18
         */

        function _isAgeValid() {
          var age = _calculateAge();

          if (age >= 18) {
            return true;
          } else {
            return false;
          }
        }
        /**
         * Function checking if the user inputed either two-digit or four-digit year
         */

        function _isYearFormatValid() {
          var year = Number($year.val());
          if (100 <= year && year <= 999) return false;
          return true;
        }
        /**
         * Function checking if the day exists in the currently selected month
         */

        function _isDayValid() {
          var year = Number($year.val()),
            month = $month.val(),
            day = parseInt($day.val());
          var daysInMonth =
            year <= 99
              ? moment__WEBPACK_IMPORTED_MODULE_1___default()(
                  ''.concat(year, '-').concat(month),
                  'YY-MM'
                ).daysInMonth()
              : moment__WEBPACK_IMPORTED_MODULE_1___default()(
                  ''.concat(year, '-').concat(month),
                  'YYYY-MM'
                ).daysInMonth();
          return day <= daysInMonth;
        }
        /**
         * Function selecting error message for the year field
         */

        function _setYearErrorMessage() {
          if (!isDayAndMonthValid) {
            currentYearErrorMessage = errorMessages.emptyDayAndMonth;
          } else if (!isAgeValid) {
            currentYearErrorMessage = errorMessages.age;
          } else if (!isYearFormatValid) {
            currentYearErrorMessage = errorMessages.format;
          }
        }
        /**
         * Function collection birth date from the form fields
         */

        function _getBirthDate() {
          // Get the inputed values
          var day = $day.val(),
            month = $month.val(),
            year = $year.val(); // Convert its type to number

          var _map = [day, month, year].map(function (item) {
            return parseInt(item);
          });

          var _map2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(
            _map,
            3
          );

          day = _map2[0];
          month = _map2[1];
          year = _map2[2];
          return {
            day: day,
            month: month,
            year: year,
          };
        }
        /**
         * Helper function to calculate age of the person based on the current date
         * and information provided in the form
         */

        function _calculateAge() {
          var _getBirthDate2 = _getBirthDate(),
            day = _getBirthDate2.day,
            month = _getBirthDate2.month,
            year = _getBirthDate2.year;

          var birth = moment__WEBPACK_IMPORTED_MODULE_1___default()({
              year: year,
              month: month,
              day: day,
            }),
            now = moment__WEBPACK_IMPORTED_MODULE_1___default()(); // Return age

          return now.diff(birth, 'years');
        }

        /***/
      },

    /***/ './js/modules/debounce.js':
      /*!********************************!*\
  !*** ./js/modules/debounce.js ***!
  \********************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        var debounce = function debounce(func) {
          var wait =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : 0;
          var timeout;
          return function executedFunction() {
            for (
              var _len = arguments.length, args = new Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            var later = function later() {
              clearTimeout(timeout);
              func.apply(void 0, args);
            };

            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
          };
        };

        /* harmony default export */ __webpack_exports__['default'] = debounce;

        /***/
      },

    /***/ './js/modules/editor.js':
      /*!******************************!*\
  !*** ./js/modules/editor.js ***!
  \******************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return PhotoEditor;
          }
        );
        /* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/regenerator */ '../node_modules/@babel/runtime/regenerator/index.js'
        );
        /* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/asyncToGenerator */ '../node_modules/@babel/runtime/helpers/asyncToGenerator.js'
        );
        /* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime/helpers/createClass */ '../node_modules/@babel/runtime/helpers/createClass.js'
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__
        );
        /* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @babel/runtime/helpers/assertThisInitialized */ '../node_modules/@babel/runtime/helpers/assertThisInitialized.js'
        );
        /* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__
        );
        /* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! @babel/runtime/helpers/get */ '../node_modules/@babel/runtime/helpers/get.js'
        );
        /* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_5__
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! @babel/runtime/helpers/inherits */ '../node_modules/@babel/runtime/helpers/inherits.js'
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6__
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! @babel/runtime/helpers/possibleConstructorReturn */ '../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js'
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7__
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! @babel/runtime/helpers/getPrototypeOf */ '../node_modules/@babel/runtime/helpers/getPrototypeOf.js'
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8__
        );
        /* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! @babel/runtime/helpers/defineProperty */ '../node_modules/@babel/runtime/helpers/defineProperty.js'
        );
        /* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9__
        );
        /* harmony import */ var _modal_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ./modal.js */ './js/modules/modal.js'
        );

        function _createSuper(Derived) {
          var hasNativeReflectConstruct = _isNativeReflectConstruct();
          return function _createSuperInternal() {
            var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8___default()(
                Derived
              ),
              result;
            if (hasNativeReflectConstruct) {
              var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8___default()(
                this
              ).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
            } else {
              result = Super.apply(this, arguments);
            }
            return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7___default()(
              this,
              result
            );
          };
        }

        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct)
            return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;
          try {
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            );
            return true;
          } catch (e) {
            return false;
          }
        }

        var PhotoEditor = /*#__PURE__*/ (function (_EditorModal) {
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6___default()(
            PhotoEditor,
            _EditorModal
          );

          var _super = _createSuper(PhotoEditor);

          // Currently clicked photo

          /**
           * Information about photo.
           *  photoData.id - id of the photo from the database
           *  photoData.id.img - photo image element
           *  photoData.id.src - photo src
           *  photoData.id.private - photo privacy information
           *  photoData.id.description - photo description
           */
          function PhotoEditor(options) {
            var _this;

            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default()(
              this,
              PhotoEditor
            );

            _this = _super.call(this, options); // Binding context

            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(
                _this
              ),
              'photo',
              null
            );

            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(
                _this
              ),
              'photoData',
              {}
            );

            _this._prepareModal = _this._prepareModal.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(
                _this
              )
            );
            _this._updateMarkup = _this._updateMarkup.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(
                _this
              )
            ); // Prepare editor

            _this._cacheElements();

            _this._setUpEventListeners();

            if (_this.selectors.loading) {
              // Initializing loading indicator when the form is submitted
              _this.initializeLoadingIndicators(_this.$form);
            }

            return _this;
          }
          /**
           * Function caches elements according to passed options.
           */

          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default()(
            PhotoEditor,
            [
              {
                key: '_cacheElements',
                value: function _cacheElements() {
                  // Cache elements required for gallery to work
                  _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_5___default()(
                    _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8___default()(
                      PhotoEditor.prototype
                    ),
                    '_cacheElements',
                    this
                  ).call(this); // Elements of the modal

                  this.$description = this.$modal.find(
                    this.selectors.description
                  );
                  this.$privacyInput = this.$modal.find(
                    this.selectors['privacy-input']
                  );
                  this.$privacyLabel = this.$modal.find(
                    this.selectors['privacy-label']
                  );
                  this.$modalPhotoElement = this.$modal.find('img'); // Photo gallery

                  this.$gallery = $(this.selectors.gallery);
                },
              },
              {
                key: '_setUpEventListeners',
                value: function _setUpEventListeners() {
                  var _this2 = this;

                  _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_5___default()(
                    _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8___default()(
                      PhotoEditor.prototype
                    ),
                    '_setUpEventListeners',
                    this
                  ).call(this);

                  this.$gallery.click(function (event) {
                    var target = event.target;
                    if (target.tagName !== 'IMG') return; // Save photo

                    _this2.photo = target; // Cache id

                    var photoId = _this2.photo.dataset.id; // Make empty object for photo information

                    _this2.photoData[photoId] = {}; // Save photo information

                    _this2.savePhotoInformation({
                      id: photoId,
                      src: _this2.photo.src,
                    });

                    _this2.savePhotoInformation(_this2.photo.dataset); // Adjust modal

                    _this2._prepareModal(photoId);
                  });
                  /**
                   * When the user clicks on delete button:
                   * 1. Make request to delete photo
                   * 2. If everything is fine, remove photo from the markup and close the modal
                   * 3. Show error popup otherwise
                   */

                  this.$deleteButton.click(
                    /*#__PURE__*/ (function () {
                      var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()(
                        /*#__PURE__*/ _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(
                          function _callee(event) {
                            var _this2$requests$delet,
                              headers,
                              method,
                              endpoint,
                              response,
                              icon;

                            return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(
                              function _callee$(_context) {
                                while (1) {
                                  switch ((_context.prev = _context.next)) {
                                    case 0:
                                      event.preventDefault();
                                      (_this2$requests$delet =
                                        _this2.requests.deletePhoto),
                                        (headers =
                                          _this2$requests$delet.headers),
                                        (method = _this2$requests$delet.method),
                                        (endpoint =
                                          _this2$requests$delet.endpoint); // Show loading indicator

                                      _this2.triggerLoadingIndicator();

                                      _context.prev = 3;
                                      _context.next = 6;
                                      return _this2.makeRequest({
                                        headers: headers,
                                        endpoint: endpoint,
                                        method: method,
                                        body: JSON.stringify({
                                          id: _this2.photo.dataset.id,
                                        }),
                                      });

                                    case 6:
                                      response = _context.sent;
                                      _context.next = 12;
                                      break;

                                    case 9:
                                      _context.prev = 9;
                                      _context.t0 = _context['catch'](3);

                                      // Unsuccessful Popup
                                      _this2.showRequestResult({
                                        title: _context.t0.name,
                                        text: _context.t0.message,
                                        icon: 'error',
                                      });

                                    case 12:
                                      if (response.success) {
                                        // Delete photo container and close modal
                                        $(_this2.photo)
                                          .closest(_this2.selectors.container)
                                          .remove();

                                        _this2.closeModal();

                                        icon = 'success';
                                      } else {
                                        icon = 'error';
                                      } // Show resulting popup

                                      _this2.showRequestResult({
                                        title: response.title,
                                        text: response.message,
                                        icon: icon,
                                      });

                                    case 14:
                                    case 'end':
                                      return _context.stop();
                                  }
                                }
                              },
                              _callee,
                              null,
                              [[3, 9]]
                            );
                          }
                        )
                      );

                      return function (_x) {
                        return _ref.apply(this, arguments);
                      };
                    })()
                  );
                  /**
                   * When the form with new photo information is submitted:
                   * 1. Save photo information to photoData
                   * 2. Make request to the server
                   * 3. If everything is fine, update markup, close modal, and show success popup
                   * 4. If something went wrong, show error popup
                   */

                  this.$form.submit(
                    /*#__PURE__*/ (function () {
                      var _ref2 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()(
                        /*#__PURE__*/ _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(
                          function _callee2(event) {
                            var id,
                              _ref3,
                              privacy,
                              description,
                              _this2$requests$saveP,
                              headers,
                              method,
                              endpoint,
                              response,
                              icon;

                            return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(
                              function _callee2$(_context2) {
                                while (1) {
                                  switch ((_context2.prev = _context2.next)) {
                                    case 0:
                                      event.preventDefault(); // Cache

                                      id = _this2.photo.dataset.id; // Save information

                                      _this2.savePhotoInformation({
                                        id: id,
                                        privacy: _this2.$privacyInput.is(
                                          ':checked'
                                        ),
                                        description: _this2.$description.val(),
                                      });

                                      (_ref3 = [
                                        _this2.photoData[id].privacy,
                                        _this2.photoData[id].description,
                                      ]),
                                        (privacy = _ref3[0]),
                                        (description = _ref3[1]),
                                        (_this2$requests$saveP =
                                          _this2.requests.savePhoto),
                                        (headers =
                                          _this2$requests$saveP.headers),
                                        (method = _this2$requests$saveP.method),
                                        (endpoint =
                                          _this2$requests$saveP.endpoint);
                                      _context2.prev = 4;
                                      _context2.next = 7;
                                      return _this2.makeRequest({
                                        headers: headers,
                                        endpoint: endpoint,
                                        method: method,
                                        body: JSON.stringify({
                                          id: id,
                                          privacy: privacy,
                                          description: description,
                                        }),
                                      });

                                    case 7:
                                      response = _context2.sent;
                                      _context2.next = 13;
                                      break;

                                    case 10:
                                      _context2.prev = 10;
                                      _context2.t0 = _context2['catch'](4);

                                      // Unsuccessful Popup
                                      _this2.showRequestResult({
                                        title: _context2.t0.name,
                                        text: _context2.t0.message,
                                        icon: 'error',
                                      });

                                    case 13:
                                      if (response.success) {
                                        // Update photo in the markup and close modal
                                        _this2._updateMarkup();

                                        _this2.closeModal(); // Set icon

                                        icon = 'success';
                                      } else {
                                        icon = 'error';
                                      } // Show resulting popup

                                      _this2.showRequestResult({
                                        title: response.title,
                                        text: response.message,
                                        icon: icon,
                                      });

                                    case 15:
                                    case 'end':
                                      return _context2.stop();
                                  }
                                }
                              },
                              _callee2,
                              null,
                              [[4, 10]]
                            );
                          }
                        )
                      );

                      return function (_x2) {
                        return _ref2.apply(this, arguments);
                      };
                    })()
                  );
                },
                /**
                 * Function updating photo in the gallery
                 */
              },
              {
                key: '_updateMarkup',
                value: function _updateMarkup() {
                  var values = this.photoData[this.photo.dataset.id];

                  for (var property in values) {
                    if (property in this.photo.dataset) {
                      this.photo.dataset[property] = values[property];
                    }
                  }
                },
                /**
                 * Function generates content of the modal window
                 * depending on the attributes of the clicked photo
                 * @param {Number} id - database id of the photo
                 */
              },
              {
                key: '_prepareModal',
                value: function _prepareModal(id) {
                  // Set photo
                  this.$modalPhotoElement.attr('src', this.photoData[id].src); // Generate photo id

                  var photoId = 'photo-' + id; // Set privacy

                  this.$privacyInput
                    .prop('checked', this.photoData[id].privacy)
                    .attr('id', photoId); // Set toggle

                  this.$privacyLabel.attr('for', photoId); // Set description

                  this.$description.text(this.photoData[id].description);
                },
              },
              {
                key: 'clean',
                value: function clean() {
                  this.photo = null;
                  this.photoData = {};
                },
              },
            ]
          );

          return PhotoEditor;
        })(_modal_js__WEBPACK_IMPORTED_MODULE_10__['default']);

        /***/
      },

    /***/ './js/modules/enlargePhoto.js':
      /*!************************************!*\
  !*** ./js/modules/enlargePhoto.js ***!
  \************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return EnlargePhoto;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/createClass */ '../node_modules/@babel/runtime/helpers/createClass.js'
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _preparePhotoModal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ./preparePhotoModal.js */ './js/modules/preparePhotoModal.js'
        );

        var EnlargePhoto = /*#__PURE__*/ (function () {
          function EnlargePhoto(options) {
            var _this = this;

            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(
              this,
              EnlargePhoto
            );

            // Bind context
            this._changePhotoModalContent = this._changePhotoModalContent.bind(
              this
            ); // Get class or setup default class

            this.enlargeClass = options.enlargeClass || 'enlarge';
            var selectors = (this.selectors = options.selectors);
            var modal = selectors.modal,
              animateOnShown = selectors.animateOnShown; // Cache elements

            var $modal = (this.$modal = $(modal));
            this.$img = $modal.find(selectors.img);
            this.$description = $modal.find(selectors.description);
            /**
             * Initialize module preparation
             * In this module, the event listeners to change the visual appearance
             * of the overlay and close button animation is being set up
             */

            Object(
              _preparePhotoModal_js__WEBPACK_IMPORTED_MODULE_2__['default']
            )({
              modal: modal,
              animateOnShown: animateOnShown,
            }).init();
            /**
             * Event handler handling photo enlargement. On click event:
             * 1. It checks whether enlarge class is presented on the closest image
             * 2. Changes the modal content
             * 3. Opens the modal
             */

            $(document).click(function (event) {
              // Find the closest image
              var $img = $(event.target).closest('img');
              if (!$img.hasClass(_this.enlargeClass)) return;
              event.preventDefault(); // Change photo modal content so that it contains information about the clicked image

              _this._changePhotoModalContent($img);

              _this.$modal.modal('show');
            });
            /**
             * On closing modal, delete the previously saved image src and the description
             */

            $modal.on('hidden.bs.modal', function () {
              _this.$img.attr('src', '');

              _this.$description.text('');
            });
          }

          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(
            EnlargePhoto,
            [
              {
                key: '_changePhotoModalContent',
                value: function _changePhotoModalContent($img) {
                  this.$img.attr('src', $img.attr('src'));
                  this.$description.text($img.data('description'));
                },
              },
            ]
          );

          return EnlargePhoto;
        })();

        /***/
      },

    /***/ './js/modules/fileReaderMixin.js':
      /*!***************************************!*\
  !*** ./js/modules/fileReaderMixin.js ***!
  \***************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */ __webpack_exports__[
          'default'
        ] = (function () {
          var errorText;
          /**
           * Function to read file and start loading it
           * It instantiates a FileReader Object for the current file
           * Sets event listeners to listen to events on reader
           * And then, starts reading it to generate URL
           * @param {File Object} file
           */

          function _readFile(_ref) {
            var file = _ref.file,
              $progressBar = _ref.$progressBar;
            var reader = new FileReader(); // Save progress bar for the current reader

            reader.$progressBar = $progressBar; // Prepare reader fo reading file

            _setReaderEventListeners.call(this, reader); // Read file

            reader.readAsDataURL(file);
          }
          /**
           * Function setting event listeners to the current reader
           * @param {FileReader Object} reader - reader to set event listeners to
           */

          function _setReaderEventListeners(reader) {
            var _this = this;

            reader.addEventListener('loadstart', function () {
              _this._hideError();
            });
            reader.addEventListener('progress', function (event) {
              // Show progress for the current reader
              _this._showProgress({
                loaded: event.loaded,
                total: event.total,
                $progressBar: event.target.$progressBar,
              });
            });
            reader.addEventListener('loadend', function (event) {
              var target = event.target; // Indicate that the file related to the current progress bar was loaded

              target.$progressBar.addClass('loadend');
            });
            reader.addEventListener('load', function (event) {
              var target = event.target;
              setTimeout(_this._preview, 500, target); // Show submit button

              _this.$modalFooter.show();
            });
            reader.addEventListener('error', function () {
              _this._showError(errorText.read);
            });
          }

          return {
            initializeFileReader: function initializeFileReader(config) {
              // Save passed information
              errorText = config.errorText;
              // Bind context
              this.initializeFileReader = this.initializeFileReader.bind(this);
              this._readFile = this._readFile.bind(this);
            },
            _readFile: _readFile,
          };
        })();

        /***/
      },

    /***/ './js/modules/form.js':
      /*!****************************!*\
  !*** ./js/modules/form.js ***!
  \****************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return Form;
          }
        );
        /* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/regenerator */ '../node_modules/@babel/runtime/regenerator/index.js'
        );
        /* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/asyncToGenerator */ '../node_modules/@babel/runtime/helpers/asyncToGenerator.js'
        );
        /* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime/helpers/createClass */ '../node_modules/@babel/runtime/helpers/createClass.js'
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__
        );
        /* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @babel/runtime/helpers/assertThisInitialized */ '../node_modules/@babel/runtime/helpers/assertThisInitialized.js'
        );
        /* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! @babel/runtime/helpers/inherits */ '../node_modules/@babel/runtime/helpers/inherits.js'
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! @babel/runtime/helpers/possibleConstructorReturn */ '../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js'
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6__
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! @babel/runtime/helpers/getPrototypeOf */ '../node_modules/@babel/runtime/helpers/getPrototypeOf.js'
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7__
        );
        /* harmony import */ var _requests_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ./requests.js */ './js/modules/requests.js'
        );
        /* harmony import */ var _locationMixin_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ./locationMixin.js */ './js/modules/locationMixin.js'
        );
        /* harmony import */ var _paymentMixin_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ./paymentMixin.js */ './js/modules/paymentMixin.js'
        );
        /* harmony import */ var _restrictLengthMixin_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ./restrictLengthMixin.js */ './js/modules/restrictLengthMixin.js'
        );
        /* harmony import */ var _dateMixin_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ./dateMixin.js */ './js/modules/dateMixin.js'
        );

        function _createSuper(Derived) {
          var hasNativeReflectConstruct = _isNativeReflectConstruct();
          return function _createSuperInternal() {
            var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7___default()(
                Derived
              ),
              result;
            if (hasNativeReflectConstruct) {
              var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7___default()(
                this
              ).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
            } else {
              result = Super.apply(this, arguments);
            }
            return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6___default()(
              this,
              result
            );
          };
        }

        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct)
            return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;
          try {
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            );
            return true;
          } catch (e) {
            return false;
          }
        }

        var Form = /*#__PURE__*/ (function (_ServerRequest) {
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default()(
            Form,
            _ServerRequest
          );

          var _super = _createSuper(Form);

          function Form(options) {
            var _this;

            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default()(
              this,
              Form
            );

            _this = _super.call(this, options); // Data that will be sent to the server

            _this.formData = {}; // Bind context

            _this._cacheElements = _this._cacheElements.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(
                _this
              )
            );
            _this._setUpEventListeners = _this._setUpEventListeners.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(
                _this
              )
            );
            _this.collectLocationData = _this.collectLocationData.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(
                _this
              )
            );
            _this.sendFormInformation = _this.sendFormInformation.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(
                _this
              )
            );
            _this.showErrorMessages = _this.showErrorMessages.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(
                _this
              )
            );
            _this.collectFormInputs = _this.collectFormInputs.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(
                _this
              )
            );
            _this.showGeneralError = _this.showGeneralError.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(
                _this
              )
            );
            _this.deleteGeneralError = _this.deleteGeneralError.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(
                _this
              )
            ); // cache

            var selectors = _this.selectors,
              errorMessages = options.errorMessages; // Save error messages if provided

            _this.errorMessages = options.errorMessages;

            _this._cacheElements();

            _this._setUpEventListeners();

            if (selectors.loading) {
              // Initializing loading indicator when the form is submitted
              _this.initializeLoadingIndicators(_this.$form);
            }

            if (options.location) {
              // Add location methods to the form prototype
              Object.assign(
                Form.prototype,
                _locationMixin_js__WEBPACK_IMPORTED_MODULE_9__['default']
              );
              _this.location = true;

              _this.initializeLocationInput();
            }

            if (options.date) {
              // Add date validation method to the form prototype
              Object.assign(
                Form.prototype,
                _dateMixin_js__WEBPACK_IMPORTED_MODULE_12__['default']
              );
              _this.date = true;

              _this.initializeDateInput();
            } // Handle payment form

            if (options.payment) {
              Object.assign(
                Form.prototype,
                _paymentMixin_js__WEBPACK_IMPORTED_MODULE_10__['default']
              );
              _this.payment = true;
              jQuery.validator.addMethod(
                'expiration',
                _this.creditCardExpirationValidation,
                'Expiration date is passed'
              );
              jQuery.validator.addMethod(
                'cardNumber',
                _this.creditCardNumberValidation,
                'Card number is invalid'
              );
            } // Handle frontend validation

            if (options.frontendValidation) {
              // If this form requires frontend validation
              _this.frontendValidation = true; // Change where error messages occur
              // This is required for label to work properly when errors are shown

              options.validatorOptions['errorPlacement'] = function (
                error,
                element
              ) {
                element.closest(selectors['input-wrapper']).append(error);
              };

              if (_this.location) {
                if (errorMessages && errorMessages.city) {
                  var errorMessage = errorMessages.city;
                } else {
                  var errorMessage = 'No such city';
                } // Add custom frontend validation for location field

                jQuery.validator.addMethod(
                  'location',
                  _this.frontendCityValidator,
                  errorMessage
                );
              }

              if (_this.date) {
                jQuery.validator.addMethod('year', _this.yearValidator, '');
                jQuery.validator.addMethod(
                  'day',
                  _this.dayValidator,
                  'Please enter valid day of month'
                );
              } // Add frontend validation

              _this.validator = _this.$form.validate(options.validatorOptions);
            }
            /**
             * Form configuration for submit part
             */
            // Set redirect on submit option

            _this.redirectOnSubmit = options.redirectOnSubmit ? true : false; // Set generate submit event option

            _this.generateSubmitEvent = options.generateSubmitEvent
              ? true
              : false; // Set cleaning fields after submission option

            _this.cleanFields = options.cleanFields ? true : false; // Show popup after submission with successful result?

            _this.showSuccessPopup = options.showSuccessPopup ? true : false; // Show popup after submission with failed result?

            _this.showFailPopup = options.showFailPopup ? true : false; // Restrict input length

            if (options.restrictInputLength) {
              _restrictLengthMixin_js__WEBPACK_IMPORTED_MODULE_11__[
                'default'
              ].init.call(
                _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(
                  _this
                ),
                _this.$form
              );
            }

            if (options.saveInitialInputValues) {
              _this.$inputs.each(function (index, input) {
                input.setAttribute('data-initial-value', input.value);
              });

              _this.initialValuesSaved = true;
            }

            return _this;
          }

          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default()(
            Form,
            [
              {
                key: '_cacheElements',
                value: function _cacheElements() {
                  // Form
                  this.$form = $(this.selectors.form); // General error container

                  this.$generalError = $(this.selectors.generalError); // Input fields

                  this.$inputs = this.$form.find(this.selectors.inputs);
                },
              },
              {
                key: '_setUpEventListeners',
                value: function _setUpEventListeners() {
                  var _this2 = this;

                  // Form submission
                  this.$form.submit(function (event) {
                    event.preventDefault();
                    event.stopPropagation();

                    if (!_this2.frontendValidation) {
                      // If this form doesn't require frontend validation (as with checkboxes)
                      _this2.collectFormInputs();

                      _this2.deleteGeneralError();

                      _this2.sendFormInformation();

                      return;
                    }

                    if (_this2.$form.valid()) {
                      // If the form has frontend validation
                      _this2.collectFormInputs();

                      _this2.deleteGeneralError();

                      _this2.sendFormInformation();
                    }
                  }); // Hiding error message on focus

                  this.$inputs.focus(function (event) {
                    $(event.target)
                      .closest(_this2.selectors['input-wrapper'])
                      .find('.custom-error')
                      .remove();
                  });
                  $(document)
                    .on('chainedForms:switchForm', function () {
                      _this2.deleteGeneralError();
                    })
                    .ready(function () {
                      _this2.$inputs.each(function (index, elem) {
                        var $elem = $(elem);
                        if ($elem.is('select') || $elem.hasClass('preserve'))
                          return;
                        elem.value = '';
                      });
                    });
                },
              },
              {
                key: 'collectLocationData',
                value: function collectLocationData(element) {
                  this.formData['city'] = {};

                  for (var property in element.dataset) {
                    this.formData['city'][property] = element.dataset[property];
                  }
                },
              },
              {
                key: 'collectFormInputs',
                value: function collectFormInputs() {
                  var _this3 = this;

                  // Collect form inputs
                  this.$inputs.each(function (index, element) {
                    var name = element.name;
                    var $element = $(element);

                    if ($element.is(':checkbox')) {
                      _this3.formData[name] = $element.is(':checked');
                    } else if ($element.is(':radio')) {
                      _this3.formData[name] = $(
                        'input[name=' + name + ']:checked'
                      ).val();
                    } else if (name === 'city') {
                      _this3.collectLocationData(element);
                    } else {
                      var value = $element.val();
                      var numericValue = Number(value); // Perform type conversion if the value is a number

                      _this3.formData[name] = isNaN(numericValue)
                        ? value
                        : numericValue;
                    }
                  });
                },
              },
              {
                key: 'sendFormInformation',
                value: (function () {
                  var _sendFormInformation = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()(
                    /*#__PURE__*/ _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(
                      function _callee() {
                        var _this$requests$submit,
                          headers,
                          method,
                          endpoint,
                          userId,
                          response,
                          customSubmittedEvent,
                          errors;

                        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(
                          function _callee$(_context) {
                            while (1) {
                              switch ((_context.prev = _context.next)) {
                                case 0:
                                  (_this$requests$submit = this.requests
                                    .submit),
                                    (headers = _this$requests$submit.headers),
                                    (method = _this$requests$submit.method),
                                    (endpoint = _this$requests$submit.endpoint);
                                  userId = localStorage.getItem('userId');

                                  if (this.payment && userId) {
                                    endpoint.searchParams.set('userId', userId);
                                  }

                                  _context.prev = 3;
                                  _context.next = 6;
                                  return this.makeRequest({
                                    headers: headers,
                                    endpoint: endpoint,
                                    method: method,
                                    body: JSON.stringify(this.formData),
                                  });

                                case 6:
                                  response = _context.sent;
                                  _context.next = 12;
                                  break;

                                case 9:
                                  _context.prev = 9;
                                  _context.t0 = _context['catch'](3);
                                  // Unsuccessful Popup
                                  this.showRequestResult({
                                    title: _context.t0.name,
                                    text: _context.t0.message,
                                    icon: 'error',
                                  });

                                case 12:
                                  _context.prev = 12;
                                  // Remove error messages
                                  this.$form.find('.error').remove();
                                  return _context.finish(12);

                                case 15:
                                  if (response.success) {
                                    // Generate submit event on the form
                                    if (this.generateSubmitEvent) {
                                      // Make custom event for form submission
                                      customSubmittedEvent = new CustomEvent(
                                        'submitted'
                                      ); // Dispatch custom event

                                      this.$form[0].dispatchEvent(
                                        customSubmittedEvent
                                      );
                                    }

                                    $(document).trigger('form:submitted', {
                                      response: response,
                                      $form: this.$form,
                                    });

                                    if (this.showSuccessPopup) {
                                      // Successful Popup
                                      this.showRequestResult({
                                        title: response.title,
                                        text: response.message,
                                        icon: 'success',
                                      });
                                    }

                                    if (this.cleanFields) {
                                      // Clean input fields
                                      this.$inputs.val('');
                                    }

                                    if (this.redirectOnSubmit) {
                                      // Redirection with simulating HTTP request
                                      setTimeout(function () {
                                        window.location.replace(
                                          response.redirect
                                        );
                                      }, 1000);
                                    }
                                  } else {
                                    if (this.showFailPopup) {
                                      // Unsuccessful Popup
                                      this.showRequestResult({
                                        title: response.title,
                                        text: response.message,
                                        icon: 'error',
                                      });
                                    }

                                    errors = response.errors; // Show errors of the form fields

                                    this.showErrorMessages({
                                      errors: errors,
                                    });

                                    if (errors.general) {
                                      this.showGeneralError(errors.general);
                                    }
                                  }

                                  this.formData = {};

                                case 17:
                                case 'end':
                                  return _context.stop();
                              }
                            }
                          },
                          _callee,
                          this,
                          [[3, 9, 12, 15]]
                        );
                      }
                    )
                  );

                  function sendFormInformation() {
                    return _sendFormInformation.apply(this, arguments);
                  }

                  return sendFormInformation;
                })(),
              },
              {
                key: 'showErrorMessages',
                value: function showErrorMessages(_ref) {
                  var _this4 = this;

                  var errors = _ref.errors;
                  this.$inputs.each(function (index, element) {
                    var name = element.name;

                    if (name in errors) {
                      $(element)
                        .closest(_this4.selectors['input-wrapper'])
                        .append(
                          $('<span></span>')
                            .addClass('error')
                            .addClass('custom-error')
                            .text(errors[name])
                        );
                    }
                  });
                },
              },
              {
                key: 'showGeneralError',
                value: function showGeneralError(errorText) {
                  this.$generalError.append(
                    $('<p></p>').addClass('pb-4').text(errorText)
                  );
                },
              },
              {
                key: 'deleteGeneralError',
                value: function deleteGeneralError() {
                  this.$generalError.empty();
                },
              },
            ]
          );

          return Form;
        })(_requests_js__WEBPACK_IMPORTED_MODULE_8__['default']);

        /***/
      },

    /***/ './js/modules/formatTime.js':
      /*!**********************************!*\
  !*** ./js/modules/formatTime.js ***!
  \**********************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return formatTime;
          }
        );
        /* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! moment */ '../node_modules/moment/moment.js'
        );
        /* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          moment__WEBPACK_IMPORTED_MODULE_0__
        );
        // Adding localization
        //moment.locale('pl');

        /**
         * Function formatting timestamp into a human-readable format
         * When the given time (in timestamp) is less than a day ago, show hours and minutes
         * Othervise, show date and month
         * @param {Number} timestamp - timestamp in milliseconds to format
         */

        function formatTime(timestamp) {
          timestamp = parseInt(timestamp);
          if (typeof timestamp !== 'number')
            throw new TypeError('Invalid time');
          var duration = Math.round(
            moment__WEBPACK_IMPORTED_MODULE_0___default.a
              .duration(
                moment__WEBPACK_IMPORTED_MODULE_0___default()().diff(
                  moment__WEBPACK_IMPORTED_MODULE_0___default.a.unix(timestamp)
                )
              )
              .asHours()
          );
          return duration < 24
            ? moment__WEBPACK_IMPORTED_MODULE_0___default.a
                .unix(timestamp)
                .format('HH:mm')
            : ''
                .concat(
                  moment__WEBPACK_IMPORTED_MODULE_0___default.a
                    .unix(timestamp)
                    .format('DD MMM'),
                  ', '
                )
                .concat(
                  moment__WEBPACK_IMPORTED_MODULE_0___default.a
                    .unix(timestamp)
                    .format('HH:mm')
                );
        }

        /***/
      },

    /***/ './js/modules/gallery.js':
      /*!*******************************!*\
  !*** ./js/modules/gallery.js ***!
  \*******************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return Gallery;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/createClass */ '../node_modules/@babel/runtime/helpers/createClass.js'
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime/helpers/inherits */ '../node_modules/@babel/runtime/helpers/inherits.js'
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime/helpers/possibleConstructorReturn */ '../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js'
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @babel/runtime/helpers/getPrototypeOf */ '../node_modules/@babel/runtime/helpers/getPrototypeOf.js'
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__
        );
        /* harmony import */ var _preparePhotoModal_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ./preparePhotoModal.js */ './js/modules/preparePhotoModal.js'
        );
        /* harmony import */ var _requests_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ./requests.js */ './js/modules/requests.js'
        );

        function _createSuper(Derived) {
          var hasNativeReflectConstruct = _isNativeReflectConstruct();
          return function _createSuperInternal() {
            var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(
                Derived
              ),
              result;
            if (hasNativeReflectConstruct) {
              var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(
                this
              ).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
            } else {
              result = Super.apply(this, arguments);
            }
            return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              result
            );
          };
        }

        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct)
            return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;
          try {
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            );
            return true;
          } catch (e) {
            return false;
          }
        }

        var Gallery = /*#__PURE__*/ (function (_ServerRequest) {
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(
            Gallery,
            _ServerRequest
          );

          var _super = _createSuper(Gallery);

          function Gallery(options) {
            var _this;

            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(
              this,
              Gallery
            );

            _this = _super.call(this, options);
            _this.galleryConfig = options.galleryManipulation;
            _this.redirectForPermission = options.redirectForPermission;

            _this._cacheElements();

            _this._setUpEventListeners();

            _this.initializeLoadingIndicators(_this.$modalPermissionForm);

            return _this;
          }

          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(
            Gallery,
            [
              {
                key: '_cacheElements',
                value: function _cacheElements() {
                  var selectors = this.selectors; // Swiper slider

                  this.$gallery = $(selectors.gallery);
                  this.$slides = this.$gallery.find(selectors.photoContainer);
                  this.$photos = this.$gallery.find(selectors.gallerySlide); // Elements inside modal

                  var modal = selectors.modal,
                    animateOnShown = selectors.animateOnShown;
                  this.$modal = $(modal);
                  this.$modalImage = this.$modal.find(selectors.modalImage);
                  this.$modalDescription = this.$modal.find(
                    selectors.modalDescription
                  ); // Form wrapping permission button

                  this.$modalPermissionForm = this.$modal.find(
                    selectors.modalPermissionForm
                  );
                  this.$modalPermissionButton = this.$modalPermissionForm
                    .find(selectors.modalPermissionButton)
                    .fadeOut(0);
                  this.$modalPrevArrow = this.$modal.find(selectors.prevArrow);
                  this.$modalNextArrow = this.$modal.find(selectors.nextArrow); // User avatar preparation

                  var _selectors$avatar = selectors.avatar,
                    imageWrapper = _selectors$avatar.imageWrapper,
                    hiddenGallerySlide = _selectors$avatar.hiddenGallerySlide;
                  this.$avatar = $(imageWrapper);
                  this.$avatarSlide = this.$gallery.find(hiddenGallerySlide); // Initialize modal preparation

                  Object(
                    _preparePhotoModal_js__WEBPACK_IMPORTED_MODULE_5__[
                      'default'
                    ]
                  )({
                    modal: modal,
                    animateOnShown: animateOnShown,
                  }).init();
                },
              },
              {
                key: '_setUpEventListeners',
                value: function _setUpEventListeners() {
                  var _this2 = this;

                  //Caching
                  var $body = $('body');
                  /**
                   * Show modal with content based on the currently clicked photo
                   * This event handler opens gallery
                   */

                  this.$gallery.click(function (event) {
                    var target = event.target;
                    if (target.tagName !== 'IMG') return;

                    _this2._generateModal(target);
                  });
                  /**
                   * Show avatar in gallery when avatar is clicked
                   */

                  this.$avatar.click(function (event) {
                    _this2.$avatarSlide.click();
                  });
                  /**
                   * Change currently shown photo when the photo is clicked
                   * in the opened gallery
                   */

                  this.$modal.click(function (event) {
                    // Show next photo when the photo is clicked
                    var target = event.target;
                    if (
                      !$(target).hasClass(_this2.galleryConfig.arrowClass) &&
                      target.tagName !== 'IMG'
                    )
                      return;
                    var config = _this2.galleryConfig; // Change order

                    if (
                      target.tagName === 'IMG' ||
                      $(target).hasClass(config.nextClass)
                    ) {
                      ++_this2.order;
                    }

                    if ($(target).hasClass(config.prevClass)) {
                      --_this2.order;
                    }

                    _this2._updateGallery();
                  });
                  this.$modalPermissionForm.submit(function (event) {
                    event.preventDefault();

                    _this2._askPermission();
                  }); // Touch support for mobile devices

                  this._addTouchSupport();
                  /**
                   * Manipulation of the gallery using arrows
                   */

                  this.$modal.on('keydown', function (event) {
                    var key = event.key;
                    if (key !== 'ArrowRight' && key !== 'ArrowLeft') return; // Change order

                    if (key === 'ArrowRight') {
                      ++_this2.order;
                    } else {
                      --_this2.order;
                    }

                    _this2._updateGallery();
                  });
                },
                /**
                 * Add support of the swipe for mobile devices
                 *
                 * When swipe is started:
                 * Get the initial swipe coordinates
                 *
                 * When swipe occurs:
                 * Save the current swipe coordinated
                 *
                 * When swipe is finished:
                 * Event handler to handle finishing the swiping of the image
                 * 1. calculate the distance of the swipe
                 * 2. Compare swipe distance and minimum distance to swipe.
                 * 3. Swipe to the right if it is not the last photo
                 * 4. Swipe to the left if it is not the first photo
                 */
              },
              {
                key: '_addTouchSupport',
                value: function _addTouchSupport() {
                  var _this3 = this;

                  var clientXStart, clientXEnd, distance;
                  this.$modalImage.on('touchstart', function (event) {
                    // Save coordinates of the initial touch point
                    clientXStart = event.touches[0].clientX;
                  });
                  this.$modalImage.on('touchmove', function (event) {
                    // Save coordinates while touch point is moving
                    clientXEnd = event.touches[0].clientX;
                  });
                  this.$modalImage.on('touchend', function () {
                    distance = clientXStart - clientXEnd; // Change order

                    if (distance > _this3.touchTrottle) {
                      // Don't swipe to the right if this is the last photo
                      if (_this3.order === _this3.$slides.length) return;
                      ++_this3.order;
                    } else if (distance < -_this3.touchTrottle) {
                      // Don't swipe to the left if this is the last photo
                      if (_this3.order === 0) return;
                      --_this3.order;
                    }

                    _this3._updateGallery();
                  });
                },
              },
              {
                key: '_updateGallery',
                value: function _updateGallery() {
                  if (this.order === this.$photos.length) {
                    --this.order;
                    console.log('Preventing switching between photos');
                    return;
                  } // Get image based on the current order

                  var newImage = this.$gallery.find(
                    'img[data-order="'.concat(this.order, '"]')
                  )[0]; // Update gallery with animation

                  this._generateModal(newImage, true);
                },
              },
              {
                key: '_generateModal',
                value: function _generateModal(target, animation) {
                  var _target$dataset = target.dataset,
                    order = _target$dataset.order,
                    id = _target$dataset.id;

                  if (animation) {
                    // Animate appearance of the modal content
                    this._animateModalContent(target);
                  } else {
                    // Show modal content without animation
                    this._showModalContent(target);
                  }

                  this.$modal.focus();
                  this.order = parseInt(order);
                  this.id = id; // Handle arrow hiding on first/last photos

                  this.order === 0
                    ? this._hidePrevArrow()
                    : this._showPrevArrow();
                  this.order === this.$slides.length - 1
                    ? this._hideNextArrow()
                    : this._showNextArrow();
                },
                /**
                 * 1. Save request information
                 * 2. Make request to get unique identifier
                 * 3. Save it to local storage and pass to the chat via search params
                 * 4. In case of errors, show error popup
                 */
              },
              {
                key: '_askPermission',
                value: function _askPermission() {
                  var _this4 = this;

                  var _this$requests$permis = this.requests.permission,
                    method = _this$requests$permis.method,
                    headers = _this$requests$permis.headers,
                    endpoint = _this$requests$permis.endpoint;
                  this.makeRequest({
                    method: method,
                    headers: headers,
                    endpoint: endpoint,
                  })
                    .then(function (response) {
                      var success = response.success,
                        identifier = response.identifier;
                      if (!success) throw new Error('Somehting went wrong');
                      localStorage.setItem('permissionRequest', identifier);
                      window.location.assign(
                        ''
                          .concat(
                            _this4.redirectForPermission,
                            '?sendMessage=true&type=permissionRequest&identifier='
                          )
                          .concat(identifier)
                      );
                    })
                    ['catch'](function (error) {
                      _this4.showRequestResult({
                        title: error.name,
                        text: error.message,
                        icon: 'error',
                      });
                    });
                },
              },
              {
                key: '_animateModalContent',
                value: function _animateModalContent(target) {
                  var _this5 = this;

                  var _this$_getPhotoInfo = this._getPhotoInfo(target),
                    description = _this$_getPhotoInfo.description,
                    privacy = _this$_getPhotoInfo.privacy,
                    src = _this$_getPhotoInfo.src; // Animate photo disappearance

                  this.$modalImage.fadeOut({
                    duration: 400,
                    queue: false,
                    complete: function complete() {
                      // Change src attribute of the photo
                      _this5.$modalImage.attr('src', src); // Animate photo appearance

                      _this5.$modalImage.fadeIn({
                        duration: 400,
                        queue: false,
                      });

                      if (privacy) {
                        // Animate button appearance
                        _this5.$modalPermissionButton.fadeIn({
                          duration: 400,
                          queue: false,
                        });
                      }
                    },
                  }); // Animate photo description disappearance

                  this.$modalDescription.fadeOut({
                    duration: 400,
                    queue: false,
                    complete: function complete() {
                      // Change description
                      _this5._changeDescription(description, privacy); // Animate photo description appearance

                      _this5.$modalDescription.fadeIn({
                        duration: 400,
                        queue: false,
                      });
                    },
                  });

                  if (!privacy) {
                    // Animate button disappearance
                    this.$modalPermissionButton.fadeOut({
                      duration: 400,
                      queue: false,
                    });
                  }
                },
              },
              {
                key: '_showModalContent',
                value: function _showModalContent(target) {
                  var _this$_getPhotoInfo2 = this._getPhotoInfo(target),
                    description = _this$_getPhotoInfo2.description,
                    privacy = _this$_getPhotoInfo2.privacy,
                    src = _this$_getPhotoInfo2.src;

                  this.$modalImage.attr('src', src);

                  this._changeDescription(description, privacy);

                  privacy
                    ? this.$modalPermissionButton.fadeIn(0)
                    : this.$modalPermissionButton.fadeOut(0);
                },
              },
              {
                key: '_changeDescription',
                value: function _changeDescription(description, privacy) {
                  this.$modalDescription.text(description);

                  this._alignDescriptionText(privacy);
                },
              },
              {
                key: '_getPhotoInfo',
                value: function _getPhotoInfo(target) {
                  var _target$dataset2 = target.dataset,
                    description = _target$dataset2.description,
                    privacy = _target$dataset2.privacy;
                  var src = target.src; // Convert privacy into boolean

                  privacy = privacy === 'true' ? true : false;
                  return {
                    description: description,
                    privacy: privacy,
                    src: src,
                  };
                },
              },
              {
                key: '_alignDescriptionText',
                value: function _alignDescriptionText(privacy) {
                  privacy
                    ? this.$modal.addClass('private')
                    : this.$modal.removeClass('private');
                }, // Hiding and showing arrows
              },
              {
                key: '_hidePrevArrow',
                value: function _hidePrevArrow() {
                  this.$modalPrevArrow.hide();
                },
              },
              {
                key: '_showPrevArrow',
                value: function _showPrevArrow() {
                  this.$modalPrevArrow.show();
                },
              },
              {
                key: '_hideNextArrow',
                value: function _hideNextArrow() {
                  this.$modalNextArrow.hide();
                },
              },
              {
                key: '_showNextArrow',
                value: function _showNextArrow() {
                  this.$modalNextArrow.show();
                }, // Getters and setters
              },
              {
                key: 'touchTrottle',
                get: function get() {
                  return 50;
                },
              },
            ]
          );

          return Gallery;
        })(_requests_js__WEBPACK_IMPORTED_MODULE_6__['default']);

        /***/
      },

    /***/ './js/modules/getAllUrlParams.js':
      /*!***************************************!*\
  !*** ./js/modules/getAllUrlParams.js ***!
  \***************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return getAllUrlParams;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/slicedToArray */ '../node_modules/@babel/runtime/helpers/slicedToArray.js'
        );
        /* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _getUrlParams_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ./getUrlParams.js */ './js/modules/getUrlParams.js'
        );

        function getAllUrlParams() {
          var queries = window.location.search.substring(1).split('&');
          if (queries[0].length === 0) return false;
          var params = {};
          queries.forEach(function (item) {
            var _item$split = item.split('='),
              _item$split2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(
                _item$split,
                2
              ),
              key = _item$split2[0],
              value = _item$split2[1];

            params[key] = value;
          });
          return params;
        }

        /***/
      },

    /***/ './js/modules/getUrlParams.js':
      /*!************************************!*\
  !*** ./js/modules/getUrlParams.js ***!
  \************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return getUrlParams;
          }
        );
        function getUrlParams(variable) {
          var query = window.location.search.substring(1);
          var vars = query.split('&');

          for (var i = 0; i < vars.length; i++) {
            var pair = vars[i].split('=');

            if (pair[0] == variable) {
              return pair[1];
            }
          }

          return false;
        }

        /***/
      },

    /***/ './js/modules/helper.js':
      /*!******************************!*\
  !*** ./js/modules/helper.js ***!
  \******************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/regenerator */ '../node_modules/@babel/runtime/regenerator/index.js'
        );
        /* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/asyncToGenerator */ '../node_modules/@babel/runtime/helpers/asyncToGenerator.js'
        );
        /* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__
        );

        /* harmony default export */ __webpack_exports__[
          'default'
        ] = (function () {
          // Private variables and functions
          var breakpoints = [320, 576, 768, 992, 1200];
          return {
            // Public variables and functions
            getScrollBarWidth: function getScrollBarWidth() {
              var $outer = $('<div>')
                  .css({
                    visibility: 'hidden',
                    width: 100,
                    overflow: 'scroll',
                  })
                  .appendTo('body'),
                widthWithScroll = $('<div>')
                  .css({
                    width: '100%',
                  })
                  .appendTo($outer)
                  .outerWidth();
              $outer.remove();
              return 100 - widthWithScroll;
            },
            getViewportWidth: function getViewportWidth() {
              return $(window).width() + this.getScrollBarWidth();
            },
            getViewportRange: function getViewportRange() {
              var viewportWidth = this.getViewportWidth();

              if (viewportWidth && viewportWidth < breakpoints[1]) {
                return 'xs';
              } else if (
                breakpoints[1] <= viewportWidth &&
                viewportWidth < breakpoints[2]
              ) {
                return 'sm';
              } else if (
                breakpoints[2] <= viewportWidth &&
                viewportWidth < breakpoints[3]
              ) {
                return 'md';
              } else if (
                breakpoints[3] <= viewportWidth &&
                viewportWidth < breakpoints[4]
              ) {
                return 'lg';
              } else if (breakpoints[4] <= viewportWidth) {
                return 'xl';
              }
            },
            getHeaderHeight: function getHeaderHeight() {
              var headerSelector =
                arguments.length > 0 && arguments[0] !== undefined
                  ? arguments[0]
                  : '.private-header';
              return $(headerSelector).outerHeight();
            },
            hasTouchScreen: function hasTouchScreen() {
              var hasTouchScreen = false;

              if ('maxTouchPoints' in navigator) {
                hasTouchScreen = navigator.maxTouchPoints > 0;
              } else if ('msMaxTouchPoints' in navigator) {
                hasTouchScreen = navigator.msMaxTouchPoints > 0;
              } else {
                var mQ = window.matchMedia && matchMedia('(pointer:coarse)');

                if (mQ && mQ.media === '(pointer:coarse)') {
                  hasTouchScreen = !!mQ.matches;
                } else if ('orientation' in window) {
                  // deprecated, but good fallback
                  hasTouchScreen = true;
                } else {
                  // Only as a last resort, fall back to user agent sniffing
                  var UA = navigator.userAgent;
                  hasTouchScreen =
                    /\b(BlackBerry|webOS|iPhone|IEMobile)\b/i.test(UA) ||
                    /\b(Android|Windows Phone|iPad|iPod)\b/i.test(UA);
                }
              }

              return hasTouchScreen;
            },
            hasWebCamera: function hasWebCamera() {
              var hasWebCam, supportMediaDevices; // Check properties support in the browser

              if (
                !navigator.mediaDevices ||
                !navigator.mediaDevices.enumerateDevices
              ) {
                return {
                  supportMediaDevices: false,
                };
              } else {
                supportMediaDevices = true;
              }

              return navigator.mediaDevices
                .enumerateDevices()
                .then(function (devices) {
                  hasWebCam = devices.some(function (device) {
                    return device.kind === 'videoinput';
                  });
                  return {
                    supportMediaDevices: supportMediaDevices,
                    hasWebCam: hasWebCam,
                  };
                })
                ['catch'](function (err) {
                  console.log(err.name + ': ' + err.message);
                });
            },
            isShowCameraCapturing: function isShowCameraCapturing() {
              var _this = this;

              return _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()(
                /*#__PURE__*/ _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(
                  function _callee() {
                    var hasTouchScreen,
                      _yield$_this$hasWebCa,
                      supportMediaDevices,
                      hasWebCam;

                    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(
                      function _callee$(_context) {
                        while (1) {
                          switch ((_context.prev = _context.next)) {
                            case 0:
                              hasTouchScreen = _this.hasTouchScreen();
                              _context.next = 3;
                              return _this.hasWebCamera();

                            case 3:
                              _yield$_this$hasWebCa = _context.sent;
                              supportMediaDevices =
                                _yield$_this$hasWebCa.supportMediaDevices;
                              hasWebCam = _yield$_this$hasWebCa.hasWebCam;

                              if (supportMediaDevices) {
                                _context.next = 10;
                                break;
                              }

                              return _context.abrupt('return', true);

                            case 10:
                              if (!(hasTouchScreen && hasWebCam)) {
                                _context.next = 14;
                                break;
                              }

                              return _context.abrupt('return', true);

                            case 14:
                              return _context.abrupt('return', false);

                            case 15:
                            case 'end':
                              return _context.stop();
                          }
                        }
                      },
                      _callee
                    );
                  }
                )
              )();
            },
            MIMETypeIsImage: function MIMETypeIsImage(file) {
              var regex = /^image\/*/i;
              return regex.test(file.type.trim());
            },
          };
        })();

        /***/
      },

    /***/ './js/modules/httpError.js':
      /*!*********************************!*\
  !*** ./js/modules/httpError.js ***!
  \*********************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return HttpError;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/inherits */ '../node_modules/@babel/runtime/helpers/inherits.js'
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime/helpers/possibleConstructorReturn */ '../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js'
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime/helpers/getPrototypeOf */ '../node_modules/@babel/runtime/helpers/getPrototypeOf.js'
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__
        );
        /* harmony import */ var _babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @babel/runtime/helpers/wrapNativeSuper */ '../node_modules/@babel/runtime/helpers/wrapNativeSuper.js'
        );
        /* harmony import */ var _babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_4__
        );

        function _createSuper(Derived) {
          var hasNativeReflectConstruct = _isNativeReflectConstruct();
          return function _createSuperInternal() {
            var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(
                Derived
              ),
              result;
            if (hasNativeReflectConstruct) {
              var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(
                this
              ).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
            } else {
              result = Super.apply(this, arguments);
            }
            return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(
              this,
              result
            );
          };
        }

        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct)
            return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;
          try {
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            );
            return true;
          } catch (e) {
            return false;
          }
        }

        var HttpError = /*#__PURE__*/ (function (_Error) {
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1___default()(
            HttpError,
            _Error
          );

          var _super = _createSuper(HttpError);

          function HttpError(message, response) {
            var _this;

            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(
              this,
              HttpError
            );

            _this = _super.call(this, message);
            _this.name = 'HttpError'; // Save error information

            var status = response.status,
              statusText = response.statusText,
              headers = response.headers;
            _this.status = status;
            _this.statusText = statusText;
            _this.headers = headers;
            return _this;
          }

          return HttpError;
        })(
          /*#__PURE__*/ _babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_4___default()(
            Error
          )
        );

        /***/
      },

    /***/ './js/modules/lazyLoading.js':
      /*!***********************************!*\
  !*** ./js/modules/lazyLoading.js ***!
  \***********************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return LazyLoading;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/createClass */ '../node_modules/@babel/runtime/helpers/createClass.js'
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime/helpers/assertThisInitialized */ '../node_modules/@babel/runtime/helpers/assertThisInitialized.js'
        );
        /* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime/helpers/inherits */ '../node_modules/@babel/runtime/helpers/inherits.js'
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @babel/runtime/helpers/possibleConstructorReturn */ '../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js'
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! @babel/runtime/helpers/getPrototypeOf */ '../node_modules/@babel/runtime/helpers/getPrototypeOf.js'
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__
        );
        /* harmony import */ var _requests_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ./requests.js */ './js/modules/requests.js'
        );

        function _createSuper(Derived) {
          var hasNativeReflectConstruct = _isNativeReflectConstruct();
          return function _createSuperInternal() {
            var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                Derived
              ),
              result;
            if (hasNativeReflectConstruct) {
              var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                this
              ).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
            } else {
              result = Super.apply(this, arguments);
            }
            return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(
              this,
              result
            );
          };
        }

        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct)
            return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;
          try {
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            );
            return true;
          } catch (e) {
            return false;
          }
        }

        var LazyLoading = /*#__PURE__*/ (function (_ServerRequest) {
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(
            LazyLoading,
            _ServerRequest
          );

          var _super = _createSuper(LazyLoading);

          function LazyLoading(options) {
            var _this;

            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(
              this,
              LazyLoading
            );

            _this = _super.call(this, options); //Bind context

            _this._getItems = _this._getItems.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(
                _this
              )
            );
            _this._initializeObserver = _this._initializeObserver.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(
                _this
              )
            );

            _this._setUpEventListeners();

            var searchParams = options.searchParams;

            for (var key in searchParams) {
              _this.requests.items.endpoint.searchParams.set(
                key,
                searchParams[key]
              );
            }
            /**
             * 1. Save observer options
             * 2. Get the root element
             * 3. Trigger lazyLoading:beforeObserve:
             * - This event is indicating that the observer is ready
             *    to revieve message to observe
             */

            var observerOptions = options.observerOptions;
            _this.observerRoot = observerOptions.root = document.getElementById(
              observerOptions.root
            );
            $(document).trigger('lazyLoading:beforeObserve');
            return _this;
          }

          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(
            LazyLoading,
            [
              {
                key: '_setUpEventListeners',
                value: function _setUpEventListeners() {
                  var _this2 = this;

                  var $document = $(document);
                  $document.on('items:afterGettingLastItem', function (
                    event,
                    lastMessage
                  ) {
                    // Stop observing the previously cached last message
                    if (_this2.lastMessage) {
                      _this2.observer.unobserve(_this2.lastMessage);
                    } // Initialize observer

                    _this2._initializeObserver(); // Save the new last message and observe it

                    _this2.observer.observe((_this2.lastMessage = lastMessage));
                  });
                },
              },
              {
                key: '_getItems',
                value: function _getItems() {
                  var _this$requests$items = this.requests.items,
                    headers = _this$requests$items.headers,
                    endpoint = _this$requests$items.endpoint,
                    method = _this$requests$items.method;
                  return this.makeRequest({
                    headers: headers,
                    endpoint: endpoint,
                    method: method,
                  });
                },
              },
            ]
          );

          return LazyLoading;
        })(_requests_js__WEBPACK_IMPORTED_MODULE_6__['default']);

        /***/
      },

    /***/ './js/modules/like.js':
      /*!****************************!*\
  !*** ./js/modules/like.js ***!
  \****************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return Like;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/inherits */ '../node_modules/@babel/runtime/helpers/inherits.js'
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime/helpers/possibleConstructorReturn */ '../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js'
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime/helpers/getPrototypeOf */ '../node_modules/@babel/runtime/helpers/getPrototypeOf.js'
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__
        );
        /* harmony import */ var _requests_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ./requests.js */ './js/modules/requests.js'
        );

        function _createSuper(Derived) {
          var hasNativeReflectConstruct = _isNativeReflectConstruct();
          return function _createSuperInternal() {
            var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(
                Derived
              ),
              result;
            if (hasNativeReflectConstruct) {
              var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(
                this
              ).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
            } else {
              result = Super.apply(this, arguments);
            }
            return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(
              this,
              result
            );
          };
        }

        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct)
            return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;
          try {
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            );
            return true;
          } catch (e) {
            return false;
          }
        }

        var Like = /*#__PURE__*/ (function (_ServerRequest) {
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1___default()(
            Like,
            _ServerRequest
          );

          var _super = _createSuper(Like);

          function Like(options) {
            var _this;

            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(
              this,
              Like
            );

            _this = _super.call(this, options);
            var classes = options.classes,
              selectors = _this.selectors;
            var _this$requests$sendLi = _this.requests.sendLike,
              method = _this$requests$sendLi.method,
              headers = _this$requests$sendLi.headers,
              endpoint = _this$requests$sendLi.endpoint; // Caching

            _this.heartWrapper = $(selectors.heartWrapper);
            _this.heartEmpty = _this.heartWrapper.find(selectors.heartEmpty);
            _this.heartFull = _this.heartWrapper.find(selectors.heartFull); // Toggle like

            var toggleLike = function toggleLike() {
              _this.heartEmpty.toggleClass(classes.likeEmpty);

              _this.heartFull.toggleClass(classes.likeFull);
            }; // Event listener

            _this.heartWrapper.click(function () {
              toggleLike();

              _this
                .makeRequest({
                  method: method,
                  headers: headers,
                  endpoint: endpoint,
                })
                .then(function (response) {
                  if (!response.success) {
                    toggleLike();
                  }
                });
            });

            return _this;
          }

          return Like;
        })(_requests_js__WEBPACK_IMPORTED_MODULE_4__['default']);

        /***/
      },

    /***/ './js/modules/locationMixin.js':
      /*!*************************************!*\
  !*** ./js/modules/locationMixin.js ***!
  \*************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var _debounce_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ./debounce.js */ './js/modules/debounce.js'
        );

        /* harmony default export */ __webpack_exports__[
          'default'
        ] = (function () {
          // Private functions and variables
          // Timer id for debouncing
          var timerId,
            $locationInput,
            $loadingIndicator,
            $locationDropdownWrapper,
            $locationDropdownToggle,
            $locationDropdownMenu,
            dropdownShown = false;
          /**
           * Helper function to cache required elements
           */

          function _cacheElements() {
            // Caching selectors
            var selectors = this.selectors; // Cache input element

            $locationInput = this.$form.find(selectors.locationInput); // Find and hide loading indicator

            $loadingIndicator = this.$form
              .find(selectors.locationLoadingIndicator)
              .fadeOut(0); // location dropdown wrapper

            $locationDropdownWrapper = this.$form.find(
              selectors['location-dropdown']
            ); // Dropdown toggle

            $locationDropdownToggle = $locationDropdownWrapper.find(
              selectors['dropdown-toggle']
            ); // Dropdown menu

            $locationDropdownMenu = $locationDropdownWrapper.find(
              selectors['dropdown-menu']
            );
          }
          /**
           * Helper function to setup event listeners
           */

          function _setUpEventListeners() {
            // Cache
            var requestInfo = this.requests.location; // Handle location input

            $locationInput.on('input focus', function (event) {
              var target = event.target;

              if (event.type === 'focus' && target.dataset.lat) {
                return;
              } // Prepare input for futher actions

              _prepareCityInput(target); // Set delay based on event type

              var delay = event.type === 'focus' ? 0 : 300; // Debounce user input

              _debounce(_getNewCities, delay, requestInfo);
            }); // Handle city selection from dropdown

            $locationDropdownMenu.click(function (event) {
              var target = event.target;
              if (target.tagName !== 'LI') return; // Change how data attributes are handled here

              var _target$dataset = target.dataset,
                lat = _target$dataset.lat,
                lon = _target$dataset.lon,
                name = _target$dataset.name; // Save attributes from selected city

              $locationInput
                .attr('data-lat', lat)
                .attr('data-lon', lon)
                .attr('data-name', name)
                .val(name); // Clean dropdown

              $locationDropdownMenu.empty();

              if ($locationInput.valid()) {
                // This event initially dedicated to profiles retrieval
                $locationInput.trigger('citySelected');
              }
            });
            $locationDropdownWrapper.on('shown.bs.dropdown', function () {
              dropdownShown = true;
            });
            $locationDropdownWrapper.on('hidden.bs.dropdown', function () {
              dropdownShown = false;
            });
          }
          /**
           * Function to prepare user input before showing newly retrieved cities
           * @param {DOMElement} input
           */

          function _prepareCityInput(input) {
            var customAttributes = input.dataset;

            for (var key in customAttributes) {
              customAttributes[key] = '';
            }

            if (dropdownShown) {
              // Hide dropdown menu on input
              $locationDropdownToggle.dropdown('toggle');
            } // Clean dropdown menu

            $locationDropdownMenu.empty();
          }
          /**
           * Function to make async API call to retrieve cities
           */

          function _makeAPICallForCities(_ref) {
            var headers = _ref.headers,
              endpoint = _ref.endpoint,
              method = _ref.method;
            return this.makeRequest({
              headers: headers,
              endpoint: endpoint,
              method: method,
            });
          }
          /**
           * Function to display cities in dropdown
           * @param {Array} cities - cities from the API to display in dropdown
           */

          function _displayCities(cities) {
            if (cities.length === 0) return;
            cities.forEach(function (city) {
              $locationDropdownMenu
                .append(
                  $('<li></li>')
                    .addClass('dropdown-item')
                    .attr('data-lat', city.lat)
                    .attr('data-lon', city.lon)
                    .attr('data-name', city['display_name'])
                    .text(city['display_name'])
                )
                .append($('<li></li>').addClass('dropdown-divider'));
            });
            $locationDropdownToggle.dropdown('toggle');
          }
          /**
           * Function to perform operations with city retrieval
           * Including showing and hiding loading indicator
           * and calling function to display cities
           * @param {Object} requestInfo - endpoint, headers and method fot the request to retrieve citis
           */

          function _getNewCities(requestInfo) {
            var city = $locationInput.val();
            if (!city) return; // Show loading indicator

            $loadingIndicator.fadeIn(150); // Set the current input value to the search parameters

            requestInfo.endpoint.searchParams.set('city', city);

            _makeAPICallForCities(requestInfo).then(function (cities) {
              // Hide loading indicator
              $loadingIndicator.fadeOut(150); // Show retrieved cities

              _displayCities(cities);
            });
          }
          /**
           * Function to decrease the amount of requests to the API while user input
           * @param {Function} func - function to debounce
           * @param {Number} delay - delay after which to call the function
           * @param {Object} requestInfo - optional parameter - request information to make an API call
           */

          function _debounce(func, delay, requestInfo) {
            // Cancels the setTimeout method execution
            clearTimeout(timerId); // Executes the func after delay time.

            timerId = setTimeout(func, delay, requestInfo);
          }

          return {
            // Public functions and variables
            // Function for the custom frontend validation of the city input
            frontendCityValidator: function frontendCityValidator(
              value,
              element
            ) {
              // Cache data-* sttributes
              var dataset = element.dataset;

              if (dataset['lat'] && dataset['lon'] && dataset['name']) {
                // If dataset properties are not empty, the element is valid
                return true;
              } else {
                return false;
              }
            },

            /**
             * Function to initialize location input
             * It binds the context of private functions
             * Saves request information
             * Caches elements and sets event listeners
             */
            initializeLocationInput: function initializeLocationInput() {
              // Caching
              var requestInfo = this.requests.location; // Bind context

              this.frontendCityValidator = this.frontendCityValidator.bind(
                this
              );
              _cacheElements = _cacheElements.bind(this);
              _setUpEventListeners = _setUpEventListeners.bind(this);
              _makeAPICallForCities = _makeAPICallForCities.bind(this);
              _getNewCities = _getNewCities.bind(this);
              _displayCities = _displayCities.bind(this);
              _prepareCityInput = _prepareCityInput.bind(this); // Add default query params to retrieve city information

              for (var key in requestInfo.searchParams) {
                requestInfo.endpoint.searchParams.set(
                  key,
                  requestInfo.searchParams[key]
                );
              } // Location input preparation

              _cacheElements();

              _setUpEventListeners();
            },
          };
        })();

        /***/
      },

    /***/ './js/modules/messagesLazyLoading.js':
      /*!*******************************************!*\
  !*** ./js/modules/messagesLazyLoading.js ***!
  \*******************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return MessagesLazyLoading;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/createClass */ '../node_modules/@babel/runtime/helpers/createClass.js'
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime/helpers/inherits */ '../node_modules/@babel/runtime/helpers/inherits.js'
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime/helpers/possibleConstructorReturn */ '../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js'
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @babel/runtime/helpers/getPrototypeOf */ '../node_modules/@babel/runtime/helpers/getPrototypeOf.js'
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__
        );
        /* harmony import */ var _lazyLoading_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ./lazyLoading.js */ './js/modules/lazyLoading.js'
        );
        /* harmony import */ var _formatTime_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ./formatTime.js */ './js/modules/formatTime.js'
        );

        function _createSuper(Derived) {
          var hasNativeReflectConstruct = _isNativeReflectConstruct();
          return function _createSuperInternal() {
            var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(
                Derived
              ),
              result;
            if (hasNativeReflectConstruct) {
              var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(
                this
              ).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
            } else {
              result = Super.apply(this, arguments);
            }
            return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              result
            );
          };
        }

        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct)
            return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;
          try {
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            );
            return true;
          } catch (e) {
            return false;
          }
        }

        var MessagesLazyLoading = /*#__PURE__*/ (function (_LazyLoading) {
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(
            MessagesLazyLoading,
            _LazyLoading
          );

          var _super = _createSuper(MessagesLazyLoading);

          function MessagesLazyLoading(options) {
            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(
              this,
              MessagesLazyLoading
            );

            return _super.call(this, options);
          }
          /**
           * This function is specific to each class utilizing lazy loading parent class
           */

          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(
            MessagesLazyLoading,
            [
              {
                key: '_initializeObserver',
                value: function _initializeObserver() {
                  var _this = this;

                  this.observer =
                    this.observer ||
                    new IntersectionObserver(function (entries) {
                      // Save the last message
                      var element = entries[0];
                      if (!element.isIntersecting) return;
                      /**
                       * 1. Get new messages from the server
                       * 2. Sort them according to the timestamp
                       * 3. Format timestamp and save as a human-readable time
                       * 4. Trigger 'lazyLoading:itemsReady' event and pass messages with it
                       *    This event is indicating that the messages are retrieved and prepared
                       */

                      _this
                        ._getItems()
                        .then(function (messages) {
                          // Prepare messages
                          messages
                            .sort(function (firstMessage, secondMessage) {
                              return firstMessage.timestamp <
                                secondMessage.timestamp
                                ? 1
                                : firstMessage.timestamp >
                                  secondMessage.timestamp
                                ? -1
                                : 0;
                            })
                            .forEach(function (message) {
                              message.time = Object(
                                _formatTime_js__WEBPACK_IMPORTED_MODULE_6__[
                                  'default'
                                ]
                              )(message.timestamp);
                            }); // Send them to display

                          $(document).trigger(
                            'lazyLoading:itemsReady',
                            messages
                          );
                        })
                        ['catch'](function (error) {
                          _this.showRequestResult({
                            title: error.name,
                            text: error.message,
                            icon: 'error',
                          }); // For debugging

                          console.error(error);
                        });
                    });
                },
              },
            ]
          );

          return MessagesLazyLoading;
        })(_lazyLoading_js__WEBPACK_IMPORTED_MODULE_5__['default']);

        /***/
      },

    /***/ './js/modules/modal.js':
      /*!*****************************!*\
  !*** ./js/modules/modal.js ***!
  \*****************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/regenerator */ '../node_modules/@babel/runtime/regenerator/index.js'
        );
        /* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/asyncToGenerator */ '../node_modules/@babel/runtime/helpers/asyncToGenerator.js'
        );
        /* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime/helpers/createClass */ '../node_modules/@babel/runtime/helpers/createClass.js'
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__
        );
        /* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @babel/runtime/helpers/assertThisInitialized */ '../node_modules/@babel/runtime/helpers/assertThisInitialized.js'
        );
        /* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! @babel/runtime/helpers/inherits */ '../node_modules/@babel/runtime/helpers/inherits.js'
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5__
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! @babel/runtime/helpers/possibleConstructorReturn */ '../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js'
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6__
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! @babel/runtime/helpers/getPrototypeOf */ '../node_modules/@babel/runtime/helpers/getPrototypeOf.js'
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7__
        );
        /* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! @babel/runtime/helpers/defineProperty */ '../node_modules/@babel/runtime/helpers/defineProperty.js'
        );
        /* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8__
        );
        /* harmony import */ var _requests_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ./requests.js */ './js/modules/requests.js'
        );

        function _createSuper(Derived) {
          var hasNativeReflectConstruct = _isNativeReflectConstruct();
          return function _createSuperInternal() {
            var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7___default()(
                Derived
              ),
              result;
            if (hasNativeReflectConstruct) {
              var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7___default()(
                this
              ).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
            } else {
              result = Super.apply(this, arguments);
            }
            return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6___default()(
              this,
              result
            );
          };
        }

        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct)
            return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;
          try {
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            );
            return true;
          } catch (e) {
            return false;
          }
        }

        var EditorModal = /*#__PURE__*/ (function (_ServerRequest) {
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_5___default()(
            EditorModal,
            _ServerRequest
          );

          var _super = _createSuper(EditorModal);

          function EditorModal(options) {
            var _this;

            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default()(
              this,
              EditorModal
            );

            _this = _super.call(this, options); // Making configuration object

            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default()(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(
                _this
              ),
              'formData',
              null
            );

            _this.configuration = {
              avatar: false,
              uploader: false,
              editor: false,
              photoBonus: false,
            };

            if (_this.configuration.avatar || _this.configuration.uploader) {
              _this.uploaded = false;
            }

            _this.classes = options.classes; // Binding context

            _this._cacheElements = _this._cacheElements.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(
                _this
              )
            );
            _this._setUpEventListeners = _this._setUpEventListeners.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(
                _this
              )
            );
            _this.savePhotoInformation = _this.savePhotoInformation.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(
                _this
              )
            );
            _this.closeModal = _this.closeModal.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(
                _this
              )
            );
            _this.deletePhoto = _this.deletePhoto.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(
                _this
              )
            );
            _this.makeURLObjects = _this.makeURLObjects.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(
                _this
              )
            );
            _this.clean = _this.clean.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(
                _this
              )
            );
            return _this;
          }
          /**
           * Function caches elements according to passed options.
           */

          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default()(
            EditorModal,
            [
              {
                key: '_cacheElements',
                value: function _cacheElements() {
                  // Modal
                  this.$modal = $(this.selectors.modal); // Find modal footer is presented
                  // And hide it

                  if (this.selectors['modal-footer']) {
                    this.$modalFooter = $(
                      this.$modal.find(this.selectors['modal-footer'])
                    ).hide();
                  } // Form

                  this.$form = this.$modal.find(this.selectors.form); // Closing button

                  this.$closeButton = this.$modal.find('.close'); // Deleting button
                  // Maybe we can put this functionality into uploader

                  if ('deleteButton' in this.selectors) {
                    this.$deleteButton = this.$modal.find(
                      this.selectors.deleteButton
                    );
                  }
                },
              },
              {
                key: '_setUpEventListeners',
                value: function _setUpEventListeners() {
                  var _this2 = this;

                  if (
                    this.configuration.avatar ||
                    this.configuration.uploader
                  ) {
                    this.$closeButton.click(function (event) {
                      // If user closes modal without submitting changes
                      if (!_this2.uploaded) {
                        // Delete his newly uploaded photo
                        _this2._discardChanges();
                      } // Empty error container

                      _this2.$errorContainer.empty(); // Hide modal footer

                      _this2.$modalFooter.hide();
                    });
                  }
                },
                /**
                 * Function to close the modal
                 */
              },
              {
                key: 'closeModal',
                value: function closeModal() {
                  this.$closeButton.click();
                  this.clean();
                },
                /**
                 * Function to delete photo
                 * If used in editor, it will delete provided photo
                 * If used in uploader, it will find the photo containing the currently clicked button
                 * and delete the photo container
                 */
              },
              {
                key: 'deletePhoto',
                value: (function () {
                  var _deletePhoto = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()(
                    /*#__PURE__*/ _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(
                      function _callee(event) {
                        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(
                          function _callee$(_context) {
                            while (1) {
                              switch ((_context.prev = _context.next)) {
                                case 0:
                                  event.preventDefault();

                                  if (this.configuration.uploader) {
                                    $(event.target)
                                      .closest(this.selectors.container)
                                      .remove();
                                  }

                                case 2:
                                case 'end':
                                  return _context.stop();
                              }
                            }
                          },
                          _callee,
                          this
                        );
                      }
                    )
                  );

                  function deletePhoto(_x) {
                    return _deletePhoto.apply(this, arguments);
                  }

                  return deletePhoto;
                })(),
                /**
                 * Function saving information about the photo
                 * @param {object}
                 * @param {object.id} id from the database for particular photo
                 * @param {object.file} file object containing photo
                 * @param {object.src} src for the image preview
                 * @param {object.privacy} privacy input value
                 * @param {object.description} description for the current photo
                 */
              },
              {
                key: 'savePhotoInformation',
                value: function savePhotoInformation(_ref) {
                  var _ref$id = _ref.id,
                    id = _ref$id === void 0 ? null : _ref$id,
                    _ref$file = _ref.file,
                    file = _ref$file === void 0 ? null : _ref$file,
                    _ref$src = _ref.src,
                    src = _ref$src === void 0 ? null : _ref$src,
                    _ref$privacy = _ref.privacy,
                    privacy = _ref$privacy === void 0 ? false : _ref$privacy,
                    _ref$description = _ref.description,
                    description =
                      _ref$description === void 0 ? '' : _ref$description;

                  if (file) {
                    this.photoData[id].file = file;
                  }

                  if (src) {
                    this.photoData[id].src = src;
                  }

                  if (privacy) {
                    this.photoData[id].privacy = JSON.parse(privacy);
                  } else {
                    this.photoData[id].privacy = false;
                  }

                  this.photoData[id].description = description;
                },
              },
            ]
          );

          return EditorModal;
        })(_requests_js__WEBPACK_IMPORTED_MODULE_9__['default']);

        /* harmony default export */ __webpack_exports__[
          'default'
        ] = EditorModal;

        /***/
      },

    /***/ './js/modules/paymentMixin.js':
      /*!************************************!*\
  !*** ./js/modules/paymentMixin.js ***!
  \************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/slicedToArray */ '../node_modules/@babel/runtime/helpers/slicedToArray.js'
        );
        /* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__
        );

        /* harmony default export */ __webpack_exports__['default'] = {
          creditCardNumberValidation: function creditCardNumberValidation(
            value
          ) {
            // remove all non digit characters
            value = value.replace(/\D/g, '');
            var sum = 0;
            var shouldDouble = false; // loop through values starting at the rightmost side

            for (var i = value.length - 1; i >= 0; i--) {
              var digit = parseInt(value.charAt(i));

              if (shouldDouble) {
                if ((digit *= 2) > 9) digit -= 9;
              }

              sum += digit;
              shouldDouble = !shouldDouble;
            }

            return sum % 10 == 0;
          },
          creditCardExpirationValidation: function creditCardExpirationValidation(
            value
          ) {
            var countDigits = function countDigits(year) {
              var count = 0;
              if (year >= 1) ++count;

              while (year / 10 >= 1) {
                year /= 10;
                ++count;
              }

              return count;
            };

            value = String(value);
            var now = new Date();
            var currentMonth = now.getMonth() + 1;
            var currentYear = now.getFullYear(); // Retrieve month and year

            var _value$match = value.match(/\d+/g),
              _value$match2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(
                _value$match,
                2
              ),
              month = _value$match2[0],
              year = _value$match2[1]; //Get rid of leading zero

            month = parseInt(month, 10);
            year = parseInt(year, 10);
            var yearDigits = countDigits(year);

            switch (yearDigits) {
              case 4:
                break;

              case 2:
                currentYear -= 2000;
                break;

              default:
                return false;
            }

            return currentYear === year
              ? currentMonth < month
                ? true
                : false
              : currentYear > year
              ? false
              : true;
          },
        };

        /***/
      },

    /***/ './js/modules/permissionMixin.js':
      /*!***************************************!*\
  !*** ./js/modules/permissionMixin.js ***!
  \***************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */ __webpack_exports__['default'] = {
          initializePhotoPermissionHandling: function initializePhotoPermissionHandling(
            config
          ) {
            // Bind context
            _getPhotoId = _getPhotoId.bind(this); // Cache

            selectors = config.selectors;
            classes = config.classes;
            var $document = $(document);
            this.$chat.click(function (event) {
              var $target = $(event.target);
              if (!$target.hasClass(classes.permissionButton)) return;

              var id = _getPhotoId($target);

              if ($target.hasClass(classes.allow)) {
                // If 'allow' button is clicked
                console.log('Allowed button clicked');
                $document.trigger('permission:actionChosen', {
                  type: 'permissionResponse',
                  action: 'allow',
                  id: id,
                });
              } else if ($target.hasClass(classes.deny)) {
                // If 'deny' button is clicked
                console.log('Deny button clicked');
                $document.trigger('permission:actionChosen', {
                  type: 'permissionResponse',
                  action: 'deny',
                  id: id,
                });
              }

              $target.closest(selectors.buttonsWrapper).remove();
            });
          },
        };
        var selectors, classes;

        function _getPhotoId($target) {
          return $target.closest(selectors.photoWrapper).find('img').data('id');
        }

        /***/
      },

    /***/ './js/modules/photo.js':
      /*!*****************************!*\
  !*** ./js/modules/photo.js ***!
  \*****************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return Photo;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/createClass */ '../node_modules/@babel/runtime/helpers/createClass.js'
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime/helpers/assertThisInitialized */ '../node_modules/@babel/runtime/helpers/assertThisInitialized.js'
        );
        /* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime/helpers/get */ '../node_modules/@babel/runtime/helpers/get.js'
        );
        /* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_3__
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @babel/runtime/helpers/inherits */ '../node_modules/@babel/runtime/helpers/inherits.js'
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! @babel/runtime/helpers/possibleConstructorReturn */ '../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js'
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! @babel/runtime/helpers/getPrototypeOf */ '../node_modules/@babel/runtime/helpers/getPrototypeOf.js'
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__
        );
        /* harmony import */ var _bonus_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ./bonus.js */ './js/modules/bonus.js'
        );
        /* harmony import */ var _photoAnimation_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ./photoAnimation.js */ './js/modules/photoAnimation.js'
        );
        /* harmony import */ var handlebars__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! handlebars */ '../node_modules/handlebars/dist/cjs/handlebars.js'
        );
        /* harmony import */ var handlebars__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/ __webpack_require__.n(
          handlebars__WEBPACK_IMPORTED_MODULE_9__
        );
        /* harmony import */ var _prepareTemplates_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ./prepareTemplates.js */ './js/modules/prepareTemplates.js'
        );
        /* harmony import */ var _photoUploadMixin__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ./photoUploadMixin */ './js/modules/photoUploadMixin.js'
        );

        function _createSuper(Derived) {
          var hasNativeReflectConstruct = _isNativeReflectConstruct();
          return function _createSuperInternal() {
            var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(
                Derived
              ),
              result;
            if (hasNativeReflectConstruct) {
              var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(
                this
              ).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
            } else {
              result = Super.apply(this, arguments);
            }
            return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default()(
              this,
              result
            );
          };
        }

        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct)
            return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;
          try {
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            );
            return true;
          } catch (e) {
            return false;
          }
        }

        var Photo = /*#__PURE__*/ (function (_Bonus) {
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(
            Photo,
            _Bonus
          );

          var _super = _createSuper(Photo);

          function Photo(options) {
            var _this;

            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(
              this,
              Photo
            );

            _this = _super.call(this, options); // Bind context

            _this._discardChanges = _this._discardChanges.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(
                _this
              )
            );
            _this.configuration = {
              photoBonus: true,
            };

            if (_this.isUsedOnThisPage) {
              // Initiate animation for icon in popup
              _this.animation = new _photoAnimation_js__WEBPACK_IMPORTED_MODULE_8__[
                'default'
              ](options.animation);
            } // Prepare photo preview template

            _this.photoTemplates = Object(
              _prepareTemplates_js__WEBPACK_IMPORTED_MODULE_10__['default']
            )(options.photoTemplates);

            _this._cacheElements();

            _this._setUpEventListeners();
            /**
             * Prepare bonus for photo upload:
             * 1. Initialize photo upload (FileReader, photo preview, drag'n'drop)
             * 2. Initialize loading indicator
             */

            Object.assign(
              Photo.prototype,
              _photoUploadMixin__WEBPACK_IMPORTED_MODULE_11__['default']
            );

            _this.initializePhotoUpload();

            _this.initializeLoadingIndicators(_this.$form);

            return _this;
          }

          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(
            Photo,
            [
              {
                key: '_cacheElements',
                value: function _cacheElements() {
                  _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_3___default()(
                    _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(
                      Photo.prototype
                    ),
                    '_cacheElements',
                    this
                  ).call(this);

                  var selectors = this.selectors; // Amount element

                  this.$amount = this.$bonus.find(selectors.amount); // Photo upload and preview

                  this.$modal = $(selectors.modal);
                  this.$closeButton = this.$modal.find(
                    selectors.closeModalButton
                  );
                  this.$modalFooter = this.$modal
                    .find('.modal-footer')
                    .fadeOut(0);
                  this.$previewContainer = this.$modal.find(
                    selectors.previewContainer
                  );
                  this.$form = this.$modal.find(selectors.form);
                },
              },
              {
                key: '_setUpEventListeners',
                value: function _setUpEventListeners() {
                  var _this2 = this;

                  _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_3___default()(
                    _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(
                      Photo.prototype
                    ),
                    '_setUpEventListeners',
                    this
                  ).call(this); // Cache document element

                  var $document = $(document);
                  /**
                   * When the photo input changes:
                   * 1. Delete previous photo previews
                   * 2. Delete information about previous photo
                   * -------------------------------------------
                   * What to add:
                   * 3. Do the same stuff on drop
                   */

                  this.$modal.on('change', function (event) {
                    if (!event.target.classList.contains(_this2.classes.input))
                      return;

                    _this2._discardChanges();
                  });
                  /**
                   * Handle photo submission from the photo upload modal:
                   * 1. Make a request to the server to ask if the bonus can be used
                   * 2. If the bonus can be used, start using it
                   * 3. If success = false or an unexpected error occured, show error popup
                   */

                  this.$form.submit(function (event) {
                    // When the photo is sent by the user
                    event.preventDefault(); // Here, instead of starting using the bonus, ask server

                    _this2
                      .makeRequest(_this2.requests.use)
                      .then(function (response) {
                        var success = response.success,
                          title = response.title,
                          text = response.text;

                        if (!success) {
                          var error = new Error(text);
                          error.name = title;
                          throw error;
                        } // Save description of the photo to the local storage

                        localStorage.setItem(
                          'photoDescription',
                          $(_this2.selectors.photoDescription).val()
                        );

                        if (_this2.isUsedOnThisPage) {
                          _this2._useBonus();
                        } else {
                          _this2._redirectToUseBonus(response);
                        }
                      })
                      ['catch'](function (error) {
                        _this2.showRequestResult({
                          title: error.name,
                          text: error.message,
                          icon: 'error',
                        });
                      });
                  });
                  $(document).on('bonus:startUsage', function (event, _ref) {
                    var type = _ref.type;
                    if (type !== 'photo') return;

                    _this2.$modal.modal('show');
                  });
                  this.$closeButton.click(function () {
                    if (_this2.usingBonus) return;

                    _this2._discardChanges();
                  });
                  $document.on('chat:photoSent', function () {
                    _this2._discardChanges();

                    _this2.usingBonus = false;
                  });
                  $document.on('photoModal:onBeforeOpen', function (
                    event,
                    modal
                  ) {
                    // Start modal preparation
                    _this2.animationPreparation = _this2.animation.prepareAnimation(
                      modal
                    );
                  });
                  $document.on('photoModal:onOpen', function (event, modal) {
                    // Run animation
                    _this2.animation.startAnimation();
                  });
                  $document.on('photoModal:onAfterClose', function (
                    event,
                    modal
                  ) {
                    // Prepare animation for further use
                  });
                },
                /**
                 * 1. Delete previews
                 * 2. Hide modal footer
                 * 3. Delete saved photo information
                 */
              },
              {
                key: '_discardChanges',
                value: function _discardChanges() {
                  // Delete preview
                  this.$previewContainer.empty(); // Hide modal footer

                  this.$modalFooter.fadeOut(0);
                },
                /**
                 * 1. Change the amount of available bonuses on markup
                 * 2. Save photo description to show it in the chat
                 * 3. Prepare formData object to send photo and description to the server
                 * 4. Close modal
                 * 5. Show bonus animation
                 */
              },
              {
                key: '_useBonus',
                value: function _useBonus() {
                  var type =
                    arguments.length > 0 && arguments[0] !== undefined
                      ? arguments[0]
                      : this.type;
                  if (type !== this.type) return; // Change the amount of bonuses available

                  this._decreaseBonusAmountAvailable();

                  this._updateAmountOnMarkup();

                  this.usingBonus = true; // Generate event to send the photo to the user

                  $(document).trigger('present:send', {
                    type: 'photo',
                  }); // Close modal

                  this.$closeButton.click(); // Call alert here with custom animation for photo icon

                  this.fireSendAlert(this.popups.send);
                },
                /**----------------------------------------------------
    /* Functions specific to classes utilizing PhotoUploadMixin
    /* ----------------------------------------------------*/

                /**
                 * Handles class-specific functionality required for preview
                 * 1. Get the src from the filereader
                 * 2. Save src for further usage in chat
                 * 3. Compile template for photo preview
                 * 4. Append template to the preview container
                 * @param {FileReader Object} fileReader - the resulting fileReader object
                 * to preview loaded photo
                 */
              },
              {
                key: '_preview',
                value: function _preview(fileReader) {
                  var src = fileReader.result; // Save src to localStorage to send it to the server in the future

                  localStorage.setItem('photoSrc', src);
                  var compiledPhotoTemplate = handlebars__WEBPACK_IMPORTED_MODULE_9___default.a.compile(
                    this.photoTemplates.preview
                  );
                  compiledPhotoTemplate = compiledPhotoTemplate({
                    src: src,
                  }); // Append template

                  this.$previewContainer.append(compiledPhotoTemplate);
                },
              },
            ]
          );

          return Photo;
        })(_bonus_js__WEBPACK_IMPORTED_MODULE_7__['default']);

        /***/
      },

    /***/ './js/modules/photoAnimation.js':
      /*!**************************************!*\
  !*** ./js/modules/photoAnimation.js ***!
  \**************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return PhotoAnimation;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/createClass */ '../node_modules/@babel/runtime/helpers/createClass.js'
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime/helpers/get */ '../node_modules/@babel/runtime/helpers/get.js'
        );
        /* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime/helpers/inherits */ '../node_modules/@babel/runtime/helpers/inherits.js'
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @babel/runtime/helpers/possibleConstructorReturn */ '../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js'
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! @babel/runtime/helpers/getPrototypeOf */ '../node_modules/@babel/runtime/helpers/getPrototypeOf.js'
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__
        );
        /* harmony import */ var _animatedIcons_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ./animatedIcons.js */ './js/modules/animatedIcons.js'
        );

        function _createSuper(Derived) {
          var hasNativeReflectConstruct = _isNativeReflectConstruct();
          return function _createSuperInternal() {
            var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                Derived
              ),
              result;
            if (hasNativeReflectConstruct) {
              var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                this
              ).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
            } else {
              result = Super.apply(this, arguments);
            }
            return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(
              this,
              result
            );
          };
        }

        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct)
            return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;
          try {
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            );
            return true;
          } catch (e) {
            return false;
          }
        }

        var PhotoAnimation = /*#__PURE__*/ (function (_IconAnimation) {
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(
            PhotoAnimation,
            _IconAnimation
          );

          var _super = _createSuper(PhotoAnimation);

          function PhotoAnimation(options) {
            var _this;

            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(
              this,
              PhotoAnimation
            );

            _this = _super.call(this, options);
            _this.type = 'photoAnimation';
            return _this;
          }

          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(
            PhotoAnimation,
            [
              {
                key: '_setUpEventListeners',
                value: function _setUpEventListeners() {
                  var _this2 = this;

                  // Listen to animation events
                  $(document).on(
                    'webkitAnimationEnd oAnimationEnd msAnimationEnd animationend',
                    function (event) {
                      if (_this2.type !== 'photoAnimation') return;
                      var animationName = event.originalEvent.animationName,
                        target = event.target,
                        iconElements = _this2.iconElements;
                      if (!target.closest(_this2.selectors.popup)) return;

                      if (animationName === 'jackInTheBox') {
                        iconElements.$icon.removeClass('photo-camera');
                        iconElements.$shadow.addClass('photo-flash');
                      } else if (animationName === 'photo-flash') {
                        iconElements.$shadow.removeClass('photo-flash');
                      }
                    }
                  );
                }, // Maybe we can put animation preparation function into animated icons class also
              },
              {
                key: 'prepareAnimation',
                value: function prepareAnimation(modal) {
                  var _this3 = this;

                  return new Promise(function (resolve) {
                    // Append icon through calling parent method
                    _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2___default()(
                      _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                        PhotoAnimation.prototype
                      ),
                      '_prepareAnimation',
                      _this3
                    ).call(_this3, modal); // Resolve the promise

                    resolve('fulfilled');
                  });
                },
              },
              {
                key: 'startAnimation',
                value: function startAnimation() {
                  // Add the class initializing the animation
                  this.iconElements.$icon.addClass('photo-camera');
                },
              },
            ]
          );

          return PhotoAnimation;
        })(_animatedIcons_js__WEBPACK_IMPORTED_MODULE_6__['default']);

        /***/
      },

    /***/ './js/modules/photoUploadMixin.js':
      /*!****************************************!*\
  !*** ./js/modules/photoUploadMixin.js ***!
  \****************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/regenerator */ '../node_modules/@babel/runtime/regenerator/index.js'
        );
        /* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/asyncToGenerator */ '../node_modules/@babel/runtime/helpers/asyncToGenerator.js'
        );
        /* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _fileReaderMixin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ./fileReaderMixin */ './js/modules/fileReaderMixin.js'
        );
        /* harmony import */ var _photosDragnDropMixin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ./photosDragnDropMixin */ './js/modules/photosDragnDropMixin.js'
        );
        /* harmony import */ var _helper_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ./helper.js */ './js/modules/helper.js'
        );
        /* harmony import */ var handlebars__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! handlebars */ '../node_modules/handlebars/dist/cjs/handlebars.js'
        );
        /* harmony import */ var handlebars__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/ __webpack_require__.n(
          handlebars__WEBPACK_IMPORTED_MODULE_5__
        );

        /* harmony default export */ __webpack_exports__[
          'default'
        ] = (function () {
          // Private variables
          var selectors,
            errorText,
            classes,
            isAjaxUpload,
            isAdvancedUpload,
            progressSelectors,
            progressTemplate,
            droppedFiles = false;

          function _cacheElements() {
            // Buttons to disable while file is being read
            this.$disableWhileLoad = this.$modal.find(
              selectors.disableWhileLoad
            ); // Containers
            // Progress

            this.$progressContainer = this.$modal.find(
              progressSelectors.progress
            ); // Error

            this.$errorContainer = this.$modal.find(selectors.errorContainer); // Photo upload

            this.$photoUploadContainer = this.$modal.find(
              selectors.uploadContainer
            ); // Template

            progressTemplate = document.getElementById(
              progressSelectors.templateId
            );
          }
          /**
           * Helper function to set event listeners
           */

          function _setUpEventListeners() {
            var _this = this;

            /**
             * Handling photo upload using file input:
             * 1. Save target of the change event and its FileList property value
             * 2. Don't do anything if it doesn't have files
             * 3. For each file in the file list, load it
             */
            this.$form.on('change', function (event) {
              var files = event.target.files;
              if (!files || !files[0]) return;

              _this.$form.trigger('photoUpload:filesInputed', {
                amount: files.length,
              });

              for (var i = 0; i < files.length; i++) {
                _saveAndPreviewFile.call(_this, files[i]);
              }
            });
            /**
             * Handling hiding loading indicator after the animation is ended
             * 1. Remove progress indicator
             * 2. Enable buttons that waere disabled while loading
             */

            this.$modal.on('transitionend', function (event) {
              var $target = $(event.target);
              if (!$target.hasClass('loadend')) return;
              $target.closest(progressSelectors.fileProgressWrapper).remove();

              _this.$disableWhileLoad.attr('disabled', false);
            });
            if (!isAdvancedUpload) return;
            /**
             * Handle photo upload via Drag'n'Drop:
             * 1. Get the dropped files
             * 2. Save and preview only the first file in case of photo bonus and avatar
             * 3. Preview all the files in case of photo upload in profile
             */

            this.$photoUploadContainer.on('drop', function (event) {
              droppedFiles = event.originalEvent.dataTransfer.files;
              if (droppedFiles.length === 0) return;

              if (_this instanceof Avatar || _this instanceof Photo) {
                _saveAndPreviewFile.call(_this, droppedFiles[0]);

                if (_this instanceof Photo) _this._discardChanges();
              } else if (_this instanceof PhotoUploader) {
                _this.$form.trigger('photoUpload:filesInputed', {
                  amount: droppedFiles.length,
                });

                for (var i = 0; i < droppedFiles.length; i++) {
                  _saveAndPreviewFile.call(_this, droppedFiles[i]);
                }
              }
            });
          }
          /**
           * Function saving the file for further upload
           * and initializing reading and previewing the file:
           * 1. Allow only image files
           * 2. Disable buttons while uploading
           * 3. Call class-specific method to save file for further upload
           * 4. Show progress bar
           * 5. Start reading the file
           * @param {File Object} file - file to save and preview
           */

          function _saveAndPreviewFile(file) {
            var isImage = _helper_js__WEBPACK_IMPORTED_MODULE_4__[
              'default'
            ].MIMETypeIsImage(file);

            if (!isImage) {
              this._showError(errorText.wrongFileType);

              return;
            } // Prepare for file read

            this.$disableWhileLoad.attr('disabled', true);

            if (this._saveFile) {
              this._saveFile(file);
            }

            var $progressBar = _insertProgressBar.call(this, {
              fileName: file.name,
            }); // Read file

            this._readFile.call(this, {
              file: file,
              $progressBar: $progressBar,
            });
          }
          /**
           * Function to notify the user that his browser is outdated
           * And it will not support file upload
           */

          function _handleLegacyBrowsers() {
            this.$photoUploadContainer.hide();

            this._showError(errorText.legacyBrowser);
          }
          /**
           * Function showing errors that are not handled via alerts in error container
           */

          function _showError(errorMessage) {
            this.$errorContainer.text(errorMessage);
          }
          /**
           * Function hiding previously displayed error in the error container
           */

          function _hideError() {
            this.$errorContainer.empty();
          }
          /**
           * Function copying template
           * and compiling it with provided filename
           * This function will be assigned to editor prototype,
           * but it is only for internal use of it in fileReader Mixin and photos Drag'n'Drop mixin
           * @param {String} fileName - name of the file being loaded
           */

          function _prepareTemplate(fileName) {
            // Get template content
            var progress = progressTemplate.innerHTML,
              id = _generateRandomId(); // Compile template with provided filename

            progress = handlebars__WEBPACK_IMPORTED_MODULE_5___default.a.compile(
              progress
            );
            progress = progress({
              name: fileName,
              id: id,
            });
            return {
              template: progress,
              id: id,
            };
          }
          /**
           * Function to generate random number that can be used as id.
           * Here it will be used to pass it to the template for further reference
           */

          function _generateRandomId() {
            return Math.round(Math.random() * 1000);
          }
          /**
           * Function inserting progress bar
           * @param {String} fileName - name of the file being loaded
           */

          function _insertProgressBar(_ref) {
            var fileName = _ref.fileName;

            // Prepare template for insertion
            var _prepareTemplate2 = _prepareTemplate(fileName),
              template = _prepareTemplate2.template,
              id = _prepareTemplate2.id; // Insert the template into the progress container

            this.$progressContainer.append(template); // Save progress bar

            var $progressBar = this.$progressContainer.find('#'.concat(id));
            return $progressBar;
          }
          /**
           * Function showing progress of photo read
           * 1. Calculate progress amount
           * 2. Update the visual indicator of the progress
           * @param {Number} loaded - amount of loaded bytes
           * @param {Number} total - amount of total bytes to load
           */

          function _showProgress(_ref2) {
            var loaded = _ref2.loaded,
              total = _ref2.total,
              $progressBar = _ref2.$progressBar;
            // Calculate progress
            var progress = Math.round((loaded / total) * 100); // Update progress

            $progressBar.css('width', ''.concat(progress, '%'));
          }

          return {
            initializePhotoUpload: function initializePhotoUpload() {
              var _this2 = this;

              return _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()(
                /*#__PURE__*/ _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(
                  function _callee() {
                    var isShowCameraCapturing;
                    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(
                      function _callee$(_context) {
                        while (1) {
                          switch ((_context.prev = _context.next)) {
                            case 0:
                              // Bind context
                              _this2._showError = _this2._showError.bind(
                                _this2
                              );
                              _this2._hideError = _this2._hideError.bind(
                                _this2
                              ); // Cache

                              selectors = _this2.selectors.photoUpload;
                              errorText = _this2.errorText.photoUpload;
                              classes = _this2.classes;
                              progressSelectors = selectors.progress;

                              _cacheElements.call(_this2);
                              /**
                               *  Check for browser support of FormData and FileReader
                               *  FileReader is used to preview files,
                               *  while FormData - to send data to server
                               */

                              isAjaxUpload = (function () {
                                return (
                                  'FormData' in window && 'FileReader' in window
                                );
                              })(); // Detect whether to show camera capturing for mobile and tablet devices

                              _context.next = 10;
                              return _helper_js__WEBPACK_IMPORTED_MODULE_4__[
                                'default'
                              ].isShowCameraCapturing.call(
                                _helper_js__WEBPACK_IMPORTED_MODULE_4__[
                                  'default'
                                ]
                              );

                            case 10:
                              isShowCameraCapturing = _context.sent;

                              /**
                               * If we're dealing with mobile devices:
                               * Don't show Drag'n'drop, and add icon of mobile photo upload
                               * Else, check for support of drag'n'drop API
                               */
                              if (isShowCameraCapturing) {
                                isAdvancedUpload = false;

                                _this2.$photoUploadContainer.addClass(
                                  classes.mobilePhotoUpload
                                );
                              } else {
                                _this2.$photoUploadContainer.removeClass(
                                  classes.mobilePhotoUpload
                                ); // Detect support of Drag'n'Drop

                                isAdvancedUpload = (function () {
                                  var div = document.createElement('div');
                                  return (
                                    ('draggable' in div ||
                                      ('ondragstart' in div &&
                                        'ondrop' in div)) &&
                                    isAjaxUpload
                                  );
                                })();
                              }

                              if (isAjaxUpload) {
                                // Assign fileReaderMixin to the prototype of the current class
                                Object.assign(
                                  _this2.__proto__,
                                  _fileReaderMixin__WEBPACK_IMPORTED_MODULE_2__[
                                    'default'
                                  ]
                                ); // Initializing File Reader handler

                                _this2.initializeFileReader({
                                  errorText: errorText,
                                });
                              } else {
                                _handleLegacyBrowsers.call(_this2);
                              }

                              if (isAdvancedUpload) {
                                // Change container visual appearance
                                _this2.$photoUploadContainer.addClass(
                                  classes.dragNDrop
                                ); //--------------------------------------------
                                // Here,$photoUpload container is from uploader for photo bonus
                                // Assign drag'n'drop methods to the prototype

                                Object.assign(
                                  _this2.__proto__,
                                  _photosDragnDropMixin__WEBPACK_IMPORTED_MODULE_3__[
                                    'default'
                                  ]
                                ); // Initialize drag'n'drop

                                _this2.initializeDragNDrop({
                                  $container: _this2.$photoUploadContainer,
                                });
                              }

                              _setUpEventListeners.call(_this2); // Binding functions from the Class

                              _this2._preview = _this2._preview.bind(_this2); //------------
                              // Change how avatar handles sending file to send it via base64 string

                              if (_this2._saveFile) {
                                _this2._saveFile = _this2._saveFile.bind(
                                  _this2
                                );
                              }

                            case 17:
                            case 'end':
                              return _context.stop();
                          }
                        }
                      },
                      _callee
                    );
                  }
                )
              )();
            },
            _showProgress: _showProgress,
            _showError: _showError,
            _hideError: _hideError,
          };
        })();

        /***/
      },

    /***/ './js/modules/photosDragnDropMixin.js':
      /*!********************************************!*\
  !*** ./js/modules/photosDragnDropMixin.js ***!
  \********************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */ __webpack_exports__['default'] = {
          initializeDragNDrop: function initializeDragNDrop(_ref) {
            var _this = this;

            var $container = _ref.$container;
            $container
              .on(
                'drag dragstart dragend dragover dragenter dragleave drop',
                function (event) {
                  // Prevent browser default behavior
                  event.preventDefault();
                  event.stopPropagation();
                }
              ) // Handle dragover indicator to let the user know about ability
              // to safety drop files
              .on('dragover dragenter', function () {
                $container.addClass(_this.classes.dragOver);
              })
              .on('dragleave dragend drop', function () {
                $container.removeClass(_this.classes.dragOver);
              });
          },
        };

        /***/
      },

    /***/ './js/modules/premiumAnimation.js':
      /*!****************************************!*\
  !*** ./js/modules/premiumAnimation.js ***!
  \****************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return PremiumAnimation;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/createClass */ '../node_modules/@babel/runtime/helpers/createClass.js'
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime/helpers/get */ '../node_modules/@babel/runtime/helpers/get.js'
        );
        /* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime/helpers/inherits */ '../node_modules/@babel/runtime/helpers/inherits.js'
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @babel/runtime/helpers/possibleConstructorReturn */ '../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js'
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! @babel/runtime/helpers/getPrototypeOf */ '../node_modules/@babel/runtime/helpers/getPrototypeOf.js'
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__
        );
        /* harmony import */ var _animatedIcons_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ./animatedIcons.js */ './js/modules/animatedIcons.js'
        );

        function _createSuper(Derived) {
          var hasNativeReflectConstruct = _isNativeReflectConstruct();
          return function _createSuperInternal() {
            var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                Derived
              ),
              result;
            if (hasNativeReflectConstruct) {
              var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                this
              ).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
            } else {
              result = Super.apply(this, arguments);
            }
            return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(
              this,
              result
            );
          };
        }

        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct)
            return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;
          try {
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            );
            return true;
          } catch (e) {
            return false;
          }
        }

        var PremiumAnimation = /*#__PURE__*/ (function (_IconAnimation) {
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(
            PremiumAnimation,
            _IconAnimation
          );

          var _super = _createSuper(PremiumAnimation);

          function PremiumAnimation(options) {
            var _this;

            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(
              this,
              PremiumAnimation
            );

            _this = _super.call(this, options);
            _this.type = 'premiumAnimation';
            return _this;
          }

          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(
            PremiumAnimation,
            [
              {
                key: '_setUpEventListeners',
                value: function _setUpEventListeners() {
                  var _this2 = this;

                  $(document)
                    .on(
                      'webkitAnimationEnd oAnimationEnd msAnimationEnd animationend',
                      function (event) {
                        if (_this2.type !== 'premiumAnimation') return;
                        var animationName = event.originalEvent.animationName,
                          iconElements = _this2.iconElements;

                        if (animationName === 'zoom') {
                          iconElements.$premiumIcon.removeClass(
                            'premium-person'
                          );
                        } else if (animationName === 'premium-star-animation') {
                          iconElements.$star
                            .removeClass('premium-star-animation')
                            .addClass('fill-pink default-scale');
                        }
                      }
                    )
                    .on(
                      'webkitAnimationStart oAnimationstart msAnimationStart animationstart',
                      function (event) {
                        if (_this2.type !== 'premiumAnimation') return;
                        var animationName = event.originalEvent.animationName,
                          iconElements = _this2.iconElements;

                        if (animationName === 'zoom') {
                          iconElements.$star
                            .removeClass('default-scale fill-pink')
                            .addClass('premium-star-animation');
                        }
                      }
                    );
                },
              },
              {
                key: 'prepareAnimation',
                value: function prepareAnimation(modal) {
                  var _this3 = this;

                  return new Promise(function (resolve) {
                    // Append icon through calling parent method
                    _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2___default()(
                      _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                        PremiumAnimation.prototype
                      ),
                      '_prepareAnimation',
                      _this3
                    ).call(_this3, modal); // Resolve the promise

                    resolve('fulfilled');
                  });
                },
                /**
                 * This method is specific to each class responsible for handling icon animation
                 * It is being called whenever the animation is prepared and popup
                 * in which the icon will be animated is opened
                 */
              },
              {
                key: 'startAnimation',
                value: function startAnimation() {
                  // Start icon animation by starting premium person's animation
                  this.iconElements.$premiumIcon.addClass('premium-person');
                },
              },
            ]
          );

          return PremiumAnimation;
        })(_animatedIcons_js__WEBPACK_IMPORTED_MODULE_6__['default']);

        /***/
      },

    /***/ './js/modules/preparePhotoModal.js':
      /*!*****************************************!*\
  !*** ./js/modules/preparePhotoModal.js ***!
  \*****************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return preparePhotoModal;
          }
        );
        function preparePhotoModal(_ref) {
          var modal = _ref.modal,
            animateOnShown = _ref.animateOnShown;
          var $body = $('body'),
            $modal = $(modal),
            //$animateOnShown = $modal.find(animateOnShown).fadeOut(0);
            $animateOnShown = $modal.find(animateOnShown).css('opacity', '0');
          var shown = false;

          function _setUpEventListeners() {
            // Adjust background opacity for gallery modal
            $modal.on('show.bs.modal', function () {
              $body.addClass('gallery');
            });
            $modal.on('shown.bs.modal', function () {
              $animateOnShown.animate({
                opacity: 1,
              });
              shown = true;
            });
            $modal.on('hide.bs.modal', function (event) {
              if (shown) event.preventDefault();
              shown = false;
              $animateOnShown.css('opacity', 0);
              setTimeout(function () {
                return $modal.modal('hide');
              }, 0);
            });
            $modal.on('hidden.bs.modal', function () {
              $body.removeClass('gallery');
            });
          }

          return {
            init: function init() {
              _setUpEventListeners();
            },
          };
        }

        /***/
      },

    /***/ './js/modules/prepareTemplates.js':
      /*!****************************************!*\
  !*** ./js/modules/prepareTemplates.js ***!
  \****************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return prepareTemplates;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/typeof */ '../node_modules/@babel/runtime/helpers/typeof.js'
        );
        /* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__
        );

        function prepareTemplates(templates) {
          switch (
            _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(
              templates
            )
          ) {
            case 'object':
              for (var id in templates) {
                templates[id] = document.getElementById(
                  templates[id]
                ).innerHTML;
              }

              break;

            case 'string':
              templates = document.getElementById(templates).innerHTML;
              break;
          }

          return templates;
        }

        /***/
      },

    /***/ './js/modules/profileEdit.js':
      /*!***********************************!*\
  !*** ./js/modules/profileEdit.js ***!
  \***********************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return ProfileEdit;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/inherits */ '../node_modules/@babel/runtime/helpers/inherits.js'
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime/helpers/possibleConstructorReturn */ '../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js'
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime/helpers/getPrototypeOf */ '../node_modules/@babel/runtime/helpers/getPrototypeOf.js'
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__
        );
        /* harmony import */ var _requests_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ./requests.js */ './js/modules/requests.js'
        );
        /* harmony import */ var _prepareTemplates_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ./prepareTemplates.js */ './js/modules/prepareTemplates.js'
        );

        function _createSuper(Derived) {
          var hasNativeReflectConstruct = _isNativeReflectConstruct();
          return function _createSuperInternal() {
            var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(
                Derived
              ),
              result;
            if (hasNativeReflectConstruct) {
              var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(
                this
              ).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
            } else {
              result = Super.apply(this, arguments);
            }
            return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(
              this,
              result
            );
          };
        }

        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct)
            return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;
          try {
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            );
            return true;
          } catch (e) {
            return false;
          }
        }

        var ProfileEdit = /*#__PURE__*/ (function (_ServerRequest) {
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1___default()(
            ProfileEdit,
            _ServerRequest
          );

          var _super = _createSuper(ProfileEdit);

          function ProfileEdit(options) {
            var _this;

            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(
              this,
              ProfileEdit
            );

            _this = _super.call(this, options); // Handle table and deleting account here

            /**
             * Handle deleting account
             * When the "delete my account" button is clicked:
             * 1. Show popup asking approvement
             * 2. Send request to server
             * 3. If everything is fine, redirect to main page
             */

            var _$deleteAccountButton = $(
              _this.selectors.deleteAccount || '#deleteAccount'
            );

            _this.popups['delete'].requestName = 'delete';

            _$deleteAccountButton.click(function (event) {
              event.preventDefault();

              _this
                .fireAlertWithRequest(_this.popups['delete'])
                .then(function (response) {
                  if (!response) return;

                  if (!response.success) {
                    var error = new Error(response.message);
                    error.name = response.title;
                    throw error;
                  }

                  window.location.replace(response.redirect || '/');
                })
                ['catch'](function (error) {
                  console.error(error);

                  _this.showRequestResult({
                    title: error.name,
                    text: error.message,
                    icon: 'error',
                  });
                });
            });
            /**
             * Continue last payment
             * 1. If unpaid attribute is not presented, do nothing
             * 2. Make request to get data about the purchase
             * 3. Adjust redirect depending on provided step attribute (1 by default)
             *    - Steps are counted from zero
             * 4. Redirect to buying premium page to continue purchase
             */

            var _$purchaseSummaryTable = $(
                _this.selectors.purchaseSummaryTable || '#purchaseSummary'
              ),
              _spinner = Object(
                _prepareTemplates_js__WEBPACK_IMPORTED_MODULE_5__['default']
              )('spinner-template' || false);

            _$purchaseSummaryTable.click(function (event) {
              var $target = $(event.target);
              if (!$target.data('unpaid')) return;
              event.preventDefault();

              var _$tableCell = $target.closest('td');

              var _tableCellContent = _$tableCell.html(); // Insert spinner

              _$tableCell.css('width', _$tableCell.css('width')).html(_spinner);

              var _this$requests$paymen = _this.requests.paymentData,
                headers = _this$requests$paymen.headers,
                method = _this$requests$paymen.method,
                endpoint = _this$requests$paymen.endpoint; // Retrieve payment details

              _this
                .makeRequest({
                  headers: headers,
                  method: method,
                  endpoint: endpoint,
                })
                .then(function (response) {
                  // Insert initial content
                  _$tableCell.html(_tableCellContent);

                  if (!response.success) {
                    var error = new Error(response.message);
                    error.name = response.title;
                    throw error;
                  }

                  var redirect = response.redirect; // Add step to search params

                  redirect += '?step='.concat($target.data('step') || 1);
                  window.location.assign(redirect);
                })
                ['catch'](function (error) {
                  _this.showRequestResult({
                    title: error.name,
                    text: error.message,
                    icon: 'error',
                  });
                });
            });

            return _this;
          }

          return ProfileEdit;
        })(_requests_js__WEBPACK_IMPORTED_MODULE_4__['default']);

        /***/
      },

    /***/ './js/modules/profiles.js':
      /*!********************************!*\
  !*** ./js/modules/profiles.js ***!
  \********************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return Profiles;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/createClass */ '../node_modules/@babel/runtime/helpers/createClass.js'
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime/helpers/assertThisInitialized */ '../node_modules/@babel/runtime/helpers/assertThisInitialized.js'
        );
        /* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime/helpers/inherits */ '../node_modules/@babel/runtime/helpers/inherits.js'
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @babel/runtime/helpers/possibleConstructorReturn */ '../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js'
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! @babel/runtime/helpers/getPrototypeOf */ '../node_modules/@babel/runtime/helpers/getPrototypeOf.js'
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__
        );
        /* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! @babel/runtime/helpers/defineProperty */ '../node_modules/@babel/runtime/helpers/defineProperty.js'
        );
        /* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6__
        );
        /* harmony import */ var _prepareTemplates_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ./prepareTemplates.js */ './js/modules/prepareTemplates.js'
        );
        /* harmony import */ var _requests_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ./requests.js */ './js/modules/requests.js'
        );
        /* harmony import */ var handlebars__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! handlebars */ '../node_modules/handlebars/dist/cjs/handlebars.js'
        );
        /* harmony import */ var handlebars__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/ __webpack_require__.n(
          handlebars__WEBPACK_IMPORTED_MODULE_9__
        );

        function _createSuper(Derived) {
          var hasNativeReflectConstruct = _isNativeReflectConstruct();
          return function _createSuperInternal() {
            var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                Derived
              ),
              result;
            if (hasNativeReflectConstruct) {
              var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                this
              ).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
            } else {
              result = Super.apply(this, arguments);
            }
            return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(
              this,
              result
            );
          };
        }

        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct)
            return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;
          try {
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            );
            return true;
          } catch (e) {
            return false;
          }
        }

        var Profiles = /*#__PURE__*/ (function (_ServerRequest) {
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(
            Profiles,
            _ServerRequest
          );

          var _super = _createSuper(Profiles);

          function Profiles(options) {
            var _this;

            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(
              this,
              Profiles
            );

            _this = _super.call(this, options); // Bind context

            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(
                _this
              ),
              '_arePagesHidden',
              false
            );

            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(
                _this
              ),
              '_isFormSearched',
              false
            );

            _this._addNavigationButton = _this._addNavigationButton.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(
                _this
              )
            );
            _this._removeNavigationButton = _this._removeNavigationButton.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(
                _this
              )
            );
            _this._togglePageVisibility = _this._togglePageVisibility.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(
                _this
              )
            );
            _this._changePaginationState = _this._changePaginationState.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(
                _this
              )
            );
            _this._loadProfiles = _this._loadProfiles.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(
                _this
              )
            );
            _this._isNavigationButtonShown = _this._isNavigationButtonShown.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(
                _this
              )
            ); // Save config options for pagination

            _this.paginationConfig = options.pagination; // Templates preparation

            var _this$selectors$templ = _this.selectors.templateIds,
              noResultsTemplateId = _this$selectors$templ.noResults,
              profileTemplateId = _this$selectors$templ.profile,
              paginationTemplateIds = _this$selectors$templ.pagination; // Prepare templates

            _this.paginationTemplates = Object(
              _prepareTemplates_js__WEBPACK_IMPORTED_MODULE_7__['default']
            )(paginationTemplateIds);
            _this.profileTemplate = Object(
              _prepareTemplates_js__WEBPACK_IMPORTED_MODULE_7__['default']
            )(profileTemplateId);
            _this.noResultsTemplate = Object(
              _prepareTemplates_js__WEBPACK_IMPORTED_MODULE_7__['default']
            )(noResultsTemplateId); // Get profiles template
            // Set it up a bit later

            _this._cacheElements();

            _this._setUpEventListeners();

            _this._preparePagination();

            return _this;
          }

          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(
            Profiles,
            [
              {
                key: '_cacheElements',
                value: function _cacheElements() {
                  var selectors = this.selectors;
                  this.$paginationContainer = $(selectors.pagination);
                  this.$skeleton = $(selectors.skeleton).hide();
                  this.$profilesContainer = $(selectors.profilesContainer);
                },
              },
              {
                key: '_setUpEventListeners',
                value: function _setUpEventListeners() {
                  var _this2 = this;

                  var _this$selectors = this.selectors,
                    pageItem = _this$selectors.pageItem,
                    activeItem = _this$selectors.activeItem,
                    hiddenPagesItem = _this$selectors.hiddenPagesItem;
                  /**
                   * Enet handler for clicks on the pagination
                   * When '...' button or active button is clicked, nothing happens
                   * Otherwise, the event handler:
                   * 1. starts loading the profiles
                   * 2. changing the state of the pagination:
                   * showing/hiding next/previous buttons, changing active page item
                   */

                  this.$paginationContainer.click(function (event) {
                    event.preventDefault();
                    event.stopPropagation();
                    var $target = $(event.target);
                    if (
                      $target.closest(hiddenPagesItem).length === 1 ||
                      $target.closest(activeItem).length === 1
                    )
                      return;
                    var $clickedButton = $target.closest(pageItem);

                    _this2._loadProfiles(parseInt($clickedButton.data('page')));

                    _this2._changePaginationState($clickedButton);
                  });
                  /**
                   * After form input is finished:
                   * 1. Add flag describing that the search was performed at least once
                   * 2. Add a flag describing that the pagination for this search
                   * is not initialized yet
                   * 3. Save input information to pass it with further iterations over pages
                   * 4. Load profiles
                   */

                  $(document).on('searchForm:inputFinished', function (
                    event,
                    formData
                  ) {
                    _this2.isFormSearched = true;
                    _this2.paginationInitialized = false;
                    _this2.formData = formData;

                    _this2._loadProfiles();
                  });
                },
              },
              {
                key: '_loadProfiles',
                value: function _loadProfiles() {
                  var _this3 = this;

                  var page =
                    arguments.length > 0 && arguments[0] !== undefined
                      ? arguments[0]
                      : 1;
                  this.$profilesContainer.hide().empty();
                  this.$skeleton.show();
                  /**
                   * get mode is dedicated for getting profiles on the next page
                   * on the initial step - when the user haven't searched the form
                   * search mode is dedicated for searching profiles either for the first time
                   * or on the next pages
                   */

                  var _this$requests$profil = this.requests.profiles,
                    method = _this$requests$profil.method,
                    headers = _this$requests$profil.headers,
                    endpoint = _this$requests$profil.endpoint,
                    profilesPerPage = this.paginationConfig.profilesPerPage;

                  if (!this.isFormSearched) {
                    // If the request is performed before any searches occured
                    var body = JSON.stringify({
                      page: page,
                      profilesPerPage: profilesPerPage,
                    });
                  } else {
                    // handle the case when the search was performed at the very least once
                    this.formData['page'] = page;
                    this.formData['profilesPerPage'] = profilesPerPage;
                    var body = JSON.stringify(this.formData);
                  }
                  /**
                   * Make request to the server to request profiles
                   * If there are profiles accoring to the search input,
                   * re-initialize the pagination
                   * After getting the profiles, sort them in the following order:
                   * 1. Premium and online users
                   * 2. Premium users
                   * 3. Online users
                   * 4. Just users
                   * Then, append profiles to the container
                   * And then, show the profiles instead of skeleton screen
                   */

                  this.makeRequest({
                    headers: headers,
                    endpoint: endpoint,
                    method: method,
                    body: body,
                  })
                    .then(function (result) {
                      var success = result.success,
                        advertisementType = result.advertisementType,
                        profiles = result.profiles,
                        title = result.title,
                        message = result.message;

                      if (success) {
                        if (
                          _this3.isFormSearched &&
                          !_this3.paginationInitialized
                        ) {
                          _this3._preparePagination(result.totalAmount);
                        } // Sort profiles

                        profiles
                          .slice(0, _this3.paginationConfig.profilesPerPage)
                          .sort(function (user1, user2) {
                            return user1.premium.status
                              ? user1.online.status
                                ? user2.premium.status
                                  ? user2.online.status
                                    ? 0
                                    : -1
                                  : -1
                                : user2.premium.status
                                ? user2.online.status
                                  ? 1
                                  : 0
                                : -1
                              : user2.premium.status
                              ? 1
                              : user1.online.status
                              ? user2.online.status
                                ? 0
                                : -1
                              : user2.online.status
                              ? 1
                              : 0;
                          })
                          .forEach(function (profile) {
                            // Display profiles
                            var template = handlebars__WEBPACK_IMPORTED_MODULE_9___default.a.compile(
                              _this3.profileTemplate
                            );
                            template = template(profile);

                            _this3.$profilesContainer.append(template);
                          }); // Insert add

                        $(document).trigger(
                          'profiles:afterInsert',
                          advertisementType
                        );

                        _this3.$profilesContainer.show();

                        _this3.$skeleton.hide();
                      } else {
                        // Display no result badge
                        var template = handlebars__WEBPACK_IMPORTED_MODULE_9___default.a.compile(
                          _this3.noResultsTemplate
                        );
                        template = template({
                          title: title,
                          message: message,
                        });

                        _this3.$paginationContainer.empty();

                        _this3.$profilesContainer.append(template).show();

                        _this3.$skeleton.hide();
                      }
                    })
                    ['catch'](function (error) {
                      _this3.showRequestResult({
                        title: error.name,
                        text: error.message,
                        icon: 'error',
                      });
                    });
                },
              },
              {
                key: '_changePaginationState',
                value: function _changePaginationState($clickedButton) {
                  var _this$paginationConfi = this.paginationConfig.classes,
                    activeItem = _this$paginationConfi.activeItem,
                    previousButton = _this$paginationConfi.previousButton,
                    nextButton = _this$paginationConfi.nextButton,
                    hiddenItems = _this$paginationConfi.hiddenItems,
                    hiddenPagesItem = _this$paginationConfi.hiddenPagesItem,
                    _this$selectors2 = this.selectors,
                    pageItem = _this$selectors2.pageItem,
                    pageNumber = _this$selectors2.pageNumber,
                    $paginationContainer = this.$paginationContainer,
                    pagesAmount = this.pagesAmount,
                    maxPages = this.paginationConfig.maxPages; // Add active state to the specified page item

                  var setActiveState = function setActiveState($item) {
                    $item.addClass(activeItem);
                  }; // Remove current active state

                  var removeActiveState = function removeActiveState() {
                    $paginationContainer
                      .find('.'.concat(activeItem))
                      .removeClass(activeItem);
                  }; // Get the current page

                  var currentPage = parseInt(
                    $paginationContainer
                      .find('.'.concat(activeItem))
                      .data('page')
                  );
                  /**
                   * Change the current active state
                   * If the next button is clicked, the next page item should be active
                   * If the previous button is clicked, the previous page item should be active
                   * Otherwise, the clicked page item should be active
                   */

                  if (
                    $clickedButton.hasClass(previousButton) ||
                    $clickedButton.hasClass(nextButton)
                  ) {
                    // Next/previous button is clicked
                    removeActiveState(); // Update current page number

                    currentPage = $clickedButton.hasClass(nextButton)
                      ? ++currentPage
                      : --currentPage;
                    setActiveState(
                      $paginationContainer.find(
                        ''
                          .concat(pageNumber, '[data-page=')
                          .concat(currentPage, ']')
                      )
                    );
                  } else {
                    // Button with page number is clicked
                    removeActiveState();
                    setActiveState($clickedButton); // Update the current page number

                    currentPage = parseInt($clickedButton.data('page'));
                  }
                  /**
                   * Toggle navigation buttons visibility
                   * The current page is storing the page number after selection (active now)
                   * So, if the page is the first one, hide the previous button
                   * If the page is the last one, hide the next button
                   * Show these buttons otherwise
                   */

                  if (currentPage === 1) {
                    this._removeNavigationButton('previous');
                  } else if (currentPage === pagesAmount) {
                    this._removeNavigationButton('next');
                  }

                  if (
                    currentPage !== 1 &&
                    !this._isNavigationButtonShown('previous')
                  ) {
                    this._addNavigationButton('previous');
                  }

                  if (
                    currentPage !== pagesAmount &&
                    !this._isNavigationButtonShown('next')
                  ) {
                    this._addNavigationButton('next');
                  } // Check the presence of the hidden pages

                  if (!this.arePagesHidden) return;
                  /**
                   * Change visibility of the buttons block
                   * If the active button is the first one or the last one
                   * Show maximum amount of pages
                   */

                  if (currentPage === 1 || currentPage === pagesAmount) {
                    switch (currentPage) {
                      case 1:
                        // Show pages in the beginning
                        this._togglePageVisibility({
                          indexFrom: 1,
                          indexTo: pagesAmount - maxPages,
                          action: 'show',
                        }); // Hide pages in the end

                        this._togglePageVisibility({
                          indexFrom: pagesAmount - maxPages + 1,
                          indexTo: pagesAmount - 2,
                          action: 'hide',
                        });

                        break;

                      case pagesAmount:
                        // Show pages in the end
                        this._togglePageVisibility({
                          indexFrom: pagesAmount - maxPages + 1,
                          indexTo: pagesAmount - 1,
                          action: 'show',
                        }); // Hide pages in the beginning

                        this._togglePageVisibility({
                          indexFrom: 1,
                          indexTo: pagesAmount - maxPages,
                          action: 'hide',
                        });

                        break;
                    }
                  } else {
                    var isRightNeighbouringHidden, isLeftNeighbouringHidden;
                    /**
                     * Get visible items
                     * By filtering out:
                     * 1. navigation buttons (previous and next arrows)
                     * 2. all the hidden items
                     */

                    var getVisibleItems = function getVisibleItems() {
                      return Array.from(
                        $paginationContainer.find(pageItem)
                      ).filter(function (item) {
                        return (
                          !item.classList.contains(hiddenItems) &&
                          !item.classList.contains(previousButton) &&
                          !item.classList.contains(nextButton)
                        );
                      });
                    };

                    var visibleItems = getVisibleItems();
                    /**
                     * Iterate over currently visible items
                     * Find the active item among visible items
                     * And check if there is a '...' button next to it
                     * isRightNeighbouringHidden representing the case when there is a '...' on the right
                     * isLeftNeighbouringHidden representing the case when there is a '...' on the left
                     */

                    for (var i = 0; i < visibleItems.length; i++) {
                      var $item = $(visibleItems[i]);

                      if ($item.hasClass(activeItem)) {
                        // Check if the right neighbouring is '...' button
                        isRightNeighbouringHidden = $(
                          visibleItems[i + 1]
                        ).hasClass(hiddenPagesItem); // Check if the left neighbouring is '...' button

                        isLeftNeighbouringHidden = $(
                          visibleItems[i - 1]
                        ).hasClass(hiddenPagesItem);
                        break;
                      }
                    } // Don't do anything if the '...' button wasn't found next to the active item

                    if (!isRightNeighbouringHidden && !isLeftNeighbouringHidden)
                      return; // Remove the page representing hidden items

                    var $hiddenItemsButton = $paginationContainer
                      .find('.'.concat(hiddenPagesItem))
                      .remove()
                      .first();
                    var $activeItem = $paginationContainer.find(
                      '.'.concat(activeItem)
                    );
                    /**
                     * Show new page item:
                     * If the page item on the right is hidden:
                     * 1. Show the item on the right
                     * 2. Check if the next to the newly shown item is hidden
                     * 3. If there is a hidden item to the right, show '...' button
                     * ------------------------------------------------------------
                     * If the page item on the left is hidden:
                     * 1. Show the item on the left
                     * 2. Check if the previous to the newly shown item is hidden
                     * 3. If there is a hidden item to the left, show '...' button
                     */

                    if (isRightNeighbouringHidden) {
                      var $nextToActiveItem = $activeItem
                        .next()
                        .removeClass(hiddenItems);

                      if ($nextToActiveItem.next().hasClass(hiddenItems)) {
                        $nextToActiveItem.after($hiddenItemsButton.clone(true));
                      }
                    } else if (isLeftNeighbouringHidden) {
                      var $prevToActiveItem = $activeItem
                        .prev()
                        .removeClass(hiddenItems);

                      if ($prevToActiveItem.prev().hasClass(hiddenItems)) {
                        $prevToActiveItem.before(
                          $hiddenItemsButton.clone(true)
                        );
                      }
                    }
                    /**
                     * Get all the visible items after showing one hidden item
                     * If there are more than five visible items, we need to hide one:
                     * If the item on the right was shown, hide one item on the left
                     * If the item on the left was shown, hide one item on the right
                     */

                    visibleItems = getVisibleItems();

                    if (visibleItems.length > 5) {
                      if (isRightNeighbouringHidden) {
                        $activeItem
                          .prev()
                          .prev()
                          .addClass(hiddenItems)
                          .after($hiddenItemsButton.clone(true));
                      } else if (isLeftNeighbouringHidden) {
                        $activeItem
                          .next()
                          .next()
                          .addClass(hiddenItems)
                          .after($hiddenItemsButton.clone(true));
                      }
                    }
                  }
                },
              },
              {
                key: '_preparePagination',
                value: function _preparePagination(profilesTotalAmount) {
                  var _this$paginationConfi2 = this.paginationConfig,
                    maxPages = _this$paginationConfi2.maxPages,
                    profilesPerPage = _this$paginationConfi2.profilesPerPage,
                    classes = _this$paginationConfi2.classes;

                  if (maxPages < 3) {
                    throw new Error(
                      'Cannot set maximum amount of pages to less than 3'
                    );
                  } else if (maxPages > 5) {
                    throw new Error(
                      'Showing more than five pages is not working yet'
                    );
                  }

                  var isFormSearched = this.isFormSearched,
                    $paginationContainer = this.$paginationContainer;
                  /**
                   * Save pages amount:
                   * 1. If it is the initialization step, amount of pages
                   * equals to the amount of buttons in the pagination container
                   * 2. If the pages amount is determined after the search request
                   * It is the the next largest integer of (total amount of profiles / profiles per page)
                   */

                  var pagesAmount = (this.pagesAmount = isFormSearched
                    ? Math.ceil(profilesTotalAmount / profilesPerPage)
                    : $paginationContainer.find(this.selectors.pageNumber)
                        .length);
                  /**
                   * 1. Compile template for page number
                   * 2. Empty the pagination container
                   * 3. Insert page number buttons
                   * 4. Set active item
                   * 5. Toggle the flag indicating that the pagination is prepared after the search
                   */

                  if (isFormSearched) {
                    var template = handlebars__WEBPACK_IMPORTED_MODULE_9___default.a.compile(
                      this.paginationTemplates.pageNumber
                    );
                    $paginationContainer.empty();

                    for (var i = 1; i <= pagesAmount; i++) {
                      var pageTemplate = template({
                        page: i,
                      });
                      $paginationContainer.append(pageTemplate);
                    }

                    $paginationContainer
                      .find('[data-page=1]')
                      .addClass(classes.activeItem);
                    this.paginationInitialized = true;
                  } // Hide extra pages if there is more than maximum allowed pages

                  if (pagesAmount > maxPages) {
                    this.arePagesHidden = true;

                    this._togglePageVisibility({
                      indexFrom: maxPages - 1,
                      indexTo: pagesAmount - 2,
                      action: 'hide',
                    });
                  } // Show "next" button if there is more than one page

                  if (pagesAmount > 1) this._addNavigationButton('next');
                }, // Manipulating navigation buttons
              },
              {
                key: '_addNavigationButton',
                value: function _addNavigationButton(direction) {
                  if (direction !== 'previous' && direction !== 'next') return;
                  var $paginationContainer = this.$paginationContainer;
                  direction === 'next'
                    ? $paginationContainer.append(
                        this.paginationTemplates.nextItem
                      )
                    : $paginationContainer.prepend(
                        this.paginationTemplates.previousItem
                      );
                },
              },
              {
                key: '_removeNavigationButton',
                value: function _removeNavigationButton(direction) {
                  if (direction !== 'previous' && direction !== 'next') return;
                  var $paginationContainer = this.$paginationContainer,
                    _this$selectors3 = this.selectors,
                    previousButton = _this$selectors3.previousButton,
                    nextButton = _this$selectors3.nextButton;
                  direction === 'next'
                    ? $paginationContainer.find(nextButton).remove()
                    : $paginationContainer.find(previousButton).remove();
                },
                /**
                 * Function telling whether navigation button is shown
                 * The navigation button is specified by the direction parameter
                 * @param {String} direction - 'next' references the right button, while
                 * 'previous' references the left button
                 */
              },
              {
                key: '_isNavigationButtonShown',
                value: function _isNavigationButtonShown(direction) {
                  if (direction !== 'previous' && direction !== 'next') return;
                  var $paginationContainer = this.$paginationContainer,
                    _this$selectors4 = this.selectors,
                    previousButton = _this$selectors4.previousButton,
                    nextButton = _this$selectors4.nextButton;
                  return direction === 'next'
                    ? $paginationContainer.find(nextButton).length === 1
                    : $paginationContainer.find(previousButton).length === 1;
                },
                /**
                 * Function hiding/showing pages and hiding/showing ... button
                 * instead of the hidden pages
                 * @param {indexFrom} Number - index from which perform the action, including
                 * @param {indexTo} Number - index to which perform the action, including
                 * @param {action} String - specifying the current action - hide or show
                 */
              },
              {
                key: '_togglePageVisibility',
                value: function _togglePageVisibility(_ref) {
                  var indexFrom = _ref.indexFrom,
                    indexTo = _ref.indexTo,
                    action = _ref.action;
                  if (action !== 'hide' && action !== 'show') return;
                  var selectors = this.selectors,
                    $paginationContainer = this.$paginationContainer;
                  var hiddenPagesItem = selectors.hiddenPagesItem,
                    hiddenItems = this.paginationConfig.classes.hiddenItems,
                    $pageItems = $paginationContainer.find(
                      selectors.pageNumber
                    );
                  /**
                   * Iterate over all the page items
                   * If the passed action is hide, hide a range of items specified,
                   * Otherwise, of the passed action is show, show a range of items
                   */

                  $pageItems.each(function (index, item) {
                    if (index >= indexFrom && index <= indexTo) {
                      action === 'hide'
                        ? $(item).addClass(hiddenItems)
                        : $(item).removeClass(hiddenItems);
                    }
                  }); // Show indicator representing the hidden buttons

                  action === 'hide'
                    ? $($pageItems.get(indexFrom - 1)).after(
                        this.paginationTemplates.hiddenItems
                      )
                    : $paginationContainer.find(hiddenPagesItem).remove();
                }, // Getters and setters
                // Pagination configuration
              },
              {
                key: 'paginationConfig',
                get: function get() {
                  return this._paginationConfig;
                },
                set: function set(config) {
                  if (!this._paginationConfig) {
                    this._paginationConfig = config;
                  }
                }, // Selectors
              },
              {
                key: 'selectors',
                get: function get() {
                  return this._selectors;
                },
                set: function set(selectors) {
                  if (!this._selectors) {
                    this._selectors = selectors;
                  }
                }, // Pagination templates
              },
              {
                key: 'paginationTemplates',
                get: function get() {
                  return this._paginationTemplates;
                },
                set: function set(templates) {
                  if (!this._paginationTemplates) {
                    this._paginationTemplates = templates;
                  }
                }, // Presense of hidden pages
              },
              {
                key: 'arePagesHidden',
                get: function get() {
                  return this._arePagesHidden;
                },
                set: function set(areHidden) {
                  if (typeof areHidden !== 'boolean')
                    throw new Error('arePagesHidden should be boolean');
                  this._arePagesHidden = areHidden;
                }, // Profile template
              },
              {
                key: 'profileTemplate',
                get: function get() {
                  return this._profileTemplate;
                },
                set: function set(template) {
                  if (!this._profileTemplate) {
                    this._profileTemplate = template;
                  }
                }, // Indicator specifying whether the form was search at least once
              },
              {
                key: 'isFormSearched',
                get: function get() {
                  return this._isFormSearched;
                },
                set: function set(isFormSearched) {
                  if (!isFormSearched) return;
                  this._isFormSearched = true;
                },
              },
            ]
          );

          return Profiles;
        })(_requests_js__WEBPACK_IMPORTED_MODULE_8__['default']);

        /***/
      },

    /***/ './js/modules/removeSearchParams.js':
      /*!******************************************!*\
  !*** ./js/modules/removeSearchParams.js ***!
  \******************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        function _createForOfIteratorHelper(o, allowArrayLike) {
          var it;
          if (typeof Symbol === 'undefined' || o[Symbol.iterator] == null) {
            if (
              Array.isArray(o) ||
              (it = _unsupportedIterableToArray(o)) ||
              (allowArrayLike && o && typeof o.length === 'number')
            ) {
              if (it) o = it;
              var i = 0;
              var F = function F() {};
              return {
                s: F,
                n: function n() {
                  if (i >= o.length) return { done: true };
                  return { done: false, value: o[i++] };
                },
                e: function e(_e) {
                  throw _e;
                },
                f: F,
              };
            }
            throw new TypeError(
              'Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
            );
          }
          var normalCompletion = true,
            didErr = false,
            err;
          return {
            s: function s() {
              it = o[Symbol.iterator]();
            },
            n: function n() {
              var step = it.next();
              normalCompletion = step.done;
              return step;
            },
            e: function e(_e2) {
              didErr = true;
              err = _e2;
            },
            f: function f() {
              try {
                if (!normalCompletion && it['return'] != null) it['return']();
              } finally {
                if (didErr) throw err;
              }
            },
          };
        }

        function _unsupportedIterableToArray(o, minLen) {
          if (!o) return;
          if (typeof o === 'string') return _arrayLikeToArray(o, minLen);
          var n = Object.prototype.toString.call(o).slice(8, -1);
          if (n === 'Object' && o.constructor) n = o.constructor.name;
          if (n === 'Map' || n === 'Set') return Array.from(o);
          if (
            n === 'Arguments' ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
          )
            return _arrayLikeToArray(o, minLen);
        }

        function _arrayLikeToArray(arr, len) {
          if (len == null || len > arr.length) len = arr.length;
          for (var i = 0, arr2 = new Array(len); i < len; i++) {
            arr2[i] = arr[i];
          }
          return arr2;
        }

        /* harmony default export */ __webpack_exports__['default'] = function (
          URLObject
        ) {
          var params = URLObject.searchParams.keys();

          var _iterator = _createForOfIteratorHelper(params),
            _step;

          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var param = _step.value;
              URLObject.searchParams['delete'](param);
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
        };

        /***/
      },

    /***/ './js/modules/requests.js':
      /*!********************************!*\
  !*** ./js/modules/requests.js ***!
  \********************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return ServerRequest;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/createClass */ '../node_modules/@babel/runtime/helpers/createClass.js'
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _swalAlertMixin_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ./swalAlertMixin.js */ './js/modules/swalAlertMixin.js'
        );
        /* harmony import */ var _requestsIndictorMixin_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ./requestsIndictorMixin.js */ './js/modules/requestsIndictorMixin.js'
        );

        var ServerRequest = /*#__PURE__*/ (function () {
          function ServerRequest(options) {
            var _this = this;

            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(
              this,
              ServerRequest
            );

            // Bind context
            this._throwError = this._throwError.bind(this); // Save passed options

            var selectors = (this.selectors = options.selectors);
            this.requests = options.requests;
            this.errorText = options.errorText;
            this.popups = options.popups || null; // Transform endpoints into URL Objects

            this.makeURLObjects();
            Object.assign(
              ServerRequest.prototype,
              _swalAlertMixin_js__WEBPACK_IMPORTED_MODULE_2__['default']
            );
            Object.assign(
              ServerRequest.prototype,
              _requestsIndictorMixin_js__WEBPACK_IMPORTED_MODULE_3__['default']
            );
            /**
             * If selector for disabling buttons is not empty, disable buttons on request
             */

            if (selectors.disableButtonsOnRequest) {
              this.$disableButtonsOnRequest = $(
                selectors.disableButtonsOnRequest
              );
              $(this)
                .on('beforeRequest', function () {
                  _this.$disableButtonsOnRequest.attr('disabled', true);
                })
                .on('successfulRequest failedRequest', function () {
                  _this.$disableButtonsOnRequest.attr('disabled', false);
                });
            }
          }
          /**
           * Transform endpoints into URL objects
           */

          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(
            ServerRequest,
            [
              {
                key: 'makeURLObjects',
                value: function makeURLObjects() {
                  for (var request in this.requests) {
                    this.requests[request].endpoint = new URL(
                      this.requests[request].endpoint
                    );
                  }
                },
              },
              {
                key: '_throwError',
                value: function _throwError() {
                  var error = new Error(response.statusText);
                  error.name = response.status;
                  throw error;
                },
                /**
                 * Make server request with the passed headers, endpoint, method and body.
                 * Function checks whether the method is GET and if so, sends request without body
                 */
              },
              {
                key: 'makeRequest',
                value: function makeRequest(_ref) {
                  var _this2 = this;

                  var headers = _ref.headers,
                    endpoint = _ref.endpoint,
                    method = _ref.method,
                    body = _ref.body;
                  $(this).trigger('beforeRequest');

                  if (method === 'GET') {
                    return fetch(endpoint, {
                      headers: headers,
                    })
                      .then(function (response) {
                        if (response.ok) {
                          //debugger;
                          return response.json();
                        } else {
                          _this2._throwError();
                        }
                      })
                      .then(function (json) {
                        // this === current Form here
                        $(_this2).trigger('successfulRequest');
                        return json;
                      })
                      ['catch'](function (error) {
                        console.error(error); // Unsuccessful Popup

                        _this2.showRequestResult({
                          title: error.name,
                          text: error.message,
                          icon: 'error',
                        });
                      });
                  } else {
                    // If method is not GET
                    return fetch(endpoint, {
                      method: method,
                      headers: headers,
                      body: body,
                    })
                      .then(function (response) {
                        if (response.ok) {
                          return response.json();
                        } else {
                          _this2._throwError();
                        }
                      })
                      .then(function (json) {
                        // this === current Form here
                        $(_this2).trigger('successfulRequest');
                        return json;
                      })
                      ['catch'](function (error) {
                        $(_this2).trigger('failedRequest'); // Unsuccessful Popup

                        _this2.showRequestResult({
                          title: error.name,
                          text: error.message,
                          icon: 'error',
                        });
                      });
                  }
                },
              },
            ]
          );

          return ServerRequest;
        })();

        /***/
      },

    /***/ './js/modules/requestsIndictorMixin.js':
      /*!*********************************************!*\
  !*** ./js/modules/requestsIndictorMixin.js ***!
  \*********************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */ __webpack_exports__['default'] = {
          initializeLoadingIndicators: function initializeLoadingIndicators(
            $form
          ) {
            var _this = this;

            // Bind context
            this.initializeLoadingIndicators = this.initializeLoadingIndicators.bind(
              this
            );
            this.triggerLoadingIndicator = this.triggerLoadingIndicator.bind(
              this
            ); // Save loading data to the form

            this.loading = this.selectors.loading; // Save information about submit button

            this.$submitButton = $form.find(this.loading.submitButton);
            this.buttonContent = this.$submitButton.html(); // Cache

            template = document.getElementById(this.loading.spinnerTemplateId); // Event handling

            $form.submit(function () {
              _this.triggerLoadingIndicator($form);
            });
            $(this).on('successfulRequest failedRequest', function () {
              // Change button and remove spinner
              _this.$submitButton
                .attr('disabled', false)
                .removeClass('text-capitalize')
                .html(_this.buttonContent)
                .css('min-width', '')
                .find(_this.loading.spinner)
                .remove();
            });
          },
          triggerLoadingIndicator: function triggerLoadingIndicator($form) {
            // Don't show loading indicator if the form isn't valid
            if (jQuery.validator && this.frontendValidation) {
              if (!$form.valid()) return;
            }

            var spinner = template.content.cloneNode(true),
              loading = this.loading,
              $submitButton = this.$submitButton; // Preserve width and get rid of the previous content

            $submitButton
              .css('min-width', $submitButton.outerWidth() + 'px')
              .empty(); // Change button text

            loading.text === undefined
              ? $submitButton.text('').addClass('text-center')
              : $submitButton.text(loading.text).addClass('text-capitalize'); //Change button state

            $submitButton.attr('disabled', true)[0].prepend(spinner);
          },
        }; // Private variables

        var template;

        /***/
      },

    /***/ './js/modules/restrictLengthMixin.js':
      /*!*******************************************!*\
  !*** ./js/modules/restrictLengthMixin.js ***!
  \*******************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */ __webpack_exports__['default'] = {
          restrictInputLength: function restrictInputLength($form) {},
          init: function init($form) {
            _getSelectionLength = _getSelectionLength.bind(this);
            _isNumericInput = _isNumericInput.bind(this);
            $form.on('keydown', function (event) {
              // Cache target
              var target = event.target,
                key = event.key;

              switch (key) {
                case 'Backspace':
                case 'Tab':
                  return;
              }

              var _target$dataset = target.dataset,
                restrictlength = _target$dataset.restrictlength,
                maxlength = _target$dataset.maxlength; // Check whether we need to restrict length

              if (!restrictlength) return; // Prevent not numeric inputs

              if (!_isNumericInput(key)) {
                event.preventDefault();
                return;
              } // Allow selection

              var selectionLength = _getSelectionLength(target);

              if (selectionLength > 0) return; // Convert type to perform comparison

              maxlength = parseInt(maxlength); // If the field's value length is equals to max, prevent typing

              if (target.value.length === maxlength) event.preventDefault();
            });
          },
        };
        /**
         * Function checking whether the inputed key is numeric
         * @param {String} key - inputed letter
         */

        function _isNumericInput(key) {
          var regex = /\D/;
          return !regex.test(key);
        }
        /**
         * Function getting the length of the selected text
         * @param {HTMLElement} target - element in which to get the selected area
         */

        function _getSelectionLength(target) {
          if (window.getSelection) {
            try {
              var selection = target.value.substring(
                target.selectionStart,
                target.selectionEnd
              );
              return selection.length;
            } catch (e) {
              console.error(e);
            }
          }
        }

        /***/
      },

    /***/ './js/modules/search-profiles-form.js':
      /*!********************************************!*\
  !*** ./js/modules/search-profiles-form.js ***!
  \********************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return SearchProfilesForm;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/createClass */ '../node_modules/@babel/runtime/helpers/createClass.js'
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime/helpers/get */ '../node_modules/@babel/runtime/helpers/get.js'
        );
        /* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime/helpers/inherits */ '../node_modules/@babel/runtime/helpers/inherits.js'
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @babel/runtime/helpers/possibleConstructorReturn */ '../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js'
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! @babel/runtime/helpers/getPrototypeOf */ '../node_modules/@babel/runtime/helpers/getPrototypeOf.js'
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__
        );
        /* harmony import */ var _form_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ./form.js */ './js/modules/form.js'
        );
        /* harmony import */ var _helper_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ./helper.js */ './js/modules/helper.js'
        );

        function _createSuper(Derived) {
          var hasNativeReflectConstruct = _isNativeReflectConstruct();
          return function _createSuperInternal() {
            var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                Derived
              ),
              result;
            if (hasNativeReflectConstruct) {
              var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                this
              ).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
            } else {
              result = Super.apply(this, arguments);
            }
            return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(
              this,
              result
            );
          };
        }

        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct)
            return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;
          try {
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            );
            return true;
          } catch (e) {
            return false;
          }
        }

        var SearchProfilesForm = /*#__PURE__*/ (function (_Form) {
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(
            SearchProfilesForm,
            _Form
          );

          var _super = _createSuper(SearchProfilesForm);

          function SearchProfilesForm(options) {
            var _this;

            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(
              this,
              SearchProfilesForm
            );

            _this = _super.call(this, options);
            _this.$resultsContainer = $(_this.selectors['resultsContainer']);
            /**
             * Generate age range:
             * 1. Get the initial and final range from the options
             * 2. Generate <option> element in age selection element
             */

            var _options$searchFormOp = options.searchFormOptions,
              ageFrom = _options$searchFormOp.ageFrom,
              ageTo = _options$searchFormOp.ageTo;

            var $ageInputs = _this.$form.find(_this.selectors.age);

            for (var i = ageFrom; i <= ageTo; i++) {
              $('<option></option>')
                .attr('value', i)
                .text(i)
                .appendTo($ageInputs);
            } // Initialize slider

            options.slider['noUiSlider'].on('change', function () {
              _this.$inputs.first().trigger('input');
            });
            return _this;
          }

          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(
            SearchProfilesForm,
            [
              {
                key: '_cacheElements',
                value: function _cacheElements() {
                  _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2___default()(
                    _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                      SearchProfilesForm.prototype
                    ),
                    '_cacheElements',
                    this
                  ).call(this);

                  this.$locationInput = $(this.selectors.locationInput);
                },
              },
              {
                key: '_setUpEventListeners',
                value: function _setUpEventListeners() {
                  var _this2 = this;

                  _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2___default()(
                    _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                      SearchProfilesForm.prototype
                    ),
                    '_setUpEventListeners',
                    this
                  ).call(this);
                  /**
                   * Listen for inputs on the form
                   * 1. Handle city input separately
                   * 2. When the user changes something in the form,
                   * signal that the input has finished
                   */

                  this.$form.on('input', function (event) {
                    var target = event.target;
                    if (target.name === 'city') return;

                    _this2.$form.trigger('inputFinished');
                  });
                  /**
                   * After the city is selected from the dropdown
                   * signal that the input is finished
                   */

                  this.$locationInput.on('citySelected', function () {
                    _this2.$form.trigger('inputFinished');
                  });
                  /**
                   * After input is finished:
                   * 1. Save all the information from the form
                   * 2. Delegate retrieving profiles
                   */

                  this.$form.on('inputFinished', function (event) {
                    _this2.collectFormInputs();

                    $(document).trigger(
                      'searchForm:inputFinished',
                      _this2.formData
                    );
                  });
                },
              },
            ]
          );

          return SearchProfilesForm;
        })(_form_js__WEBPACK_IMPORTED_MODULE_6__['default']);

        /***/
      },

    /***/ './js/modules/sponsorPremium.js':
      /*!**************************************!*\
  !*** ./js/modules/sponsorPremium.js ***!
  \**************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return SponsorPremium;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/createClass */ '../node_modules/@babel/runtime/helpers/createClass.js'
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime/helpers/get */ '../node_modules/@babel/runtime/helpers/get.js'
        );
        /* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime/helpers/inherits */ '../node_modules/@babel/runtime/helpers/inherits.js'
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @babel/runtime/helpers/possibleConstructorReturn */ '../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js'
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! @babel/runtime/helpers/getPrototypeOf */ '../node_modules/@babel/runtime/helpers/getPrototypeOf.js'
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__
        );
        /* harmony import */ var _bonus_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ./bonus.js */ './js/modules/bonus.js'
        );
        /* harmony import */ var _premiumAnimation_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ./premiumAnimation.js */ './js/modules/premiumAnimation.js'
        );

        function _createSuper(Derived) {
          var hasNativeReflectConstruct = _isNativeReflectConstruct();
          return function _createSuperInternal() {
            var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                Derived
              ),
              result;
            if (hasNativeReflectConstruct) {
              var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                this
              ).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
            } else {
              result = Super.apply(this, arguments);
            }
            return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(
              this,
              result
            );
          };
        }

        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct)
            return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;
          try {
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            );
            return true;
          } catch (e) {
            return false;
          }
        }

        var SponsorPremium = /*#__PURE__*/ (function (_Bonus) {
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(
            SponsorPremium,
            _Bonus
          );

          var _super = _createSuper(SponsorPremium);

          function SponsorPremium(options) {
            var _this;

            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(
              this,
              SponsorPremium
            );

            _this = _super.call(this, options);

            if (_this.isUsedOnThisPage) {
              // Initiate animation for icon in popup
              _this.animation = new _premiumAnimation_js__WEBPACK_IMPORTED_MODULE_7__[
                'default'
              ](options.animation);
            }

            _this._cacheElements();

            _this._setUpEventListeners();

            return _this;
          }

          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(
            SponsorPremium,
            [
              {
                key: '_cacheElements',
                value: function _cacheElements() {
                  _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2___default()(
                    _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                      SponsorPremium.prototype
                    ),
                    '_cacheElements',
                    this
                  ).call(this);

                  var selectors = this.selectors;
                  this.$modal = $(selectors.modal);

                  if (this.isSelectUserBeforeUse) {
                    // Container with user name inside modal
                    this.$userNameContainer = this.$modal.find(
                      selectors.userList.userName
                    );
                  }
                },
              },
              {
                key: '_setUpEventListeners',
                value: function _setUpEventListeners() {
                  var _this2 = this;

                  _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2___default()(
                    _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                      SponsorPremium.prototype
                    ),
                    '_setUpEventListeners',
                    this
                  ).call(this);

                  $(document)
                    .on('premiumModal:onBeforeOpen', function (event, modal) {
                      // Start modal preparation
                      _this2.animationPreparation = _this2.animation.prepareAnimation(
                        modal
                      );
                    })
                    .on('premiumModal:onOpen', function (event, modal) {
                      // Run animation
                      _this2.animation.startAnimation();
                    })
                    .on('bonus:startUsage', function (event, _ref) {
                      var type = _ref.type,
                        _ref$userName = _ref.userName,
                        userName =
                          _ref$userName === void 0 ? null : _ref$userName;
                      if (type !== 'premium') return; // Change the name of the user to whom the bonus should be sent

                      if (_this2.isSelectUserBeforeUse) {
                        if (!userName) {
                          _this2.showRequestResult({
                            title: 'Oops!',
                            text: 'Something went wrong',
                            icon: 'error',
                          });

                          return;
                        }

                        if (userName !== _this2.userName) {
                          // If the user has changed
                          _this2._startNewPayment(userName);
                        }
                      } // Start showing modals here with buying premium forms

                      _this2.$modal.modal('show');
                    })
                    .on('form:submitted', function (event, data) {
                      var $form = data.$form,
                        response = data.response; // Handle only the case when this is the form inside sponsoring premium modal dialog

                      if (
                        !$form.closest(_this2.selectors.modal) ||
                        $form
                          .closest(_this2.selectors.modal)
                          .find('form')
                          .last()[0] !== $form[0]
                      )
                        return;

                      _this2.$modal.modal('hide');

                      if (_this2.isUsedOnThisPage) {
                        setTimeout(_this2._useBonus, 300);
                      } else {
                        _this2._redirectToUseBonus(response);
                      }
                    });
                },
              },
              {
                key: '_useBonus',
                value: function _useBonus() {
                  var type =
                    arguments.length > 0 && arguments[0] !== undefined
                      ? arguments[0]
                      : this.type;
                  if (type !== this.type) return; // Call alert here with custom animation for premium icon

                  this.fireSendAlert(this.popups.send); // Show sponsoring premium in the chat

                  $(document).trigger('present:send', {
                    type: 'premium',
                  });
                },
                /**
                 *
                 * @param {String} userName -
                 */
              },
              {
                key: '_startNewPayment',
                value: function _startNewPayment(userName) {
                  // Save user name to detect whether to discard changes
                  this.userName = userName; // Upadate name in the modal

                  this.$userNameContainer.text(userName); // Discard all the payment details

                  $(document).trigger('premium:changeUser');
                },
              },
            ]
          );

          return SponsorPremium;
        })(_bonus_js__WEBPACK_IMPORTED_MODULE_6__['default']);

        /***/
      },

    /***/ './js/modules/superlike.js':
      /*!*********************************!*\
  !*** ./js/modules/superlike.js ***!
  \*********************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return Superlike;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/createClass */ '../node_modules/@babel/runtime/helpers/createClass.js'
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime/helpers/get */ '../node_modules/@babel/runtime/helpers/get.js'
        );
        /* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime/helpers/inherits */ '../node_modules/@babel/runtime/helpers/inherits.js'
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @babel/runtime/helpers/possibleConstructorReturn */ '../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js'
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! @babel/runtime/helpers/getPrototypeOf */ '../node_modules/@babel/runtime/helpers/getPrototypeOf.js'
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__
        );
        /* harmony import */ var _bonus_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ./bonus.js */ './js/modules/bonus.js'
        );
        /* harmony import */ var _superlikeAnimation_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ./superlikeAnimation.js */ './js/modules/superlikeAnimation.js'
        );

        function _createSuper(Derived) {
          var hasNativeReflectConstruct = _isNativeReflectConstruct();
          return function _createSuperInternal() {
            var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                Derived
              ),
              result;
            if (hasNativeReflectConstruct) {
              var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                this
              ).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
            } else {
              result = Super.apply(this, arguments);
            }
            return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(
              this,
              result
            );
          };
        }

        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct)
            return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;
          try {
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            );
            return true;
          } catch (e) {
            return false;
          }
        }

        var Superlike = /*#__PURE__*/ (function (_Bonus) {
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(
            Superlike,
            _Bonus
          );

          var _super = _createSuper(Superlike);

          function Superlike(options) {
            var _this;

            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(
              this,
              Superlike
            );

            _this = _super.call(this, options);

            if (_this.isUsedOnThisPage) {
              // Initiate animation for icon in popup
              _this.animation = new _superlikeAnimation_js__WEBPACK_IMPORTED_MODULE_7__[
                'default'
              ](options.animation);
            }

            _this._cacheElements();

            _this._setUpEventListeners();

            return _this;
          }

          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(
            Superlike,
            [
              {
                key: '_cacheElements',
                value: function _cacheElements() {
                  _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2___default()(
                    _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                      Superlike.prototype
                    ),
                    '_cacheElements',
                    this
                  ).call(this); // Amount of bonuses available

                  this.$amount = this.$bonus.find(this.selectors.amount);
                },
              },
              {
                key: '_setUpEventListeners',
                value: function _setUpEventListeners() {
                  var _this2 = this;

                  _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2___default()(
                    _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                      Superlike.prototype
                    ),
                    '_setUpEventListeners',
                    this
                  ).call(this);

                  $(document)
                    .on('superlikeModal:onBeforeOpen', function (event, modal) {
                      // Start modal preparation
                      _this2.animationPreparation = _this2.animation.prepareAnimation(
                        modal
                      );
                    })
                    .on('superlikeModal:onOpen', function (event, modal) {
                      // Run animation
                      _this2.animation.startAnimation();
                    })
                    .on('bonus:startUsage', function (event, _ref) {
                      var type = _ref.type;
                      if (type !== 'superlike') return;

                      _this2
                        .fireAlertWithRequest(_this2.popups.use)
                        .then(function (result) {
                          if (!result) return;
                          if (!result.success)
                            throw new Error('Something went wrong :(');

                          if (_this2.isUsedOnThisPage) {
                            _this2._useBonus();
                          } else {
                            _this2._redirectToUseBonus(result);
                          }
                        })
                        ['catch'](function (error) {
                          _this2.showRequestResult({
                            title: error.name,
                            text: error.message,
                            icon: 'error',
                          });
                        });
                    });
                },
              },
              {
                key: '_useBonus',
                value: function _useBonus() {
                  var type =
                    arguments.length > 0 && arguments[0] !== undefined
                      ? arguments[0]
                      : this.type;
                  if (type !== this.type) return; // Call alert here with custom animation for superlike icon

                  this.fireSendAlert(this.popups.send); // Change the amount of bonuses available

                  this._decreaseBonusAmountAvailable();

                  this._updateAmountOnMarkup();

                  $(document).trigger('present:send', {
                    type: 'superlike',
                  });
                },
              },
            ]
          );

          return Superlike;
        })(_bonus_js__WEBPACK_IMPORTED_MODULE_6__['default']);

        /***/
      },

    /***/ './js/modules/superlikeAnimation.js':
      /*!******************************************!*\
  !*** ./js/modules/superlikeAnimation.js ***!
  \******************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return SuperlikeAnimation;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/createClass */ '../node_modules/@babel/runtime/helpers/createClass.js'
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime/helpers/get */ '../node_modules/@babel/runtime/helpers/get.js'
        );
        /* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime/helpers/inherits */ '../node_modules/@babel/runtime/helpers/inherits.js'
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @babel/runtime/helpers/possibleConstructorReturn */ '../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js'
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! @babel/runtime/helpers/getPrototypeOf */ '../node_modules/@babel/runtime/helpers/getPrototypeOf.js'
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__
        );
        /* harmony import */ var _animatedIcons_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ./animatedIcons.js */ './js/modules/animatedIcons.js'
        );
        /* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! crypto */ '../node_modules/crypto-browserify/index.js'
        );
        /* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/ __webpack_require__.n(
          crypto__WEBPACK_IMPORTED_MODULE_7__
        );

        function _createSuper(Derived) {
          var hasNativeReflectConstruct = _isNativeReflectConstruct();
          return function _createSuperInternal() {
            var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                Derived
              ),
              result;
            if (hasNativeReflectConstruct) {
              var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                this
              ).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
            } else {
              result = Super.apply(this, arguments);
            }
            return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(
              this,
              result
            );
          };
        }

        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct)
            return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;
          try {
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            );
            return true;
          } catch (e) {
            return false;
          }
        }

        var SuperlikeAnimation = /*#__PURE__*/ (function (_IconAnimation) {
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(
            SuperlikeAnimation,
            _IconAnimation
          );

          var _super = _createSuper(SuperlikeAnimation);

          function SuperlikeAnimation(options) {
            var _this;

            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(
              this,
              SuperlikeAnimation
            );

            _this = _super.call(this, options);
            _this.type = 'superlikeAnimation';
            return _this;
          }

          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(
            SuperlikeAnimation,
            [
              {
                key: '_setUpEventListeners',
                value: function _setUpEventListeners() {
                  var _this2 = this;

                  $(document).on(
                    'webkitAnimationEnd oAnimationEnd msAnimationEnd animationend',
                    function (event) {
                      if (_this2.type !== 'superlikeAnimation') return;
                      var animationName = event.originalEvent.animationName,
                        target = event.target,
                        iconElements = _this2.iconElements;

                      if (animationName === 'superlike-stars') {
                        // Add final color to the stars
                        iconElements.$star.addClass('fill-pink');
                      } else if (animationName === 'superlike-hand') {
                        // Play message animation
                        iconElements.$message.addClass('superlike-message'); // Play stars animation

                        iconElements.$star.addClass('superlike-stars');
                      }
                    }
                  );
                },
                /**
                 * This method is called before modal with animated icon is being opened
                 * @param {HTMLElement} modal - popup that will be opened. The icon will be
                 * inserted in this popup
                 */
              },
              {
                key: 'prepareAnimation',
                value: function prepareAnimation(modal) {
                  var _this3 = this;

                  return new Promise(function (resolve) {
                    // Append icon through calling parent method
                    _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_2___default()(
                      _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(
                        SuperlikeAnimation.prototype
                      ),
                      '_prepareAnimation',
                      _this3
                    ).call(_this3, modal); // Resolve the promise

                    resolve('fulfilled');
                  });
                },
              },
              {
                key: 'startAnimation',
                value: function startAnimation() {
                  // Start the first part of the animation by animation hand movement
                  this.iconElements.$hand.addClass('superlike-hand');
                },
              },
            ]
          );

          return SuperlikeAnimation;
        })(_animatedIcons_js__WEBPACK_IMPORTED_MODULE_6__['default']);

        /***/
      },

    /***/ './js/modules/swalAlertMixin.js':
      /*!**************************************!*\
  !*** ./js/modules/swalAlertMixin.js ***!
  \**************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! sweetalert2 */ '../node_modules/sweetalert2/dist/sweetalert2.all.js'
        );
        /* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          sweetalert2__WEBPACK_IMPORTED_MODULE_0__
        );

        /* harmony default export */ __webpack_exports__['default'] = {
          /**
           *
           * @param {String} title - Title to show in the popup
           * @param {String} text - Text to show under the title in the popup
           * @param {String} icon - One of the pre-defined icons of the plugin
           */
          showRequestResult: function showRequestResult(_ref) {
            var title = _ref.title,
              text = _ref.text,
              icon = _ref.icon;
            sweetalert2__WEBPACK_IMPORTED_MODULE_0___default.a.fire({
              title: title,
              text: text,
              icon: icon,
              timer: 2000,
              showConfirmButton: false,
              showCloseButton: true,
            });
          },
          showTimerExpired: function showTimerExpired(_ref2) {
            var title = _ref2.title,
              text = _ref2.text;
            sweetalert2__WEBPACK_IMPORTED_MODULE_0___default.a.fire({
              title: title,
              text: text,
              icon: icon,
              showConfirmButton: false,
              showCloseButton: true,
            });
          },
          // Alert to show when there is no bonuses available
          fireBuyingAlert: function fireBuyingAlert(_ref3) {
            var title = _ref3.title,
              text = _ref3.text,
              confirmButtonText = _ref3.confirmButtonText,
              cancelButtonText = _ref3.cancelButtonText;
            return sweetalert2__WEBPACK_IMPORTED_MODULE_0___default.a.fire({
              title: title,
              text: text,
              cancelButtonText: cancelButtonText,
              confirmButtonText: confirmButtonText,
              showCancelButton: true,
              confirmButtonColor: '#fb374b',
              cancelButtonColor: '#bbb',
            });
          },
          // Alert for bonus usage animation
          fireSendAlert: function fireSendAlert(_ref4) {
            var _this = this;

            var title = _ref4.title,
              text = _ref4.text,
              timer = _ref4.timer,
              customClass = _ref4.customClass;
            // Cache document element
            var $document = $(document); // Show popup

            return sweetalert2__WEBPACK_IMPORTED_MODULE_0___default.a.fire({
              title: title,
              text: text,
              showConfirmButton: false,
              customClass: customClass,
              timer: timer,
              showClass: {
                popup: 'animate__bounceIn',
              },
              onBeforeOpen: function onBeforeOpen(modal) {
                // Trigger event to prepare modal
                $document.trigger(
                  ''.concat(_this.type, 'Modal:onBeforeOpen'),
                  modal
                );
              },
              onOpen: function onOpen(modal) {
                _this.animationPreparation.then(function () {
                  // Run animation
                  $document.trigger(
                    ''.concat(_this.type, 'Modal:onOpen'),
                    modal
                  );
                });
              },
            });
          },

          /**
           *
           * @param {String} title - Popup title
           * @param {String} confirmButtonText - Text of the confirmation button
           * @param {String} cancelButtonText - Text of the cancel button
           * @param {String} imageUrl - Link to the image to show in the popup
           * @param {String} imageAlt - Image alttext
           */
          fireAlertWithRequest: function fireAlertWithRequest(_ref5) {
            var _this2 = this;

            var title = _ref5.title,
              _ref5$text = _ref5.text,
              text = _ref5$text === void 0 ? '' : _ref5$text,
              confirmButtonText = _ref5.confirmButtonText,
              cancelButtonText = _ref5.cancelButtonText,
              imageUrl = _ref5.imageUrl,
              imageAlt = _ref5.imageAlt,
              requestName = _ref5.requestName;
            return sweetalert2__WEBPACK_IMPORTED_MODULE_0___default.a
              .fire({
                title: title,
                text: text,
                cancelButtonText: cancelButtonText,
                confirmButtonText: confirmButtonText,
                showCancelButton: true,
                confirmButtonColor: '#fb374b',
                cancelButtonColor: '#bbb',
                imageUrl: imageUrl,
                imageAlt: imageAlt,
                imageWidth: '150px',
                imageHeight: '150px',
                showLoaderOnConfirm: true,

                /**
                 * After the user confirms that he wants to use bonus:
                 * 1. Make a request to the server
                 * 2. If the server is responded, return the response
                 */
                preConfirm: function preConfirm() {
                  var _this2$requests$reque = _this2.requests[requestName],
                    headers = _this2$requests$reque.headers,
                    endpoint = _this2$requests$reque.endpoint,
                    method = _this2$requests$reque.method,
                    body = _this2$requests$reque.body;
                  return fetch(endpoint, {
                    method: method,
                    headers: headers,
                    body: body,
                  })
                    .then(function (response) {
                      if (!response.ok) {
                        throw new Error(response.statusText);
                      }

                      return response.json();
                    })
                    ['catch'](function (error) {
                      sweetalert2__WEBPACK_IMPORTED_MODULE_0___default.a.showValidationMessage(
                        'Request failed: '.concat(error)
                      );
                    });
                },
                allowOutsideClick: function allowOutsideClick() {
                  return !sweetalert2__WEBPACK_IMPORTED_MODULE_0___default.a.isLoading();
                },
              })
              .then(function (result) {
                return result.value;
              })
              ['catch'](function (error) {
                // Handle errors here
                _this2.showRequestResult({
                  title: error.name,
                  text: error.message,
                  icon: 'error',
                });
              });
          },
        };

        /***/
      },

    /***/ './js/modules/uploader.js':
      /*!********************************!*\
  !*** ./js/modules/uploader.js ***!
  \********************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return PhotoUploader;
          }
        );
        /* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/regenerator */ '../node_modules/@babel/runtime/regenerator/index.js'
        );
        /* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/asyncToGenerator */ '../node_modules/@babel/runtime/helpers/asyncToGenerator.js'
        );
        /* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime/helpers/createClass */ '../node_modules/@babel/runtime/helpers/createClass.js'
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__
        );
        /* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @babel/runtime/helpers/assertThisInitialized */ '../node_modules/@babel/runtime/helpers/assertThisInitialized.js'
        );
        /* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__
        );
        /* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! @babel/runtime/helpers/get */ '../node_modules/@babel/runtime/helpers/get.js'
        );
        /* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_5__
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! @babel/runtime/helpers/inherits */ '../node_modules/@babel/runtime/helpers/inherits.js'
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6__
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! @babel/runtime/helpers/possibleConstructorReturn */ '../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js'
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7__
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! @babel/runtime/helpers/getPrototypeOf */ '../node_modules/@babel/runtime/helpers/getPrototypeOf.js'
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8__
        );
        /* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! @babel/runtime/helpers/defineProperty */ '../node_modules/@babel/runtime/helpers/defineProperty.js'
        );
        /* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9__
        );
        /* harmony import */ var _modal_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ./modal.js */ './js/modules/modal.js'
        );
        /* harmony import */ var handlebars__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! handlebars */ '../node_modules/handlebars/dist/cjs/handlebars.js'
        );
        /* harmony import */ var handlebars__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/ __webpack_require__.n(
          handlebars__WEBPACK_IMPORTED_MODULE_11__
        );
        /* harmony import */ var _prepareTemplates_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ./prepareTemplates.js */ './js/modules/prepareTemplates.js'
        );
        /* harmony import */ var _photoUploadMixin__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
          /*! ./photoUploadMixin */ './js/modules/photoUploadMixin.js'
        );

        function _createSuper(Derived) {
          var hasNativeReflectConstruct = _isNativeReflectConstruct();
          return function _createSuperInternal() {
            var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8___default()(
                Derived
              ),
              result;
            if (hasNativeReflectConstruct) {
              var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8___default()(
                this
              ).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
            } else {
              result = Super.apply(this, arguments);
            }
            return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7___default()(
              this,
              result
            );
          };
        }

        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct)
            return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;
          try {
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            );
            return true;
          } catch (e) {
            return false;
          }
        }

        var PhotoUploader = /*#__PURE__*/ (function (_EditorModal) {
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6___default()(
            PhotoUploader,
            _EditorModal
          );

          var _super = _createSuper(PhotoUploader);

          /**
           * Information about photos.
           * @param photoData.id - id of the photo from the database
           * @param photoData.id.file - photo fileobject to save to the database
           * @param photoData.id.src - photo src
           * @param photoData.id.private - photo privacy information
           * @param photoData.id.description - photo description
           */
          function PhotoUploader(options) {
            var _this;

            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default()(
              this,
              PhotoUploader
            );

            _this = _super.call(this, options);

            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(
                _this
              ),
              'photoData',
              {}
            );

            _this.configuration.uploader = true; // Binding context

            _this._updateMarkup = _this._updateMarkup.bind(
              _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default()(
                _this
              )
            ); // Prepare Uploader

            _this._cacheElements();

            _this._setUpEventListeners(); // Prepare template for photo preview

            _this.previewTemplate = Object(
              _prepareTemplates_js__WEBPACK_IMPORTED_MODULE_12__['default']
            )(options.selectors.previewTemplateId);
            Object.assign(
              PhotoUploader.prototype,
              _photoUploadMixin__WEBPACK_IMPORTED_MODULE_13__['default']
            );

            _this.initializePhotoUpload();

            _this.initializeLoadingIndicators(_this.$form);

            return _this;
          }

          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default()(
            PhotoUploader,
            [
              {
                key: '_cacheElements',
                value: function _cacheElements() {
                  _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_5___default()(
                    _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8___default()(
                      PhotoUploader.prototype
                    ),
                    '_cacheElements',
                    this
                  ).call(this); // Container to preview uploaded images

                  this.$previewContainer = this.$modal.find(
                    this.selectors.previewContainer
                  ); // Inputs

                  this.$photoInputs = this.$modal.find(this.selectors.input); // Gallery

                  this.$gallery = $(this.selectors.gallery);
                },
              },
              {
                key: '_setUpEventListeners',
                value: function _setUpEventListeners() {
                  var _this2 = this;

                  _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_5___default()(
                    _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8___default()(
                      PhotoUploader.prototype
                    ),
                    '_setUpEventListeners',
                    this
                  ).call(this);
                  /**
                   * When files are either dropped or selected using inputs:
                   * 1. Get the amount of photos selected
                   * 2. Send this amount to server
                   * 3. Retrieve unique ids for these photos
                   */

                  this.$form.on('photoUpload:filesInputed', function (
                    event,
                    data
                  ) {
                    // Delete previously saved ids
                    // Maybe, you won't need it
                    _this2.ids = null;
                    var _this2$requests$getId = _this2.requests.getIds,
                      method = _this2$requests$getId.method,
                      headers = _this2$requests$getId.headers,
                      endpoint = _this2$requests$getId.endpoint; // Add amount of files as a query parameter

                    endpoint.searchParams.set('amount', data.amount);
                    _this2.ids = _this2
                      .makeRequest({
                        headers: headers,
                        endpoint: endpoint,
                        method: method,
                      })
                      .then(function (response) {
                        // Throw error with response title and message
                        if (!response.success) {
                          var error = new Error(response.message);
                          error.name = response.title;
                          throw error;
                        }

                        return response.ids;
                      })
                      ['catch'](function (error) {
                        _this2.showRequestResult({
                          title: error.name,
                          text: error.message,
                          icon: 'error',
                        });
                      });
                  });
                  this.$form.submit(function (event) {
                    event.preventDefault();

                    _this2.collectData();

                    var _this2$requests$saveP = _this2.requests.savePhotos,
                      headers = _this2$requests$saveP.headers,
                      method = _this2$requests$saveP.method,
                      endpoint = _this2$requests$saveP.endpoint,
                      photoData = _this2.photoData;

                    _this2
                      .makeRequest({
                        headers: headers,
                        endpoint: endpoint,
                        method: method,
                        body: JSON.stringify(photoData),
                      })
                      .then(function (response) {
                        if (!response.success) {
                          var error = new Error(response.message);
                          error.name = response.title;
                          throw error;
                        } // Show each photo on markup

                        for (var id in photoData) {
                          var _photoData$id = photoData[id],
                            src = _photoData$id.src,
                            privacy = _photoData$id.privacy,
                            description = _photoData$id.description; // Add each uploaded photo to the markup

                          _this2._updateMarkup({
                            id: id,
                            src: src,
                            privacy: privacy,
                            description: description,
                          });
                        }

                        _this2.closeModal(); // Show success popup

                        _this2.showRequestResult({
                          title: response.title,
                          text: response.message,
                          icon: 'success',
                        });
                      })
                      ['catch'](function (error) {
                        return _this2.showRequestResult({
                          title: error.name,
                          text: error.message,
                          icon: 'error',
                        });
                      });
                  });
                },
              },
              {
                key: 'clean',
                value: function clean() {
                  this.photoData = {};
                },
                /**
                 * Function deleting uploaded photos
                 */
              },
              {
                key: '_discardChanges',
                value: function _discardChanges() {
                  this.$previewContainer.empty();
                },
              },
              {
                key: 'collectData',
                value: function collectData() {
                  var _this3 = this;

                  $(this.selectors.container).each(function (index, element) {
                    var id = element.dataset.id;
                    var privacy = $(element)
                      .find(_this3.selectors['privacy-input'])
                      .is(':checked');
                    var description = $(element)
                      .find(_this3.selectors.description)
                      .val();

                    _this3.savePhotoInformation({
                      id: id,
                      privacy: privacy,
                      description: description,
                    });
                  });
                }, // After setting up request, maybe, we can change update markup function, too
              },
              {
                key: '_updateMarkup',
                value: function _updateMarkup(_ref) {
                  var _ref$id = _ref.id,
                    id = _ref$id === void 0 ? null : _ref$id,
                    _ref$src = _ref.src,
                    src = _ref$src === void 0 ? null : _ref$src,
                    _ref$privacy = _ref.privacy,
                    privacy = _ref$privacy === void 0 ? false : _ref$privacy,
                    _ref$description = _ref.description,
                    description =
                      _ref$description === void 0 ? '' : _ref$description;
                  this.$gallery.append(
                    $('<div></div>')
                      .addClass('swiper-slide gallery-slide')
                      .append(
                        $('<img>')
                          .attr('src', src)
                          .attr('alt', description)
                          .attr('data-toggle', 'modal')
                          .attr('data-target', '#edit-photo')
                          .attr('data-id', id)
                          .attr('data-description', description)
                          .attr('data-privacy', privacy)
                          .addClass('gallery-photo')
                      )
                  );
                }, //------------------------------------------
                // Functions specific to class utilizing photo uploader
                //------------------------------------------

                /**
                 * 1. Wait until the server gives ids for uploading photos
                 * 2. When ids are retrieved, check whether it is an array, and if not, throw an error
                 * 3. Get the last id from the list
                 * 4. Save photo information for the current id
                 * 5. Preview photo
                 * @param {FileReader} fileReader -fileReader object
                 * that stores information about the read photo
                 */
              },
              {
                key: '_preview',
                value: (function () {
                  var _preview2 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()(
                    /*#__PURE__*/ _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(
                      function _callee(fileReader) {
                        var ids, src, id, compiledPhotoTemplate;
                        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(
                          function _callee$(_context) {
                            while (1) {
                              switch ((_context.prev = _context.next)) {
                                case 0:
                                  _context.prev = 0;
                                  _context.next = 3;
                                  return this.ids;

                                case 3:
                                  ids = _context.sent;

                                  if (Array.isArray(ids)) {
                                    _context.next = 6;
                                    break;
                                  }

                                  throw new TypeError('Should be an array');

                                case 6:
                                  _context.next = 14;
                                  break;

                                case 8:
                                  _context.prev = 8;
                                  _context.t0 = _context['catch'](0);
                                  ids = null;
                                  console.error(_context.t0);
                                  console.log(this.ids);
                                  this.showRequestResult({
                                    title: _context.t0.name,
                                    text: _context.t0.message,
                                    icon: 'error',
                                  });

                                case 14:
                                  if (ids) {
                                    _context.next = 16;
                                    break;
                                  }

                                  return _context.abrupt('return');

                                case 16:
                                  (src = fileReader.result), (id = ids.pop()); // Save information about the current photo

                                  this.photoData[id] = {};
                                  this.savePhotoInformation({
                                    id: id,
                                    src: src,
                                  });
                                  compiledPhotoTemplate = handlebars__WEBPACK_IMPORTED_MODULE_11___default.a.compile(
                                    this.previewTemplate
                                  );
                                  compiledPhotoTemplate = compiledPhotoTemplate(
                                    {
                                      id: id,
                                      src: src,
                                    }
                                  ); // Append template

                                  this.$previewContainer.append(
                                    compiledPhotoTemplate
                                  );

                                case 22:
                                case 'end':
                                  return _context.stop();
                              }
                            }
                          },
                          _callee,
                          this,
                          [[0, 8]]
                        );
                      }
                    )
                  );

                  function _preview(_x) {
                    return _preview2.apply(this, arguments);
                  }

                  return _preview;
                })(),
              },
            ]
          );

          return PhotoUploader;
        })(_modal_js__WEBPACK_IMPORTED_MODULE_10__['default']);

        /***/
      },

    /***/ './js/modules/usersLazyLoading.js':
      /*!****************************************!*\
  !*** ./js/modules/usersLazyLoading.js ***!
  \****************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return UsersLazyLoading;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/classCallCheck */ '../node_modules/@babel/runtime/helpers/classCallCheck.js'
        );
        /* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/createClass */ '../node_modules/@babel/runtime/helpers/createClass.js'
        );
        /* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime/helpers/inherits */ '../node_modules/@babel/runtime/helpers/inherits.js'
        );
        /* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime/helpers/possibleConstructorReturn */ '../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js'
        );
        /* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @babel/runtime/helpers/getPrototypeOf */ '../node_modules/@babel/runtime/helpers/getPrototypeOf.js'
        );
        /* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
          _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__
        );
        /* harmony import */ var _lazyLoading_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ./lazyLoading.js */ './js/modules/lazyLoading.js'
        );

        function _createSuper(Derived) {
          var hasNativeReflectConstruct = _isNativeReflectConstruct();
          return function _createSuperInternal() {
            var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(
                Derived
              ),
              result;
            if (hasNativeReflectConstruct) {
              var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(
                this
              ).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
            } else {
              result = Super.apply(this, arguments);
            }
            return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(
              this,
              result
            );
          };
        }

        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct)
            return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;
          try {
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            );
            return true;
          } catch (e) {
            return false;
          }
        }

        var UsersLazyLoading = /*#__PURE__*/ (function (_LazyLoading) {
          _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(
            UsersLazyLoading,
            _LazyLoading
          );

          var _super = _createSuper(UsersLazyLoading);

          function UsersLazyLoading(options) {
            _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(
              this,
              UsersLazyLoading
            );

            return _super.call(this, options);
          }
          /**
           * This function is specific to each class utilizing lazy loading parent class
           */

          _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(
            UsersLazyLoading,
            [
              {
                key: '_initializeObserver',
                value: function _initializeObserver() {
                  var _this = this;

                  this.observer =
                    this.observer ||
                    new IntersectionObserver(function (entries) {
                      // Save the last message
                      var element = entries[0];
                      if (!element.isIntersecting) return;
                      /**
                       * 1. Get new users from the server
                       * 2. Trigger 'lazyLoading:itemsReady' event and pass messages with it
                       *    This event is indicating that the messages are retrieved and prepared
                       */

                      _this
                        ._getItems()
                        .then(function (users) {
                          console.log(users); // Send them to display

                          $(document).trigger('lazyLoading:itemsReady', users);
                        })
                        ['catch'](function (error) {
                          _this.showRequestResult({
                            title: error.name,
                            text: error.message,
                            icon: 'error',
                          }); // For debugging

                          console.error(error);
                        });
                    });
                },
              },
            ]
          );

          return UsersLazyLoading;
        })(_lazyLoading_js__WEBPACK_IMPORTED_MODULE_5__['default']);

        /***/
      },

    /***/ 0:
      /*!*************************************!*\
  !*** multi ./js/main-authorized.js ***!
  \*************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! ./js/main-authorized.js */ './js/main-authorized.js'
        );

        /***/
      },

    /***/ 1:
      /*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
      /*! no static exports found */
      /***/ function (module, exports) {
        /* (ignored) */
        /***/
      },

    /***/ 10:
      /*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        /* (ignored) */
        /***/
      },

    /***/ 11:
      /*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        /* (ignored) */
        /***/
      },

    /***/ 12:
      /*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        /* (ignored) */
        /***/
      },

    /***/ 13:
      /*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        /* (ignored) */
        /***/
      },

    /***/ 14:
      /*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        /* (ignored) */
        /***/
      },

    /***/ 15:
      /*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        /* (ignored) */
        /***/
      },

    /***/ 2:
      /*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
      /*! no static exports found */
      /***/ function (module, exports) {
        /* (ignored) */
        /***/
      },

    /***/ 3:
      /*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
      /*! no static exports found */
      /***/ function (module, exports) {
        /* (ignored) */
        /***/
      },

    /***/ 4:
      /*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
      /*! no static exports found */
      /***/ function (module, exports) {
        /* (ignored) */
        /***/
      },

    /***/ 5:
      /*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        /* (ignored) */
        /***/
      },

    /***/ 6:
      /*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        /* (ignored) */
        /***/
      },

    /***/ 7:
      /*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        /* (ignored) */
        /***/
      },

    /***/ 8:
      /*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
      /*! no static exports found */
      /***/ function (module, exports) {
        /* (ignored) */
        /***/
      },

    /***/ 9:
      /*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
      /*! no static exports found */
      /***/ function (module, exports) {
        /* (ignored) */
        /***/
      },

    /******/
  }
);
//# sourceMappingURL=main-authorized.bundle.js.map
